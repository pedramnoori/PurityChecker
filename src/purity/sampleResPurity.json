[ {
  "repository" : "https://github.com/confluentinc/kafka-connect-elasticsearch.git",
  "sha1" : "d6c7baf6f0388d525881d6818ed304752e3729e4",
  "url" : "https://github.com/confluentinc/kafka-connect-elasticsearch/commit/d6c7baf6f0388d525881d6818ed304752e3729e4",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class\tio.confluent.connect.elasticsearch.internals.BulkProcessor.BulkTask moved to io.confluent.connect.elasticsearch.bulk.BulkProcessor.BulkTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class\tio.confluent.connect.elasticsearch.internals.ESRequest moved and renamed to io.confluent.connect.elasticsearch.IndexingRequest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\tjson : byte[] in method public convertRecord(record SinkRecord, type String, client JestClient, ignoreKey boolean, ignoreSchema boolean, topicConfigs Map<String,TopicConfig>, mappings Set<String>) : ESRequest from class io.confluent.connect.elasticsearch.DataConverter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tjson : byte[] to payload : String in method public convertRecord(record SinkRecord, type String, client JestClient, ignoreKey boolean, ignoreSchema boolean, topicConfigs Map<String,TopicConfig>, mappingCache Set<String>) : IndexingRequest from class io.confluent.connect.elasticsearch.DataConverter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tmappings : Set<String> to mappingCache : Set<String> in method public convertRecord(record SinkRecord, type String, client JestClient, ignoreKey boolean, ignoreSchema boolean, topicConfigs Map<String,TopicConfig>, mappingCache Set<String>) : IndexingRequest from class io.confluent.connect.elasticsearch.DataConverter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tjson : byte[] to payload : String in method public convertRecord(record SinkRecord, type String, client JestClient, ignoreKey boolean, ignoreSchema boolean, topicConfigs Map<String,TopicConfig>, mappingCache Set<String>) : IndexingRequest from class io.confluent.connect.elasticsearch.DataConverter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tESRequest to IndexingRequest in method public convertRecord(record SinkRecord, type String, client JestClient, ignoreKey boolean, ignoreSchema boolean, topicConfigs Map<String,TopicConfig>, mappingCache Set<String>) : IndexingRequest from class io.confluent.connect.elasticsearch.DataConverter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tInterruptedException to Exception in method private writeDataAndWait(writer ElasticsearchWriter, records Collection<SinkRecord>, waitInterval long) : void from class io.confluent.connect.elasticsearch.ElasticsearchWriterTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tmaxBufferedRecords : long to maxBufferedRecords : int in method public start(props Map<String,String>, client JestClient) : void from class io.confluent.connect.elasticsearch.ElasticsearchSinkTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tMAX_BUFFERED_RECORDS_DEFAULT : long to MAX_BUFFERED_RECORDS_DEFAULT : int in class io.confluent.connect.elasticsearch.ElasticsearchSinkConnectorConfig",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tmaxBufferedRecords : long to maxBufferedRecords : int in class io.confluent.connect.elasticsearch.ElasticsearchWriter.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tmaxBufferedRecords : long to maxBufferedRecords : int in method public setMaxBufferedRecords(maxBufferedRecords int) : Builder from class io.confluent.connect.elasticsearch.ElasticsearchWriter.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tbulkProcessor : BulkProcessor to bulkProcessor : BulkProcessor<IndexingRequest,?> in class io.confluent.connect.elasticsearch.ElasticsearchWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\trequest : ESRequest to request : IndexingRequest in method public write(records Collection<SinkRecord>) : void from class io.confluent.connect.elasticsearch.ElasticsearchWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tmaxBufferedRecords : long to maxBufferedRecords : int in method package ElasticsearchWriter(client JestClient, type String, ignoreKey boolean, ignoreSchema boolean, topicConfigs Map<String,TopicConfig>, flushTimeoutMs long, maxBufferedRecords int, maxInFlightRequests int, batchSize int, lingerMs long, maxRetries int, retryBackoffMs long) from class io.confluent.connect.elasticsearch.ElasticsearchWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tmaxRetry : int to maxRetries : int in method package ElasticsearchWriter(client JestClient, type String, ignoreKey boolean, ignoreSchema boolean, topicConfigs Map<String,TopicConfig>, flushTimeoutMs long, maxBufferedRecords int, maxInFlightRequests int, batchSize int, lingerMs long, maxRetries int, retryBackoffMs long) from class io.confluent.connect.elasticsearch.ElasticsearchWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier\tfinal in class io.confluent.connect.elasticsearch.bulk.BulkProcessor.BulkTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tbatch : RecordBatch to batch : List<R> in class io.confluent.connect.elasticsearch.bulk.BulkProcessor.BulkTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprivate to package in attribute package batch : List<R> from class io.confluent.connect.elasticsearch.bulk.BulkProcessor.BulkTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tbatch : RecordBatch to batch : List<R> in method package BulkTask(batch List<R>) from class io.confluent.connect.elasticsearch.bulk.BulkProcessor.BulkTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tVoid to BulkResponse in method public call() : BulkResponse from class io.confluent.connect.elasticsearch.bulk.BulkProcessor.BulkTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tpayload : byte[] to payload : String in class io.confluent.connect.elasticsearch.IndexingRequest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tpayload : byte[] to payload : String in method public IndexingRequest(index String, type String, id String, payload String) from class io.confluent.connect.elasticsearch.IndexingRequest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tbyte[] to String in method public getPayload() : String from class io.confluent.connect.elasticsearch.IndexingRequest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tclient : Client<Response> to time : Time in method public BulkProcessor(time Time, bulkClient BulkClient<R,B>, maxBufferedRecords int, maxInFlightRequests int, batchSize int, lingerMs long, maxRetries int, retryBackoffMs long) from class io.confluent.connect.elasticsearch.bulk.BulkProcessor",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tclient : Client<Response> to time : Time in method public BulkProcessor(time Time, bulkClient BulkClient<R,B>, maxBufferedRecords int, maxInFlightRequests int, batchSize int, lingerMs long, maxRetries int, retryBackoffMs long) from class io.confluent.connect.elasticsearch.bulk.BulkProcessor",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tretryBackOffMs : long to retryBackoffMs : long in method public BulkProcessor(time Time, bulkClient BulkClient<R,B>, maxBufferedRecords int, maxInFlightRequests int, batchSize int, lingerMs long, maxRetries int, retryBackoffMs long) from class io.confluent.connect.elasticsearch.bulk.BulkProcessor",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tbulkClient : BulkClient<R,B> in method public BulkProcessor(time Time, bulkClient BulkClient<R,B>, maxBufferedRecords int, maxInFlightRequests int, batchSize int, lingerMs long, maxRetries int, retryBackoffMs long) from class io.confluent.connect.elasticsearch.bulk.BulkProcessor",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tmaxBufferedRecords : int in method public BulkProcessor(time Time, bulkClient BulkClient<R,B>, maxBufferedRecords int, maxInFlightRequests int, batchSize int, lingerMs long, maxRetries int, retryBackoffMs long) from class io.confluent.connect.elasticsearch.bulk.BulkProcessor",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tmaxRetries : int in method public BulkProcessor(time Time, bulkClient BulkClient<R,B>, maxBufferedRecords int, maxInFlightRequests int, batchSize int, lingerMs long, maxRetries int, retryBackoffMs long) from class io.confluent.connect.elasticsearch.bulk.BulkProcessor",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tmaxRetry : int in method public BulkProcessor(client Client<Response>, maxInFlightRequests int, batchSize int, lingerMs long, maxRetry int, retryBackOffMs long, listener Listener) from class io.confluent.connect.elasticsearch.internals.BulkProcessor",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tlistener : Listener in method public BulkProcessor(client Client<Response>, maxInFlightRequests int, batchSize int, lingerMs long, maxRetry int, retryBackOffMs long, listener Listener) from class io.confluent.connect.elasticsearch.internals.BulkProcessor",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic BulkProcessor(client Client<Response>, maxInFlightRequests int, batchSize int, lingerMs long, maxRetry int, retryBackOffMs long, listener Listener) from class io.confluent.connect.elasticsearch.internals.BulkProcessor to public BulkProcessor(time Time, bulkClient BulkClient<R,B>, maxBufferedRecords int, maxInFlightRequests int, batchSize int, lingerMs long, maxRetries int, retryBackoffMs long) from class io.confluent.connect.elasticsearch.bulk.BulkProcessor",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Constructor (field assignments) has been changed"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic start() : void from class io.confluent.connect.elasticsearch.internals.BulkProcessor to public start() : void from class io.confluent.connect.elasticsearch.bulk.BulkProcessor",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "setting the -runner- field has been impurely removed from the moved operation"
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\tindex : Index in method private constructBulk(batch RecordBatch, callback Callback<Response>) : Bulk from class io.confluent.connect.elasticsearch.internals.HttpClient",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\trequests : List<ESRequest> in method private constructBulk(batch RecordBatch, callback Callback<Response>) : Bulk from class io.confluent.connect.elasticsearch.internals.HttpClient",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable builder : Bulk.Builder in method public bulkRequest(batch List<IndexingRequest>) : Bulk from class io.confluent.connect.elasticsearch.BulkIndexingClient",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\trequest : ESRequest to request : IndexingRequest in method public bulkRequest(batch List<IndexingRequest>) : Bulk from class io.confluent.connect.elasticsearch.BulkIndexingClient",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tbatch : RecordBatch to batch : List<IndexingRequest> in method public bulkRequest(batch List<IndexingRequest>) : Bulk from class io.confluent.connect.elasticsearch.BulkIndexingClient",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tcallback : Callback<Response> in method private constructBulk(batch RecordBatch, callback Callback<Response>) : Bulk from class io.confluent.connect.elasticsearch.internals.HttpClient",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Override in method public bulkRequest(batch List<IndexingRequest>) : Bulk from class io.confluent.connect.elasticsearch.BulkIndexingClient",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to public in method public bulkRequest(batch List<IndexingRequest>) : Bulk from class io.confluent.connect.elasticsearch.BulkIndexingClient",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method\tprivate constructBulk(batch RecordBatch, callback Callback<Response>) : Bulk from class io.confluent.connect.elasticsearch.internals.HttpClient to public bulkRequest(batch List<IndexingRequest>) : Bulk from class io.confluent.connect.elasticsearch.BulkIndexingClient",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/confluentinc/kafka-connect-elasticsearch.git",
  "sha1" : "cfa5b07af4eb7d465491771535dcefd7269a2a63",
  "url" : "https://github.com/confluentinc/kafka-connect-elasticsearch/commit/cfa5b07af4eb7d465491771535dcefd7269a2a63",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic add(record R, timeoutMs long) : void extracted from public add(record R) : void in class io.confluent.connect.elasticsearch.bulk.BulkProcessor",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Exception handling logic has been added to the extracted code"
    }
  } ]
}, {
  "repository" : "https://github.com/confluentinc/kafka-connect-elasticsearch.git",
  "sha1" : "f62c587568ce46dfdc291106a6ab75dc67481da2",
  "url" : "https://github.com/confluentinc/kafka-connect-elasticsearch/commit/f62c587568ce46dfdc291106a6ab75dc67481da2",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic failedBatches() : long renamed to public createdBatches() : long in class io.confluent.connect.elasticsearch.bulk.BulkProcessor",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method\tprivate onBatchFailure(batchSize int, e Exception) : void moved from class io.confluent.connect.elasticsearch.bulk.BulkProcessor to class io.confluent.connect.elasticsearch.bulk.BulkProcessor.BulkTask & inlined to public call() : BulkResponse",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/ta4j/ta4j.git",
  "sha1" : "40521694193241c03c8badbd745abf9be4b13464",
  "url" : "https://github.com/ta4j/ta4j/commit/40521694193241c03c8badbd745abf9be4b13464",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate create3DaySmaUnderStrategy(series TimeSeries) : Strategy renamed to private create3DaySmaStrategy(series TimeSeries) : Strategy in class ta4jexamples.backtesting.SimpleMovingAverageBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method\tprivate calculateCriterion(criterion AnalysisCriterion, series TimeSeries, tradingRecord3DaySmaUnder TradingRecord, tradingRecord3DaySmaOver TradingRecord) : void inlined to public main(args String[]) : void in class ta4jexamples.backtesting.SimpleMovingAverageBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tcalculate3DaySmaUnder : Num to calculate3DaySma : Num in method public main(args String[]) : void from class ta4jexamples.backtesting.SimpleMovingAverageBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tcalculate3DaySmaOver : Num to calculate2DaySma : Num in method public main(args String[]) : void from class ta4jexamples.backtesting.SimpleMovingAverageBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\tcriterion : AnalysisCriterion in method public main(args String[]) : void from class ta4jexamples.backtesting.SimpleMovingAverageBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tstrategy3DaySmaOver : Strategy to strategy3DaySma : Strategy in method public main(args String[]) : void from class ta4jexamples.backtesting.SimpleMovingAverageBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\ttradingRecord3DaySmaOver : TradingRecord to tradingRecord3DaySma : TradingRecord in method public main(args String[]) : void from class ta4jexamples.backtesting.SimpleMovingAverageBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tstrategy3DaySmaUnder : Strategy to strategy2DaySma : Strategy in method public main(args String[]) : void from class ta4jexamples.backtesting.SimpleMovingAverageBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\ttradingRecord3DaySmaUnder : TradingRecord to tradingRecord2DaySma : TradingRecord in method public main(args String[]) : void from class ta4jexamples.backtesting.SimpleMovingAverageBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/ta4j/ta4j.git",
  "sha1" : "212a7617dfc4044b504b57dee2eb96470952f4b5",
  "url" : "https://github.com/ta4j/ta4j/commit/212a7617dfc4044b504b57dee2eb96470952f4b5",
  "refactorings" : [ {
    "type" : "Extract Variable",
    "description" : "Extract Variable\tentryRule : Rule in method public main(args String[]) : void from class ta4jexamples.backtesting.SimpleMovingAverageRangeBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\texitRule : Rule in method public main(args String[]) : void from class ta4jexamples.backtesting.SimpleMovingAverageRangeBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\ttradingRecord : TradingRecord in method private createTradingRecordReport(tradingRecord TradingRecord) : void from class ta4jexamples.backtesting.SimpleMovingAverageRangeBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to public in method public createTradingRecordReport() : void from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier\tstatic in method private createTradingRecordReport(tradingRecord TradingRecord) : void from class ta4jexamples.backtesting.SimpleMovingAverageRangeBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate createTradingRecordReport(tradingRecord TradingRecord) : void from class ta4jexamples.backtesting.SimpleMovingAverageRangeBacktesting to public createTradingRecordReport() : void from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/ta4j/ta4j.git",
  "sha1" : "364d79c94e6c1aa98bf771a0b7671001e4257838",
  "url" : "https://github.com/ta4j/ta4j/commit/364d79c94e6c1aa98bf771a0b7671001e4257838",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate createEntryRule(series TimeSeries, barCount int) : Rule extracted from public main(args String[]) : void in class ta4jexamples.backtesting.SimpleMovingAverageRangeBacktesting",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate createExitRule(series TimeSeries, barCount int) : Rule extracted from public main(args String[]) : void in class ta4jexamples.backtesting.SimpleMovingAverageRangeBacktesting",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tclosePrice : ClosePriceIndicator to closePrice : Indicator in method private createEntryRule(series TimeSeries, barCount int) : Rule from class ta4jexamples.backtesting.SimpleMovingAverageRangeBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ti : int to barCount : int in method private createEntryRule(series TimeSeries, barCount int) : Rule from class ta4jexamples.backtesting.SimpleMovingAverageRangeBacktesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tprivate tradingRecord : TradingRecord from class org.ta4j.core.Backtesting to private tradingRecord : TradingRecord from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate createTradeReport(trade Trade) : void from class ta4jexamples.backtesting.SimpleMovingAverageRangeBacktesting to private createTradeReport(trade Trade) : void from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method\tpublic createTradingRecordReport() : void from class org.ta4j.core.Backtesting to public printBacktestingResult() : void from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/ta4j/ta4j.git",
  "sha1" : "0a9301b27130049e6cf147b5110ca7ae5b9c4285",
  "url" : "https://github.com/ta4j/ta4j/commit/0a9301b27130049e6cf147b5110ca7ae5b9c4285",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic Backtesting(seriesToBacktest TimeSeries, seriesToTradeOn TimeSeries, criterion AbstractAnalysisCriterion) extracted from public Backtesting(series TimeSeries, criterion AbstractAnalysisCriterion) in class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization - Rename Attribute on top"
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tseries : TimeSeries to seriesToTradeOn : TimeSeries in class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/ta4j/ta4j.git",
  "sha1" : "57c8f4b94fea628c30cbc69e292dc489cb9790dc",
  "url" : "https://github.com/ta4j/ta4j/commit/57c8f4b94fea628c30cbc69e292dc489cb9790dc",
  "refactorings" : [ {
    "type" : "Add Parameter",
    "description" : "Add Parameter\ttotalProfit : Num in method public BacktestingResult(strategyName String, strategy Strategy, tradingRecord TradingRecord, calculation Num, totalProfit Num, profitTradeCount long, totalLoss Num, lossTradeCount long, breakEvenTradeCount long) from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tprofitTradeCount : long in method public BacktestingResult(strategyName String, strategy Strategy, tradingRecord TradingRecord, calculation Num, totalProfit Num, profitTradeCount long, totalLoss Num, lossTradeCount long, breakEvenTradeCount long) from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\ttotalLoss : Num in method public BacktestingResult(strategyName String, strategy Strategy, tradingRecord TradingRecord, calculation Num, totalProfit Num, profitTradeCount long, totalLoss Num, lossTradeCount long, breakEvenTradeCount long) from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tlossTradeCount : long in method public BacktestingResult(strategyName String, strategy Strategy, tradingRecord TradingRecord, calculation Num, totalProfit Num, profitTradeCount long, totalLoss Num, lossTradeCount long, breakEvenTradeCount long) from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tbreakEvenTradeCount : long in method public BacktestingResult(strategyName String, strategy Strategy, tradingRecord TradingRecord, calculation Num, totalProfit Num, profitTradeCount long, totalLoss Num, lossTradeCount long, breakEvenTradeCount long) from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\ttradingRecord : TradingRecord in method private getTotalProfit(tradingRecord TradingRecord) : Num from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation\t@Override in method public getTotalProfit() : Num from class org.ta4j.core.BaseTradingRecord",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpublic to private in method private getTotalProfit(tradingRecord TradingRecord) : Num from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic getTotalProfit() : Num from class org.ta4j.core.BaseTradingRecord to private getTotalProfit(tradingRecord TradingRecord) : Num from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Replacing getter with the direct access"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\ttradingRecord : TradingRecord in method private getTotalLoss(tradingRecord TradingRecord) : Num from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation\t@Override in method public getTotalLoss() : Num from class org.ta4j.core.BaseTradingRecord",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpublic to private in method private getTotalLoss(tradingRecord TradingRecord) : Num from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic getTotalLoss() : Num from class org.ta4j.core.BaseTradingRecord to private getTotalLoss(tradingRecord TradingRecord) : Num from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Replacing getter with the direct access"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\ttradingRecord : TradingRecord in method private getProfitTradeCount(tradingRecord TradingRecord) : long from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation\t@Override in method public getProfitTradeCount() : long from class org.ta4j.core.BaseTradingRecord",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpublic to private in method private getProfitTradeCount(tradingRecord TradingRecord) : long from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic getProfitTradeCount() : long from class org.ta4j.core.BaseTradingRecord to private getProfitTradeCount(tradingRecord TradingRecord) : long from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Replacing getter with the direct access"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\ttradingRecord : TradingRecord in method private getLossTradeCount(tradingRecord TradingRecord) : long from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation\t@Override in method public getLossTradeCount() : long from class org.ta4j.core.BaseTradingRecord",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpublic to private in method private getLossTradeCount(tradingRecord TradingRecord) : long from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic getLossTradeCount() : long from class org.ta4j.core.BaseTradingRecord to private getLossTradeCount(tradingRecord TradingRecord) : long from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Replacing getter with the direct access"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\ttradingRecord : TradingRecord in method private getBreakEvenTradeCount(tradingRecord TradingRecord) : long from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation\t@Override in method public getBreakEvenTradeCount() : long from class org.ta4j.core.BaseTradingRecord",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpublic to private in method private getBreakEvenTradeCount(tradingRecord TradingRecord) : long from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic getBreakEvenTradeCount() : long from class org.ta4j.core.BaseTradingRecord to private getBreakEvenTradeCount(tradingRecord TradingRecord) : long from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Replacing getter with the direct access"
    }
  } ]
}, {
  "repository" : "https://github.com/ta4j/ta4j.git",
  "sha1" : "8474675badad33103cfc7869536316ec9ca5ea29",
  "url" : "https://github.com/ta4j/ta4j/commit/8474675badad33103cfc7869536316ec9ca5ea29",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic getCalculation() : Num renamed to public getTotalProfitLoss() : Num in class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tprofitTradeCount : long to profitTradeCount : Num in class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tlossTradeCount : long to lossTradeCount : Num in class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tbreakEvenTradeCount : long to breakEvenTradeCount : Num in class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tseries : TimeSeries in method public BacktestingResult(strategyName String, strategy Strategy, tradingRecord TradingRecord, series TimeSeries) from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tcalculation : Num in method public BacktestingResult(strategyName String, strategy Strategy, tradingRecord TradingRecord, calculation Num, totalProfit Num, profitTradeCount long, totalLoss Num, lossTradeCount long, breakEvenTradeCount long) from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\ttotalProfit : Num in method public BacktestingResult(strategyName String, strategy Strategy, tradingRecord TradingRecord, calculation Num, totalProfit Num, profitTradeCount long, totalLoss Num, lossTradeCount long, breakEvenTradeCount long) from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tprofitTradeCount : long in method public BacktestingResult(strategyName String, strategy Strategy, tradingRecord TradingRecord, calculation Num, totalProfit Num, profitTradeCount long, totalLoss Num, lossTradeCount long, breakEvenTradeCount long) from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\ttotalLoss : Num in method public BacktestingResult(strategyName String, strategy Strategy, tradingRecord TradingRecord, calculation Num, totalProfit Num, profitTradeCount long, totalLoss Num, lossTradeCount long, breakEvenTradeCount long) from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tlossTradeCount : long in method public BacktestingResult(strategyName String, strategy Strategy, tradingRecord TradingRecord, calculation Num, totalProfit Num, profitTradeCount long, totalLoss Num, lossTradeCount long, breakEvenTradeCount long) from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tbreakEvenTradeCount : long in method public BacktestingResult(strategyName String, strategy Strategy, tradingRecord TradingRecord, calculation Num, totalProfit Num, profitTradeCount long, totalLoss Num, lossTradeCount long, breakEvenTradeCount long) from class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tcalculation : Num to totalProfitLoss : Num in class org.ta4j.core.BacktestingResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tcriterion : AbstractAnalysisCriterion in method public Backtesting(series TimeSeries, criterion AbstractAnalysisCriterion) from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tcriterion : AbstractAnalysisCriterion in method public Backtesting(seriesToBacktest TimeSeries, seriesToTradeOn TimeSeries, criterion AbstractAnalysisCriterion) from class org.ta4j.core.Backtesting",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tlong to Num in method public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfWinningTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tseries : TimeSeries in method public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfWinningTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Override in method public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfWinningTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to public in method public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfWinningTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method\tprivate getProfitTradeCount(tradingRecord TradingRecord) : long from class org.ta4j.core.Backtesting to public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfWinningTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tlong to Num in method public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfLosingTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tseries : TimeSeries in method public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfLosingTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Override in method public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfLosingTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to public in method public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfLosingTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method\tprivate getLossTradeCount(tradingRecord TradingRecord) : long from class org.ta4j.core.Backtesting to public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfLosingTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tlong to Num in method public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfBreakEvenTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tseries : TimeSeries in method public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfBreakEvenTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Override in method public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfBreakEvenTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to public in method public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfBreakEvenTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method\tprivate getBreakEvenTradeCount(tradingRecord TradingRecord) : long from class org.ta4j.core.Backtesting to public calculate(series TimeSeries, tradingRecord TradingRecord) : Num from class org.ta4j.core.analysis.criteria.NumberOfBreakEvenTradesCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/ta4j/ta4j.git",
  "sha1" : "6ed100314ac841102cd6e9ff5406261f04dc1a9a",
  "url" : "https://github.com/ta4j/ta4j/commit/6ed100314ac841102cd6e9ff5406261f04dc1a9a",
  "refactorings" : [ {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass\torg.ta4j.core.analysis.criteria.AbstractBacktestingCriterion from classes [org.ta4j.core.analysis.criteria.TotalProfit2Criterion, org.ta4j.core.analysis.criteria.NumberOfBreakEvenTradesCriterion, org.ta4j.core.analysis.criteria.NumberOfWinningTradesCriterion, org.ta4j.core.analysis.criteria.NumberOfLosingTradesCriterion, org.ta4j.core.analysis.criteria.TotalLossCriterion, org.ta4j.core.analysis.criteria.ProfitLossCriterion]",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method\tprivate getPrice(series TimeSeries, order Order) : Num from class org.ta4j.core.analysis.criteria.TotalProfit2Criterion to protected getPrice(series TimeSeries, order Order) : Num from class org.ta4j.core.analysis.criteria.AbstractBacktestingCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to protected in method protected getPrice(series TimeSeries, order Order) : Num from class org.ta4j.core.analysis.criteria.AbstractBacktestingCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to protected in method protected getPrice(series TimeSeries, order Order) : Num from class org.ta4j.core.analysis.criteria.AbstractBacktestingCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to protected in method protected getPrice(series TimeSeries, order Order) : Num from class org.ta4j.core.analysis.criteria.AbstractBacktestingCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute\tprivate priceType : PriceType from class org.ta4j.core.analysis.criteria.TotalProfit2Criterion to protected priceType : PriceType from class org.ta4j.core.analysis.criteria.AbstractBacktestingCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprivate to protected in attribute protected priceType : PriceType from class org.ta4j.core.analysis.criteria.AbstractBacktestingCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprivate to protected in attribute protected priceType : PriceType from class org.ta4j.core.analysis.criteria.AbstractBacktestingCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprivate to protected in attribute protected priceType : PriceType from class org.ta4j.core.analysis.criteria.AbstractBacktestingCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method\tprivate getPrice(series TimeSeries, order Order) : Num from class org.ta4j.core.analysis.criteria.TotalLossCriterion to protected getPrice(series TimeSeries, order Order) : Num from class org.ta4j.core.analysis.criteria.AbstractBacktestingCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute\tprivate priceType : PriceType from class org.ta4j.core.analysis.criteria.TotalLossCriterion to protected priceType : PriceType from class org.ta4j.core.analysis.criteria.AbstractBacktestingCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method\tprivate getPrice(series TimeSeries, order Order) : Num from class org.ta4j.core.analysis.criteria.ProfitLossCriterion to protected getPrice(series TimeSeries, order Order) : Num from class org.ta4j.core.analysis.criteria.AbstractBacktestingCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute\tprivate priceType : PriceType from class org.ta4j.core.analysis.criteria.ProfitLossCriterion to protected priceType : PriceType from class org.ta4j.core.analysis.criteria.AbstractBacktestingCriterion",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/DSpace/DSpace.git",
  "sha1" : "84f67cd771ef9df6dcd5b9ca036acfd8e4cdb19e",
  "url" : "https://github.com/DSpace/DSpace/commit/84f67cd771ef9df6dcd5b9ca036acfd8e4cdb19e",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getDataSource() : DataSource extracted from public main(argv String[]) : void in class org.dspace.storage.rdbms.DatabaseUtils",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tdbKeyword : String to dbType : String in method private cleanDatabase(flyway Flyway, dataSource DataSource) : void from class org.dspace.storage.rdbms.DatabaseUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/DSpace/DSpace.git",
  "sha1" : "39697a6d5d500f9fced6ca0fa4ffdf0717ba8813",
  "url" : "https://github.com/DSpace/DSpace/commit/39697a6d5d500f9fced6ca0fa4ffdf0717ba8813",
  "refactorings" : [ {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to protected in method protected getDataSource() : DataSource from class org.dspace.storage.rdbms.DatabaseUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class\torg.dspace.storage.rdbms.PostgresUtils from class org.dspace.storage.rdbms.DatabaseUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate getPgcryptoAvailableVersion(connection Connection) : Double from class org.dspace.storage.rdbms.DatabaseUtils to protected getPgcryptoAvailableVersion(connection Connection) : Double from class org.dspace.storage.rdbms.PostgresUtils",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to protected in method protected getPgcryptoAvailableVersion(connection Connection) : Double from class org.dspace.storage.rdbms.PostgresUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate getPgcryptoInstalledVersion(connection Connection) : Double from class org.dspace.storage.rdbms.DatabaseUtils to protected getPgcryptoInstalledVersion(connection Connection) : Double from class org.dspace.storage.rdbms.PostgresUtils",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to protected in method protected getPgcryptoInstalledVersion(connection Connection) : Double from class org.dspace.storage.rdbms.PostgresUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic isPgcryptoUpToDate() : boolean from class org.dspace.storage.rdbms.DatabaseUtils to public isPgcryptoUpToDate() : boolean from class org.dspace.storage.rdbms.PostgresUtils",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Move Method on top"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic isPgcryptoInSchema(schema String) : boolean from class org.dspace.storage.rdbms.DatabaseUtils to public isPgcryptoInSchema(schema String) : boolean from class org.dspace.storage.rdbms.PostgresUtils",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Move Method on top"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate checkCleanPermissions(connection Connection) : boolean from class org.dspace.storage.rdbms.DatabaseUtils to protected checkCleanPermissions(connection Connection) : boolean from class org.dspace.storage.rdbms.PostgresUtils",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Remove Variable on top"
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to protected in method protected checkCleanPermissions(connection Connection) : boolean from class org.dspace.storage.rdbms.PostgresUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tpublic PGCRYPTO : String from class org.dspace.storage.rdbms.DatabaseUtils to public PGCRYPTO : String from class org.dspace.storage.rdbms.PostgresUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tpublic PGCRYPTO_VERSION : Double from class org.dspace.storage.rdbms.DatabaseUtils to public PGCRYPTO_VERSION : Double from class org.dspace.storage.rdbms.PostgresUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tpublic POSTGRES_VERSION : Double from class org.dspace.storage.rdbms.DatabaseUtils to public POSTGRES_VERSION : Double from class org.dspace.storage.rdbms.PostgresUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/DSpace/DSpace.git",
  "sha1" : "a6994138b5a95edb857257b2d553a97465e32604",
  "url" : "https://github.com/DSpace/DSpace/commit/a6994138b5a95edb857257b2d553a97465e32604",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tprotected getDataSource() : DataSource extracted from public main(argv String[]) : void in class org.dspace.storage.rdbms.DatabaseUtils",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tdbKeyword : String to dbType : String in method private cleanDatabase(flyway Flyway, dataSource DataSource) : void from class org.dspace.storage.rdbms.DatabaseUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/liquibase/liquibase.git",
  "sha1" : "75d7f08fd6c3dd9d11dfcf0f3171ea3feac99fce",
  "url" : "https://github.com/liquibase/liquibase/commit/75d7f08fd6c3dd9d11dfcf0f3171ea3feac99fce",
  "refactorings" : [ {
    "type" : "Add Parameter",
    "description" : "Add Parameter\texecutionContext : ExecutionContext in method private checkPreconditions(executionContext ExecutionContext, servletContext ServletContext, ic InitialContext) : boolean from class liquibase.integration.servlet.LiquibaseServletListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tkey : String to prefixAndProperty : String in method public getValue(prefixAndProperty String) : Object from class liquibase.integration.servlet.LiquibaseServletListener.ServletValueContainer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tString to Object in method public getValue(prefixAndProperty String) : Object from class liquibase.integration.servlet.LiquibaseServletListener.ServletValueContainer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tservletContext : ServletContext in method public getValue(key String, servletContext ServletContext, initialContext InitialContext) : String from class liquibase.integration.servlet.LiquibaseServletListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tinitialContext : InitialContext in method public getValue(key String, servletContext ServletContext, initialContext InitialContext) : String from class liquibase.integration.servlet.LiquibaseServletListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic getValue(key String, servletContext ServletContext, initialContext InitialContext) : String from class liquibase.integration.servlet.LiquibaseServletListener to public getValue(prefixAndProperty String) : Object from class liquibase.integration.servlet.LiquibaseServletListener.ServletValueContainer",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename Variable on top"
    }
  } ]
}, {
  "repository" : "https://github.com/liquibase/liquibase.git",
  "sha1" : "48cde78cda7948b79d109f128c34c11f8b9ff9bd",
  "url" : "https://github.com/liquibase/liquibase/commit/48cde78cda7948b79d109f128c34c11f8b9ff9bd",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class\tliquibase.context.ContextTest moved to liquibase.configuration.ContextTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class\tliquibase.context.GlobalContext moved and renamed to liquibase.configuration.core.GlobalConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class\tliquibase.context.ContextValueContainer moved and renamed to liquibase.configuration.ConfigurationProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class\tliquibase.context.SystemPropertyValueContainer moved and renamed to liquibase.configuration.SystemPropertyProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class\tliquibase.context.ChangeLogParserContext moved and renamed to liquibase.configuration.core.ChangeLogParserCofiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class\tliquibase.context.ExecutionContextTest moved and renamed to liquibase.configuration.LiquibaseConfigurationTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in method public update_exceptionDoingUpdate() : void from class liquibase.LiquibaseTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in method public parse(physicalChangeLogLocation String, changeLogParameters ChangeLogParameters, resourceAccessor ResourceAccessor, context LiquibaseConfiguration) : DatabaseChangeLog from class liquibase.parser.core.xml.XMLChangeLogSAXParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in class liquibase.changelog.ExpressionExpanderTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in method public parse() : void from class liquibase.parser.core.yaml.YamlChangeLogParserTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in class liquibase.changelog.ChangeLogParametersTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in class liquibase.changelog.ChangeLogParametersTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in class liquibase.parser.core.formattedsql.FormattedSqlChangeLogParserTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in class liquibase.parser.core.formattedsql.FormattedSqlChangeLogParserTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tglobalContext : GlobalContext to globalConfiguration : GlobalConfiguration in method public main(args String[]) : void from class liquibase.integration.commandline.Main",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tglobalContext : GlobalContext to globalConfiguration : GlobalConfiguration in method public main(args String[]) : void from class liquibase.integration.commandline.Main",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in method public parse(physicalChangeLogLocation String, changeLogParameters ChangeLogParameters, resourceAccessor ResourceAccessor, context LiquibaseConfiguration) : DatabaseChangeLog from class liquibase.parser.core.sql.SqlChangeLogParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in method public testChecksumCalculation() : void from class liquibase.change.core.UpdateDataChangeTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in class liquibase.Liquibase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in class liquibase.Liquibase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in method public parse(physicalChangeLogLocation String, changeLogParameters ChangeLogParameters, resourceAccessor ResourceAccessor, liquibaseConfiguration LiquibaseConfiguration) : DatabaseChangeLog from class liquibase.parser.core.yaml.YamlChangeLogParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in method public parse(physicalChangeLogLocation String, changeLogParameters ChangeLogParameters, resourceAccessor ResourceAccessor, liquibaseConfiguration LiquibaseConfiguration) : DatabaseChangeLog from class liquibase.parser.core.yaml.YamlChangeLogParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in method protected handleIncludedChangeLog(fileName String, isRelativePath boolean, relativeBaseFileName String, databaseChangeLog DatabaseChangeLog, changeLogParameters ChangeLogParameters, resourceAccessor ResourceAccessor, liquibaseConfiguration LiquibaseConfiguration) : boolean from class liquibase.parser.core.yaml.YamlChangeLogParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in method protected handleIncludedChangeLog(fileName String, isRelativePath boolean, relativeBaseFileName String, databaseChangeLog DatabaseChangeLog, changeLogParameters ChangeLogParameters, resourceAccessor ResourceAccessor, liquibaseConfiguration LiquibaseConfiguration) : boolean from class liquibase.parser.core.yaml.YamlChangeLogParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tglobalContext : GlobalContext to globalConfiguration : GlobalConfiguration in method protected shouldRun() : boolean from class liquibase.integration.ant.BaseLiquibaseTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tglobalContext : GlobalContext to globalConfiguration : GlobalConfiguration in method protected shouldRun() : boolean from class liquibase.integration.ant.BaseLiquibaseTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in class liquibase.parser.core.xml.XMLChangeLogSAXHandler",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in method protected XMLChangeLogSAXHandler(physicalChangeLogLocation String, resourceAccessor ResourceAccessor, changeLogParameters ChangeLogParameters, context LiquibaseConfiguration) from class liquibase.parser.core.xml.XMLChangeLogSAXHandler",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in method public sampleChangeLogs() : void from class liquibase.dbtest.IntXMLChangeLogSAXParserTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in method public ExpressionExpander(changeLogParameters ChangeLogParameters, context LiquibaseConfiguration) from class liquibase.changelog.ChangeLogParameters.ExpressionExpander",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in method public ChangeLogParameters(context LiquibaseConfiguration) from class liquibase.changelog.ChangeLogParameters",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in method public ChangeLogParameters(database Database, context LiquibaseConfiguration) from class liquibase.changelog.ChangeLogParameters",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in method public parse(physicalChangeLogLocation String, changeLogParameters ChangeLogParameters, resourceAccessor ResourceAccessor, context LiquibaseConfiguration) : DatabaseChangeLog from class liquibase.changelog.ChangeLogParserFactoryTest.MockChangeLogParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tproperty : Context.ContextProperty to property : AbstractConfiguration.ConfigurationProperty in method public describeDefaultLookup(property AbstractConfiguration.ConfigurationProperty) : String from class liquibase.integration.servlet.LiquibaseServletListener.ServletValueContainer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tcontextPrefix : String to namespace : String in method public getValue(namespace String, property String) : Object from class liquibase.integration.servlet.LiquibaseServletListener.ServletValueContainer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tglobalContext : GlobalContext to globalConfiguration : GlobalConfiguration in method private checkPreconditions(liquibaseConfiguration LiquibaseConfiguration, servletContext ServletContext, ic InitialContext) : boolean from class liquibase.integration.servlet.LiquibaseServletListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tglobalContext : GlobalContext to globalConfiguration : GlobalConfiguration in method private checkPreconditions(liquibaseConfiguration LiquibaseConfiguration, servletContext ServletContext, ic InitialContext) : boolean from class liquibase.integration.servlet.LiquibaseServletListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in method private checkPreconditions(liquibaseConfiguration LiquibaseConfiguration, servletContext ServletContext, ic InitialContext) : boolean from class liquibase.integration.servlet.LiquibaseServletListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in method private checkPreconditions(liquibaseConfiguration LiquibaseConfiguration, servletContext ServletContext, ic InitialContext) : boolean from class liquibase.integration.servlet.LiquibaseServletListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in class liquibase.integration.servlet.LiquibaseServletListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in class liquibase.integration.servlet.LiquibaseServletListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in method public parse(physicalChangeLogLocation String, changeLogParameters ChangeLogParameters, resourceAccessor ResourceAccessor, context LiquibaseConfiguration) : DatabaseChangeLog from class liquibase.parser.MockChangeLogParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in method public afterPropertiesSet() : void from class liquibase.integration.spring.SpringLiquibase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tshouldRunProperty : Context.ContextProperty to shouldRunProperty : AbstractConfiguration.ConfigurationProperty in method public afterPropertiesSet() : void from class liquibase.integration.spring.SpringLiquibase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in method public afterPropertiesSet() : void from class liquibase.integration.spring.SpringLiquibase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in class liquibase.parser.core.xml.XMLChangeLogSAXParserTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in class liquibase.parser.core.xml.XMLChangeLogSAXParserTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in method public parse(physicalChangeLogLocation String, changeLogParameters ChangeLogParameters, resourceAccessor ResourceAccessor, liquibaseConfiguration LiquibaseConfiguration) : DatabaseChangeLog from class liquibase.parser.core.formattedsql.FormattedSqlChangeLogParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\texecutionContext : ExecutionContext to liquibaseConfiguration : LiquibaseConfiguration in method public parse(physicalChangeLogLocation String, changeLogParameters ChangeLogParameters, resourceAccessor ResourceAccessor, liquibaseConfiguration LiquibaseConfiguration) : DatabaseChangeLog from class liquibase.parser.core.formattedsql.FormattedSqlChangeLogParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\texampleContext : Context to exampleConfiguration : AbstractConfiguration in class liquibase.configuration.ContextTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\texampleContext : Context to exampleConfiguration : AbstractConfiguration in class liquibase.configuration.ContextTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tGlobalContext to GlobalConfiguration in method public setShouldRun(shouldRun boolean) : GlobalConfiguration from class liquibase.configuration.core.GlobalConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tcontextPrefix : String to namespace : String in method public getValue(namespace String, property String) : Object from class liquibase.configuration.ConfigurationProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tproperty : Context.ContextProperty to property : AbstractConfiguration.ConfigurationProperty in method public describeDefaultLookup(property AbstractConfiguration.ConfigurationProperty) : String from class liquibase.configuration.ConfigurationProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tcontextPrefix : String to namespace : String in method public getValue(namespace String, property String) : Object from class liquibase.configuration.SystemPropertyProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tproperty : Context.ContextProperty to property : AbstractConfiguration.ConfigurationProperty in method public describeDefaultLookup(property AbstractConfiguration.ConfigurationProperty) : String from class liquibase.configuration.SystemPropertyProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tChangeLogParserContext to ChangeLogParserCofiguration in method public setSupportPropertyEscaping(support boolean) : ChangeLogParserCofiguration from class liquibase.configuration.core.ChangeLogParserCofiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tglobalContext : GlobalContext to globalConfiguration : GlobalConfiguration in method public getContext_defaultSetup() : void from class liquibase.configuration.LiquibaseConfigurationTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tglobalContext : GlobalContext to globalConfiguration : GlobalConfiguration in method public getContext_defaultSetup() : void from class liquibase.configuration.LiquibaseConfigurationTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic getContext(type Class<T>) : T renamed to public getConfiguration(type Class<T>) : T in class liquibase.configuration.LiquibaseConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprotected createContext(type Class<T>) : T renamed to protected createConfiguration(type Class<T>) : T in class liquibase.configuration.LiquibaseConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tvalueContainers : ContextValueContainer[] to valueContainers : ConfigurationProvider[] in class liquibase.configuration.LiquibaseConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tvalueContainers : ContextValueContainer... to valueContainers : ConfigurationProvider... in method public LiquibaseConfiguration(valueContainers ConfigurationProvider...) from class liquibase.configuration.LiquibaseConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tcontainer : ContextValueContainer to container : ConfigurationProvider in method public describeDefaultLookup(property AbstractConfiguration.ConfigurationProperty) : String from class liquibase.configuration.LiquibaseConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tproperty : Context.ContextProperty to property : AbstractConfiguration.ConfigurationProperty in method public describeDefaultLookup(property AbstractConfiguration.ConfigurationProperty) : String from class liquibase.configuration.LiquibaseConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tcontext : T to configuration : T in method protected createConfiguration(type Class<T>) : T from class liquibase.configuration.LiquibaseConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tcontexts : Map<Class,Context> to configurations : Map<Class,AbstractConfiguration> in class liquibase.configuration.LiquibaseConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tcontexts : Map<Class,Context> to configurations : Map<Class,AbstractConfiguration> in class liquibase.configuration.LiquibaseConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class\tliquibase.context.ExecutionContext moved and renamed to liquibase.configuration.LiquibaseConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic getContextPrefix() : String renamed to public getNamespace() : String in class liquibase.configuration.AbstractConfiguration.ConfigurationProperty",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tcontextPrefix : String to namespace : String in method private ConfigurationProperty(namespace String, propertyName String, type Class) from class liquibase.configuration.AbstractConfiguration.ConfigurationProperty",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tcontainer : ContextValueContainer to container : ConfigurationProvider in method protected init(valueContainers ConfigurationProvider[]) : void from class liquibase.configuration.AbstractConfiguration.ConfigurationProperty",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tvalueContainers : ContextValueContainer[] to valueContainers : ConfigurationProvider[] in method protected init(valueContainers ConfigurationProvider[]) : void from class liquibase.configuration.AbstractConfiguration.ConfigurationProperty",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tContextProperty to ConfigurationProperty in method public addAlias(aliases String...) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration.ConfigurationProperty",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprotected to public in method public addAlias(aliases String...) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration.ConfigurationProperty",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tContextProperty to ConfigurationProperty in method public setDescription(description String) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration.ConfigurationProperty",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprotected to public in method public setDescription(description String) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration.ConfigurationProperty",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tContextProperty to ConfigurationProperty in method public setDefaultValue(defaultValue Object) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration.ConfigurationProperty",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprotected to public in method public setDefaultValue(defaultValue Object) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration.ConfigurationProperty",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tcontextPrefix : String to namespace : String in class liquibase.configuration.AbstractConfiguration.ConfigurationProperty",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class\tliquibase.context.Context.ContextProperty moved and renamed to liquibase.configuration.AbstractConfiguration.ConfigurationProperty",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass\tliquibase.configuration.AbstractConfiguration from classes [liquibase.context.GlobalContext, liquibase.context.ContextTest.ExampleContext, liquibase.context.ChangeLogParserContext]",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tproperty : ContextProperty to property : ConfigurationProperty in method public addProperty(propertyName String, type Class) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration.ConfigurationContainer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tContextProperty to ConfigurationProperty in method public addProperty(propertyName String, type Class) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration.ConfigurationContainer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprotected to public in method public addProperty(propertyName String, type Class) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration.ConfigurationContainer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprotected addProperty(propertyName String, type Class) : ContextProperty from class liquibase.context.Context.ContextState to public addProperty(propertyName String, type Class) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration.ConfigurationContainer",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Two Rename Method on top"
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tproperty : ContextProperty to property : ConfigurationProperty in method public getProperty(propertyName String) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration.ConfigurationContainer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tContextProperty to ConfigurationProperty in method public getProperty(propertyName String) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration.ConfigurationContainer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic getProperty(propertyName String) : ContextProperty from class liquibase.context.Context.ContextState to public getProperty(propertyName String) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration.ConfigurationContainer",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename (Extract) Class on top"
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tproperty : ContextProperty to property : ConfigurationProperty in method public getValue(propertyName String, returnType Class<T>) : T from class liquibase.configuration.AbstractConfiguration.ConfigurationContainer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic getValue(propertyName String, returnType Class<T>) : T from class liquibase.context.Context.ContextState to public getValue(propertyName String, returnType Class<T>) : T from class liquibase.configuration.AbstractConfiguration.ConfigurationContainer",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename (Extract) Class on top"
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tproperty : ContextProperty to property : ConfigurationProperty in method public setValue(propertyName String, value Object) : void from class liquibase.configuration.AbstractConfiguration.ConfigurationContainer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic setValue(propertyName String, value Object) : void from class liquibase.context.Context.ContextState to public setValue(propertyName String, value Object) : void from class liquibase.configuration.AbstractConfiguration.ConfigurationContainer",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename (Extract) Class on top"
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tContextProperty to ConfigurationProperty in method public getProperty(propertyName String) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic getProperty(propertyName String) : ContextProperty from class liquibase.context.Context to public getProperty(propertyName String) : ConfigurationProperty from class liquibase.configuration.AbstractConfiguration",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename Method on top"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic getValue(propertyName String, returnType Class<T>) : T from class liquibase.context.Context to public getValue(propertyName String, returnType Class<T>) : T from class liquibase.configuration.AbstractConfiguration",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename Method on top"
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tproperty : ContextProperty to property : ConfigurationProperty in method protected init(valueContainers ConfigurationProvider...) : void from class liquibase.configuration.AbstractConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tvalueContainers : ContextValueContainer... to valueContainers : ConfigurationProvider... in method protected init(valueContainers ConfigurationProvider...) : void from class liquibase.configuration.AbstractConfiguration",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprotected init(valueContainers ContextValueContainer...) : void from class liquibase.context.Context to protected init(valueContainers ConfigurationProvider...) : void from class liquibase.configuration.AbstractConfiguration",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename Method on top"
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tcontext : ExecutionContext to context : LiquibaseConfiguration in method public parse(physicalChangeLogLocation String, changeLogParameters ChangeLogParameters, resourceAccessor ResourceAccessor, context LiquibaseConfiguration) : DatabaseChangeLog from class liquibase.parser.ChangeLogParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/liquibase/liquibase.git",
  "sha1" : "3af5c7a20e85b1669f17c39f2fc325a26bcf87b0",
  "url" : "https://github.com/liquibase/liquibase/commit/3af5c7a20e85b1669f17c39f2fc325a26bcf87b0",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tprotected toLogLevel(logLevel String) : LogLevel extracted from public setLogLevel(logLevel String) : void in class liquibase.logging.core.AbstractLogger",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/kiegroup/optaplanner.git",
  "sha1" : "ec5d139337c8db352cced6f80ac7605a596c4b08",
  "url" : "https://github.com/kiegroup/optaplanner/commit/ec5d139337c8db352cced6f80ac7605a596c4b08",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic getSucceeded() : Boolean renamed to public getAverageScoreWithUninitializedPrefix() : String in class org.optaplanner.benchmark.impl.result.SingleBenchmarkResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate mergeSubSingleStatistics(median SubSingleBenchmarkResult) : void extracted from public accumulateResults(benchmarkReport BenchmarkReport) : void in class org.optaplanner.benchmark.impl.result.SingleBenchmarkResult",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "One if statement has been impurely added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate determineRepresentativeSubSingleBenchmarkResult() : SubSingleBenchmarkResult extracted from public accumulateResults(benchmarkReport BenchmarkReport) : void in class org.optaplanner.benchmark.impl.result.SingleBenchmarkResult",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Addition of return expression, which is a part of Extract Method refactoring mechanics"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getAverageScore() : Score extracted from public getSucceeded() : Boolean in class org.optaplanner.benchmark.impl.result.SingleBenchmarkResult",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The attribute succeeded has been removed, so there is no connection between the two returned attributes"
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tBoolean to String in method public getAverageScoreWithUninitializedPrefix() : String from class org.optaplanner.benchmark.impl.result.SingleBenchmarkResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute\tusedMemoryAfterInputSolutionCount : int to uninitializedSolutionCount : Integer in method private determineTotalsAndAveragesAndRanking() : void from class org.optaplanner.benchmark.impl.result.SingleBenchmarkResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tusedMemoryAfterInputSolutionCount : int to uninitializedSolutionCount : Integer in method private determineTotalsAndAveragesAndRanking() : void from class org.optaplanner.benchmark.impl.result.SingleBenchmarkResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/kiegroup/optaplanner.git",
  "sha1" : "80108d608d9f0e207f17aa65f87ad172a47c56af",
  "url" : "https://github.com/kiegroup/optaplanner/commit/80108d608d9f0e207f17aa65f87ad172a47c56af",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate buildSubSingleBenchmarks(parent SingleBenchmarkResult, count int) : void extracted from private buildSingleBenchmark(solverBenchmarkResult SolverBenchmarkResult, problemBenchmarkResult ProblemBenchmarkResult) : void in class org.optaplanner.benchmark.config.ProblemBenchmarksConfig",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tsingleBenchmarkResult : SingleBenchmarkResult to parent : SingleBenchmarkResult in method private buildSubSingleBenchmarks(parent SingleBenchmarkResult, count int) : void from class org.optaplanner.benchmark.config.ProblemBenchmarksConfig",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\tpureSingleStatisticList : List<PureSingleStatistic> in method private buildSingleBenchmark(solverBenchmarkResult SolverBenchmarkResult, problemBenchmarkResult ProblemBenchmarkResult) : void from class org.optaplanner.benchmark.config.ProblemBenchmarksConfig",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic getScoreWithUninitializedPrefix() : String renamed to public getMedianScoreWithUninitializedPrefix() : String in class org.optaplanner.benchmark.impl.result.SingleBenchmarkResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate averageUninitializedVariableCount : Integer from class org.optaplanner.benchmark.impl.result.SingleBenchmarkResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate averageScore : Score from class org.optaplanner.benchmark.impl.result.SingleBenchmarkResult",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/dropwizard/dropwizard.git",
  "sha1" : "71ad291e6863be57ba51d2dbf79bd8ec259e2f7f",
  "url" : "https://github.com/dropwizard/dropwizard/commit/71ad291e6863be57ba51d2dbf79bd8ec259e2f7f",
  "refactorings" : [ {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tconn : DatabaseConnection to database : Database in method public CloseableLiquibase(changeLogFile String, resourceAccessor ResourceAccessor, database Database, dataSource ManagedDataSource) from class io.dropwizard.migrations.CloseableLiquibase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tconn : DatabaseConnection to database : Database in method public CloseableLiquibase(changeLogFile String, resourceAccessor ResourceAccessor, database Database, dataSource ManagedDataSource) from class io.dropwizard.migrations.CloseableLiquibase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tdatabase : Database in method public CloseableLiquibaseWithClassPathMigrationsFile(dataSource ManagedDataSource, database Database, file String) from class io.dropwizard.migrations.CloseableLiquibaseWithClassPathMigrationsFile",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate createDatabase(dataSource ManagedDataSource, namespace Namespace) : Database extracted from private openLiquibase(dataSourceFactory PooledDataSourceFactory, namespace Namespace) : CloseableLiquibase in class io.dropwizard.migrations.AbstractLiquibaseCommand",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "One statement has been impurely added, and the replacements are not justifiable"
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier\tfinal in variable database : Database in method private openLiquibase(dataSourceFactory PooledDataSourceFactory, namespace Namespace) : CloseableLiquibase from class io.dropwizard.migrations.AbstractLiquibaseCommand",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tdatabase : Database in method public CloseableLiquibaseWithFileSystemMigrationsFile(dataSource ManagedDataSource, database Database, file String) from class io.dropwizard.migrations.CloseableLiquibaseWithFileSystemMigrationsFile",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/spring-projects/spring-data-neo4j.git",
  "sha1" : "f85cb537d2abe6bc73ae5b037a3e517a9aa8bcf1",
  "url" : "https://github.com/spring-projects/spring-data-neo4j/commit/f85cb537d2abe6bc73ae5b037a3e517a9aa8bcf1",
  "refactorings" : [ {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tbase : CypherQueryBuilder to builder : CypherQueryBuilder in method protected and(part Part, builder CypherQueryBuilder, iterator Iterator<Object>) : CypherQueryBuilder from class org.springframework.data.neo4j.repository.query.CypherQueryCreator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tcriteria : CypherQueryBuilder to builder : CypherQueryBuilder in method protected or(base CypherQueryBuilder, builder CypherQueryBuilder) : CypherQueryBuilder from class org.springframework.data.neo4j.repository.query.CypherQueryCreator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tcriteria : CypherQueryBuilder to builder : CypherQueryBuilder in method protected complete(builder CypherQueryBuilder, sort Sort) : CypherQueryDefinition from class org.springframework.data.neo4j.repository.query.CypherQueryCreator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getParameterValues(accessor ParameterAccessor) : Map<Parameter,Object> extracted from protected resolveParams(accessor ParameterAccessor, parameterResolver ParameterResolver) : Map<String,Object> in class org.springframework.data.neo4j.repository.query.GraphQueryMethod",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate nameParameters(parameters Map<Parameter,Object>) : Map<String,Object> extracted from protected resolveParams(accessor ParameterAccessor, parameterResolver ParameterResolver) : Map<String,Object> in class org.springframework.data.neo4j.repository.query.GraphQueryMethod",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\tparameterName : String in method protected resolveParams(accessor ParameterAccessor, parameterResolver ParameterResolver) : Map<String,Object> from class org.springframework.data.neo4j.repository.query.GraphQueryMethod",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic resolveParameter(value Object, parameterName String, index int) : Object renamed to private convertGraphEntityToId(value Object) : Object in class org.springframework.data.neo4j.repository.query.GraphRepositoryQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tparameterName : String in method public resolveParameter(value Object, parameterName String, index int) : Object from class org.springframework.data.neo4j.repository.query.GraphRepositoryQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tindex : int in method public resolveParameter(value Object, parameterName String, index int) : Object from class org.springframework.data.neo4j.repository.query.GraphRepositoryQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpublic to private in method private convertGraphEntityToId(value Object) : Object from class org.springframework.data.neo4j.repository.query.GraphRepositoryQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic getVariable() : String renamed to public getIdentifier() : String in class org.springframework.data.neo4j.repository.query.PartInfo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpackage sameVariable(startPartInfo PartInfo) : boolean renamed to package sameIdentifier(startPartInfo PartInfo) : boolean in class org.springframework.data.neo4j.repository.query.PartInfo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tvariable : String to identifier : String in method public PartInfo(path PersistentPropertyPath<Neo4jPersistentProperty>, identifier String, part Part, index int) from class org.springframework.data.neo4j.repository.query.PartInfo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tvariable : String to identifier : String in class org.springframework.data.neo4j.repository.query.PartInfo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate shouldRenderQuery() : boolean extracted from public toString() : String in class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "One of the replacements is justifiable since the direct access has been replaced with a getter method, but the addition of an expression in the return statement is not justifiable"
    }
  }, {
    "type" : "Replace Attribute With Variable",
    "description" : "Replace Attribute With Variable\tpartInfo : PartInfo to partInfo : PartInfo in method public toString() : String from class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tvariable : String to identifier : String in method public toString() : String from class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tSTART_CLAUSE_FULLTEXT : String to START_CLAUSE_INDEX_QUERY : String in class org.springframework.data.neo4j.repository.query.QueryTemplates",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tSTART_CLAUSE : String to START_CLAUSE_INDEX_LOOKUP : String in class org.springframework.data.neo4j.repository.query.QueryTemplates",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class\torg.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate addedStartClause(partInfo PartInfo) : boolean from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to private addedStartClause(partInfo PartInfo) : boolean from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "non-pure if statements have been added to the moved operation"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic getPartInfo(parameterIndex int) : PartInfo from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to public getPartInfo(parameterIndex int) : PartInfo from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic toString() : String from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to public toString() : String from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Extract Method on top - Add Parameter on top"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate defaultStartClause(entity Neo4jPersistentEntity<?>) : String extracted from public toString() : String in class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The two methods do completely different things"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getEntityName(entity Neo4jPersistentEntity<?>) : String extracted from public toString() : String in class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate addSorts(sort Sort) : String from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to private addSorts(sort Sort) : String from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate formatSorts(sort Sort) : List<String> from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to private formatSorts(sort Sort) : List<String> from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate toString(matchClauses List<MatchClause>) : String from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to private toString(matchClauses List<MatchClause>) : String from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic toString(sort Sort) : String from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to public toString(sort Sort) : String from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "null-check logic has been added to the moved method"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic toString(pageable Pageable) : String from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to public toString(pageable Pageable) : String from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Addition of return expression, which can be a part of Move Method refactoring mechanics"
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tprivate variableContext : VariableContext from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to private variableContext : VariableContext from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tprivate matchClauses : List<MatchClause> from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to private matchClauses : List<MatchClause> from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tprivate startClauses : List<StartClause> from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to private startClauses : List<StartClause> from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tprivate whereClauses : List<WhereClause> from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to private whereClauses : List<WhereClause> from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tprivate index : int from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to private index : int from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tprivate entity : Neo4jPersistentEntity<?> from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to private entity : Neo4jPersistentEntity<?> from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tentity : Neo4jPersistentEntity<?> in method private defaultStartClause(entity Neo4jPersistentEntity<?>) : String from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate defaultStartClause() : String from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder to private defaultStartClause(entity Neo4jPersistentEntity<?>) : String from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Extract Method on top"
    }
  } ]
}, {
  "repository" : "https://github.com/spring-projects/spring-data-neo4j.git",
  "sha1" : "4a8f404c0860edc7ef6032463a05dcddbdbd052a",
  "url" : "https://github.com/spring-projects/spring-data-neo4j/commit/4a8f404c0860edc7ef6032463a05dcddbdbd052a",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class\torg.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery moved to org.springframework.data.neo4j.repository.query.CypherQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation\t@Ignore in method public testMultipleIndexedFields() : void from class org.springframework.data.neo4j.repository.query.DerivedFinderMethodTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprivate to protected in attribute protected template : Neo4jTemplate from class org.springframework.data.neo4j.repository.query.GraphRepositoryQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\ttemplate : Neo4jTemplate in method public CypherQueryCreator(tree PartTree, context MappingContext<? extends Neo4jPersistentEntity<?>,Neo4jPersistentProperty>, domainClass Class<?>, template Neo4jTemplate) from class org.springframework.data.neo4j.repository.query.CypherQueryCreator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\ttemplate : Neo4jTemplate in method public WhereClause(partInfo PartInfo, template Neo4jTemplate) from class org.springframework.data.neo4j.repository.query.WhereClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tpath : PersistentPropertyPath<Neo4jPersistentProperty> in method public WhereClause(path PersistentPropertyPath<Neo4jPersistentProperty>, variable String, type Type, index int, partInfo PartInfo) from class org.springframework.data.neo4j.repository.query.WhereClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tvariable : String in method public WhereClause(path PersistentPropertyPath<Neo4jPersistentProperty>, variable String, type Type, index int, partInfo PartInfo) from class org.springframework.data.neo4j.repository.query.WhereClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\ttype : Type in method public WhereClause(path PersistentPropertyPath<Neo4jPersistentProperty>, variable String, type Type, index int, partInfo PartInfo) from class org.springframework.data.neo4j.repository.query.WhereClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tindex : int in method public WhereClause(path PersistentPropertyPath<Neo4jPersistentProperty>, variable String, type Type, index int, partInfo PartInfo) from class org.springframework.data.neo4j.repository.query.WhereClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\ttemplate : Neo4jTemplate in method public CypherQueryBuilder(context MappingContext<? extends Neo4jPersistentEntity<?>,Neo4jPersistentProperty>, type Class<?>, template Neo4jTemplate) from class org.springframework.data.neo4j.repository.query.CypherQueryBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier\tpackage to public in class org.springframework.data.neo4j.repository.query.ThingRepository",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate filterForPart(parameters Map<Parameter,Object>) : Map<PartInfo,Object> renamed to private matchToPartsAndConvert(myParameters Map<Parameter,PartInfo>, parameters Map<Parameter,Object>, template Neo4jTemplate) : Map<PartInfo,Object> in class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate findParameter(parameters Set<Parameter>) : Collection<Parameter> renamed to private findMyParameters(parameters Set<Parameter>) : Map<Parameter,PartInfo> in class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\tpartInfo : PartInfo in method private shouldRenderQuery() : boolean from class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\tvalue : Object in method private renderQuery(values Map<PartInfo,Object>) : String from class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to String in method private renderQuery(values Map<PartInfo,Object>) : String from class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tparameter : Collection<Parameter> to myParameters : Map<Parameter,PartInfo> in method public resolveParameters(parameters Map<Parameter,Object>, template Neo4jTemplate) : Map<Parameter,Object> from class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tparameter : Collection<Parameter> to myParameters : Map<Parameter,PartInfo> in method public resolveParameters(parameters Map<Parameter,Object>, template Neo4jTemplate) : Map<Parameter,Object> from class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\ttemplate : Neo4jTemplate in method public resolveParameters(parameters Map<Parameter,Object>, template Neo4jTemplate) : Map<Parameter,Object> from class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier\tfinal in variable partInfo : PartInfo in method private filterForPart(parameters Map<Parameter,Object>) : Map<PartInfo,Object> from class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tentry : Map.Entry<Parameter,Object> to entry : Map.Entry<Parameter,PartInfo> in method private matchToPartsAndConvert(myParameters Map<Parameter,PartInfo>, parameters Map<Parameter,Object>, template Neo4jTemplate) : Map<PartInfo,Object> from class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tmyParameters : Map<Parameter,PartInfo> in method private matchToPartsAndConvert(myParameters Map<Parameter,PartInfo>, parameters Map<Parameter,Object>, template Neo4jTemplate) : Map<PartInfo,Object> from class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\ttemplate : Neo4jTemplate in method private matchToPartsAndConvert(myParameters Map<Parameter,PartInfo>, parameters Map<Parameter,Object>, template Neo4jTemplate) : Map<PartInfo,Object> from class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tresult : Collection<Parameter> to result : Map<Parameter,PartInfo> in method private findMyParameters(parameters Set<Parameter>) : Map<Parameter,PartInfo> from class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tCollection<Parameter> to Map<Parameter,PartInfo> in method private findMyParameters(parameters Set<Parameter>) : Map<Parameter,PartInfo> from class org.springframework.data.neo4j.repository.query.StartClause",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier\tstatic in class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate toString(matchClauses List<MatchClause>) : String renamed to private toQueryString(matchClauses List<MatchClause>) : String in class org.springframework.data.neo4j.repository.query.CypherQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic toString(sort Sort) : String renamed to public toQueryString(sort Sort) : String in class org.springframework.data.neo4j.repository.query.CypherQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic toString(pageable Pageable) : String renamed to public toQueryString(pageable Pageable) : String in class org.springframework.data.neo4j.repository.query.CypherQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate render() : String extracted from public toString() : String in class org.springframework.data.neo4j.repository.query.CypherQuery",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "String literal changes are justifiable - Rename Method on top"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\ttemplate : Neo4jTemplate in method public CypherQuery(entity Neo4jPersistentEntity<?>, template Neo4jTemplate) from class org.springframework.data.neo4j.repository.query.CypherQuery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic resolveParameters(parameters Map<Parameter,Object>) : Map<Parameter,Object> extracted from public resolveParameters(parameters Map<Parameter,Object>) : Map<Parameter,Object> in class org.springframework.data.neo4j.repository.query.CypherQueryBuilder.CypherQuery & moved to class org.springframework.data.neo4j.repository.query.MatchClause",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argument replaced with return expression, which is a part of Extract Method refactoring mechanics"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic toString(sort Sort) : String renamed to public toQueryString(sort Sort) : String in class org.springframework.data.neo4j.repository.query.CypherQueryDefinition",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic toString(pageable Pageable) : String renamed to public toQueryString(pageable Pageable) : String in class org.springframework.data.neo4j.repository.query.CypherQueryDefinition",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/Direwolf20-MC/BuildingGadgets.git",
  "sha1" : "7fc7c0723a2c9dfdf2b6bb23814d6a42d18bb353",
  "url" : "https://github.com/Direwolf20-MC/BuildingGadgets/commit/7fc7c0723a2c9dfdf2b6bb23814d6a42d18bb353",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage unstackableItemProperties() : Item.Properties extracted from package init() : void in class com.direwolf20.buildinggadgets.common.registry.objects.BGItems",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The -.maxStackSize(1)- has been impurely added to the extracted code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage unstackableItemProperties() : Item.Properties extracted from package init() : void in class com.direwolf20.buildinggadgets.common.registry.objects.BGItems",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The -.maxStackSize(1)- has been impurely added to the extracted code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage unstackableItemProperties() : Item.Properties extracted from package init() : void in class com.direwolf20.buildinggadgets.common.registry.objects.BGItems",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The -.maxStackSize(1)- has been impurely added to the extracted code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage unstackableItemProperties() : Item.Properties extracted from package init() : void in class com.direwolf20.buildinggadgets.common.registry.objects.BGItems",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The -.maxStackSize(1)- has been impurely added to the extracted code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage unstackableItemProperties() : Item.Properties extracted from package init() : void in class com.direwolf20.buildinggadgets.common.registry.objects.BGItems",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The -.maxStackSize(1)- has been impurely added to the extracted code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage unstackableItemProperties() : Item.Properties extracted from package init() : void in class com.direwolf20.buildinggadgets.common.registry.objects.BGItems",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The -.maxStackSize(1)- has been impurely added to the extracted code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage unstackableItemProperties() : Item.Properties extracted from package init() : void in class com.direwolf20.buildinggadgets.common.registry.objects.BGItems",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The -.maxStackSize(1)- has been impurely added to the extracted code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage unstackableItemProperties() : Item.Properties extracted from package init() : void in class com.direwolf20.buildinggadgets.common.registry.objects.BGItems",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The -.maxStackSize(1)- has been impurely added to the extracted code"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tinitial : BlockPos to original : BlockPos in method public combineTester(world World, tool ItemStack, player EntityPlayer, original BlockPos) : BiPredicate<BlockPos,IBlockState> from class com.direwolf20.buildinggadgets.common.util.tools.modes.BuildingMode",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/Direwolf20-MC/BuildingGadgets.git",
  "sha1" : "949d89f4d7847be694f2f082da5ab5814327d1fa",
  "url" : "https://github.com/Direwolf20-MC/BuildingGadgets/commit/949d89f4d7847be694f2f082da5ab5814327d1fa",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate addItemBuilder(registryName ResourceLocation, properties Item.Properties, factory Function<Item.Properties,Item>) : void extracted from package init() : void in class com.direwolf20.buildinggadgets.common.registry.objects.BGItems",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage itemPropertiesWithGroup() : Item.Properties extracted from package init() : void in class com.direwolf20.buildinggadgets.common.registry.objects.BGItems",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The two methods do completely different things"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage itemPropertiesWithGroup() : Item.Properties extracted from package unstackableItemProperties() : Item.Properties in class com.direwolf20.buildinggadgets.common.registry.objects.BGItems",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The two methods do completely different things"
    }
  } ]
}, {
  "repository" : "https://github.com/SlimeKnights/TinkersConstruct.git",
  "sha1" : "cd8bd185dc9aa830822d151aefd526890c60dc19",
  "url" : "https://github.com/SlimeKnights/TinkersConstruct/commit/cd8bd185dc9aa830822d151aefd526890c60dc19",
  "refactorings" : [ {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tsmeltery : TileSmeltery to smeltery : ISmelteryTankHandler in method public handleServerSafe(netHandler NetHandlerPlayServer) : void from class slimeknights.tconstruct.smeltery.network.SmelteryFluidClicked",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\ttank : SmelteryTank in method public getCapability(capability Capability<T>, facing EnumFacing) : T from class slimeknights.tconstruct.smeltery.tileentity.TileDrain",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tsmeltery : TileSmeltery to te : TileEntity in method public getCapability(capability Capability<T>, facing EnumFacing) : T from class slimeknights.tconstruct.smeltery.tileentity.TileDrain",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tsmeltery : TileSmeltery to te : TileEntity in method public getCapability(capability Capability<T>, facing EnumFacing) : T from class slimeknights.tconstruct.smeltery.tileentity.TileDrain",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\toldSmeltery : WeakReference<TileEntity> to oldSmelteryTank : WeakReference<TileEntity> in class slimeknights.tconstruct.smeltery.tileentity.TileDrain",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tsmeltery : TileSmeltery to handler : ISmelteryTankHandler in method public handleClientSafe(netHandler NetHandlerPlayClient) : void from class slimeknights.tconstruct.smeltery.network.SmelteryFluidUpdatePacket",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tsmeltery : TileSmeltery to handler : ISmelteryTankHandler in method public handleClientSafe(netHandler NetHandlerPlayClient) : void from class slimeknights.tconstruct.smeltery.network.SmelteryFluidUpdatePacket",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprotected getSmeltery() : TileSmeltery renamed to protected getMaster() : TileEntity in class slimeknights.tconstruct.smeltery.tileentity.TileSmelteryComponent",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tTileSmeltery to TileEntity in method protected getMaster() : TileEntity from class slimeknights.tconstruct.smeltery.tileentity.TileSmelteryComponent",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tparent : IFluidHandler to parent : WeakReference<IFluidHandler> in class slimeknights.tconstruct.library.fluid.FluidHandlerExtractOnlyWrapper",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Override in method public getTank() : SmelteryTank from class slimeknights.tconstruct.smeltery.tileentity.TileSmeltery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Override in method public updateFluidsFromPacket(fluids List<FluidStack>) : void from class slimeknights.tconstruct.smeltery.tileentity.TileSmeltery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass\tslimeknights.tconstruct.smeltery.client.SmelteryTankRenderer from classes [slimeknights.tconstruct.smeltery.client.SmelteryRenderer]",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method\tpublic calcLiquidHeights(liquids List<FluidStack>, capacity int, height int, min int) : int[] from class slimeknights.tconstruct.smeltery.client.SmelteryRenderer to public calcLiquidHeights(liquids List<FluidStack>, capacity int, height int, min int) : int[] from class slimeknights.tconstruct.smeltery.client.SmelteryTankRenderer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/SlimeKnights/TinkersConstruct.git",
  "sha1" : "750d87dda6afc3ca5f3bc5c9f29044c531b51f93",
  "url" : "https://github.com/SlimeKnights/TinkersConstruct/commit/750d87dda6afc3ca5f3bc5c9f29044c531b51f93",
  "refactorings" : [ {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tvalidSearedFurnaceBlocks : ImmutableSet<Block> to searedStairsSlabs : ImmutableSet<Block> in class slimeknights.tconstruct.smeltery.TinkerSmeltery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\ttank : SmelteryTank in method public renderTileEntityAt(tinkerTank TileTinkerTank, x double, y double, z double, partialTicks float, destroyStage int) : void from class slimeknights.tconstruct.smeltery.client.TinkerTankRenderer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\tpos : BlockPos in method public renderTileEntityAt(tinkerTank TileTinkerTank, x double, y double, z double, partialTicks float, destroyStage int) : void from class slimeknights.tconstruct.smeltery.client.TinkerTankRenderer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\tstate : IBlockState in method public isFrameBlock(world World, pos BlockPos, type EnumFrameType) : boolean from class slimeknights.tconstruct.smeltery.multiblock.MultiblockTinkerTank",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic liquidToString(fluid Fluid, amount int, text List<String>) : void extracted from public liquidToString(fluid FluidStack, text List<String>) : void in class slimeknights.tconstruct.library.client.RenderUtil",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "null-check logic has been added to the extracted code"
    }
  } ]
}, {
  "repository" : "https://github.com/SlimeKnights/TinkersConstruct.git",
  "sha1" : "43eeb5f419ea6c18c93ba85779f680e7dab74aab",
  "url" : "https://github.com/SlimeKnights/TinkersConstruct/commit/43eeb5f419ea6c18c93ba85779f680e7dab74aab",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class\tslimeknights.tconstruct.library.client.RenderUtil.FluidGuiEntry moved to slimeknights.tconstruct.library.client.GuiUtil.FluidGuiEntry",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\ttext : List<String> to tooltip : List<String> in method protected drawGuiContainerForegroundLayer(mouseX int, mouseY int) : void from class slimeknights.tconstruct.smeltery.client.GuiSmeltery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\tliquids : SmelteryTank in method protected drawGuiContainerBackgroundLayer(partialTicks float, mouseX int, mouseY int) : void from class slimeknights.tconstruct.smeltery.client.GuiSmeltery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\ttank : SmelteryTank in method protected mouseClicked(mouseX int, mouseY int, mouseButton int) : void from class slimeknights.tconstruct.smeltery.client.GuiSmeltery",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\ttext : List<String> to tooltip : List<String> in method protected drawGuiContainerForegroundLayer(mouseX int, mouseY int) : void from class slimeknights.tconstruct.smeltery.client.GuiTinkerTank",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\tliquids : SmelteryTank in method protected drawGuiContainerBackgroundLayer(partialTicks float, mouseX int, mouseY int) : void from class slimeknights.tconstruct.smeltery.client.GuiTinkerTank",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\ttank : SmelteryTank in method protected mouseClicked(mouseX int, mouseY int, mouseButton int) : void from class slimeknights.tconstruct.smeltery.client.GuiTinkerTank",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class\tslimeknights.tconstruct.library.client.GuiUtil from class slimeknights.tconstruct.library.client.RenderUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic renderTiledTextureAtlas(x int, y int, width int, height int, depth float, sprite TextureAtlasSprite) : void from class slimeknights.tconstruct.library.client.RenderUtil to public renderTiledTextureAtlas(x int, y int, width int, height int, depth float, sprite TextureAtlasSprite) : void from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic renderTiledFluid(x int, y int, width int, height int, depth float, fluidStack FluidStack) : void from class slimeknights.tconstruct.library.client.RenderUtil to public renderTiledFluid(x int, y int, width int, height int, depth float, fluidStack FluidStack) : void from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic putTiledTextureQuads(renderer VertexBuffer, x int, y int, width int, height int, depth float, sprite TextureAtlasSprite) : void from class slimeknights.tconstruct.library.client.RenderUtil to public putTiledTextureQuads(renderer VertexBuffer, x int, y int, width int, height int, depth float, sprite TextureAtlasSprite) : void from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic liquidToString(fluid FluidStack, text List<String>) : void from class slimeknights.tconstruct.library.client.RenderUtil to public liquidToString(fluid FluidStack, text List<String>) : void from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic amountToString(amount int, text List<String>) : void from class slimeknights.tconstruct.library.client.RenderUtil to public amountToString(amount int, text List<String>) : void from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate calcFluidGuiEntries(fluid Fluid) : List<FluidGuiEntry> from class slimeknights.tconstruct.library.client.RenderUtil to private calcFluidGuiEntries(fluid Fluid) : List<FluidGuiEntry> from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate calcLiquidText(amount int, divider int, unit String, text List<String>) : int from class slimeknights.tconstruct.library.client.RenderUtil to private calcLiquidText(amount int, divider int, unit String, text List<String>) : int from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tprivate fluidGui : Map<Fluid,List<FluidGuiEntry>> from class slimeknights.tconstruct.library.client.RenderUtil to private fluidGui : Map<Fluid,List<FluidGuiEntry>> from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tprivate smelteryLoaded : boolean from class slimeknights.tconstruct.library.client.RenderUtil to private smelteryLoaded : boolean from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ttank : SmelteryTank to tank : SmelteryTank in method private getFluidHovered(tank SmelteryTank, y int, height int) : FluidStack from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ttank : SmelteryTank to tank : SmelteryTank in method private getFluidHovered(tank SmelteryTank, y int, height int) : FluidStack from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\theight : int in method private getFluidHovered(tank SmelteryTank, y int, height int) : FluidStack from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\theight : int in method private getFluidHovered(tank SmelteryTank, y int, height int) : FluidStack from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprotected to private in method private getFluidHovered(tank SmelteryTank, y int, height int) : FluidStack from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprotected to private in method private getFluidHovered(tank SmelteryTank, y int, height int) : FluidStack from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tstatic in method private getFluidHovered(tank SmelteryTank, y int, height int) : FluidStack from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tstatic in method private getFluidHovered(tank SmelteryTank, y int, height int) : FluidStack from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprotected getFluidHovered(y int) : FluidStack from class slimeknights.tconstruct.smeltery.client.GuiSmeltery to private getFluidHovered(tank SmelteryTank, y int, height int) : FluidStack from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Add Parameter on top - Parameterize Variable on top"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\theight : int in method private calcLiquidHeights(liquids List<FluidStack>, capacity int, height int) : int[] from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\theight : int in method private calcLiquidHeights(liquids List<FluidStack>, capacity int, height int) : int[] from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprotected to private in method private calcLiquidHeights(liquids List<FluidStack>, capacity int, height int) : int[] from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprotected to private in method private calcLiquidHeights(liquids List<FluidStack>, capacity int, height int) : int[] from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tstatic in method private calcLiquidHeights(liquids List<FluidStack>, capacity int, height int) : int[] from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tstatic in method private calcLiquidHeights(liquids List<FluidStack>, capacity int, height int) : int[] from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprotected calcLiquidHeights(liquids List<FluidStack>, capacity int) : int[] from class slimeknights.tconstruct.smeltery.client.GuiSmeltery to private calcLiquidHeights(liquids List<FluidStack>, capacity int, height int) : int[] from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "It can be either pure or impure"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprotected getFluidHovered(y int) : FluidStack from class slimeknights.tconstruct.smeltery.client.GuiTinkerTank to private getFluidHovered(tank SmelteryTank, y int, height int) : FluidStack from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Add Parameter on top - Parameterize Variable on top"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprotected calcLiquidHeights(liquids List<FluidStack>, capacity int) : int[] from class slimeknights.tconstruct.smeltery.client.GuiTinkerTank to private calcLiquidHeights(liquids List<FluidStack>, capacity int, height int) : int[] from class slimeknights.tconstruct.library.client.GuiUtil",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "It can be either pure or impure"
    }
  } ]
}, {
  "repository" : "https://github.com/SlimeKnights/TinkersConstruct.git",
  "sha1" : "6931b450479e0dfbb60c8836c12a91c8ac498038",
  "url" : "https://github.com/SlimeKnights/TinkersConstruct/commit/6931b450479e0dfbb60c8836c12a91c8ac498038",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic renderFluids(tank SmelteryTank, pos BlockPos, tankMinPos BlockPos, tankMaxPos BlockPos, x double, y double, z double, offsetToBlockEdge float, lightingPos BlockPos) : void extracted from public renderFluids(tank SmelteryTank, pos BlockPos, tankMinPos BlockPos, tankMaxPos BlockPos, x double, y double, z double) : void in class slimeknights.tconstruct.smeltery.client.SmelteryTankRenderer",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Extract Method on top - caused Add Parameter refactoring"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic renderStackedFluidCuboid(fluid FluidStack, px double, py double, pz double, pos BlockPos, from BlockPos, to BlockPos, ymin double, ymax double, offsetToBlockEdge float) : void extracted from public renderStackedFluidCuboid(fluid FluidStack, px double, py double, pz double, pos BlockPos, from BlockPos, to BlockPos, ymin double, ymax double) : void in class slimeknights.tconstruct.library.client.RenderUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Parameterize Attribute",
    "description" : "Parameterize Attribute\tFLUID_OFFSET : float to offsetToBlockEdge : float in method public renderStackedFluidCuboid(fluid FluidStack, px double, py double, pz double, pos BlockPos, from BlockPos, to BlockPos, ymin double, ymax double, offsetToBlockEdge float) : void from class slimeknights.tconstruct.library.client.RenderUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/pentaho/big-data-plugin.git",
  "sha1" : "1c8cea9db7327b02c948346ec02491cbef3cc564",
  "url" : "https://github.com/pentaho/big-data-plugin/commit/1c8cea9db7327b02c948346ec02491cbef3cc564",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate extractFieldName(parquetNameTypeFromUI String) : String extracted from protected getInfo(meta AvroInputMeta, preview boolean) : void in class org.pentaho.big.data.kettle.plugins.formats.impl.avro.input.AvroInputDialog",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The overlapping changes are not justifiable"
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tDISPLAYABLE_AVRO_PATH_COLUMN_INDEX : int to AVRO_PATH_COLUMN_INDEX : int in class org.pentaho.big.data.kettle.plugins.formats.impl.avro.input.AvroInputDialog",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tAVRO_PATH_COLUMN_INDEX : int to FORMAT_COLUMN_INDEX : int in class org.pentaho.big.data.kettle.plugins.formats.impl.avro.input.AvroInputDialog",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/adjust/android_sdk.git",
  "sha1" : "8dd7a0380136a2ee0b1592e12ab4dc7010ebbcb2",
  "url" : "https://github.com/adjust/android_sdk/commit/8dd7a0380136a2ee0b1592e12ab4dc7010ebbcb2",
  "refactorings" : [ {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class\tcom.adeven.adjustio.RequestTask moved and renamed to com.adeven.adjustio.TrackingInformation.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier\tpublic to package in class com.adeven.adjustio.TrackingInformation.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier\tstatic in class com.adeven.adjustio.TrackingInformation.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic RequestTask(path String) renamed to package setPath(path String) : Builder in class com.adeven.adjustio.TrackingInformation.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to Builder in method package setSuccessMessage(successMessage String) : Builder from class com.adeven.adjustio.TrackingInformation.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpublic to package in method package setSuccessMessage(successMessage String) : Builder from class com.adeven.adjustio.TrackingInformation.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to Builder in method package setFailureMessage(failureMessage String) : Builder from class com.adeven.adjustio.TrackingInformation.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpublic to package in method package setFailureMessage(failureMessage String) : Builder from class com.adeven.adjustio.TrackingInformation.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to Builder in method package setUserAgent(userAgent String) : Builder from class com.adeven.adjustio.TrackingInformation.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpublic to package in method package setUserAgent(userAgent String) : Builder from class com.adeven.adjustio.TrackingInformation.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpublic to package in method package setPath(path String) : Builder from class com.adeven.adjustio.TrackingInformation.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\ttrackingInformation : TrackingInformation in method private getLogString(response HttpResponse, trackingInformation TrackingInformation) : String from class com.adeven.adjustio.RequestThread",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate getLogString(response HttpResponse) : String from class com.adeven.adjustio.RequestTask to private getLogString(response HttpResponse, trackingInformation TrackingInformation) : String from class com.adeven.adjustio.RequestThread",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Modifications are pure considering the Move Method refactoring mechanics"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate parseResponse(response HttpResponse) : String from class com.adeven.adjustio.RequestTask to private parseResponse(response HttpResponse) : String from class com.adeven.adjustio.RequestThread",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Error handling logic has been changed - e.printStackTrace to log"
    }
  } ]
}, {
  "repository" : "https://github.com/adjust/android_sdk.git",
  "sha1" : "874742233695ee99c3d98ce511505382d047b8ac",
  "url" : "https://github.com/adjust/android_sdk/commit/874742233695ee99c3d98ce511505382d047b8ac",
  "refactorings" : [ {
    "type" : "Rename Class",
    "description" : "Rename Class\tcom.adeven.adjustio.TrackingInformation renamed to com.adeven.adjustio.TrackingPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Anonymous With Class",
    "description" : "Replace Anonymous With Class\tcom.adeven.adjustio.RequestThread.RequestThread.new Handler with com.adeven.adjustio.RequestThread.RequestHandler",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic d(logTag String, message String) : void renamed to public debug(message String) : void in class com.adeven.adjustio.Logger",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic d(logTag String, message String, throwable Throwable) : void renamed to public error(message String, throwable Throwable) : void in class com.adeven.adjustio.Logger",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic w(logTag String, message String) : void renamed to public warn(message String) : void in class com.adeven.adjustio.Logger",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic e(logTag String, message String) : void renamed to public info(message String) : void in class com.adeven.adjustio.Logger",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tlogTag : String in method public d(logTag String, message String) : void from class com.adeven.adjustio.Logger",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tlogTag : String in method public d(logTag String, message String, throwable Throwable) : void from class com.adeven.adjustio.Logger",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tlogTag : String in method public w(logTag String, message String) : void from class com.adeven.adjustio.Logger",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tlogTag : String in method public e(logTag String, message String) : void from class com.adeven.adjustio.Logger",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute\tlogTag : String to LOGTAG : String in method public debug(message String) : void from class com.adeven.adjustio.Logger",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute\tlogTag : String to LOGTAG : String in method public error(message String, throwable Throwable) : void from class com.adeven.adjustio.Logger",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute\tlogTag : String to LOGTAG : String in method public warn(message String) : void from class com.adeven.adjustio.Logger",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute\tlogTag : String to LOGTAG : String in method public info(message String) : void from class com.adeven.adjustio.Logger",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier\tpackage to public in class com.adeven.adjustio.RequestThread",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpackage to public in method public RequestThread() from class com.adeven.adjustio.RequestThread",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tinformation : TrackingInformation to information : TrackingPackage in method package track(information TrackingPackage) : void from class com.adeven.adjustio.RequestThread",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\ttrackingInformation : TrackingInformation to trackingInformation : TrackingPackage in method private trackInternal(trackingInformation TrackingPackage) : void from class com.adeven.adjustio.RequestThread",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\ttrackingInformation : TrackingInformation to trackingInformation : TrackingPackage in method private getLogString(response HttpResponse, trackingInformation TrackingPackage) : String from class com.adeven.adjustio.RequestThread",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate sanitizeStringShort(string String) : String extracted from private getLanguage(locale Locale) : String in class com.adeven.adjustio.Util",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate sanitizeStringShort(string String) : String extracted from private getCountry(locale Locale) : String in class com.adeven.adjustio.Util",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tlanguage : String to string : String in method private sanitizeStringShort(string String) : String from class com.adeven.adjustio.Util",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tcountry : String to string : String in method private sanitizeStringShort(string String) : String from class com.adeven.adjustio.Util",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Conditional",
    "description" : "Split Conditional\tif(cursor == null || !cursor.moveToFirst()) to [if(!cursor.moveToFirst()), if(cursor == null)] in method public getAttributionId(context Context) : String from class com.adeven.adjustio.Util",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate trackSessionEnd() : void renamed to public setLogLevel(logLevel int) : void in class com.adeven.adjustio.AdjustIo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\ttrackingInformation : TrackingInformation in method public trackEvent(eventToken String, parameters Map<String,String>) : void from class com.adeven.adjustio.AdjustIo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttrackingInformation : TrackingInformation to event : TrackingPackage in method public trackEvent(eventToken String, parameters Map<String,String>) : void from class com.adeven.adjustio.AdjustIo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\ttrackingInformation : TrackingInformation to event : TrackingPackage in method public trackEvent(eventToken String, parameters Map<String,String>) : void from class com.adeven.adjustio.AdjustIo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\ttrackingInformation : TrackingInformation in method public trackRevenue(amountInCents float, eventToken String, parameters Map<String,String>) : void from class com.adeven.adjustio.AdjustIo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttrackingInformation : TrackingInformation to revenue : TrackingPackage in method public trackRevenue(amountInCents float, eventToken String, parameters Map<String,String>) : void from class com.adeven.adjustio.AdjustIo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\ttrackingInformation : TrackingInformation to revenue : TrackingPackage in method public trackRevenue(amountInCents float, eventToken String, parameters Map<String,String>) : void from class com.adeven.adjustio.AdjustIo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttrackingInformation : TrackingInformation to sessionStart : TrackingPackage in method private trackSessionStart() : void from class com.adeven.adjustio.AdjustIo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\ttrackingInformation : TrackingInformation to sessionStart : TrackingPackage in method private trackSessionStart() : void from class com.adeven.adjustio.AdjustIo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tlogLevel : int in method public setLogLevel(logLevel int) : void from class com.adeven.adjustio.AdjustIo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to public in method public setLogLevel(logLevel int) : void from class com.adeven.adjustio.AdjustIo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tappId : String to packageName : String in class com.adeven.adjustio.AdjustIo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tAPP_ID : String to PACKAGE_NAME : String in class com.adeven.adjustio.AdjustIo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tTrackingInformation to TrackingPackage in method package build() : TrackingPackage from class com.adeven.adjustio.TrackingPackage.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier\tpackage to public in class com.adeven.adjustio.TrackingPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\ttrackingParameters : String... to parameters : List<NameValuePair> in method public TrackingPackage(path String, successMessage String, failureMessage String, userAgent String, parameters List<NameValuePair>) from class com.adeven.adjustio.TrackingPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\ttrackingParameters : String... to parameters : List<NameValuePair> in method public TrackingPackage(path String, successMessage String, failureMessage String, userAgent String, parameters List<NameValuePair>) from class com.adeven.adjustio.TrackingPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpackage to public in method public TrackingPackage(path String, successMessage String, failureMessage String, userAgent String, parameters List<NameValuePair>) from class com.adeven.adjustio.TrackingPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\ttrackingParameters : String[] to parameters : List<NameValuePair> in class com.adeven.adjustio.TrackingPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\ttrackingParameters : String[] to parameters : List<NameValuePair> in class com.adeven.adjustio.TrackingPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\ttrackingParameters : String[] to parameters : List<NameValuePair> in class com.adeven.adjustio.TrackingPackage.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\ttrackingParameters : String[] to parameters : List<NameValuePair> in class com.adeven.adjustio.TrackingPackage.Builder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tprotected LOGTAG : String from class com.adeven.adjustio.Util to protected LOGTAG : String from class com.adeven.adjustio.Logger",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/pentaho/big-data-plugin.git",
  "sha1" : "a5f122a886c4f3058e4e44f154f3fe8e1c414c93",
  "url" : "https://github.com/pentaho/big-data-plugin/commit/a5f122a886c4f3058e4e44f154f3fe8e1c414c93",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getNamedCluster() : NamedCluster extracted from protected getProcessedUrl(metastore IMetaStore, url String) : String in class org.pentaho.big.data.kettle.plugins.hdfs.trans.HadoopFileOutputMeta",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Addition of return expression, which is a part of Extract Method refactoring mechanics - Rename Variable on top"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tc : NamedCluster to cluster : NamedCluster in method public getNamedCluster() : NamedCluster from class org.pentaho.big.data.kettle.plugins.hdfs.trans.HadoopFileOutputMeta",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface\torg.pentaho.big.data.kettle.plugins.hdfs.trans.HadoopFileMeta from classes [org.pentaho.big.data.kettle.plugins.hdfs.trans.HadoopFileInputMeta]",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/halestudio/hale.git",
  "sha1" : "e96555c7c309a0bc54d5a6464ae89dd543ff47ee",
  "url" : "https://github.com/halestudio/hale/commit/e96555c7c309a0bc54d5a6464ae89dd543ff47ee",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate fillFeatureTest(elementName String, targetSchema URI, values Map<List<QName>,Object>, testName String, srsName String, skipValueTest boolean, expectWriteFail boolean, windingOrderParam String) : IOReport extracted from private fillFeatureTest(elementName String, targetSchema URI, values Map<List<QName>,Object>, testName String, srsName String, skipValueTest boolean, expectWriteFail boolean) : IOReport in class eu.esdihumboldt.hale.io.gml.writer.internal.StreamGmlWriterTest",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "7 assertions have been added to the extracted code + couple of if-else statements"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getGeometryPair(value Object, allowConvert boolean, report IOReporter) : Pair<Geometry,CRSDefinition> extracted from protected extractGeometry(value Object, allowConvert boolean, report IOReporter) : Pair<Geometry,CRSDefinition> in class eu.esdihumboldt.hale.common.instance.io.impl.AbstractGeoInstanceWriter",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/halestudio/hale.git",
  "sha1" : "01fc649167cfe59a64550568d58006fe108bbf90",
  "url" : "https://github.com/halestudio/hale/commit/01fc649167cfe59a64550568d58006fe108bbf90",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method\tprotected getDefaultWindingOrder() : EnumWindingOrderTypes from class eu.esdihumboldt.hale.io.gml.writer.GmlInstanceWriter to protected getDefaultWindingOrder() : EnumWindingOrderTypes from class eu.esdihumboldt.hale.io.gml.writer.internal.StreamGmlWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/restlet/restlet-framework-java.git",
  "sha1" : "f541ccfe8b3fdc8feeb5682c3724968854b63f47",
  "url" : "https://github.com/restlet/restlet-framework-java/commit/f541ccfe8b3fdc8feeb5682c3724968854b63f47",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate isLocalAcessOnly() : boolean extracted from public validate(input Representation) : Representation in class org.restlet.ext.oauth.ValidationServerResource",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The if statement got transformed to a return expression"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate validateToken(call JSONObject) : Token extracted from public validate(input Representation) : Representation in class org.restlet.ext.oauth.ValidationServerResource",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "statements inside the null-check have been impurely changed"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate createError(error OAuthError) : Representation extracted from public validate(input Representation) : Representation in class org.restlet.ext.oauth.ValidationServerResource",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "impure non-mapped leaves have been added to the extracted code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate createError(error OAuthError) : Representation extracted from public validate(input Representation) : Representation in class org.restlet.ext.oauth.ValidationServerResource",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "impure non-mapped leaves have been added to the extracted code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate validate(call JSONObject) : Representation extracted from public validate(input Representation) : Representation in class org.restlet.ext.oauth.ValidationServerResource",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The if condition expression has been changed"
    }
  }, {
    "type" : "Merge Conditional",
    "description" : "Merge Conditional\t[boolean localOnly=Boolean.parseBoolean(lo);, if((lo != null) && (lo.length() > 0))] to return (lo != null) && (lo.length() > 0) && Boolean.parseBoolean(lo); in method private isLocalAcessOnly() : boolean from class org.restlet.ext.oauth.ValidationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tresponse : JSONObject to resp : JSONObject in method private createError(error OAuthError) : Representation from class org.restlet.ext.oauth.ValidationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\terror : String in method public validate(input Representation) : Representation from class org.restlet.ext.oauth.ValidationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tresponse : JSONObject to resp : JSONObject in method private validate(call JSONObject) : Representation from class org.restlet.ext.oauth.ValidationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\trest : JsonRepresentation in method public validate(input Representation) : Representation from class org.restlet.ext.oauth.ValidationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/restlet/restlet-framework-java.git",
  "sha1" : "182da4a46db52a99a2f8951b0a25aeaa1a1a6c35",
  "url" : "https://github.com/restlet/restlet-framework-java/commit/182da4a46db52a99a2f8951b0a25aeaa1a1a6c35",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class\torg.restlet.ext.oauth.internal.ClientImpl moved to org.restlet.ext.oauth.internal.memory.ClientImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\torg.restlet.ext.oauth.internal.ExpireToken moved to org.restlet.ext.oauth.internal.memory.ExpireToken",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\torg.restlet.ext.oauth.internal.MemClientStore moved to org.restlet.ext.oauth.internal.memory.MemClientStore",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\torg.restlet.ext.oauth.internal.MemTokenGenerator moved to org.restlet.ext.oauth.internal.memory.MemTokenGenerator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\torg.restlet.ext.oauth.internal.AuthenticatedUserImpl moved to org.restlet.ext.oauth.internal.memory.AuthenticatedUserImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\torg.restlet.ext.oauth.internal.UnlimitedToken moved to org.restlet.ext.oauth.internal.memory.UnlimitedToken",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class\torg.restlet.ext.oauth.ValidationServerResource moved and renamed to org.restlet.ext.oauth.security.TokenAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\texpiresIn : long in method private createJsonToken(token Token, scopes String) : JSONObject from class org.restlet.ext.oauth.AccessTokenServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tparams : Series<Parameter> to params : Form in method private doPasswordFlow(client Client, params Form) : Representation from class org.restlet.ext.oauth.AccessTokenServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tclient : Client in method private doPasswordFlow(client Client, params Form) : Representation from class org.restlet.ext.oauth.AccessTokenServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tclientId : String in method private doPasswordFlow(clientId String, clientSecret String, params Series<Parameter>) : Representation from class org.restlet.ext.oauth.AccessTokenServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tclientSecret : String in method private doPasswordFlow(clientId String, clientSecret String, params Series<Parameter>) : Representation from class org.restlet.ext.oauth.AccessTokenServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tOAuthException in method private doPasswordFlow(client Client, params Form) : Representation from class org.restlet.ext.oauth.AccessTokenServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Type Declaration Kind",
    "description" : "Change Type Declaration Kind\tclass to interface in type org.restlet.ext.oauth.AuthenticatedUser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Type Declaration Kind",
    "description" : "Change Type Declaration Kind\tclass to interface in type org.restlet.ext.oauth.Client",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Type Declaration Kind",
    "description" : "Change Type Declaration Kind\tclass to interface in type org.restlet.ext.oauth.internal.Token",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Attribute",
    "description" : "Extract Attribute\tprivate ACTION_ACCEPT : String in class org.restlet.ext.oauth.AuthPageServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tOAuthException in method public showPage() : Representation from class org.restlet.ext.oauth.AuthPageServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tOAuthException in method protected handleAction(action String, scopes String[]) : void from class org.restlet.ext.oauth.AuthPageServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprotected doPostAuthenticate(session AuthSession, client Client) : Representation renamed to protected doPostAuthorization(session AuthSession) : Representation in class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic sendError(sessionId String, error OAuthError, state String, description String, errorUri String) : void renamed to private ungetAuthSession() : void in class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprotected getResponseType(params Form) : ResponseType extracted from public represent() : Representation in class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "try-catch and exception handling logic have been added to the extracted code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprotected getRedirectURI(params Form, client Client) : String extracted from public represent() : Representation in class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "try-catch and exception handling logic (throw specific exceptions) have been added to the extracted code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getAuthSession(client Client, responseType ResponseType, redirectURI String) : AuthSession extracted from public represent() : Representation in class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "non-mapped leaves which have been added to the extracted code are not justifiable"
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\tsession : AuthSession in method public represent() : Representation from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tscopeOwner : String to scopeOwner : User in method private getAuthSession(client Client, responseType ResponseType, redirectURI String) : AuthSession from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable params : Form in method public represent() : Representation from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable client : Client in method public represent() : Representation from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable session : AuthSession in method public represent() : Representation from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\ttype : ResponseType to responseType : ResponseType in method public represent() : Representation from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tOAuthException in method public represent() : Representation from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to AuthSession in method protected setupSession(in AuthSession, client Client, flow ResponseType, redirUri String) : AuthSession from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tparams : Form in method protected setupSession(in AuthSession, client Client, flow ResponseType, redirUri String, params Form) : void from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tclient : Client in method protected doPostAuthenticate(session AuthSession, client Client) : Representation from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter\tsessionId : String to sessionId : String in method private ungetAuthSession() : void from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\terror : OAuthError in method public sendError(sessionId String, error OAuthError, state String, description String, errorUri String) : void from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tstate : String in method public sendError(sessionId String, error OAuthError, state String, description String, errorUri String) : void from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tdescription : String in method public sendError(sessionId String, error OAuthError, state String, description String, errorUri String) : void from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\terrorUri : String in method public sendError(sessionId String, error OAuthError, state String, description String, errorUri String) : void from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpublic to private in method private ungetAuthSession() : void from class org.restlet.ext.oauth.AuthorizationServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Type Declaration Kind",
    "description" : "Change Type Declaration Kind\tclass to interface in type org.restlet.ext.oauth.UserStore",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpackage to public in method public setToken(token String) : void from class org.restlet.ext.oauth.internal.memory.ExpireToken",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tpassword : String to password : char[] in class org.restlet.ext.oauth.internal.memory.AuthenticatedUserImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tString to char[] in method public getPassword() : char[] from class org.restlet.ext.oauth.internal.memory.AuthenticatedUserImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tpassword : String to password : char[] in method public setPassword(password char[]) : void from class org.restlet.ext.oauth.internal.memory.AuthenticatedUserImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation\t@Override in method package setToken(token String) : void from class org.restlet.ext.oauth.internal.UnlimitedToken",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic validate(input Representation) : Representation renamed to public authenticate(input Representation) : Representation in class org.restlet.ext.oauth.security.TokenAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate validateToken(call JSONObject) : Token renamed to private validateBearerToken(call JSONObject) : Token in class org.restlet.ext.oauth.security.TokenAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method\tprivate createError(error OAuthError) : Representation inlined to public authenticate(input Representation) : Representation in class org.restlet.ext.oauth.security.TokenAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method\tprivate createError(error OAuthError) : Representation inlined to public authenticate(input Representation) : Representation in class org.restlet.ext.oauth.security.TokenAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method\tprivate createError(error OAuthError) : Representation inlined to public authenticate(input Representation) : Representation in class org.restlet.ext.oauth.security.TokenAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method\tprivate createError(error OAuthError) : Representation inlined to public authenticate(input Representation) : Representation in class org.restlet.ext.oauth.security.TokenAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tResourceException to Exception in method public authenticate(input Representation) : Representation from class org.restlet.ext.oauth.security.TokenAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tOAuthException in method private validateBearerToken(call JSONObject) : Token from class org.restlet.ext.oauth.security.TokenAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Override in method public persist() : boolean from class org.restlet.ext.oauth.internal.memory.AuthenticatedUserImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method\tpublic persist() : boolean from class org.restlet.ext.oauth.AuthenticatedUser to public persist() : boolean from class org.restlet.ext.oauth.internal.memory.AuthenticatedUserImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter\tdescription : String to description : String in method protected sendError(redirectUri String, ex OAuthException, state String) : void from class org.restlet.ext.oauth.OAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter\terrorUri : String to errorUri : String in method protected sendError(redirectUri String, ex OAuthException, state String) : void from class org.restlet.ext.oauth.OAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tredirUri : String to redirectUri : String in method protected sendError(redirectUri String, ex OAuthException, state String) : void from class org.restlet.ext.oauth.OAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter\t[error : OAuthError, description : String, errorUri : String] to ex : OAuthException in method protected sendError(redirectUri String, ex OAuthException, state String) : void from class org.restlet.ext.oauth.OAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tredirectUri : String in method protected sendError(redirectUri String, ex OAuthException, state String) : void from class org.restlet.ext.oauth.OAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tsession : AuthSession in method protected sendError(session AuthSession, error OAuthError, state String, description String, errorUri String) : void from class org.restlet.ext.oauth.AuthPageServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method\tprotected sendError(session AuthSession, error OAuthError, state String, description String, errorUri String) : void from class org.restlet.ext.oauth.AuthPageServerResource to protected sendError(redirectUri String, ex OAuthException, state String) : void from class org.restlet.ext.oauth.OAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tresponse : JSONObject to result : JSONObject in method public createErrorDocument() : JSONObject from class org.restlet.ext.oauth.OAuthException",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\terror : OAuthError in method package getErrorMessage(error OAuthError, description String, errorUri String) : JSONObject from class org.restlet.ext.oauth.OAuthError",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tdescription : String in method package getErrorMessage(error OAuthError, description String, errorUri String) : JSONObject from class org.restlet.ext.oauth.OAuthError",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\terrorUri : String in method package getErrorMessage(error OAuthError, description String, errorUri String) : JSONObject from class org.restlet.ext.oauth.OAuthError",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpackage to public in method public createErrorDocument() : JSONObject from class org.restlet.ext.oauth.OAuthException",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier\tstatic in method package getErrorMessage(error OAuthError, description String, errorUri String) : JSONObject from class org.restlet.ext.oauth.OAuthError",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method\tpackage getErrorMessage(error OAuthError, description String, errorUri String) : JSONObject from class org.restlet.ext.oauth.OAuthError to public createErrorDocument() : JSONObject from class org.restlet.ext.oauth.OAuthException",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tprotected getClient(params Form) : Client extracted from public represent() : Representation in class org.restlet.ext.oauth.AuthorizationServerResource & moved to class org.restlet.ext.oauth.OAuthServerResource",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "throw expressions have been added to the extracted code"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tprotected getAuthSession() : AuthSession extracted from protected handleAction(action String, scopes String[]) : void in class org.restlet.ext.oauth.AuthPageServerResource & moved to class org.restlet.ext.oauth.OAuthServerResource",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "non-mapped leaves which have been added to the extracted code are not justifiable"
    }
  } ]
}, {
  "repository" : "https://github.com/restlet/restlet-framework-java.git",
  "sha1" : "9f3705210af24f6d877d0d7f0fce4ee92331cedc",
  "url" : "https://github.com/restlet/restlet-framework-java/commit/9f3705210af24f6d877d0d7f0fce4ee92331cedc",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate createJsonToken(token Token, scopes String) : JSONObject renamed to protected responseTokenRepresentation(token Token, scopes String) : Representation in class org.restlet.ext.oauth.AccessTokenServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tbody : JSONObject to response : JSONObject in method protected responseTokenRepresentation(token Token, scopes String) : Representation from class org.restlet.ext.oauth.AccessTokenServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tJSONObject to Representation in method protected responseTokenRepresentation(token Token, scopes String) : Representation from class org.restlet.ext.oauth.AccessTokenServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to protected in method protected responseTokenRepresentation(token Token, scopes String) : Representation from class org.restlet.ext.oauth.AccessTokenServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic getErrorJsonDocument(ex OAuthException) : Representation renamed to public responseErrorRepresentation(ex OAuthException) : Representation in class org.restlet.ext.oauth.OAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\tstateful : Reference in method protected handleAction(action String, scopes String[]) : void from class org.restlet.ext.oauth.AuthPageServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable user : AuthenticatedUser in method protected handleAction(action String, scopes String[]) : void from class org.restlet.ext.oauth.AuthPageServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tlocation : String to location : Reference in method protected handleAction(action String, scopes String[]) : void from class org.restlet.ext.oauth.AuthPageServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable location : Reference in method protected handleAction(action String, scopes String[]) : void from class org.restlet.ext.oauth.AuthPageServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass\torg.restlet.ext.oauth.AuthorizationBaseServerResource from classes [org.restlet.ext.oauth.AuthorizationServerResource, org.restlet.ext.oauth.AuthPageServerResource]",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Subclass",
    "description" : "Extract Subclass\torg.restlet.ext.oauth.AuthorizationBaseServerResource from class org.restlet.ext.oauth.OAuthServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method\tprotected doCatch(t Throwable) : void from class org.restlet.ext.oauth.AuthorizationServerResource to protected doCatch(t Throwable) : void from class org.restlet.ext.oauth.AuthorizationBaseServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method\tprotected getAuthSession() : AuthSession from class org.restlet.ext.oauth.OAuthServerResource to protected getAuthSession() : AuthSession from class org.restlet.ext.oauth.AuthorizationBaseServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method\tprotected getErrorPage(errPage String, ex OAuthException) : Representation from class org.restlet.ext.oauth.OAuthServerResource to protected getErrorPage(errPage String, ex OAuthException) : Representation from class org.restlet.ext.oauth.AuthorizationBaseServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tredirectUri : String to redirectURI : String in method protected sendError(redirectURI String, ex OAuthException, state String, fragment boolean) : void from class org.restlet.ext.oauth.AuthorizationBaseServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tfragment : boolean in method protected sendError(redirectURI String, ex OAuthException, state String, fragment boolean) : void from class org.restlet.ext.oauth.AuthorizationBaseServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method\tprotected sendError(redirectUri String, ex OAuthException, state String) : void from class org.restlet.ext.oauth.OAuthServerResource to protected sendError(redirectURI String, ex OAuthException, state String, fragment boolean) : void from class org.restlet.ext.oauth.AuthorizationBaseServerResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic toOAuthException(t Throwable) : OAuthException extracted from protected doCatch(t Throwable) : void in class org.restlet.ext.oauth.AccessTokenServerResource & moved to class org.restlet.ext.oauth.OAuthException",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic toOAuthException(t Throwable) : OAuthException extracted from protected doCatch(t Throwable) : void in class org.restlet.ext.oauth.security.TokenAuthServerResource & moved to class org.restlet.ext.oauth.OAuthException",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method\tprotected generateAgentToken(userId String, client Client, redirURL String) : String moved from class org.restlet.ext.oauth.OAuthServerResource to class org.restlet.ext.oauth.AuthPageServerResource & inlined to protected handleAction(action String, scopes String[]) : void",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/OneBusAway/onebusaway-application-modules.git",
  "sha1" : "9b2401aa1b4dc8ee57a21247cddcd16065e766ae",
  "url" : "https://github.com/OneBusAway/onebusaway-application-modules/commit/9b2401aa1b4dc8ee57a21247cddcd16065e766ae",
  "refactorings" : [ {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to protected in method protected handleAffects(ptSituation PtSituationElementStructure, serviceAlert ServiceAlert.Builder) : void from class org.onebusaway.transit_data_federation.impl.realtime.siri.SiriService",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate loadServieAlerts() : void renamed to private loadServiceAlerts() : void in class org.onebusaway.transit_data_federation.impl.service_alerts.ServiceAlertsServiceImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getServiceAlertIdsAsObjects(serviceAlertIds Collection<AgencyAndId>, time long) : List<ServiceAlert> extracted from private getServiceAlertIdsAsObjects(serviceAlertIds Collection<AgencyAndId>) : List<ServiceAlert> in class org.onebusaway.transit_data_federation.impl.service_alerts.ServiceAlertsServiceImpl",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The if statement expression has been impurely changed"
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\ttimeFrom : long in method public getBlocksForRoute(routeId AgencyAndId, time long) : List<BlockLocation> from class org.onebusaway.transit_data_federation.impl.blocks.BlockStatusServiceImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\ttimeTo : long in method public getBlocksForRoute(routeId AgencyAndId, time long) : List<BlockLocation> from class org.onebusaway.transit_data_federation.impl.blocks.BlockStatusServiceImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate _blockLocationService : BlockLocationService from class org.onebusaway.transit_data_federation.impl.beans.VehicleStatusBeanServiceImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Refreshable(dependsOn = RefreshableResources.STOP_GEOSPATIAL_INDEX) in method public initialize() : void from class org.onebusaway.transit_data_federation.impl.WhereGeospatialServiceImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Refreshable(dependsOn = RefreshableResources.CALENDAR_DATA) in method public start() : void from class org.onebusaway.transit_data_federation.impl.ExtendedCalendarServiceImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/osmdroid/osmdroid.git",
  "sha1" : "df5232f967d2b08ab2bf50dff030648a8575a305",
  "url" : "https://github.com/osmdroid/osmdroid/commit/df5232f967d2b08ab2bf50dff030648a8575a305",
  "refactorings" : [ {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tdownloadingTask : CacheManager.DownloadingTask to downloadingTask : CacheManager.CacheManagerTask in class org.osmdroid.bugtestfragments.Bug512CacheManagerWp",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier\tabstract in class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier\tstatic in class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tpackage to private in attribute private mZoomMin : int from class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier\tfinal in attribute private mZoomMin : int from class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tpackage to private in attribute private mZoomMax : int from class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier\tfinal in attribute private mZoomMax : int from class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method\tpublic CacheManagerTask(pCtx Context, pBB BoundingBox, pZoomMin int, pZoomMax int) inlined to public CacheManagerTask(pManager CacheManager, pAction CacheManagerAction, pTiles List<MapTile>, pZoomMin int, pZoomMax int) in class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate logFaultyCallback(pThrowable Throwable) : void extracted from protected onProgressUpdate(count Integer...) : void in class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tt : Throwable to pThrowable : Throwable in method private logFaultyCallback(pThrowable Throwable) : void from class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic CacheManager(pTileProvider MapTileProviderBase, pWriter IFilesystemCache, pMinZoomLevel int, pMaxZoomLevel int) extracted from public CacheManager(mapView MapView, writer IFilesystemCache) in class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "One new field has been set within the extracted constructor"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> extracted from public possibleTilesCovered(geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int) : int in class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "non-mapped leaves which have been added to the extracted code are not justifiable"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomMin int, pZoomMax int) : List<MapTile> extracted from public possibleTilesCovered(geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int) : int in class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "non-mapped leaves which have been added to the extracted code are not justifiable"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic execute(pTask CacheManagerTask) : CacheManagerTask extracted from public downloadAreaAsync(ctx Context, bb BoundingBox, zoomMin int, zoomMax int) : DownloadingTask in class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic execute(pTask CacheManagerTask) : CacheManagerTask extracted from public downloadAreaAsync(ctx Context, geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int) : DownloadingTask in class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic execute(pTask CacheManagerTask) : CacheManagerTask extracted from public downloadAreaAsync(ctx Context, bb BoundingBox, zoomMin int, zoomMax int, callback CacheManagerCallback) : DownloadingTask in class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic execute(pTask CacheManagerTask) : CacheManagerTask extracted from public downloadAreaAsync(ctx Context, geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int, callback CacheManagerCallback) : DownloadingTask in class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic execute(pTask CacheManagerTask) : CacheManagerTask extracted from public downloadAreaAsyncNoUI(ctx Context, geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int, callback CacheManagerCallback) : DownloadingTask in class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic execute(pTask CacheManagerTask) : CacheManagerTask extracted from public downloadAreaAsyncNoUI(ctx Context, bb BoundingBox, zoomMin int, zoomMax int, callback CacheManagerCallback) : DownloadingTask in class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic execute(pTask CacheManagerTask) : CacheManagerTask extracted from public cleanAreaAsync(ctx Context, bb BoundingBox, zoomMin int, zoomMax int) : CleaningTask in class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argumentization"
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter pWriter : IFilesystemCache in method public CacheManager(pTileProvider MapTileProviderBase, pWriter IFilesystemCache, pMinZoomLevel int, pMaxZoomLevel int) from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\twriter : IFilesystemCache to pWriter : IFilesystemCache in method public CacheManager(pTileProvider MapTileProviderBase, pWriter IFilesystemCache, pMinZoomLevel int, pMaxZoomLevel int) from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter pZoomLevel : int in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttileAround : Point to tileX : int in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttileAround : Point to tileX : int in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttileAround : Point to tileX : int in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable tileX : int in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable tileX : int in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable tileX : int in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttilePoints : ArrayList<Point> to result : Set<MapTile> in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable result : Set<MapTile> in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter pGeoPoints : ArrayList<GeoPoint> in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable d : double in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable wayPoint : GeoPoint in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable leadCoef : double in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable brng : double in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable latRad : double in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable lonRad : double in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable prevLatRad : double in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable prevLonRad : double in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable lastPoint : Point in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tzoomLevel : int to pZoomLevel : int in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\ttileAround : Point to tileX : int in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\ttileAround : Point to tileX : int in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\ttileAround : Point to tileX : int in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\ttilePoints : ArrayList<Point> to result : Set<MapTile> in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tgeoPoints : ArrayList<GeoPoint> to pGeoPoints : ArrayList<GeoPoint> in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomLevel int) : Collection<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttilePoints : ArrayList<Point> to result : List<MapTile> in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomMin int, pZoomMax int) : List<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable result : List<MapTile> in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomMin int, pZoomMax int) : List<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\ttilePoints : ArrayList<Point> to result : List<MapTile> in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomMin int, pZoomMax int) : List<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tzoomMin : int to pZoomMin : int in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomMin int, pZoomMax int) : List<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tzoomMax : int to pZoomMax : int in method public getTilesCoverage(pGeoPoints ArrayList<GeoPoint>, pZoomMin int, pZoomMax int) : List<MapTile> from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttask : DownloadingTask to pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttask : DownloadingTask to pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttask : DownloadingTask to pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttask : DownloadingTask to pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttask : DownloadingTask to pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttask : DownloadingTask to pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ttask : DownloadingTask to pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ttask : DownloadingTask to pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ttask : DownloadingTask to pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ttask : DownloadingTask to pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ttask : DownloadingTask to pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ttask : DownloadingTask to pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttask : CleaningTask to pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ttask : CleaningTask to pTask : CacheManagerTask in method public execute(pTask CacheManagerTask) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tbb : BoundingBox to pBB : BoundingBox in method public possibleTilesInArea(pBB BoundingBox, pZoomMin int, pZoomMax int) : int from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter pBB : BoundingBox in method public possibleTilesInArea(pBB BoundingBox, pZoomMin int, pZoomMax int) : int from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tgeoPoints : ArrayList<GeoPoint> to pGeoPoints : ArrayList<GeoPoint> in method public possibleTilesCovered(pGeoPoints ArrayList<GeoPoint>, pZoomMin int, pZoomMax int) : int from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter pGeoPoints : ArrayList<GeoPoint> in method public possibleTilesCovered(pGeoPoints ArrayList<GeoPoint>, pZoomMin int, pZoomMax int) : int from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttask : DownloadingTask to task : CacheManagerTask in method public downloadAreaAsync(ctx Context, bb BoundingBox, zoomMin int, zoomMax int) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable task : CacheManagerTask in method public downloadAreaAsync(ctx Context, bb BoundingBox, zoomMin int, zoomMax int) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tDownloadingTask to CacheManagerTask in method public downloadAreaAsync(ctx Context, bb BoundingBox, zoomMin int, zoomMax int) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttask : DownloadingTask to task : CacheManagerTask in method public downloadAreaAsync(ctx Context, geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable task : CacheManagerTask in method public downloadAreaAsync(ctx Context, geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tDownloadingTask to CacheManagerTask in method public downloadAreaAsync(ctx Context, geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttask : DownloadingTask to task : CacheManagerTask in method public downloadAreaAsync(ctx Context, bb BoundingBox, zoomMin int, zoomMax int, callback CacheManagerCallback) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable task : CacheManagerTask in method public downloadAreaAsync(ctx Context, bb BoundingBox, zoomMin int, zoomMax int, callback CacheManagerCallback) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tDownloadingTask to CacheManagerTask in method public downloadAreaAsync(ctx Context, bb BoundingBox, zoomMin int, zoomMax int, callback CacheManagerCallback) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttask : DownloadingTask to task : CacheManagerTask in method public downloadAreaAsync(ctx Context, geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int, callback CacheManagerCallback) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable task : CacheManagerTask in method public downloadAreaAsync(ctx Context, geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int, callback CacheManagerCallback) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tDownloadingTask to CacheManagerTask in method public downloadAreaAsync(ctx Context, geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int, callback CacheManagerCallback) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttask : DownloadingTask to task : CacheManagerTask in method public downloadAreaAsyncNoUI(ctx Context, geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int, callback CacheManagerCallback) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable task : CacheManagerTask in method public downloadAreaAsyncNoUI(ctx Context, geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int, callback CacheManagerCallback) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tDownloadingTask to CacheManagerTask in method public downloadAreaAsyncNoUI(ctx Context, geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int, callback CacheManagerCallback) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttask : DownloadingTask to task : CacheManagerTask in method public downloadAreaAsyncNoUI(ctx Context, bb BoundingBox, zoomMin int, zoomMax int, callback CacheManagerCallback) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable task : CacheManagerTask in method public downloadAreaAsyncNoUI(ctx Context, bb BoundingBox, zoomMin int, zoomMax int, callback CacheManagerCallback) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tDownloadingTask to CacheManagerTask in method public downloadAreaAsyncNoUI(ctx Context, bb BoundingBox, zoomMin int, zoomMax int, callback CacheManagerCallback) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttask : CleaningTask to task : CacheManagerTask in method public cleanAreaAsync(ctx Context, bb BoundingBox, zoomMin int, zoomMax int) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable task : CacheManagerTask in method public cleanAreaAsync(ctx Context, bb BoundingBox, zoomMin int, zoomMax int) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tCleaningTask to CacheManagerTask in method public cleanAreaAsync(ctx Context, bb BoundingBox, zoomMin int, zoomMax int) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter ctx : Context in method public cleanAreaAsync(ctx Context, geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tCleaningTask to CacheManagerTask in method public cleanAreaAsync(ctx Context, geoPoints ArrayList<GeoPoint>, zoomMin int, zoomMax int) : CacheManagerTask from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tmMapView : MapView to mMaxZoomLevel : int in class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tmMapView : MapView to mMaxZoomLevel : int in class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tdownloadingTask : CacheManager.DownloadingTask to downloadingTask : CacheManager.CacheManagerTask in class org.osmdroid.samplefragments.cache.SampleCacheDownloaderCustomUI",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class\torg.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerDialog from class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tpackage to private in attribute private mProgressDialog : ProgressDialog from class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerDialog",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier\tfinal in attribute private mProgressDialog : ProgressDialog from class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerDialog",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tpackage mProgressDialog : ProgressDialog from class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask to private mProgressDialog : ProgressDialog from class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerDialog",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprotected zoomMessage(zoomLevel int, zoomMin int, zoomMax int) : String from class org.osmdroid.tileprovider.cachemanager.CacheManager to protected zoomMessage(zoomLevel int, zoomMin int, zoomMax int) : String from class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerDialog",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tdeleted : Integer in method protected onPostExecute(deleted Integer) : void from class org.osmdroid.tileprovider.cachemanager.CacheManager.CleaningTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation\t@Override in method protected onPostExecute(deleted Integer) : void from class org.osmdroid.tileprovider.cachemanager.CacheManager.CleaningTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprotected to private in method private dismiss() : void from class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerDialog",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method\tprotected onPostExecute(deleted Integer) : void from class org.osmdroid.tileprovider.cachemanager.CacheManager.CleaningTask to private dismiss() : void from class org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerDialog",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/osmdroid/osmdroid.git",
  "sha1" : "3542d1fc47b29dd90410e7fe34638a03c173a82b",
  "url" : "https://github.com/osmdroid/osmdroid/commit/3542d1fc47b29dd90410e7fe34638a03c173a82b",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic forceLoadTile(tileSource OnlineTileSourceBase, tile MapTile) : boolean extracted from public loadTile(tileSource OnlineTileSourceBase, tile MapTile) : boolean in class org.osmdroid.tileprovider.cachemanager.CacheManager",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getIndex(pX long, pY long, pZ long) : long extracted from public saveFile(pTileSourceInfo ITileSource, pTile MapTile, pStream InputStream) : boolean in class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Replacing getter with the direct access"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getIndex(pTile MapTile) : long extracted from public saveFile(pTileSourceInfo ITileSource, pTile MapTile, pStream InputStream) : boolean in class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Extract Method on top"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getIndex(pX long, pY long, pZ long) : long extracted from public exists(pTileSource String, pTile MapTile) : boolean in class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Replacing getter with the direct access"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getIndex(pTile MapTile) : long extracted from public exists(pTileSource String, pTile MapTile) : boolean in class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Extract Method on top"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getIndex(pX long, pY long, pZ long) : long extracted from public importFromFileCache(removeFromFileSystem boolean) : int[] in class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Replacing getter with the direct access"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getIndex(pX long, pY long, pZ long) : long extracted from public remove(pTileSourceInfo ITileSource, pTile MapTile) : boolean in class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Replacing getter with the direct access"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getIndex(pTile MapTile) : long extracted from public remove(pTileSourceInfo ITileSource, pTile MapTile) : boolean in class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Extract Method on top"
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tz : long to pZ : long in method public getIndex(pX long, pY long, pZ long) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tz : long to pZ : long in method public getIndex(pX long, pY long, pZ long) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tz : long to pZ : long in method public getIndex(pX long, pY long, pZ long) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tx : long to pX : long in method public getIndex(pX long, pY long, pZ long) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tx : long to pX : long in method public getIndex(pX long, pY long, pZ long) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tx : long to pX : long in method public getIndex(pX long, pY long, pZ long) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ty : long to pY : long in method public getIndex(pX long, pY long, pZ long) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ty : long to pY : long in method public getIndex(pX long, pY long, pZ long) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ty : long to pY : long in method public getIndex(pX long, pY long, pZ long) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Parameter",
    "description" : "Split Parameter\tpTile : MapTile to [pZ : long, pX : long, pY : long] in method public getIndex(pX long, pY long, pZ long) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Parameter",
    "description" : "Split Parameter\tpTile : MapTile to [pZ : long, pX : long, pY : long] in method public getIndex(pX long, pY long, pZ long) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Parameter",
    "description" : "Split Parameter\tpTile : MapTile to [pZ : long, pX : long, pY : long] in method public getIndex(pX long, pY long, pZ long) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tz1 : long to pZ : long in method public getIndex(pX long, pY long, pZ long) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/osmdroid/osmdroid.git",
  "sha1" : "cb41ea57f4f368108562f4c42bb91f1a63987eba",
  "url" : "https://github.com/osmdroid/osmdroid/commit/cb41ea57f4f368108562f4c42bb91f1a63987eba",
  "refactorings" : [ {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprivate to public in attribute public EXPIRED : int from class org.osmdroid.tileprovider.ExpirableBitmapDrawable",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getState(pTile Drawable) : int extracted from public isDrawableExpired(pTile Drawable) : boolean in class org.osmdroid.tileprovider.ExpirableBitmapDrawable",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The logic has been impurely changed"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic setState(pTile Drawable, status int) : void extracted from public setDrawableExpired(pTile Drawable) : void in class org.osmdroid.tileprovider.ExpirableBitmapDrawable",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the -ExpirableBitmapDrawable.EXPIRED- is the same as the EXPIRED. The value has been changed but it doesn't matter"
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\tstate : int[] in method public isDrawableExpired(pTile Drawable) : boolean from class org.osmdroid.tileprovider.ExpirableBitmapDrawable",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Deprecated in method public isDrawableExpired(pTile Drawable) : boolean from class org.osmdroid.tileprovider.ExpirableBitmapDrawable",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Deprecated in method public setDrawableExpired(pTile Drawable) : void from class org.osmdroid.tileprovider.ExpirableBitmapDrawable",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable bitmap : Bitmap in method public handleTile(pTileSizePx int, pTile MapTile, pX int, pY int) : void from class org.osmdroid.tileprovider.MapTileProviderBase.ZoomInTileLooper",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\ttile : MapTile in method protected putExpiredTileIntoCache(pState MapTileRequestState, pDrawable Drawable) : void from class org.osmdroid.tileprovider.MapTileProviderBase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Deprecated in method protected putExpiredTileIntoCache(pState MapTileRequestState, pDrawable Drawable) : void from class org.osmdroid.tileprovider.MapTileProviderBase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter pDrawable : Drawable in method protected putTileIntoCache(pTile MapTile, pDrawable Drawable, pState int) : void from class org.osmdroid.tileprovider.MapTileProviderBase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ttile : MapTile to pTile : MapTile in method protected putTileIntoCache(pTile MapTile, pDrawable Drawable, pState int) : void from class org.osmdroid.tileprovider.MapTileProviderBase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tpState : MapTileRequestState to pState : int in method protected putTileIntoCache(pTile MapTile, pDrawable Drawable, pState int) : void from class org.osmdroid.tileprovider.MapTileProviderBase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter pState : int in method protected putTileIntoCache(pTile MapTile, pDrawable Drawable, pState int) : void from class org.osmdroid.tileprovider.MapTileProviderBase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getTileCursor(pPrimaryKeyParameters String[], pColumns String[]) : Cursor extracted from public exists(pTileSource String, pTile MapTile) : boolean in class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The argument replacements are not justifiable - non-pure modifications"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getTileCursor(pPrimaryKeyParameters String[], pColumns String[]) : Cursor extracted from public getExpirationTimestamp(pTileSource ITileSource, pTile MapTile) : Long in class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The argument replacements are not justifiable - non-pure modifications"
    }
  }, {
    "type" : "Extract Attribute",
    "description" : "Extract Attribute\tprivate primaryKey : String in class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tstatic in method public getIndex(pX long, pY long, pZ long) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tstatic in method public getIndex(pTile MapTile) : long from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tlastModified : long to expirationTimestamp : long in method public loadTile(pState MapTileRequestState) : Drawable from class org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.TileLoader",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Deprecated in method public MapTileSqlCacheProvider(pRegisterReceiver IRegisterReceiver, pTileSource ITileSource, pMaximumCachedFileAge long) from class org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tprotected getBitmap(pTileSizePx int) : Bitmap extracted from public handleTile(pTileSizePx int, pTile MapTile, pX int, pY int) : void in class org.osmdroid.tileprovider.MapTileProviderBase.ZoomInTileLooper & moved to class org.osmdroid.tileprovider.MapTileProviderBase.ScaleTileLooper",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Addition of return expression, which is a part of Extract Method refactoring mechanics"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tprotected getBitmap(pTileSizePx int) : Bitmap extracted from protected handleTile(pTileSizePx int, pTile MapTile, pX int, pY int) : void in class org.osmdroid.tileprovider.MapTileProviderBase.ZoomOutTileLooper & moved to class org.osmdroid.tileprovider.MapTileProviderBase.ScaleTileLooper",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Addition of return expression, which is a part of Extract Method refactoring mechanics"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tprotected putScaledTileIntoCache(pTile MapTile, pBitmap Bitmap) : void extracted from public handleTile(pTileSizePx int, pTile MapTile, pX int, pY int) : void in class org.osmdroid.tileprovider.MapTileProviderBase.ZoomInTileLooper & moved to class org.osmdroid.tileprovider.MapTileProviderBase.ScaleTileLooper",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "non-mapped leaves which have been added to the extracted code are not justifiable - putTileIntoCache invocation"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tprotected putScaledTileIntoCache(pTile MapTile, pBitmap Bitmap) : void extracted from protected handleTile(pTileSizePx int, pTile MapTile, pX int, pY int) : void in class org.osmdroid.tileprovider.MapTileProviderBase.ZoomOutTileLooper & moved to class org.osmdroid.tileprovider.MapTileProviderBase.ScaleTileLooper",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "non-mapped leaves which have been added to the extracted code are not justifiable - putTileIntoCache invocation"
    }
  } ]
}, {
  "repository" : "https://github.com/osmdroid/osmdroid.git",
  "sha1" : "f78ca2784a75b64ce69eb5cc44048bb2be0b9ae7",
  "url" : "https://github.com/osmdroid/osmdroid/commit/f78ca2784a75b64ce69eb5cc44048bb2be0b9ae7",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getTileCursor(pPrimaryKeyParameters String[]) : Cursor extracted from public exists(pTileSource ITileSource, pTile MapTile) : boolean in class org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The argument replacements are not justifiable - non-pure modifications"
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate primaryKey : String from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute\ttile : String[] to expireQueryColumn : String[] in method public exists(pTileSource String, pTile MapTile) : boolean from class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tCantContinueException in method public loadTile(pState MapTileRequestState) : Drawable from class org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.TileLoader",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpackage to protected in method protected removeTileFromQueues(mapTile MapTile) : void from class org.osmdroid.tileprovider.modules.MapTileModuleProviderBase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\texpires : Long to expires : long in method public getItem(id int) : Object from class org.osmdroid.debug.browser.CacheAdapter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable expires : long in method public getItem(id int) : Object from class org.osmdroid.debug.browser.CacheAdapter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getFile(pTileSource ITileSource, pTile MapTile) : File extracted from public saveFile(pTileSource ITileSource, pTile MapTile, pStream InputStream) : boolean in class org.osmdroid.tileprovider.modules.TileWriter",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getFile(pTileSource ITileSource, pTile MapTile) : File extracted from public remove(pTileSource ITileSource, pTile MapTile) : boolean in class org.osmdroid.tileprovider.modules.TileWriter",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\te : LowMemoryException to e : BitmapTileSourceBase.LowMemoryException in method public loadTile(pState MapTileRequestState) : Drawable from class org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.TileLoader",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier\tfinal in attribute private mMaximumCachedFileAge : long from class org.osmdroid.tileprovider.modules.MapTileFilesystemProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tprivate mMaximumCachedFileAge : long from class org.osmdroid.tileprovider.modules.MapTileFilesystemProvider to private mMaximumCachedFileAge : long from class org.osmdroid.tileprovider.modules.TileWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier\tfinal in variable bitmap : Bitmap in method public getTileBitmap(pTileSizePx int) : Bitmap from class org.osmdroid.tileprovider.modules.MapTileApproximater",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprotected to public in method public getTileBitmap(pTileSizePx int) : Bitmap from class org.osmdroid.tileprovider.modules.MapTileApproximater",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tstatic in method public getTileBitmap(pTileSizePx int) : Bitmap from class org.osmdroid.tileprovider.modules.MapTileApproximater",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method\tprotected getBitmap(pTileSizePx int) : Bitmap from class org.osmdroid.tileprovider.MapTileProviderBase.ScaleTileLooper to public getTileBitmap(pTileSizePx int) : Bitmap from class org.osmdroid.tileprovider.modules.MapTileApproximater",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic loadTile(pTileSource ITileSource, pTile MapTile) : Drawable extracted from public loadTile(pState MapTileRequestState) : Drawable in class org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.TileLoader & moved to class org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Extract Method on top - caused Add Parameter refactoring"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic loadTile(pTileSource ITileSource, pTile MapTile) : Drawable extracted from public loadTile(pState MapTileRequestState) : Drawable in class org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.TileLoader & moved to class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "One if statement has been impurely added - within a finally block"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic loadTile(pTileSource ITileSource, pTile MapTile) : Drawable extracted from public loadTile(pState MapTileRequestState) : Drawable in class org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.TileLoader & moved to class org.osmdroid.tileprovider.modules.SqlTileWriter",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "One if statement has been impurely added - within a finally block"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setMaximumCachedFileAge(mMaximumCachedFileAge long) : void extracted from public MapTileFilesystemProvider(pRegisterReceiver IRegisterReceiver, pTileSource ITileSource, pMaximumCachedFileAge long, pThreadPoolSize int, pPendingQueueSize int) in class org.osmdroid.tileprovider.modules.MapTileFilesystemProvider & moved to class org.osmdroid.tileprovider.modules.TileWriter",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Parameter-argument map"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic loadTile(pTileSource ITileSource, pTile MapTile) : Drawable extracted from public loadTile(pState MapTileRequestState) : Drawable in class org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.TileLoader & moved to class org.osmdroid.tileprovider.modules.TileWriter",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "non-mapped leaves which have been added to the extracted code are not justifiable"
    }
  } ]
}, {
  "repository" : "https://github.com/unclebob/fitnesse.git",
  "sha1" : "dd99220da7866f94ecce40fe161970dbfd67a8bb",
  "url" : "https://github.com/unclebob/fitnesse/commit/dd99220da7866f94ecce40fe161970dbfd67a8bb",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.PageFactory moved to fitnesse.html.template.PageFactory",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.templateUtilities.VelocityLogger moved to fitnesse.html.template.VelocityLogger",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.templateUtilities.TraverseDirectiveTest moved to fitnesse.html.template.TraverseDirectiveTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.templateUtilities.TraverseDirective moved to fitnesse.html.template.TraverseDirective",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.templateUtilities.PageTitle moved to fitnesse.html.template.PageTitle",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.templateUtilities.HtmlPageTest moved to fitnesse.html.template.HtmlPageTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.templateUtilities.EscapeDirective moved to fitnesse.html.template.EscapeDirective",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.templateUtilities.PageTitleTest moved to fitnesse.html.template.PageTitleTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.templateUtilities.ClasspathResourceLoader moved to fitnesse.html.template.ClasspathResourceLoader",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.templateUtilities.HtmlPage moved to fitnesse.html.template.HtmlPage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tpage : HtmlPage in method public addTitles(page HtmlPage, title String) : void from class fitnesse.html.HtmlUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier\tstatic in method public addTitles(page HtmlPage, title String) : void from class fitnesse.html.HtmlUtil",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic addTitles(page HtmlPage, title String) : void from class fitnesse.html.HtmlUtil to public addTitles(title String) : void from class fitnesse.html.template.HtmlPage",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/unclebob/fitnesse.git",
  "sha1" : "6c2c95d2d503609ad26c8865009a0fe519ae9e3c",
  "url" : "https://github.com/unclebob/fitnesse/commit/6c2c95d2d503609ad26c8865009a0fe519ae9e3c",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method\tpackage addXmlFormatter() : void renamed to package newXmlFormatter() : BaseFormatter in class fitnesse.responders.run.SuiteResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpackage addHtmlFormatter() : void renamed to package newHtmlFormatter() : BaseFormatter in class fitnesse.responders.run.SuiteResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprotected addTestHistoryFormatter() : void renamed to protected newTestHistoryFormatter() : BaseFormatter in class fitnesse.responders.run.SuiteResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to BaseFormatter in method package newXmlFormatter() : BaseFormatter from class fitnesse.responders.run.SuiteResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to BaseFormatter in method package newHtmlFormatter() : BaseFormatter from class fitnesse.responders.run.SuiteResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to BaseFormatter in method protected newTestHistoryFormatter() : BaseFormatter from class fitnesse.responders.run.SuiteResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpackage addXmlFormatter() : void renamed to package newXmlFormatter() : BaseFormatter in class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprotected addTestInProgressFormatter() : void renamed to protected newTestInProgressFormatter() : BaseFormatter in class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private data : PageData from class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private formatters : CompositeFormatter from class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method\tpackage addHtmlFormatter() : void inlined to protected createFormatters() : void in class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage newTextFormatter() : BaseFormatter extracted from protected createFormatters() : void in class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argument replaced with return expression, which is a part of Extract Method refactoring mechanics"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage newJavaFormatter() : BaseFormatter extracted from protected createFormatters() : void in class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argument replaced with return expression, which is a part of Extract Method refactoring mechanics"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage newHtmlFormatter() : BaseFormatter extracted from protected createFormatters() : void in class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Argument replaced with return expression, which is a part of Extract Method refactoring mechanics"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprotected newMultipleTestsRunner(pages List<WikiPage>) : MultipleTestsRunner extracted from protected performExecution() : void in class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Boolean field getter method has been replaced with direct access, which is a pure modification"
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\ttest2run : List<WikiPage> to pages : List<WikiPage> in method protected newMultipleTestsRunner(pages List<WikiPage>) : MultipleTestsRunner from class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to BaseFormatter in method package newXmlFormatter() : BaseFormatter from class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to BaseFormatter in method protected newTestInProgressFormatter() : BaseFormatter from class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute\tformatter : BaseFormatter to mainFormatter : BaseFormatter in method protected createFormatters() : void from class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tprotected newMultipleTestsRunner(pages List<WikiPage>) : MultipleTestsRunner extracted from protected performExecution() : void in class fitnesse.responders.run.SuiteResponder & moved to class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Replacing getter with the direct access"
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method\tpackage isRemoteDebug() : boolean inlined to protected performExecution() : void in class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprotected addTestHistoryFormatter() : void renamed to protected newTestHistoryFormatter() : BaseFormatter in class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to BaseFormatter in method protected newTestHistoryFormatter() : BaseFormatter from class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/unclebob/fitnesse.git",
  "sha1" : "eb96034c43c82d994441a794b16fb50c90821291",
  "url" : "https://github.com/unclebob/fitnesse/commit/eb96034c43c82d994441a794b16fb50c90821291",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method\tprivate errorOccurred(cause Throwable) : void inlined to public testSystemStopped(testSystem TestSystem, executionLog ExecutionLog, cause Throwable) : void in class fitnesse.testrunner.MultipleTestsRunner",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tIOException in method public stop() : void from class fitnesse.testrunner.MultipleTestsRunner",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation\t@Deprecated in attribute public finalErrorCount : int from class fitnesse.reporting.BaseFormatter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation\t@Override in method public errorOccurred(cause Throwable) : void from class fitnesse.reporting.BaseFormatter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/unclebob/fitnesse.git",
  "sha1" : "50441e1856dc78d73835cd6f23b0d9f087cde968",
  "url" : "https://github.com/unclebob/fitnesse/commit/50441e1856dc78d73835cd6f23b0d9f087cde968",
  "refactorings" : [ {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tresultsListener : ResultsListener to resultsListener : CompositeFormatter in class fitnesse.testrunner.MultipleTestsRunner",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tresultsListener : ResultsListener to resultsListener : CompositeFormatter in method public MultipleTestsRunner(testPagesToRun List<WikiPage>, fitNesseContext FitNesseContext, page WikiPage, resultsListener CompositeFormatter) from class fitnesse.testrunner.MultipleTestsRunner",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tBaseFormatter to TestSystemListener in method protected newTestHistoryFormatter() : TestSystemListener from class fitnesse.responders.run.SuiteResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tresultsListener : ResultsListener to listener : TestSystemListener in method public startingNewTestShouldStartTimeMeasurementAndNotifyListener() : void from class fitnesse.testrunner.MultipleTestsRunnerTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tresultsListener : ResultsListener to listener : TestSystemListener in method public startingNewTestShouldStartTimeMeasurementAndNotifyListener() : void from class fitnesse.testrunner.MultipleTestsRunnerTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tresultsListener : ResultsListener to listener : TestSystemListener in method public testCompleteShouldRemoveHeadOfQueueAndNotifyListener() : void from class fitnesse.testrunner.MultipleTestsRunnerTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tresultsListener : ResultsListener to listener : TestSystemListener in method public testCompleteShouldRemoveHeadOfQueueAndNotifyListener() : void from class fitnesse.testrunner.MultipleTestsRunnerTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate listeners : List<TestSystemListener> from class fitnesse.testsystems.CompositeTestSystemListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier\tfinal in attribute private listeners : List<TestSystemListener> from class fitnesse.testsystems.CompositeTestSystemListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tfinal in method public addTestSystemListener(listener TestSystemListener) : void from class fitnesse.testsystems.CompositeTestSystemListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tBaseFormatter to TestSystemListener in method protected newTestHistoryFormatter() : TestSystemListener from class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tBaseFormatter to TestSystemListener in method protected newTestInProgressFormatter() : TestSystemListener from class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface\tfitnesse.testrunner.TestsRunnerListener from classes [fitnesse.reporting.CompositeFormatter, fitnesse.testrunner.ResultsListener]",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method\tpublic getErrorCount() : int from class fitnesse.reporting.TestHtmlFormatter to public getErrorCount() : int from class fitnesse.reporting.InteractiveFormatter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method\tpublic setExecutionLogAndTrackingId(stopResponderId String, log CompositeExecutionLog) : void from class fitnesse.testrunner.ResultsListener to public setExecutionLogAndTrackingId(stopResponderId String, log CompositeExecutionLog) : void from class fitnesse.testrunner.TestsRunnerListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method\tpublic announceNumberTestsToRun(testsToRun int) : void from class fitnesse.testrunner.ResultsListener to public announceNumberTestsToRun(testsToRun int) : void from class fitnesse.testrunner.TestsRunnerListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/unclebob/fitnesse.git",
  "sha1" : "74369e6ddd0c2a92bba4efded434f6962854c41c",
  "url" : "https://github.com/unclebob/fitnesse/commit/74369e6ddd0c2a92bba4efded434f6962854c41c",
  "refactorings" : [ {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tpage : WikiPage in method public MultipleTestsRunner(testPagesToRun List<WikiPage>, fitNesseContext FitNesseContext, page WikiPage, resultsListener CompositeFormatter) from class fitnesse.testrunner.MultipleTestsRunner",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tresultsListener : CompositeFormatter in method public MultipleTestsRunner(testPagesToRun List<WikiPage>, fitNesseContext FitNesseContext, page WikiPage, resultsListener CompositeFormatter) from class fitnesse.testrunner.MultipleTestsRunner",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Method",
    "description" : "Split Method\tprotected createFormatters() : void to [private createMainFormatter() : void, protected addFormatters(runner MultipleTestsRunner) : void] in class fitnesse.responders.run.TestResponder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tprivate formatters : CompositeFormatter from class fitnesse.responders.run.TestResponder to private formatters : CompositeFormatter from class fitnesse.testrunner.MultipleTestsRunner",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier\tfinal in attribute private formatters : CompositeFormatter from class fitnesse.testrunner.MultipleTestsRunner",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/unclebob/fitnesse.git",
  "sha1" : "ca296ad353bbd2728a7acfb2c300e333e5194866",
  "url" : "https://github.com/unclebob/fitnesse/commit/ca296ad353bbd2728a7acfb2c300e333e5194866",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.run.RunningTestingTrackerTest moved to fitnesse.testrunner.RunningTestingTrackerTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.run.SuiteContentsFinder moved to fitnesse.testrunner.SuiteContentsFinder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.run.SuiteSpecificationRunner moved to fitnesse.testrunner.SuiteSpecificationRunner",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.run.RunningTestingTracker moved to fitnesse.testrunner.RunningTestingTracker",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.run.SuiteContentsFinderTest moved to fitnesse.testrunner.SuiteContentsFinderTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.run.SuiteSpecificationRunnerTest moved to fitnesse.testrunner.SuiteSpecificationRunnerTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\tfitnesse.responders.run.SuiteFilter moved to fitnesse.testrunner.SuiteFilter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class\tfitnesse.responders.run.SuiteFilterTestCase moved and renamed to fitnesse.testrunner.SuiteFilterTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpackage to public in method public SuiteFilter(orTags String, mustNotMatchTags String, andTags String, startWithTest String) from class fitnesse.testrunner.SuiteFilter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate getOrTagFilter(request Request) : String from class fitnesse.responders.run.SuiteFilter to private getOrTagFilter(request Request) : String from class fitnesse.responders.run.SuiteResponder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate getOrFilterString(request Request) : String from class fitnesse.responders.run.SuiteFilter to private getOrFilterString(request Request) : String from class fitnesse.responders.run.SuiteResponder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate getNotSuiteFilter(request Request) : String from class fitnesse.responders.run.SuiteFilter to private getNotSuiteFilter(request Request) : String from class fitnesse.responders.run.SuiteResponder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate getAndTagFilters(request Request) : String from class fitnesse.responders.run.SuiteFilter to private getAndTagFilters(request Request) : String from class fitnesse.responders.run.SuiteResponder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate getSuiteFirstTest(request Request, suiteName String) : String from class fitnesse.responders.run.SuiteFilter to private getSuiteFirstTest(request Request, suiteName String) : String from class fitnesse.responders.run.SuiteResponder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/samtools/htsjdk.git",
  "sha1" : "210045f0d60c66e0ee88e4d0dac2bb653ecbe675",
  "url" : "https://github.com/samtools/htsjdk/commit/210045f0d60c66e0ee88e4d0dac2bb653ecbe675",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class\thtsjdk.samtools.cram.build.CompressionHeaderFactory.BitCode moved to htsjdk.samtools.cram.encoding.huffman.codec.HuffmanParamsCalculator.BitCode",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class\thtsjdk.samtools.cram.build.CompressionHeaderFactory.HuffmanParamsCalculator moved to htsjdk.samtools.cram.encoding.huffman.codec.HuffmanParamsCalculator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tcal : CompressionHeaderFactory.HuffmanParamsCalculator to cal : HuffmanParamsCalculator in method public testHuffmanIntHelper() : void from class htsjdk.samtools.cram.encoding.huffman.codec.HuffmanTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tcal : CompressionHeaderFactory.HuffmanParamsCalculator to cal : HuffmanParamsCalculator in method public testHuffmanByteHelper() : void from class htsjdk.samtools.cram.encoding.huffman.codec.HuffmanTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter validationStringency : ValidationStringency in method public getRecords(container Container, records ArrayList<CramCompressionRecord>, validationStringency ValidationStringency) : List<CramCompressionRecord> from class htsjdk.samtools.cram.build.ContainerParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter validationStringency : ValidationStringency in method package getRecords(records ArrayList<CramCompressionRecord>, slice Slice, header CompressionHeader, validationStringency ValidationStringency) : ArrayList<CramCompressionRecord> from class htsjdk.samtools.cram.build.ContainerParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter validationStringency : ValidationStringency in method package getRecords(slice Slice, header CompressionHeader, validationStringency ValidationStringency) : List<CramCompressionRecord> from class htsjdk.samtools.cram.build.ContainerParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to protected in method protected shouldFlushContainer(nextRecord SAMRecord) : boolean from class htsjdk.samtools.CRAMContainerStreamWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to protected in method protected flushContainer() : void from class htsjdk.samtools.CRAMContainerStreamWriter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\te : Exception to e : IOException in method public hasNext() : boolean from class htsjdk.samtools.CRAMIterator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier\tfinal in variable e : Exception in method public hasNext() : boolean from class htsjdk.samtools.CRAMIterator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to boolean in method public jumpWithinContainerToPos(refIndex int, pos int) : boolean from class htsjdk.samtools.CRAMIterator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to package in method package nextContainer() : void from class htsjdk.samtools.CRAMIterator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate buildEncodingForTag(records List<CramCompressionRecord>, tagID int) : EncodingDetails extracted from public build(records List<CramCompressionRecord>, substitutionMatrix SubstitutionMatrix, sorted boolean) : CompressionHeader in class htsjdk.samtools.cram.build.CompressionHeaderFactory",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Logic has been impurely changed"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage getTagType(tagID int) : byte extracted from public build(records List<CramCompressionRecord>, substitutionMatrix SubstitutionMatrix, sorted boolean) : CompressionHeader in class htsjdk.samtools.cram.build.CompressionHeaderFactory",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage getDataForTag(records List<CramCompressionRecord>, tagID int) : byte[] extracted from public build(records List<CramCompressionRecord>, substitutionMatrix SubstitutionMatrix, sorted boolean) : CompressionHeader in class htsjdk.samtools.cram.build.CompressionHeaderFactory",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Logic has been impurely changed"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage geByteSizeRangeOfTagValues(records List<CramCompressionRecord>, tagID int) : ByteSizeRange extracted from public build(records List<CramCompressionRecord>, substitutionMatrix SubstitutionMatrix, sorted boolean) : CompressionHeader in class htsjdk.samtools.cram.build.CompressionHeaderFactory",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Logic has been impurely changed"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate buildTagEncodings(records List<CramCompressionRecord>, builder CompressionHeaderBuilder) : void extracted from public build(records List<CramCompressionRecord>, substitutionMatrix SubstitutionMatrix, sorted boolean) : CompressionHeader in class htsjdk.samtools.cram.build.CompressionHeaderFactory",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The if statement expression has been impurely changed - logic has been impurely changed"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage updateSubstitutionCodes(records List<CramCompressionRecord>, substitutionMatrix SubstitutionMatrix) : void extracted from public build(records List<CramCompressionRecord>, substitutionMatrix SubstitutionMatrix, sorted boolean) : CompressionHeader in class htsjdk.samtools.cram.build.CompressionHeaderFactory",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Number literal has been replaced with an attribute (Extract Attribute is available) - The other replacement seems a pure change"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage buildFrequencies(records List<CramCompressionRecord>) : long[][] extracted from public build(records List<CramCompressionRecord>, substitutionMatrix SubstitutionMatrix, sorted boolean) : CompressionHeader in class htsjdk.samtools.cram.build.CompressionHeaderFactory",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Number literal has been replaced with an attribute"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate buildTagIdDictionary(records List<CramCompressionRecord>) : byte[][][] extracted from public build(records List<CramCompressionRecord>, substitutionMatrix SubstitutionMatrix, sorted boolean) : CompressionHeader in class htsjdk.samtools.cram.build.CompressionHeaderFactory",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\tstats : ByteSizeRange in method private buildEncodingForTag(records List<CramCompressionRecord>, tagID int) : EncodingDetails from class htsjdk.samtools.cram.build.CompressionHeaderFactory",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tid : int to tagID : int in method package getTagType(tagID int) : byte from class htsjdk.samtools.cram.build.CompressionHeaderFactory",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tdic : byte[][][] to dictionary : byte[][][] in method private buildTagIdDictionary(records List<CramCompressionRecord>) : byte[][][] from class htsjdk.samtools.cram.build.CompressionHeaderFactory",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier\tfinal in parameter substitutionMatrix : SubstitutionMatrix in method public build(records List<CramCompressionRecord>, substitutionMatrix SubstitutionMatrix, sorted boolean) : CompressionHeader from class htsjdk.samtools.cram.build.CompressionHeaderFactory",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic processAlignment(slice Slice) : void renamed to private processSingleReferenceSlice(slice Slice) : void in class htsjdk.samtools.CRAMIndexer.BAMIndexBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tpublic to private in method private processSingleReferenceSlice(slice Slice) : void from class htsjdk.samtools.CRAMIndexer.BAMIndexBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic processAlignment(slice Slice) : void renamed to public processSingleReferenceSlice(slice Slice) : void in class htsjdk.samtools.CRAMIndexer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tvalidationStringency : ValidationStringency in method public createIndex(stream SeekableStream, output File, log Log, validationStringency ValidationStringency) : void from class htsjdk.samtools.CRAMIndexer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation\t@SuppressWarnings(\"unchecked\") in class htsjdk.samtools.cram.encoding.reader.DataReaderFactory",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tIllegalAccessException in method public buildReader(reader AbstractReader, bitInputStream BitInputStream, inputMap Map<Integer,InputStream>, header CompressionHeader, refId int) : AbstractReader from class htsjdk.samtools.cram.encoding.reader.DataReaderFactory",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Attribute",
    "description" : "Extract Attribute\tpublic NO_CODE : int in class htsjdk.samtools.cram.encoding.readfeatures.Substitution",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic scanAllMappedReads() : void renamed to public scanMappedReads() : void in class htsjdk.samtools.CRAMFileIndexTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tIllegalAccessException in method public testIteratorFromFileSpan_SecondContainer() : void from class htsjdk.samtools.CRAMFileIndexTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier\tpublic to package in class htsjdk.samtools.cram.encoding.huffman.codec.HuffmanParamsCalculator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier\tstatic in class htsjdk.samtools.cram.build.CompressionHeaderFactory.HuffmanParamsCalculator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate autobox(array int[]) : Integer[] from class htsjdk.samtools.cram.build.CompressionHeaderFactory to private autobox(array int[]) : Integer[] from class htsjdk.samtools.cram.encoding.huffman.codec.HuffmanParamsCalculator",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/jenkinsci/git-client-plugin.git",
  "sha1" : "6d261108e7471db380146f945bb228b5fc8c44cc",
  "url" : "https://github.com/jenkinsci/git-client-plugin/commit/6d261108e7471db380146f945bb228b5fc8c44cc",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate getAllBranchRefs() : List<Ref> renamed to public getBranchesContaining(revspec String, allBranches boolean) : List<Branch> in class org.jenkinsci.plugins.gitclient.JGitAPIImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getAllBranchRefs(originBranches boolean) : List<Ref> extracted from private getAllBranchRefs() : List<Ref> in class org.jenkinsci.plugins.gitclient.JGitAPIImpl",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The if condition expression has been impurely changed"
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\tbranchName : String in method private getAllBranchRefs(originBranches boolean) : List<Ref> from class org.jenkinsci.plugins.gitclient.JGitAPIImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tList<Ref> to List<Branch> in method public getBranchesContaining(revspec String, allBranches boolean) : List<Branch> from class org.jenkinsci.plugins.gitclient.JGitAPIImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\trevspec : String in method public getBranchesContaining(revspec String, allBranches boolean) : List<Branch> from class org.jenkinsci.plugins.gitclient.JGitAPIImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tallBranches : boolean in method public getBranchesContaining(revspec String, allBranches boolean) : List<Branch> from class org.jenkinsci.plugins.gitclient.JGitAPIImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tGitException in method public getBranchesContaining(revspec String, allBranches boolean) : List<Branch> from class org.jenkinsci.plugins.gitclient.JGitAPIImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tInterruptedException in method public getBranchesContaining(revspec String, allBranches boolean) : List<Branch> from class org.jenkinsci.plugins.gitclient.JGitAPIImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to public in method public getBranchesContaining(revspec String, allBranches boolean) : List<Branch> from class org.jenkinsci.plugins.gitclient.JGitAPIImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic getBranchesContaining(revspec String, allBranches boolean) : List<Branch> extracted from public getBranchesContaining(revspec String) : List<Branch> in class org.jenkinsci.plugins.gitclient.JGitAPIImpl & moved to class org.jenkinsci.plugins.gitclient.CliGitAPIImpl",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "non-mapped leaves which have been added to the extracted code are not justifiable"
    }
  } ]
}, {
  "repository" : "https://github.com/linkedin/pygradle.git",
  "sha1" : "e1ad18b5ddb9bd49ac4823e41b5d4ebb8c800caf",
  "url" : "https://github.com/linkedin/pygradle/commit/e1ad18b5ddb9bd49ac4823e41b5d4ebb8c800caf",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate fromFile(file File) : Optional<PythonWheelDetails> extracted from public findWheel(library String, version String, pythonVersion PythonVersion) : Optional<File> in class com.linkedin.gradle.python.wheel.WheelCache",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Logic has been impurely changed"
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tcollect : List<File> to matcher : Matcher in method private fromFile(file File) : Optional<PythonWheelDetails> from class com.linkedin.gradle.python.wheel.WheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tcollect : List<File> to matcher : Matcher in method private fromFile(file File) : Optional<PythonWheelDetails> from class com.linkedin.gradle.python.wheel.WheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tcollect : List<File> to foundWheel : Optional<PythonWheelDetails> in method public findWheel(library String, version String, pythonVersion PythonVersion) : Optional<File> from class com.linkedin.gradle.python.wheel.WheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tplatformTagList : List<String> to platformTagList : Set<String> in method public findWheel(library String, version String, pythonVersion PythonVersion) : Optional<File> from class com.linkedin.gradle.python.wheel.WheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tcollect : List<File> to foundWheel : Optional<PythonWheelDetails> in method public findWheel(library String, version String, pythonVersion PythonVersion) : Optional<File> from class com.linkedin.gradle.python.wheel.WheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/linkedin/pygradle.git",
  "sha1" : "fb90ea0e69a12e210737aef912b7e894afe52178",
  "url" : "https://github.com/linkedin/pygradle/commit/fb90ea0e69a12e210737aef912b7e894afe52178",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class\tcom.linkedin.gradle.python.wheel.WheelCache.PythonWheelDetails moved to com.linkedin.gradle.python.wheel.CachedBackedWheelCache.PythonWheelDetails",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Type Declaration Kind",
    "description" : "Change Type Declaration Kind\tclass to interface in type com.linkedin.gradle.python.wheel.WheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\twheelCache : CachedBackedWheelCache in method public apply(project Project) : void from class com.linkedin.gradle.python.plugin.WheelFirstPlugin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\twheelCache : WheelCache in method private makeWheelFromSdist(progressLogger ProgressLogger, totalSize int, wheelCache WheelCache, input File) : void from class com.linkedin.gradle.python.tasks.ParallelWheelGenerationTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute\tprivate logger : Logger from class com.linkedin.gradle.python.wheel.WheelCache to private logger : Logger from class com.linkedin.gradle.python.wheel.CachedBackedWheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute\tprivate WHEEL_FILE_FORMAT : String from class com.linkedin.gradle.python.wheel.WheelCache to private WHEEL_FILE_FORMAT : String from class com.linkedin.gradle.python.wheel.CachedBackedWheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute\tprivate cacheDir : File from class com.linkedin.gradle.python.wheel.WheelCache to private cacheDir : File from class com.linkedin.gradle.python.wheel.CachedBackedWheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute\tprivate wheelPattern : Pattern from class com.linkedin.gradle.python.wheel.WheelCache to private wheelPattern : Pattern from class com.linkedin.gradle.python.wheel.CachedBackedWheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tsupportedWheelFormats : SupportedWheelFormats in method public CachedBackedWheelCache(cacheDir File, supportedWheelFormats SupportedWheelFormats) from class com.linkedin.gradle.python.wheel.CachedBackedWheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tpythonTag : PythonTag in method public WheelCache(cacheDir File, pythonTag PythonTag, platformTag PlatformTag) from class com.linkedin.gradle.python.wheel.WheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tplatformTag : PlatformTag in method public WheelCache(cacheDir File, pythonTag PythonTag, platformTag PlatformTag) from class com.linkedin.gradle.python.wheel.WheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method\tpublic WheelCache(cacheDir File, pythonTag PythonTag, platformTag PlatformTag) from class com.linkedin.gradle.python.wheel.WheelCache to public CachedBackedWheelCache(cacheDir File, supportedWheelFormats SupportedWheelFormats) from class com.linkedin.gradle.python.wheel.CachedBackedWheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tpythonVersion : PythonVersion to pythonDetails : PythonDetails in method public findWheel(library String, version String, pythonDetails PythonDetails) : Optional<File> from class com.linkedin.gradle.python.wheel.CachedBackedWheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tpythonVersion : PythonVersion to pythonDetails : PythonDetails in method public findWheel(library String, version String, pythonDetails PythonDetails) : Optional<File> from class com.linkedin.gradle.python.wheel.CachedBackedWheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Override in method public findWheel(library String, version String, pythonDetails PythonDetails) : Optional<File> from class com.linkedin.gradle.python.wheel.CachedBackedWheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method\tpublic findWheel(library String, version String, pythonVersion PythonVersion) : Optional<File> from class com.linkedin.gradle.python.wheel.WheelCache to public findWheel(library String, version String, pythonDetails PythonDetails) : Optional<File> from class com.linkedin.gradle.python.wheel.CachedBackedWheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method\tpublic getCacheDir() : File from class com.linkedin.gradle.python.wheel.WheelCache to public getCacheDir() : File from class com.linkedin.gradle.python.wheel.CachedBackedWheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method\tprivate fromFile(file File) : Optional<PythonWheelDetails> from class com.linkedin.gradle.python.wheel.WheelCache to private fromFile(file File) : Optional<PythonWheelDetails> from class com.linkedin.gradle.python.wheel.CachedBackedWheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/linkedin/pygradle.git",
  "sha1" : "9ca545449adf45694a650e22cbfd70732e66f73c",
  "url" : "https://github.com/linkedin/pygradle/commit/9ca545449adf45694a650e22cbfd70732e66f73c",
  "refactorings" : [ {
    "type" : "Rename Class",
    "description" : "Rename Class\tcom.linkedin.gradle.python.wheel.AbiTriple renamed to com.linkedin.gradle.python.wheel.AbiDetails",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tsupportedAbis : List<AbiTriple> to supportedAbis : List<AbiDetails> in class com.linkedin.gradle.python.wheel.SupportedWheelFormats",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\ttriple : AbiTriple to triple : AbiDetails in method public addSupportedAbi(triple AbiDetails) : void from class com.linkedin.gradle.python.wheel.SupportedWheelFormats",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\ttriple : AbiTriple to triple : AbiDetails in method private contains(triple AbiDetails, pythonTags String[], abiTags String[], platformTags String[]) : boolean from class com.linkedin.gradle.python.wheel.SupportedWheelFormats",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic findWheel(library String, version String, pythonExecutable File) : Optional<File> extracted from public findWheel(library String, version String, pythonDetails PythonDetails) : Optional<File> in class com.linkedin.gradle.python.wheel.CachedBackedWheelCache",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the logger.debug has been changed to logger.info, which is a pure modification"
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\tpythonExecutable : File in method public findWheel(library String, version String, pythonDetails PythonDetails) : Optional<File> from class com.linkedin.gradle.python.wheel.CachedBackedWheelCache",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\ttriple : AbiTriple to triple : AbiDetails in method public writeWheelAbiFile() : void from class com.linkedin.gradle.python.tasks.FindAbiForCurrentPythonTask",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/antlr/intellij-plugin-v4.git",
  "sha1" : "5e3f0034618d73f7873da654fde245e9a5365967",
  "url" : "https://github.com/antlr/intellij-plugin-v4/commit/5e3f0034618d73f7873da654fde245e9a5365967",
  "refactorings" : [ {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tplaceHolder : JLabel to placeHolder : JTextArea in class org.antlr.intellij.plugin.preview.PreviewPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tJPanel to InputPanel in method public createEditorPanel() : InputPanel from class org.antlr.intellij.plugin.preview.PreviewPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class\torg.antlr.intellij.plugin.preview.InputPanel from class org.antlr.intellij.plugin.preview.PreviewPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic setStartRuleName(grammarFile VirtualFile, startRuleName String) : void from class org.antlr.intellij.plugin.preview.PreviewPanel to public setStartRuleName(grammarFile VirtualFile, startRuleName String) : void from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic resetStartRuleLabel() : void from class org.antlr.intellij.plugin.preview.PreviewPanel to public resetStartRuleLabel() : void from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic displayErrorInParseErrorConsole(e SyntaxError) : void from class org.antlr.intellij.plugin.preview.PreviewPanel to public displayErrorInParseErrorConsole(e SyntaxError) : void from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Move and Rename Attribute on top"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic getErrorDisplayString(e SyntaxError) : String from class org.antlr.intellij.plugin.preview.PreviewPanel to public getErrorDisplayString(e SyntaxError) : String from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tstatic in method public getErrorDisplayString(e SyntaxError) : String from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tpublic startRuleLabel : JLabel from class org.antlr.intellij.plugin.preview.PreviewPanel to private startRuleLabel : JLabel from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tpublic to private in attribute private startRuleLabel : JLabel from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tpublic missingStartRuleLabelText : String from class org.antlr.intellij.plugin.preview.PreviewPanel to public missingStartRuleLabelText : String from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tpublic startRuleLabelText : String from class org.antlr.intellij.plugin.preview.PreviewPanel to public startRuleLabelText : String from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/antlr/intellij-plugin-v4.git",
  "sha1" : "84a1ffd45fd92fe1498300af78ccac54f8ab00b0",
  "url" : "https://github.com/antlr/intellij-plugin-v4/commit/84a1ffd45fd92fe1498300af78ccac54f8ab00b0",
  "refactorings" : [ {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tpublic to private in attribute private editor : Editor from class org.antlr.intellij.plugin.preview.PreviewState",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate editor : Editor from class org.antlr.intellij.plugin.preview.PreviewState",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic createEditorPanel() : InputPanel renamed to public getEditorPanel() : InputPanel in class org.antlr.intellij.plugin.preview.PreviewPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tpublic TOKEN_INFO_LAYER : int from class org.antlr.intellij.plugin.preview.PreviewPanel to public TOKEN_INFO_LAYER : int from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tpublic ERROR_LAYER : int from class org.antlr.intellij.plugin.preview.PreviewPanel to public ERROR_LAYER : int from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tpublic swapEditorComponentLock : Object from class org.antlr.intellij.plugin.preview.PreviewPanel to public swapEditorComponentLock : Object from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tpackage editorMouseMoveListener : EditorMouseMotionAdapter from class org.antlr.intellij.plugin.preview.PreviewPanel to package editorMouseMoveListener : EditorMouseMotionAdapter from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tpackage editorMouseListener : EditorMouseAdapter from class org.antlr.intellij.plugin.preview.PreviewPanel to package editorMouseListener : EditorMouseAdapter from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic showTokenInfoUponMeta(editor Editor, previewState PreviewState, offset int) : void from class org.antlr.intellij.plugin.preview.PreviewEditorMouseListener to public showTokenInfoUponMeta(editor Editor, previewState PreviewState, offset int) : void from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Move Method on top"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic showTooltipsForErrors(editor Editor, previewState PreviewState, offset int) : void from class org.antlr.intellij.plugin.preview.PreviewEditorMouseListener to public showTooltipsForErrors(editor Editor, previewState PreviewState, offset int) : void from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Remove Variable on top"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic createEditor(grammarFile VirtualFile, inputText String) : Editor from class org.antlr.intellij.plugin.preview.PreviewPanel to public createEditor(grammarFile VirtualFile, inputText String) : Editor from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic clearParseErrors(grammarFile VirtualFile) : void from class org.antlr.intellij.plugin.preview.PreviewPanel to public clearParseErrors(grammarFile VirtualFile) : void from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic showParseErrors(grammarFile VirtualFile, errors List<SyntaxError>) : void from class org.antlr.intellij.plugin.preview.PreviewPanel to public showParseErrors(grammarFile VirtualFile, errors List<SyntaxError>) : void from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic annotateErrorsInPreviewInputEditor(grammarFile VirtualFile, e SyntaxError) : void from class org.antlr.intellij.plugin.preview.PreviewPanel to public annotateErrorsInPreviewInputEditor(grammarFile VirtualFile, e SyntaxError) : void from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic removeTokenInfoHighlighters(editor Editor) : MarkupModel from class org.antlr.intellij.plugin.preview.PreviewPanel to public removeTokenInfoHighlighters(editor Editor) : MarkupModel from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic getMouseOffset(mouseEvent MouseEvent, editor Editor) : int extracted from public mouseMoved(e EditorMouseEvent) : void in class org.antlr.intellij.plugin.preview.PreviewEditorMouseListener & moved to class org.antlr.intellij.plugin.actions.MyActionUtils",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic switchToGrammar(grammarFile VirtualFile) : void extracted from public switchToGrammar(grammarFile VirtualFile) : void in class org.antlr.intellij.plugin.preview.PreviewPanel & moved to class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "non-mapped leaves and nodes which have been added to the extracted code are not justifiable"
    }
  } ]
}, {
  "repository" : "https://github.com/antlr/intellij-plugin-v4.git",
  "sha1" : "76ba9bd26316f0d8fbd213df8e2f32e1ca6957ab",
  "url" : "https://github.com/antlr/intellij-plugin-v4/commit/76ba9bd26316f0d8fbd213df8e2f32e1ca6957ab",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic releaseEditors() : void renamed to public setEditor(editor Editor) : void in class org.antlr.intellij.plugin.preview.PreviewState",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tpublic to private in attribute private editor : Editor from class org.antlr.intellij.plugin.preview.PreviewState",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic releaseEditor() : void extracted from public releaseEditors() : void in class org.antlr.intellij.plugin.preview.PreviewState",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The fileEditor attribute got removed and replaced with editor attribute, which already exist in the parent commit. "
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tsynchronized in method public getEditor() : Editor from class org.antlr.intellij.plugin.preview.PreviewState",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\teditor : Editor in method public setEditor(editor Editor) : void from class org.antlr.intellij.plugin.preview.PreviewState",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tsynchronized in method public setEditor(editor Editor) : void from class org.antlr.intellij.plugin.preview.PreviewState",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic clearParseTree() : void extracted from public closeGrammar(grammarFile VirtualFile) : void in class org.antlr.intellij.plugin.preview.PreviewPanel",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic clearParseTree() : void extracted from public updateParseTreeFromDoc(grammarFile VirtualFile) : void in class org.antlr.intellij.plugin.preview.PreviewPanel",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic releaseEditors(previewState PreviewState) : void renamed to public releaseEditor(previewState PreviewState) : void in class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\tdoc : Document in method public selectInputEvent() : void from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\tinputFileName : String in method public selectFileEvent() : void from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tdoc : Document to doc : Document in method public createEditor(grammarFile VirtualFile, doc Document) : Editor from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tinputText : String in method public createEditor(grammarFile VirtualFile, inputText String) : Editor from class org.antlr.intellij.plugin.preview.InputPanel",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/adjust/android_sdk.git",
  "sha1" : "f08c29336a28580402e836f4298c89299919903d",
  "url" : "https://github.com/adjust/android_sdk/commit/f08c29336a28580402e836f4298c89299919903d",
  "refactorings" : [ {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private appToken : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate appToken : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private macSha1 : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate macSha1 : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private macShortMd5 : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate macShortMd5 : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private androidId : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate androidId : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private fbAttributionId : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate fbAttributionId : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private userAgent : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate userAgent : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private clientSdk : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate clientSdk : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private environment : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate environment : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private sessionCount : int from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate sessionCount : int from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private subsessionCount : int from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate subsessionCount : int from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private createdAt : long from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate createdAt : long from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private sessionLength : long from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate sessionLength : long from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private timeSpent : long from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate timeSpent : long from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private lastInterval : long from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate lastInterval : long from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private defaultTracker : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate defaultTracker : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private referrer : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate referrer : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private eventCount : int from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate eventCount : int from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private eventToken : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate eventToken : String from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private amountInCents : double from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate amountInCents : double from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private callbackParameters : Map<String,String> from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate callbackParameters : Map<String,String> from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private path : String from class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate path : String from class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private userAgent : String from class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate userAgent : String from class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private clientSdk : String from class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate clientSdk : String from class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private parameters : Map<String,String> from class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate parameters : Map<String,String> from class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private kind : String from class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate kind : String from class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to private in attribute private suffix : String from class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate suffix : String from class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setAppToken(appToken String) : void extracted from private injectGeneralAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityHandler & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setMacSha1(macSha1 String) : void extracted from private injectGeneralAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityHandler & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setMacShortMd5(macShortMd5 String) : void extracted from private injectGeneralAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityHandler & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setAndroidId(androidId String) : void extracted from private injectGeneralAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityHandler & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setFbAttributionId(fbAttributionId String) : void extracted from private injectGeneralAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityHandler & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setUserAgent(userAgent String) : void extracted from private injectGeneralAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityHandler & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setClientSdk(clientSdk String) : void extracted from private injectGeneralAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityHandler & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setEnvironment(environment String) : void extracted from private injectGeneralAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityHandler & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setSessionCount(sessionCount int) : void extracted from private injectGeneralAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityState & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setSubsessionCount(subsessionCount int) : void extracted from private injectGeneralAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityState & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setCreatedAt(createdAt long) : void extracted from private injectGeneralAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityState & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setSessionLength(sessionLength long) : void extracted from private injectGeneralAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityState & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setTimeSpent(timeSpent long) : void extracted from private injectGeneralAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityState & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setLastInterval(lastInterval long) : void extracted from protected injectSessionAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityState & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setDefaultTracker(defaultTracker String) : void extracted from private injectGeneralAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityHandler & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setEventCount(eventCount int) : void extracted from protected injectEventAttributes(builder PackageBuilder) : void in class com.adeven.adjustio.ActivityState & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setEventToken(eventToken String) : void extracted from protected trackEvent(eventToken String, parameters Map<String,String>) : void in class com.adeven.adjustio.ActivityHandler & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setEventToken(eventToken String) : void extracted from protected trackRevenue(amountInCents double, eventToken String, parameters Map<String,String>) : void in class com.adeven.adjustio.ActivityHandler & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setAmountInCents(amountInCents double) : void extracted from protected trackRevenue(amountInCents double, eventToken String, parameters Map<String,String>) : void in class com.adeven.adjustio.ActivityHandler & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setCallbackParameters(callbackParameters Map<String,String>) : void extracted from protected trackEvent(eventToken String, parameters Map<String,String>) : void in class com.adeven.adjustio.ActivityHandler & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Parameter-argument map"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setCallbackParameters(callbackParameters Map<String,String>) : void extracted from protected trackRevenue(amountInCents double, eventToken String, parameters Map<String,String>) : void in class com.adeven.adjustio.ActivityHandler & moved to class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Parameter-argument map"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setPath(path String) : void extracted from protected buildSessionPackage() : ActivityPackage in class com.adeven.adjustio.PackageBuilder & moved to class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Parameter-argument map"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setPath(path String) : void extracted from protected buildEventPackage() : ActivityPackage in class com.adeven.adjustio.PackageBuilder & moved to class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Parameter-argument map"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setPath(path String) : void extracted from protected buildRevenuePackage() : ActivityPackage in class com.adeven.adjustio.PackageBuilder & moved to class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Parameter-argument map"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setUserAgent(userAgent String) : void extracted from private getDefaultActivityPackage() : ActivityPackage in class com.adeven.adjustio.PackageBuilder & moved to class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setClientSdk(clientSdk String) : void extracted from private getDefaultActivityPackage() : ActivityPackage in class com.adeven.adjustio.PackageBuilder & moved to class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setParameters(parameters Map<String,String>) : void extracted from protected buildSessionPackage() : ActivityPackage in class com.adeven.adjustio.PackageBuilder & moved to class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setParameters(parameters Map<String,String>) : void extracted from protected buildEventPackage() : ActivityPackage in class com.adeven.adjustio.PackageBuilder & moved to class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setParameters(parameters Map<String,String>) : void extracted from protected buildRevenuePackage() : ActivityPackage in class com.adeven.adjustio.PackageBuilder & moved to class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setKind(kind String) : void extracted from protected buildSessionPackage() : ActivityPackage in class com.adeven.adjustio.PackageBuilder & moved to class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Parameter-argument map"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setKind(kind String) : void extracted from protected buildEventPackage() : ActivityPackage in class com.adeven.adjustio.PackageBuilder & moved to class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Parameter-argument map"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setKind(kind String) : void extracted from protected buildRevenuePackage() : ActivityPackage in class com.adeven.adjustio.PackageBuilder & moved to class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Parameter-argument map"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic setSuffix(suffix String) : void extracted from protected buildSessionPackage() : ActivityPackage in class com.adeven.adjustio.PackageBuilder & moved to class com.adeven.adjustio.ActivityPackage",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Parameter-argument map"
    }
  } ]
}, {
  "repository" : "https://github.com/adjust/android_sdk.git",
  "sha1" : "d1753466e2acd2d93844031d488e8f5d13b835ea",
  "url" : "https://github.com/adjust/android_sdk/commit/d1753466e2acd2d93844031d488e8f5d13b835ea",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate eventInternal(eventBuilder PackageBuilder) : void renamed to private trackEventInternal(eventBuilder PackageBuilder) : void in class com.adeven.adjustio.ActivityHandler",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate revenueInternal(revenueBuilder PackageBuilder) : void renamed to private trackRevenueInternal(revenueBuilder PackageBuilder) : void in class com.adeven.adjustio.ActivityHandler",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate checkEventTokenNotNull(eventToken String) : boolean renamed to private checkEventToken(eventToken String) : boolean in class com.adeven.adjustio.ActivityHandler",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate canInit() : boolean extracted from private initInternal() : void in class com.adeven.adjustio.ActivityHandler",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Three if statements got aggregated into one return expression, which is a pure change in this case"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate canTrackRevenueOrEvent(revenueBuilder PackageBuilder) : boolean extracted from private eventInternal(eventBuilder PackageBuilder) : void in class com.adeven.adjustio.ActivityHandler",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Three if statements got aggregated into one return expression, which is a pure change in this case"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate canTrackRevenueOrEvent(revenueBuilder PackageBuilder) : boolean extracted from private revenueInternal(revenueBuilder PackageBuilder) : void in class com.adeven.adjustio.ActivityHandler",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Three if statements got aggregated into one return expression, which is a pure change in this case"
    }
  } ]
}, {
  "repository" : "https://github.com/adjust/android_sdk.git",
  "sha1" : "1ac921b3988a78fcf5131b6371cfdf1072cfd230",
  "url" : "https://github.com/adjust/android_sdk/commit/1ac921b3988a78fcf5131b6371cfdf1072cfd230",
  "refactorings" : [ {
    "type" : "Split Method",
    "description" : "Split Method\tprivate checkEventToken(eventToken String) : boolean to [private checkEventTokenNotNull(eventToken String) : boolean, private checkEventTokenLength(eventToken String) : boolean] in class com.adeven.adjustio.ActivityHandler",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/adjust/android_sdk.git",
  "sha1" : "8ca3700173c198819de3bf6183b01d5f89925ae3",
  "url" : "https://github.com/adjust/android_sdk/commit/8ca3700173c198819de3bf6183b01d5f89925ae3",
  "refactorings" : [ {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\teventToken : String in method private checkEventTokenNotNull(eventToken String) : boolean from class com.adeven.adjustio.ActivityHandler",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to public in method public isValidForEvent() : boolean from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier\tstatic in method private checkEventTokenNotNull(eventToken String) : boolean from class com.adeven.adjustio.ActivityHandler",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method\tprivate checkEventTokenNotNull(eventToken String) : boolean from class com.adeven.adjustio.ActivityHandler to public isValidForEvent() : boolean from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\teventToken : String in method private checkEventTokenLength(eventToken String) : boolean from class com.adeven.adjustio.ActivityHandler",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier\tstatic in method private checkEventTokenLength(eventToken String) : boolean from class com.adeven.adjustio.ActivityHandler",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method\tprivate checkEventTokenLength(eventToken String) : boolean from class com.adeven.adjustio.ActivityHandler to private isEventTokenValid() : boolean from class com.adeven.adjustio.PackageBuilder",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/MegaMek/mekhq.git",
  "sha1" : "f223e451005dd73c06f4512855cfd2ff681e29bb",
  "url" : "https://github.com/MegaMek/mekhq/commit/f223e451005dd73c06f4512855cfd2ff681e29bb",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic acquireEquipment(acquisition IAcquisitionWork, person Person) : boolean extracted from public goShopping(sList ShoppingList) : ShoppingList in class mekhq.campaign.Campaign",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Parameterize Variabe on top - Add Parameter on top"
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tshoppingItem : IAcquisitionWork to acquisition : IAcquisitionWork in method public acquireEquipment(acquisition IAcquisitionWork, person Person) : boolean from class mekhq.campaign.Campaign",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable\tperson : Person to person : Person in method public acquireEquipment(acquisition IAcquisitionWork, person Person, planet Planet, initialAttempt boolean) : boolean from class mekhq.campaign.Campaign",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tplanet : Planet in method public acquireEquipment(acquisition IAcquisitionWork, person Person, planet Planet, initialAttempt boolean) : boolean from class mekhq.campaign.Campaign",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tinitialAttempt : boolean in method public acquireEquipment(acquisition IAcquisitionWork, person Person, planet Planet, initialAttempt boolean) : boolean from class mekhq.campaign.Campaign",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/MegaMek/mekhq.git",
  "sha1" : "c1f96f785b032b880093f1fd0feedd5ed65b07d1",
  "url" : "https://github.com/MegaMek/mekhq/commit/c1f96f785b032b880093f1fd0feedd5ed65b07d1",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic isFactionsSelected() : boolean extracted from public InterstellarMapPanel(c Campaign, view CampaignGUI) in class mekhq.gui.InterstellarMapPanel",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The logic has been impurely changed"
    }
  } ]
}, {
  "repository" : "https://github.com/soabase/exhibitor.git",
  "sha1" : "7b4eb4d7303664c92dc3ec7b910e5585262be961",
  "url" : "https://github.com/soabase/exhibitor/commit/7b4eb4d7303664c92dc3ec7b910e5585262be961",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class\tcom.netflix.exhibitor.core.s3.TestS3PseudoLock moved to com.netflix.exhibitor.core.config.s3.TestS3PseudoLock",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class\tcom.netflix.exhibitor.core.s3.S3PseudoLock moved and renamed to com.netflix.exhibitor.core.config.PseudoLockBase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\tlocalValidHeader : boolean in method public ZooKeeperLogParser(log InputStream) from class com.netflix.exhibitor.core.index.ZooKeeperLogParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tIOException in method public ZooKeeperLogParser(log InputStream) from class com.netflix.exhibitor.core.index.ZooKeeperLogParser",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpackage MockExhibitorInstance(hostname String, provider ConfigProvider) extracted from package MockExhibitorInstance(hostname String) in class com.netflix.exhibitor.core.config.MockExhibitorInstance",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getConfigProvider() : ConfigProvider extracted from package MockExhibitorInstance(hostname String) in class com.netflix.exhibitor.core.config.MockExhibitorInstance",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The overridden methods has been increased in the extracted code"
    }
  }, {
    "type" : "Replace Attribute With Variable",
    "description" : "Replace Attribute With Variable\tpropertiesFile : File to propertiesFile : File in method public loadConfig() : LoadedInstanceConfig from class com.netflix.exhibitor.core.config.filesystem.FileSystemConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Attribute With Variable",
    "description" : "Replace Attribute With Variable\tpropertiesFile : File to propertiesFile : File in method public storeConfig(config ConfigCollection, compareLastModified long) : LoadedInstanceConfig from class com.netflix.exhibitor.core.config.filesystem.FileSystemConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tpropertiesFile : File to propertiesDirectory : File in method public FileSystemConfigProvider(propertiesDirectory File, propertyFileName String, heartbeatFilePrefix String) from class com.netflix.exhibitor.core.config.filesystem.FileSystemConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tpropertyFileName : String in method public FileSystemConfigProvider(propertiesDirectory File, propertyFileName String, heartbeatFilePrefix String) from class com.netflix.exhibitor.core.config.filesystem.FileSystemConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\theartbeatFilePrefix : String in method public FileSystemConfigProvider(propertiesDirectory File, propertyFileName String, heartbeatFilePrefix String) from class com.netflix.exhibitor.core.config.filesystem.FileSystemConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tIOException in method public FileSystemConfigProvider(propertiesDirectory File, propertyFileName String, heartbeatFilePrefix String) from class com.netflix.exhibitor.core.config.filesystem.FileSystemConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tpropertiesFile : File to propertiesDirectory : File in method public FileSystemConfigProvider(propertiesDirectory File, propertyFileName String, heartbeatFilePrefix String, defaults Properties) from class com.netflix.exhibitor.core.config.filesystem.FileSystemConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tpropertyFileName : String in method public FileSystemConfigProvider(propertiesDirectory File, propertyFileName String, heartbeatFilePrefix String, defaults Properties) from class com.netflix.exhibitor.core.config.filesystem.FileSystemConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\theartbeatFilePrefix : String in method public FileSystemConfigProvider(propertiesDirectory File, propertyFileName String, heartbeatFilePrefix String, defaults Properties) from class com.netflix.exhibitor.core.config.filesystem.FileSystemConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tIOException in method public FileSystemConfigProvider(propertiesDirectory File, propertyFileName String, heartbeatFilePrefix String, defaults Properties) from class com.netflix.exhibitor.core.config.filesystem.FileSystemConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tpropertiesFile : File to propertiesDirectory : File in class com.netflix.exhibitor.core.config.filesystem.FileSystemConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic Arguments(connectionTimeOutMs int, logWindowSizeLines int, thisJVMHostname String, configCheckMs int, extraHeadingText String, allowNodeMutations boolean, jQueryStyle JQueryStyle) extracted from public Arguments(connectionTimeOutMs int, logWindowSizeLines int, thisJVMHostname String, configCheckMs int, extraHeadingText String, allowNodeMutations boolean) in class com.netflix.exhibitor.core.Exhibitor.Arguments",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "One new field has been set within the new extracted constructor"
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprivate to public in attribute public AUTO_INSTANCE_MANAGEMENT_PERIOD_MS : int from class com.netflix.exhibitor.core.Exhibitor",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\theartbeatKeyPrefix : String in method public S3ConfigArguments(bucket String, key String, heartbeatKeyPrefix String) from class com.netflix.exhibitor.core.config.s3.S3ConfigArguments",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getFileSystemProvider(commandLine CommandLine, backupProvider BackupProvider) : ConfigProvider extracted from public main(args String[]) : void in class com.netflix.exhibitor.application.ExhibitorMain",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The two non-mapped leaves which have been added to the extracted code are not justifiable"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getS3Provider(options Options, commandLine CommandLine, awsCredentials PropertyBasedS3Credential) : ConfigProvider extracted from public main(args String[]) : void in class com.netflix.exhibitor.application.ExhibitorMain",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The four non-mapped leaves which have been added to the extracted code are not justifiable"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tpropertiesFile : File to directory : File in method private getFileSystemProvider(commandLine CommandLine, backupProvider BackupProvider) : ConfigProvider from class com.netflix.exhibitor.application.ExhibitorMain",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tprefix : String in method private getS3Arguments(value String, options Options, prefix String) : S3ConfigArguments from class com.netflix.exhibitor.application.ExhibitorMain",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tFILESYSTEMCONFIG : String to FILESYSTEMCONFIG_DIRECTORY : String in class com.netflix.exhibitor.application.ExhibitorMain",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprotected doWork() : void extracted from public call() : Boolean in class com.netflix.exhibitor.core.state.AutoInstanceManagement",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The two non-mapped leaves which have been added to the extracted code are not justifiable"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate adjustConfig(currentConfig InstanceConfig, newSpec String) : void extracted from private addUsIn(usState UsState) : void in class com.netflix.exhibitor.core.state.AutoInstanceManagement",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier\tfinal in variable currentConfig : InstanceConfig in method private addUsIn(usState UsState) : void from class com.netflix.exhibitor.core.state.AutoInstanceManagement",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier\tabstract in class com.netflix.exhibitor.core.config.PseudoLockBase",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tclient : S3Client in method public S3PseudoLock(client S3Client, bucket String, lockPrefix String, timeoutMs int, pollingMs int) from class com.netflix.exhibitor.core.s3.S3PseudoLock",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tbucket : String in method public S3PseudoLock(client S3Client, bucket String, lockPrefix String, timeoutMs int, pollingMs int) from class com.netflix.exhibitor.core.s3.S3PseudoLock",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tclient : S3Client in method public S3PseudoLock(client S3Client, bucket String, lockPrefix String, timeoutMs int, pollingMs int, settlingMs int) from class com.netflix.exhibitor.core.s3.S3PseudoLock",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tbucket : String in method public S3PseudoLock(client S3Client, bucket String, lockPrefix String, timeoutMs int, pollingMs int, settlingMs int) from class com.netflix.exhibitor.core.s3.S3PseudoLock",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface\tcom.netflix.exhibitor.core.config.PseudoLock from classes [com.netflix.exhibitor.core.s3.S3PseudoLock]",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Subclass",
    "description" : "Extract Subclass\tcom.netflix.exhibitor.core.config.s3.S3PseudoLock from class com.netflix.exhibitor.core.s3.S3PseudoLock",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute\tprivate client : S3Client from class com.netflix.exhibitor.core.s3.S3PseudoLock to private client : S3Client from class com.netflix.exhibitor.core.config.s3.S3PseudoLock",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute\tprivate bucket : String from class com.netflix.exhibitor.core.s3.S3PseudoLock to private bucket : String from class com.netflix.exhibitor.core.config.s3.S3PseudoLock",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/soabase/exhibitor.git",
  "sha1" : "af59738bd7b91771ad95bfc73af2eae1f851bddf",
  "url" : "https://github.com/soabase/exhibitor/commit/af59738bd7b91771ad95bfc73af2eae1f851bddf",
  "refactorings" : [ {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tprefix : String in method public newPseudoLock(prefix String) : PseudoLock from class com.netflix.exhibitor.core.config.TestAutoInstanceManagement.testContentionAddNewInstance.configProvider.new ConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getAdditionalTabHtmlContent(info UriInfo, index int) : Response extracted from public getAdditionalTabContent(info UriInfo, index int) : Response in class com.netflix.exhibitor.core.rest.UIResource",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation\t@Path(\"tab/{index}\") to @Path(\"tab-html/{index}\") in method public getAdditionalTabContent(info UriInfo, index int) : Response from class com.netflix.exhibitor.core.rest.UIResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation\t@Produces(MediaType.TEXT_PLAIN) to @Produces(MediaType.TEXT_HTML) in method public getAdditionalTabContent(info UriInfo, index int) : Response from class com.netflix.exhibitor.core.rest.UIResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tprefix : String in method public newPseudoLock(prefix String) : PseudoLock from class com.netflix.exhibitor.core.config.MockExhibitorInstance.getConfigProvider.new ConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tprefix : String in method public newPseudoLock(prefix String) : PseudoLock from class com.netflix.exhibitor.core.config.TestRollingConfigChange.testChange.provider.new ConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tprefix : String in method public newPseudoLock(prefix String) : PseudoLock from class com.netflix.exhibitor.core.config.filesystem.FileSystemConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tprefix : String in method public newConfigBasedLock(prefix String) : PseudoLock from class com.netflix.exhibitor.core.config.ConfigManager",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tlockArguments : S3ConfigAutoManageLockArguments in method public S3ConfigArguments(bucket String, key String, heartbeatKeyPrefix String, lockArguments S3ConfigAutoManageLockArguments) from class com.netflix.exhibitor.core.config.s3.S3ConfigArguments",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tisHtml : boolean in method public UITabSpec(name String, url String, isHtml boolean) from class com.netflix.exhibitor.core.entities.UITabSpec",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tprefix : String in method public newPseudoLock(prefix String) : PseudoLock from class com.netflix.exhibitor.core.config.ConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tprefix : String in method public newPseudoLock(prefix String) : PseudoLock from class com.netflix.exhibitor.core.config.s3.S3ConfigProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/DSpace/DSpace.git",
  "sha1" : "a42a18c4cb7775e8c6772d97426200bcd63e00a7",
  "url" : "https://github.com/DSpace/DSpace/commit/a42a18c4cb7775e8c6772d97426200bcd63e00a7",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic getInputs(collectionHandle String) : DCInputSet renamed to public getInputsByCollectionHandle(collectionHandle String) : DCInputSet in class org.dspace.app.util.DCInputsReader",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getInputsByFormName(formName String) : DCInputSet extracted from public getInputs(collectionHandle String) : DCInputSet in class org.dspace.app.util.DCInputsReader",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/DSpace/DSpace.git",
  "sha1" : "2ef05eb448a7b4d53399833f951490d7ece71192",
  "url" : "https://github.com/DSpace/DSpace/commit/2ef05eb448a7b4d53399833f951490d7ece71192",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate loadChoiceAuthorityConfigurations() : void extracted from private getChoiceAuthorityMap() : Map<String,ChoiceAuthority> in class org.dspace.content.authority.ChoiceAuthorityServiceImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\tauthorityName : String in method private loadChoiceAuthorityConfigurations() : void from class org.dspace.content.authority.ChoiceAuthorityServiceImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation\t@JsonInclude(value = Include.NON_NULL) in class org.dspace.app.rest.model.SelectableMetadata",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation\t@JsonIgnore in attribute private authority : AuthorityRest from class org.dspace.app.rest.model.SelectableMetadata",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tpairs : List to pairs : List<String> in method private getField(dcinput DCInput) : InputFormFieldRest from class org.dspace.app.rest.converter.InputFormConverter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class\torg.dspace.app.rest.utils.AuthorityUtils from class org.dspace.app.rest.converter.InputFormConverter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute\tprivate selectableMetadata : List<SelectableMetadata> from class org.dspace.app.rest.model.InputFormInputTypeRest to private selectableMetadata : List<SelectableMetadata> from class org.dspace.app.rest.model.InputFormFieldRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate getAuthority(schema String, element String, qualifier String) : AuthorityRest from class org.dspace.app.rest.converter.InputFormConverter to public getAuthority(schema String, element String, qualifier String) : AuthorityRest from class org.dspace.app.rest.utils.AuthorityUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to public in method public getAuthority(schema String, element String, qualifier String) : AuthorityRest from class org.dspace.app.rest.utils.AuthorityUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic getSelectableMetadata() : List<SelectableMetadata> from class org.dspace.app.rest.model.InputFormInputTypeRest to public getSelectableMetadata() : List<SelectableMetadata> from class org.dspace.app.rest.model.InputFormFieldRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic setSelectableMetadata(selectableMetadata List<SelectableMetadata>) : void from class org.dspace.app.rest.model.InputFormInputTypeRest to public setSelectableMetadata(selectableMetadata List<SelectableMetadata>) : void from class org.dspace.app.rest.model.InputFormFieldRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/DSpace/DSpace.git",
  "sha1" : "7b21429fc680a9f93434e647a663d39e87721b0c",
  "url" : "https://github.com/DSpace/DSpace/commit/7b21429fc680a9f93434e647a663d39e87721b0c",
  "refactorings" : [ {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation\t@LinksRest(links = {@LinkRest(name=AuthorityRest.ENTRIES,linkClass=AuthorityEntryRest.class,method=\"listAuthorityEntries\",optional=true)}) to @LinksRest(links = {@LinkRest(name=AuthorityRest.ENTRIES,linkClass=AuthorityEntryRest.class,method=\"listAuthorityEntries\",optional=true),@LinkRest(name=AuthorityRest.ENTRY,linkClass=AuthorityEntryRest.class,method=\"listAuthorityEntry\",optional=true)}) in class org.dspace.app.rest.model.AuthorityRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic getExtraInformation() : Map<String,Serializable> renamed to public getOtherInformation() : Map<String,String> in class org.dspace.app.rest.model.AuthorityEntryRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic setExtraInformation(extraInformation Map<String,Serializable>) : void renamed to public setOtherInformation(otherInformation Map<String,String>) : void in class org.dspace.app.rest.model.AuthorityEntryRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate value : String from class org.dspace.app.rest.model.AuthorityEntryRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tMap<String,Serializable> to Map<String,String> in method public getOtherInformation() : Map<String,String> from class org.dspace.app.rest.model.AuthorityEntryRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\textraInformation : Map<String,Serializable> to otherInformation : Map<String,String> in method public setOtherInformation(otherInformation Map<String,String>) : void from class org.dspace.app.rest.model.AuthorityEntryRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\textraInformation : Map<String,Serializable> to otherInformation : Map<String,String> in method public setOtherInformation(otherInformation Map<String,String>) : void from class org.dspace.app.rest.model.AuthorityEntryRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate buildAuthorityRest(name String, schema String, element String, qualifier String) : AuthorityRest extracted from public getAuthority(schema String, element String, qualifier String) : AuthorityRest in class org.dspace.app.rest.utils.AuthorityUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate buildAuthorityRest(name String, schema String, element String, qualifier String) : AuthorityRest extracted from public getAuthority(name String) : AuthorityRest in class org.dspace.app.rest.utils.AuthorityUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate buildEntry(value Choice) : AuthorityEntryRest extracted from public query(metadata String, query String, collection Collection, start int, limit int, locale Locale) : List<AuthorityEntryRest> in class org.dspace.app.rest.utils.AuthorityUtils",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tauthority : AuthorityRest to authority : String in class org.dspace.app.rest.model.SelectableMetadata",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tAuthorityRest to String in method public getAuthority() : String from class org.dspace.app.rest.model.SelectableMetadata",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tauthority : AuthorityRest to authority : String in method public setAuthority(authority String) : void from class org.dspace.app.rest.model.SelectableMetadata",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/DSpace/DSpace.git",
  "sha1" : "dbddc1f7f0a9b595c8f4ad02621b7883de0d67ca",
  "url" : "https://github.com/DSpace/DSpace/commit/dbddc1f7f0a9b595c8f4ad02621b7883de0d67ca",
  "refactorings" : [ {
    "type" : "Extract Variable",
    "description" : "Extract Variable\turibuilder : String in method public SubmissionPanelResource(sd SubmissionPanelRest, utils Utils, rels String...) from class org.dspace.app.rest.model.hateoas.SubmissionPanelResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tutils : Utils in method public SubmissionPanelResource(sd SubmissionPanelRest, utils Utils, rels String...) from class org.dspace.app.rest.model.hateoas.SubmissionPanelResource",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic getId() : String renamed to public getPanelType() : String in class org.dspace.app.rest.model.SubmissionPanelRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tpublic setId(id String) : void renamed to public setPanelType(panelType String) : void in class org.dspace.app.rest.model.SubmissionPanelRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tid : String to panelType : String in method public setPanelType(panelType String) : void from class org.dspace.app.rest.model.SubmissionPanelRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tid : String to panelType : String in class org.dspace.app.rest.model.SubmissionPanelRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@LinkRest(linkClass = SubmissionPanelRest.class) in method public getPanels() : List<SubmissionPanelRest> from class org.dspace.app.rest.model.SubmissionDefinitionRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@JsonIgnore in method public getPanels() : List<SubmissionPanelRest> from class org.dspace.app.rest.model.SubmissionDefinitionRest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Override in method public fromModel(step SubmissionStepConfig) : SubmissionPanelRest from class org.dspace.app.rest.converter.SubmissionPanelConverter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to public in method public fromModel(step SubmissionStepConfig) : SubmissionPanelRest from class org.dspace.app.rest.converter.SubmissionPanelConverter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method\tprivate getPanel(step SubmissionStepConfig) : SubmissionPanelRest from class org.dspace.app.rest.converter.SubmissionDefinitionConverter to public fromModel(step SubmissionStepConfig) : SubmissionPanelRest from class org.dspace.app.rest.converter.SubmissionPanelConverter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/DSpace/DSpace.git",
  "sha1" : "cdd9049b6b3c87dafcc06c3c1c3218065485fc70",
  "url" : "https://github.com/DSpace/DSpace/commit/cdd9049b6b3c87dafcc06c3c1c3218065485fc70",
  "refactorings" : [ {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tUnsupportedEncodingException in method public testMatches() : void from class org.dspace.eperson.PasswordHashTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tsolr : HttpSolrServer to solr : SolrServer in class org.dspace.statistics.SolrLoggerServiceImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getDspaceDir() : String extracted from public initKernel() : void in class org.dspace.AbstractDSpaceTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Override in method public destroy() : void from class org.dspace.servicemanager.DSpaceKernelImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tsolr : HttpSolrServer to solr : SolrServer in class org.dspace.discovery.SolrServiceImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprivate to protected in attribute protected solr : SolrServer from class org.dspace.discovery.SolrServiceImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tHttpSolrServer to SolrServer in method protected getSolr() : SolrServer from class org.dspace.discovery.SolrServiceImpl",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tkernelImpl : DSpaceKernelImpl to kernel : DSpaceKernel in method public DSpaceKernelDestroyer(kernel DSpaceKernel) from class org.dspace.app.rest.Application.DSpaceKernelDestroyer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tkernelImpl : DSpaceKernelImpl to kernel : DSpaceKernel in method public DSpaceKernelDestroyer(kernel DSpaceKernel) from class org.dspace.app.rest.Application.DSpaceKernelDestroyer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute\tkernelImpl : DSpaceKernelImpl to kernel : DSpaceKernel in class org.dspace.app.rest.Application.DSpaceKernelDestroyer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tkernelImpl : DSpaceKernelImpl to kernel : DSpaceKernel in class org.dspace.app.rest.Application.DSpaceKernelDestroyer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/DSpace/DSpace.git",
  "sha1" : "69db8ba6f66a36ee6143f82d45d07af8b9d398fc",
  "url" : "https://github.com/DSpace/DSpace/commit/69db8ba6f66a36ee6143f82d45d07af8b9d398fc",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getBundleName(file Element, getParent boolean) : String extracted from public getBundleName(file Element) : String in class org.dspace.content.packager.METSManifest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/zendesk/maxwell.git",
  "sha1" : "c13a4ce36ec7cf57934dfc06eb3a086497e98db4",
  "url" : "https://github.com/zendesk/maxwell/commit/c13a4ce36ec7cf57934dfc06eb3a086497e98db4",
  "refactorings" : [ {
    "type" : "Rename Class",
    "description" : "Rename Class\tcom.zendesk.maxwell.schema.ddl.SchemaSyncError renamed to com.zendesk.maxwell.schema.ddl.InvalidSchemaError",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class\tcom.zendesk.maxwell.AbstractMaxwellTest renamed to com.zendesk.maxwell.MaxwellTestWithIsolatedServer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public index(t Table, defaultIndex Integer) : int from class com.zendesk.maxwell.schema.ddl.ColumnPosition",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation\t@JsonSerialize(using = ColumnDefSerializer.class) in class com.zendesk.maxwell.schema.columndef.ColumnDef",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation\t@JsonDeserialize(using = ColumnDefDeserializer.class) in class com.zendesk.maxwell.schema.columndef.ColumnDef",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute\tprivate sensitivity : CaseSensitivity from class com.zendesk.maxwell.schema.Schema",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tIOException in method public testModifyColumn() : void from class com.zendesk.maxwell.schema.ddl.DDLParserTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method private initFirstRun(connection Connection, schemaConnection Connection) : void from class com.zendesk.maxwell.Maxwell",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method protected originalIndex(table Table) : int from class com.zendesk.maxwell.schema.ddl.ColumnMod",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public abstract apply(table Table) : void from class com.zendesk.maxwell.schema.ddl.ColumnMod",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public apply(table Table) : void from class com.zendesk.maxwell.schema.ddl.ChangeColumnMod",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public apply(table Table) : void from class com.zendesk.maxwell.schema.ddl.RemoveColumnMod",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public capture() : Schema from class com.zendesk.maxwell.schema.SchemaCapturer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method private captureDatabase(dbName String, dbCharset String) : Database from class com.zendesk.maxwell.schema.SchemaCapturer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method private captureTable(t Table) : void from class com.zendesk.maxwell.schema.SchemaCapturer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method private captureTablePK(t Table) : void from class com.zendesk.maxwell.schema.SchemaCapturer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public ensureMaxwellSchema(connection Connection, schemaDatabaseName String) : void from class com.zendesk.maxwell.schema.SchemaStore",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public restore(connection Connection, context MaxwellContext) : SchemaStore from class com.zendesk.maxwell.schema.SchemaStore",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method private restoreFrom(targetPosition BinlogPosition, sensitivity CaseSensitivity) : void from class com.zendesk.maxwell.schema.SchemaStore",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public testSave() : void from class com.zendesk.maxwell.SchemaStoreTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\t[SQLException, SchemaSyncError, IOException, InterruptedException] to Exception in method public testAlter() : void from class com.zendesk.maxwell.schema.ddl.DDLIntegrationTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\t[SQLException, SchemaSyncError, IOException, InterruptedException] to Exception in method public testDrop() : void from class com.zendesk.maxwell.schema.ddl.DDLIntegrationTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\t[SQLException, SchemaSyncError, IOException] to Exception in method public testDatabaseCharset() : void from class com.zendesk.maxwell.schema.ddl.DDLIntegrationTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\t[SQLException, SchemaSyncError, IOException] to Exception in method public testPKs() : void from class com.zendesk.maxwell.schema.ddl.DDLIntegrationTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@Test in method public testAutoConvertToByte() : void from class com.zendesk.maxwell.schema.ddl.DDLIntegrationTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tSchema to void in method private testIntegration(alters String[]) : void from class com.zendesk.maxwell.schema.ddl.DDLIntegrationTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\t[SQLException, SchemaSyncError, IOException] to Exception in method private testIntegration(alters String[]) : void from class com.zendesk.maxwell.schema.ddl.DDLIntegrationTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tSchema to void in method private testIntegration(sql String) : void from class com.zendesk.maxwell.schema.ddl.DDLIntegrationTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation\t@JsonProperty(\"enum-values\") in attribute protected enumValues : String[] from class com.zendesk.maxwell.schema.columndef.EnumeratedColumnDef",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tcolumns : ArrayList<ColumnDef> to columns : List<ColumnDef> in class com.zendesk.maxwell.schema.ddl.TableCreate",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tpks : ArrayList<String> to pks : List<String> in class com.zendesk.maxwell.schema.ddl.TableCreate",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method private processRowsEvent(e AbstractRowEvent) : MaxwellAbstractRowsEvent from class com.zendesk.maxwell.MaxwellReplicator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\tresolved : ResolvedSchemaChange in method private processQueryEvent(event QueryEvent) : void from class com.zendesk.maxwell.MaxwellReplicator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method private processQueryEvent(event QueryEvent) : void from class com.zendesk.maxwell.MaxwellReplicator",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier\tstatic in attribute private longlong_max : BigInteger from class com.zendesk.maxwell.schema.columndef.BigIntColumnDef",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public apply(table Table) : void from class com.zendesk.maxwell.schema.ddl.AddColumnMod",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprivate to public in attribute public bits : int from class com.zendesk.maxwell.schema.columndef.IntColumnDef",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier\tfinal in attribute private bits : int from class com.zendesk.maxwell.schema.columndef.IntColumnDef",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier\tfinal in attribute private columnList : List<ColumnDef> from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tpackage to public in attribute public pkIndex : int from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation\t@JsonIgnore in attribute public pkIndex : int from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprivate to public in attribute public name : String from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation\t@JsonProperty(\"table\") in attribute public name : String from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprivate to public in attribute public database : String from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprivate to public in attribute public charset : String from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier\tfinal in attribute private charset : String from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprivate to public in attribute public pkColumnNames : List<String> from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation\t@JsonProperty(\"primary-key\") in attribute public pkColumnNames : List<String> from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic setColumnList(list List<ColumnDef>) : void extracted from public Table(database String, name String, charset String, list List<ColumnDef>, pks List<String>) in class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic getStringColumns() : List<StringColumnDef> extracted from public setDefaultColumnCharsets() : void in class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@JsonProperty(\"columns\") in method public getColumnList() : List<ColumnDef> from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@JsonIgnore in method public getPKIndex() : int from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type\tc : ColumnDef to c : StringColumnDef in method public setDefaultColumnCharsets() : void from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@JsonIgnore in method public getPKList() : List<String> from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation\t@JsonIgnore in method public getPKString() : String from class com.zendesk.maxwell.schema.Table",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public testDatabases() : void from class com.zendesk.maxwell.SchemaCaptureTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public testOneDatabase() : void from class com.zendesk.maxwell.SchemaCaptureTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public testTables() : void from class com.zendesk.maxwell.SchemaCaptureTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public testColumns() : void from class com.zendesk.maxwell.SchemaCaptureTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public testPKs() : void from class com.zendesk.maxwell.SchemaCaptureTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier\tprotected to public in attribute public charset : String from class com.zendesk.maxwell.schema.columndef.StringColumnDef",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tqueries : String[] to input : String[] in method protected getRowsForSQL(filter MaxwellFilter, input String[], before String[]) : List<RowMap> from class com.zendesk.maxwell.MaxwellTestWithIsolatedServer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter\tqueries : String[] to input : String[] in method protected getRowsForSQL(filter MaxwellFilter, input String[]) : List<RowMap> from class com.zendesk.maxwell.MaxwellTestWithIsolatedServer",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class\tcom.zendesk.maxwell.MaxwellTestSupport from class com.zendesk.maxwell.AbstractMaxwellTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic getSQLDir() : String from class com.zendesk.maxwell.AbstractMaxwellTest to public getSQLDir() : String from class com.zendesk.maxwell.MaxwellTestSupport",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tstatic in method public getSQLDir() : String from class com.zendesk.maxwell.MaxwellTestSupport",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprotected buildContext(port int, p BinlogPosition) : MaxwellContext from class com.zendesk.maxwell.AbstractMaxwellTest to public buildContext(port int, p BinlogPosition) : MaxwellContext from class com.zendesk.maxwell.MaxwellTestSupport",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprotected to public in method public buildContext(port int, p BinlogPosition) : MaxwellContext from class com.zendesk.maxwell.MaxwellTestSupport",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tstatic in method public buildContext(port int, p BinlogPosition) : MaxwellContext from class com.zendesk.maxwell.MaxwellTestSupport",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprotected getRowsForSQL(mysql MysqlIsolatedServer, filter MaxwellFilter, queries String[], before String[]) : List<RowMap> from class com.zendesk.maxwell.AbstractMaxwellTest to public getRowsForSQL(mysql MysqlIsolatedServer, filter MaxwellFilter, queries String[], before String[]) : List<RowMap> from class com.zendesk.maxwell.MaxwellTestSupport",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier\tfinal in parameter mysql : MysqlIsolatedServer in method public getRowsForSQL(mysql MysqlIsolatedServer, filter MaxwellFilter, queries String[], before String[]) : List<RowMap> from class com.zendesk.maxwell.MaxwellTestSupport",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprotected to public in method public getRowsForSQL(mysql MysqlIsolatedServer, filter MaxwellFilter, queries String[], before String[]) : List<RowMap> from class com.zendesk.maxwell.MaxwellTestSupport",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tstatic in method public getRowsForSQL(mysql MysqlIsolatedServer, filter MaxwellFilter, queries String[], before String[]) : List<RowMap> from class com.zendesk.maxwell.MaxwellTestSupport",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprotected to public in method public parseJSON(json String) : Map<String,Object> from class com.zendesk.maxwell.MaxwellTestJSON",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tstatic in method public parseJSON(json String) : Map<String,Object> from class com.zendesk.maxwell.MaxwellTestJSON",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprotected parseJSON(json String) : Map<String,Object> from class com.zendesk.maxwell.AbstractIntegrationTest to public parseJSON(json String) : Map<String,Object> from class com.zendesk.maxwell.MaxwellTestJSON",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tserver : MysqlIsolatedServer in method private runJSONTest(server MysqlIsolatedServer, sql List<String>, expectedJSON List<Map<String,Object>>) : void from class com.zendesk.maxwell.MaxwellTestJSON",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tstatic in method private runJSONTest(server MysqlIsolatedServer, sql List<String>, expectedJSON List<Map<String,Object>>) : void from class com.zendesk.maxwell.MaxwellTestJSON",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tprivate runJSONTest(sql List<String>, expectedJSON List<Map<String,Object>>) : void from class com.zendesk.maxwell.AbstractIntegrationTest to private runJSONTest(server MysqlIsolatedServer, sql List<String>, expectedJSON List<Map<String,Object>>) : void from class com.zendesk.maxwell.MaxwellTestJSON",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic assertJSON(jsonOutput List<Map<String,Object>>, jsonAsserts List<Map<String,Object>>) : void extracted from private runJSONTest(sql List<String>, expectedJSON List<Map<String,Object>>) : void in class com.zendesk.maxwell.MaxwellTestJSON",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public abstract apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.ResolvedSchemaChange",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic abstract apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.SchemaChange to public abstract apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.ResolvedSchemaChange",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.ResolvedTableCreate",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.ResolvedTableCreate",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.TableDrop to public apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.ResolvedTableCreate",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.TableCreate to public apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.ResolvedTableCreate",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.ResolvedDatabaseAlter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.DatabaseAlter to public apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.ResolvedDatabaseAlter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable\tcreateCharset : String in method public apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.DatabaseCreate",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.ResolvedDatabaseCreate",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.DatabaseCreate to public apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.ResolvedDatabaseCreate",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\tSchemaSyncError to InvalidSchemaError in method public apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.ResolvedDatabaseDrop",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method\tpublic apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.DatabaseDrop to public apply(originalSchema Schema) : Schema from class com.zendesk.maxwell.schema.ddl.ResolvedDatabaseDrop",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tserver : MysqlIsolatedServer in method public setupSchema(server MysqlIsolatedServer) : void from class com.zendesk.maxwell.MaxwellTestSupport",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type\t[SQLException, IOException] to Exception in method public setupSchema(server MysqlIsolatedServer) : void from class com.zendesk.maxwell.MaxwellTestSupport",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier\tprivate to public in method public setupSchema(server MysqlIsolatedServer) : void from class com.zendesk.maxwell.MaxwellTestSupport",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier\tstatic in method public setupSchema(server MysqlIsolatedServer) : void from class com.zendesk.maxwell.MaxwellTestSupport",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method\tprivate resetMaster() : void from class com.zendesk.maxwell.AbstractMaxwellTest to public setupSchema(server MysqlIsolatedServer) : void from class com.zendesk.maxwell.MaxwellTestSupport",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/zendesk/maxwell.git",
  "sha1" : "fd32ef056ce82d55f0cdc80e124dffe3de23169e",
  "url" : "https://github.com/zendesk/maxwell/commit/fd32ef056ce82d55f0cdc80e124dffe3de23169e",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getJsonGenerator() : JsonGenerator extracted from public toJSON() : String in class com.zendesk.maxwell.RowMap",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/zendesk/maxwell.git",
  "sha1" : "d699f77d36efee1ffa176ddc5047cc66134b5427",
  "url" : "https://github.com/zendesk/maxwell/commit/d699f77d36efee1ffa176ddc5047cc66134b5427",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method\tprivate getJsonGenerator() : JsonGenerator inlined to public toJSON() : String in class com.zendesk.maxwell.RowMap",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\texcludeColumns : String in method public MaxwellFilter(includeDatabases String, excludeDatabases String, includeTables String, excludeTables String, blacklistDatabases String, blacklistTables String, excludeColumns String) from class com.zendesk.maxwell.MaxwellFilter",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/cbeust/testng.git",
  "sha1" : "55c3745502fd9d9e23e49f0bdafc577cacb1fc20",
  "url" : "https://github.com/cbeust/testng/commit/55c3745502fd9d9e23e49f0bdafc577cacb1fc20",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate Edge(from T, to T, weight int, order int) extracted from private Edge(from T, to T, weight int) in class org.testng.internal.DynamicGraph.Edge",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/cbeust/testng.git",
  "sha1" : "9806074a5f524a0e45a145aad729aba54851ecac",
  "url" : "https://github.com/cbeust/testng/commit/9806074a5f524a0e45a145aad729aba54851ecac",
  "refactorings" : [ {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier\tfinal in attribute private weight : int from class org.testng.internal.DynamicGraph.Edge",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier\tfinal in attribute private order : int from class org.testng.internal.DynamicGraph.Edge",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Reorder Parameter",
    "description" : "Reorder Parameter\t[from : T, to : T, weight : int] to [weight : int, from : T, to : T] in method private Edge(weight int, from T, to T) from class org.testng.internal.DynamicGraph.Edge",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Reorder Parameter",
    "description" : "Reorder Parameter\t[from : T, to : T, weight : int, order : int] to [weight : int, order : int, from : T, to : T] in method private Edge(weight int, order int, from T, to T) from class org.testng.internal.DynamicGraph.Edge",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Reorder Parameter",
    "description" : "Reorder Parameter\t[weight : int, from : T, to : T, order : int] to [weight : int, order : int, from : T, to : T] in method public addEdge(weight int, order int, from T, to T) : void from class org.testng.internal.DynamicGraph",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate runAssertion(graph DynamicGraph<ITestNGMethod>, expected List<String>) : void extracted from public testOrderingOfEdgesWithSameWeight() : void in class test.DynamicGraphTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate runAssertion(graph DynamicGraph<ITestNGMethod>, expected List<String>) : void extracted from public testOrderingOfEdgesWithSameWeight() : void in class test.DynamicGraphTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate runAssertion(graph DynamicGraph<ITestNGMethod>, expected List<String>) : void extracted from public testOrderingOfEdgesWithSameWeight() : void in class test.DynamicGraphTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tp2Methods : List<ITestNGMethod> to p1Methods : List<ITestNGMethod> in method private runAssertion(graph DynamicGraph<ITestNGMethod>, expected List<String>) : void from class test.DynamicGraphTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tp2Method : ITestNGMethod to p1Method : ITestNGMethod in method private runAssertion(graph DynamicGraph<ITestNGMethod>, expected List<String>) : void from class test.DynamicGraphTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tp3Methods : List<ITestNGMethod> to p1Methods : List<ITestNGMethod> in method private runAssertion(graph DynamicGraph<ITestNGMethod>, expected List<String>) : void from class test.DynamicGraphTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tp3Method : ITestNGMethod to p1Method : ITestNGMethod in method private runAssertion(graph DynamicGraph<ITestNGMethod>, expected List<String>) : void from class test.DynamicGraphTest",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/spring-projects/spring-kafka.git",
  "sha1" : "16d8daec92c844ccadf90d1efee27f3b9fe75f1f",
  "url" : "https://github.com/spring-projects/spring-kafka/commit/16d8daec92c844ccadf90d1efee27f3b9fe75f1f",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic doWithAdmin(callback Consumer<AdminClient>) : void extracted from public before() : void in class org.springframework.kafka.test.rule.KafkaEmbedded",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tpublic addTopics(topics String...) : void extracted from public before() : void in class org.springframework.kafka.test.rule.KafkaEmbedded",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/connectbot/connectbot.git",
  "sha1" : "8528278c042cb4eb92e3c434ab52beb24860f6c3",
  "url" : "https://github.com/connectbot/connectbot/commit/8528278c042cb4eb92e3c434ab52beb24860f6c3",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate autoHideEmulatedKeys() : void extracted from private showEmulatedKeys() : void in class org.connectbot.ConsoleActivity",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
},

{
  "repository" : "https://github.com/forrestguice/SuntimesWidget.git",
  "sha1" : "0a7f53da1736523b14eb25b4301a7a9924eb3244",
  "url" : "https://github.com/forrestguice/SuntimesWidget/commit/0a7f53da1736523b14eb25b4301a7a9924eb3244",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate showSnackWarnings() : void renamed to private showWarnings() : void in class com.forrestguice.suntimeswidget.SuntimesActivity",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
    
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\ttimezoneWarning : Snackbar to timezoneWarning : SuntimesWarning in class com.forrestguice.suntimeswidget.SuntimesActivity",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type\tdateWarning : Snackbar to dateWarning : SuntimesWarning in class com.forrestguice.suntimeswidget.SuntimesActivity",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tdateWarning : ImageSpan to dateWarningIcon : ImageSpan in method protected updateViews(context Context) : void from class com.forrestguice.suntimeswidget.SuntimesActivity",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\ttimezoneWarning : ImageSpan to timezoneWarningIcon : ImageSpan in method protected updateViews(context Context) : void from class com.forrestguice.suntimeswidget.SuntimesActivity",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method\tprivate createSnackDateWarning() : Snackbar inlined to private showWarnings() : void in class com.forrestguice.suntimeswidget.SuntimesActivity",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method\tprivate createSnackTimezoneWarning() : Snackbar inlined to private showWarnings() : void in class com.forrestguice.suntimeswidget.SuntimesActivity",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/DSpace/DSpace.git",
  "sha1" : "a9bf1d869d40f0ecc6e8b2dc18f0865e563542ad",
  "url" : "https://github.com/DSpace/DSpace/commit/a9bf1d869d40f0ecc6e8b2dc18f0865e563542ad",
  "refactorings" : [ {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tvalue : T to value : Object in method public checkOperationValue(value Object) : void from class org.dspace.app.rest.repository.patch.factories.impl.PatchOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\titem : Item to item : ItemRest in method public perform(item ItemRest, operation Operation) : ItemRest from class org.dspace.app.rest.repository.patch.factories.impl.ItemDiscoverableReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to ItemRest in method public perform(item ItemRest, operation Operation) : ItemRest from class org.dspace.app.rest.repository.patch.factories.impl.ItemDiscoverableReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tcontext : Context in method public perform(context Context, item Item, operation Operation) : void from class org.dspace.app.rest.repository.patch.factories.impl.ItemDiscoverableReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tSQLException in method public perform(context Context, item Item, operation Operation) : void from class org.dspace.app.rest.repository.patch.factories.impl.ItemDiscoverableReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tAuthorizeException in method public perform(context Context, item Item, operation Operation) : void from class org.dspace.app.rest.repository.patch.factories.impl.ItemDiscoverableReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\titem : Item to item : ItemRest in method private replace(item ItemRest, operation Operation) : ItemRest from class org.dspace.app.rest.repository.patch.factories.impl.ItemDiscoverableReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to ItemRest in method private replace(item ItemRest, operation Operation) : ItemRest from class org.dspace.app.rest.repository.patch.factories.impl.ItemDiscoverableReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\toperation : Operation in method private replace(item ItemRest, operation Operation) : ItemRest from class org.dspace.app.rest.repository.patch.factories.impl.ItemDiscoverableReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tcontext : Context in method private replace(context Context, item Item, value Object) : void from class org.dspace.app.rest.repository.patch.factories.impl.ItemDiscoverableReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tvalue : Object in method private replace(context Context, item Item, value Object) : void from class org.dspace.app.rest.repository.patch.factories.impl.ItemDiscoverableReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tSQLException in method private replace(context Context, item Item, value Object) : void from class org.dspace.app.rest.repository.patch.factories.impl.ItemDiscoverableReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tAuthorizeException in method private replace(context Context, item Item, value Object) : void from class org.dspace.app.rest.repository.patch.factories.impl.ItemDiscoverableReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprotected remove(dspaceObject DSO, context Context, operation Operation) : void renamed to protected replace(restModel R, operation Operation) : R in class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to RestModel in method public patch(restModel R, operations List<Operation>) : RestModel from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\trestModel : R in method public patch(restModel R, operations List<Operation>) : RestModel from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tdspaceObject : DSO in method public patch(dspaceObject DSO, context Context, operations List<Operation>) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tcontext : Context in method public patch(dspaceObject DSO, context Context, operations List<Operation>) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tSQLException in method public patch(dspaceObject DSO, context Context, operations List<Operation>) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tAuthorizeException in method public patch(dspaceObject DSO, context Context, operations List<Operation>) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to R in method protected add(restModel R, operation Operation) : R from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\trestModel : R in method protected add(restModel R, operation Operation) : R from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tdspaceObject : DSO in method protected add(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tcontext : Context in method protected add(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tSQLException in method protected add(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tAuthorizeException in method protected add(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to R in method protected replace(restModel R, operation Operation) : R from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\trestModel : R in method protected replace(restModel R, operation Operation) : R from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tdspaceObject : DSO in method protected remove(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tcontext : Context in method protected remove(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tSQLException in method protected remove(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tAuthorizeException in method protected remove(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to R in method protected copy(restModel R, operation Operation) : R from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\trestModel : R in method protected copy(restModel R, operation Operation) : R from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tdspaceObject : DSO in method protected copy(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tcontext : Context in method protected copy(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tSQLException in method protected copy(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tAuthorizeException in method protected copy(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to R in method protected move(restModel R, operation Operation) : R from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\trestModel : R in method protected move(restModel R, operation Operation) : R from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tdspaceObject : DSO in method protected move(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tcontext : Context in method protected move(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tSQLException in method protected move(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tAuthorizeException in method protected move(dspaceObject DSO, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.AbstractResourcePatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method\tprivate replace(context Context, eperson EPerson, operation Operation) : void inlined to public perform(resource EPersonRest, operation Operation) : EPersonRest in class org.dspace.app.rest.repository.patch.factories.impl.EPersonNetidReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tresource : EPerson to resource : EPersonRest in method public perform(resource EPersonRest, operation Operation) : EPersonRest from class org.dspace.app.rest.repository.patch.factories.impl.EPersonNetidReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to EPersonRest in method public perform(resource EPersonRest, operation Operation) : EPersonRest from class org.dspace.app.rest.repository.patch.factories.impl.EPersonNetidReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tcontext : Context in method public perform(context Context, resource EPerson, operation Operation) : void from class org.dspace.app.rest.repository.patch.factories.impl.EPersonNetidReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tSQLException in method public perform(context Context, resource EPerson, operation Operation) : void from class org.dspace.app.rest.repository.patch.factories.impl.EPersonNetidReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tAuthorizeException in method public perform(context Context, resource EPerson, operation Operation) : void from class org.dspace.app.rest.repository.patch.factories.impl.EPersonNetidReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tResourcePatchOperation<Item> to ResourcePatchOperation<ItemRest> in method public getReplaceOperationForPath(path String) : ResourcePatchOperation<ItemRest> from class org.dspace.app.rest.repository.patch.factories.ItemOperationFactory",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tPatchBadRequestException in method public getReplaceOperationForPath(path String) : ResourcePatchOperation<ItemRest> from class org.dspace.app.rest.repository.patch.factories.ItemOperationFactory",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tResourcePatchOperation<EPerson> to ResourcePatchOperation<EPersonRest> in method public getReplaceOperationForPath(path String) : ResourcePatchOperation<EPersonRest> from class org.dspace.app.rest.repository.patch.factories.EPersonOperationFactory",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type\tPatchBadRequestException in method public getReplaceOperationForPath(path String) : ResourcePatchOperation<EPersonRest> from class org.dspace.app.rest.repository.patch.factories.EPersonOperationFactory",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tresource : EPerson to resource : EPersonRest in method public perform(resource EPersonRest, operation Operation) : EPersonRest from class org.dspace.app.rest.repository.patch.factories.impl.EPersonCertificateReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\titem : Item to item : ItemRest in method protected replace(item ItemRest, operation Operation) : ItemRest from class org.dspace.app.rest.repository.patch.ItemPatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to ItemRest in method protected replace(item ItemRest, operation Operation) : ItemRest from class org.dspace.app.rest.repository.patch.ItemPatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tcontext : Context in method protected replace(item Item, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.ItemPatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tSQLException in method protected replace(item Item, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.ItemPatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type\tAuthorizeException in method protected replace(item Item, context Context, operation Operation) : void from class org.dspace.app.rest.repository.patch.ItemPatch",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type\tvoid to EPersonRest in method public perform(resource EPersonRest, operation Operation) : EPersonRest from class org.dspace.app.rest.repository.patch.factories.impl.EPersonPasswordReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type\tresource : EPerson to resource : EPersonRest in method public perform(resource EPersonRest, operation Operation) : EPersonRest from class org.dspace.app.rest.repository.patch.factories.impl.EPersonPasswordReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter\tcontext : Context in method public perform(context Context, resource EPerson, operation Operation) : void from class org.dspace.app.rest.repository.patch.factories.impl.EPersonPasswordReplaceOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic getBooleanOperationValue(value Object) : Boolean extracted from private replace(context Context, item Item, value Object) : void in class org.dspace.app.rest.repository.patch.factories.impl.ItemDiscoverableReplaceOperation & moved to class org.dspace.app.rest.repository.patch.factories.impl.PatchOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tdiscoverable : Boolean to bool : Boolean in method public getBooleanOperationValue(value Object) : Boolean from class org.dspace.app.rest.repository.patch.factories.impl.PatchOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic getBooleanOperationValue(value Object) : Boolean extracted from private replace(context Context, eperson EPerson, operation Operation) : void in class org.dspace.app.rest.repository.patch.factories.impl.EPersonCertificateReplaceOperation & moved to class org.dspace.app.rest.repository.patch.factories.impl.PatchOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\trequireCert : Boolean to bool : Boolean in method public getBooleanOperationValue(value Object) : Boolean from class org.dspace.app.rest.repository.patch.factories.impl.PatchOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic getBooleanOperationValue(value Object) : Boolean extracted from private replace(context Context, eperson EPerson, operation Operation) : void in class org.dspace.app.rest.repository.patch.factories.impl.EPersonLoginReplaceOperation & moved to class org.dspace.app.rest.repository.patch.factories.impl.PatchOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\tcanLogin : Boolean to bool : Boolean in method public getBooleanOperationValue(value Object) : Boolean from class org.dspace.app.rest.repository.patch.factories.impl.PatchOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method\tpublic getBooleanOperationValue(value Object) : Boolean extracted from private replace(context Context, item Item, value Object) : void in class org.dspace.app.rest.repository.patch.factories.impl.ItemWithdrawReplaceOperation & moved to class org.dspace.app.rest.repository.patch.factories.impl.PatchOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable\twithdraw : Boolean to bool : Boolean in method public getBooleanOperationValue(value Object) : Boolean from class org.dspace.app.rest.repository.patch.factories.impl.PatchOperation",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ]
}, {
  "repository" : "https://github.com/novoda/download-manager.git",
  "sha1" : "ec495f487d164e1f94116a3ca297d01f1028ef74",
  "url" : "https://github.com/novoda/download-manager/commit/ec495f487d164e1f94116a3ca297d01f1028ef74",
  "refactorings" : [ {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier\tfinal in parameter selection : String in method public query(uri Uri, projection String[], selection String, selectionArgs String[], sort String) : Cursor from class com.novoda.downloadmanager.lib.DownloadProvider",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getContentResolver() : ContentResolver extracted from private reportProgress(state State) : void in class com.novoda.downloadmanager.lib.DownloadThread",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getContentResolver() : ContentResolver extracted from private handleEndOfStream(state State) : void in class com.novoda.downloadmanager.lib.DownloadThread",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getContentResolver() : ContentResolver extracted from private readFromResponse(state State, data byte[], entityStream InputStream) : int in class com.novoda.downloadmanager.lib.DownloadThread",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getContentResolver() : ContentResolver extracted from private updateDatabaseFromHeaders(state State) : void in class com.novoda.downloadmanager.lib.DownloadThread",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate getContentResolver() : ContentResolver extracted from private notifyThroughDatabase(state State, finalStatus int, errorMsg String, numFailed int) : void in class com.novoda.downloadmanager.lib.DownloadThread",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable\tdownloadStatus : int in method private runInternal() : void from class com.novoda.downloadmanager.lib.DownloadThread",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier\tfinal in variable pm : PowerManager in method private runInternal() : void from class com.novoda.downloadmanager.lib.DownloadThread",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter\tvisibility : int in method public BatchInfo(title String, description String, bigPictureUrl String, visibility int) from class com.novoda.downloadmanager.lib.BatchInfo",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method\tprivate queryForDownloads() : void extracted from private setupQueryingExample() : void in class com.novoda.downloadmanager.demo.parallel.MainActivity",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation\t@NonNull in parameter v : View in method public onClick(v View) : void from class com.novoda.downloadmanager.demo.parallel.MainActivity.setupDownloadingExample.setOnClickListener.new View.OnClickListener",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate getDownloadsPerBatch(downloads Collection<DownloadInfo>) : Map<Long,List<DownloadInfo>> renamed to private getClustersByNotificationTag(batches List<DownloadBatch>) : Map<String,List<DownloadBatch>> in class com.novoda.downloadmanager.lib.DownloadNotifier",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method\tprivate addDownloadToCluster(tag String, cluster Map<String,List<DownloadInfo>>, info DownloadInfo) : void renamed to private addBatchToCluster(tag String, cluster Map<String,List<DownloadBatch>>, batch DownloadBatch) : void in class com.novoda.downloadmanager.lib.DownloadNotifier",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method\tprivate updateWithLocked(batches Map<Long,BatchInfo>, downloads Collection<DownloadInfo>) : void inlined to public updateWith(batches List<DownloadBatch>) : void in class com.novoda.downloadmanager.lib.DownloadNotifier",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method\tprivate areAnyFailedAndVisible(downloads List<DownloadInfo>) : boolean inlined to private buildNotificationTag(batch DownloadBatch) : String in class com.novoda.downloadmanager.lib.DownloadNotifier",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "repository" : "https://github.com/forrestguice/SuntimesWidget.git",
    "sha1" : "1bacdbd25856d36f9ae4624f5d6699b46ac408a5",
    "url" : "https://github.com/forrestguice/SuntimesWidget/commit/1bacdbd25856d36f9ae4624f5d6699b46ac408a5",
    "refactorings" : [ {
      "type" : "Inline Method",
      "description" : "Inline Method\tprivate initGeneral() : void inlined to public onCreate(savedInstanceState Bundle) : void in class com.forrestguice.suntimeswidget.SuntimesSettingsActivity.GeneralPrefsFragment",
      "purity" : {
        "purityValue" : "-",
        "purityValidation" : "-",
        "purityComment" : "",
        "mappingState" : "",
        "validationComment" : ""
      }
    }, {
      "type" : "Extract Method",
      "description" : "Extract Method\tprivate initLegacyPrefs() : void extracted from public onCreate(icicle Bundle) : void in class com.forrestguice.suntimeswidget.SuntimesSettingsActivity",
      "purity" : {
        "purityValue" : "-",
        "purityValidation" : "-",
        "purityComment" : "",
        "mappingState" : "",
        "validationComment" : ""
      }
    }, {
      "type" : "Split Conditional",
      "description" : "Split Conditional\tif(action != null && action.equals(ACTION_PREFS_WIDGETLIST)) to [if(action.equals(ACTION_PREFS_GENERAL)), if(action != null)] in method private initLegacyPrefs() : void from class com.forrestguice.suntimeswidget.SuntimesSettingsActivity",
      "purity" : {
        "purityValue" : "-",
        "purityValidation" : "-",
        "purityComment" : "",
        "mappingState" : "",
        "validationComment" : ""
      }
    }, {
      "type" : "Split Conditional",
      "description" : "Split Conditional\tif(action != null && action.equals(ACTION_PREFS_PLACES)) to [if(action.equals(ACTION_PREFS_UI)), if(action.equals(ACTION_PREFS_PLACES))] in method private initLegacyPrefs() : void from class com.forrestguice.suntimeswidget.SuntimesSettingsActivity",
      "purity" : {
        "purityValue" : "-",
        "purityValidation" : "-",
        "purityComment" : "",
        "mappingState" : "",
        "validationComment" : ""
      }
    }, {
      "type" : "Split Conditional",
      "description" : "Split Conditional\tif(action != null && action.equals(ACTION_PREFS_PLACES)) to [if(action.equals(ACTION_PREFS_LOCALE)), if(action.equals(ACTION_PREFS_PLACES))] in method private initLegacyPrefs() : void from class com.forrestguice.suntimeswidget.SuntimesSettingsActivity",
      "purity" : {
        "purityValue" : "-",
        "purityValidation" : "-",
        "purityComment" : "",
        "mappingState" : "",
        "validationComment" : ""
      }
    }, {
      "type" : "Split Conditional",
      "description" : "Split Conditional\tif(action != null && action.equals(ACTION_PREFS_PLACES)) to [if(action != null), if(action.equals(ACTION_PREFS_PLACES))] in method private initLegacyPrefs() : void from class com.forrestguice.suntimeswidget.SuntimesSettingsActivity",
      "purity" : {
        "purityValue" : "-",
        "purityValidation" : "-",
        "purityComment" : "",
        "mappingState" : "",
        "validationComment" : ""
      }
    }, {
      "type" : "Split Conditional",
      "description" : "Split Conditional\tif(action != null && action.equals(ACTION_PREFS_UI)) to [if(action != null), if(action.equals(ACTION_PREFS_UI))] in method private initLegacyPrefs() : void from class com.forrestguice.suntimeswidget.SuntimesSettingsActivity",
      "purity" : {
        "purityValue" : "-",
        "purityValidation" : "-",
        "purityComment" : "",
        "mappingState" : "",
        "validationComment" : ""
      }
    }, {
      "type" : "Split Conditional",
      "description" : "Split Conditional\tif(action != null && action.equals(ACTION_PREFS_LOCALE)) to [if(action != null), if(action.equals(ACTION_PREFS_LOCALE))] in method private initLegacyPrefs() : void from class com.forrestguice.suntimeswidget.SuntimesSettingsActivity",
      "purity" : {
        "purityValue" : "-",
        "purityValidation" : "-",
        "purityComment" : "",
        "mappingState" : "",
        "validationComment" : ""
      }
    }, {
      "type" : "Rename Method",
      "description" : "Rename Method\tpublic isGPSEnabled() : boolean renamed to public isLocationEnabled() : boolean in class com.forrestguice.suntimeswidget.getfix.GetFixHelper",
      "purity" : {
        "purityValue" : "-",
        "purityValidation" : "-",
        "purityComment" : "",
        "mappingState" : "",
        "validationComment" : ""
      }
    }, {
      "type" : "Rename Method",
      "description" : "Rename Method\tpublic isGPSEnabled(context Context) : boolean renamed to public isGPSProviderEnabled(context Context) : boolean in class com.forrestguice.suntimeswidget.getfix.GetFixHelper",
      "purity" : {
        "purityValue" : "-",
        "purityValidation" : "-",
        "purityComment" : "",
        "mappingState" : "",
        "validationComment" : ""
      }
    }, {
      "type" : "Add Parameter",
      "description" : "Add Parameter\tuseExternalStorage : boolean in method public ExportPlacesTask(context Context, exportTarget String, useExternalStorage boolean, saveToCache boolean) from class com.forrestguice.suntimeswidget.getfix.ExportPlacesTask",
      "purity" : {
        "purityValue" : "-",
        "purityValidation" : "-",
        "purityComment" : "",
        "mappingState" : "",
        "validationComment" : ""
      }
    }, {
      "type" : "Replace Attribute With Variable",
      "description" : "Replace Attribute With Variable\tusedExternalStorage : boolean to tryExternalStorage : boolean in method protected doInBackground(params Object...) : ExportResult from class com.forrestguice.suntimeswidget.getfix.ExportPlacesTask",
      "purity" : {
        "purityValue" : "-",
        "purityValidation" : "-",
        "purityComment" : "",
        "mappingState" : "",
        "validationComment" : ""
      }
    },  {
      "type" : "Move And Rename Method",
      "description" : "Move And Rename Method\tprivate loadGeneral(context Context) : void from class com.forrestguice.suntimeswidget.SuntimesSettingsActivity.GeneralPrefsFragment to private loadPref_general(context Context, calculatorPref ListPreference) : void from class com.forrestguice.suntimeswidget.SuntimesSettingsActivity",
      "purity" : {
        "purityValue" : "-",
        "purityValidation" : "-",
        "purityComment" : "",
        "mappingState" : "",
        "validationComment" : ""
      }
    } ]
  } ]
} ]
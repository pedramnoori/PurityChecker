[ {
  "id" : 1100435,
  "repository" : "https://github.com/realm/realm-java.git",
  "sha1" : "6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb",
  "url" : "https://github.com/realm/realm-java/commit/6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb",
  "author" : "Christian Melchior",
  "time" : "6/8/15 7:26 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private showStatus(txt String) : void extracted from private showStatus(realm Realm) : void in class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private showStatus(txt String) : void extracted from protected onCreate(savedInstanceState Bundle) : void in class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
    "comment" : "The method showStatus(txt String) is added in the refactored version and indeed is called inside onCreate(..) but there ",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type path3 : String to config0 : RealmConfiguration in method protected onCreate(savedInstanceState Bundle) : void in class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable realmMigration : RealmMigration in method public migrateRealm(configuration RealmConfiguration, migration RealmMigration) : void from class io.realm.Realm",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable config0 : RealmConfiguration in method protected onCreate(savedInstanceState Bundle) : void from class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable config2 : RealmConfiguration in method protected onCreate(savedInstanceState Bundle) : void from class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable config1 : RealmConfiguration in method protected onCreate(savedInstanceState Bundle) : void from class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1250
}, {
  "id" : 1100663,
  "repository" : "https://github.com/rstudio/rstudio.git",
  "sha1" : "cb49e436b9d7ee55f2531ebc2ef1863f5c9ba9fe",
  "url" : "https://github.com/rstudio/rstudio/commit/cb49e436b9d7ee55f2531ebc2ef1863f5c9ba9fe",
  "author" : "JJ Allaire",
  "time" : "6/8/15 9:53 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected setMaxHeight(maxHeight int) : void extracted from protected wrapMenuBar(menuBar ToolbarMenuBar) : Widget in class org.rstudio.core.client.widget.ScrollableToolbarPopupMenu",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2603
}, {
  "id" : 1100842,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "7ed3f273ab0caf0337c22f0b721d51829bb0c877",
  "url" : "https://github.com/JetBrains/intellij-community/commit/7ed3f273ab0caf0337c22f0b721d51829bb0c877",
  "author" : "Ekaterina Tuzova",
  "time" : "6/8/15 10:29 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private addCoursesFromStepic(result List<CourseInfo>, pageNumber int) : boolean extracted from public getCourses() : List<CourseInfo> in class com.jetbrains.edu.stepic.EduStepicConnector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable coursesContainer : CoursesContainer in method private addCoursesFromStepic(result List<CourseInfo>, pageNumber int) : boolean from class com.jetbrains.edu.stepic.EduStepicConnector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 27567
}, {
  "id" : 1100856,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "7a4dab88185553bd09e827839fdf52e870ef7088",
  "url" : "https://github.com/JetBrains/intellij-community/commit/7a4dab88185553bd09e827839fdf52e870ef7088",
  "author" : "Dmitry Batrak",
  "time" : "6/8/15 8:07 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getDataFile(name String) : File extracted from private getJarFile(name String) : VirtualFile in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getDocumentationText(sourceEditorText String) : String extracted from public testImagesInsideJavadocJar() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable useDt : boolean to anchorPresent : boolean in method protected getParseSettings(url String) : ParseSettings from class com.intellij.codeInsight.documentation.AbstractExternalFilter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Trinity<Pattern,Pattern,Boolean> to ParseSettings in method protected getParseSettings(url String) : ParseSettings from class com.intellij.codeInsight.javadoc.JavaDocExternalFilter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Trinity<Pattern,Pattern,Boolean> to ParseSettings in method protected getParseSettings(url String) : ParseSettings from class com.intellij.codeInsight.documentation.AbstractExternalFilter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type ourPackageInfoSettings : Trinity<Pattern,Pattern,Boolean> to ourPackageInfoSettings : ParseSettings in class com.intellij.codeInsight.javadoc.JavaDocExternalFilter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type settings : Trinity<Pattern,Pattern,Boolean> to settings : ParseSettings in method protected doBuildFromStream(url String, input Reader, data StringBuilder, searchForEncoding boolean, matchStart boolean) : void from class com.intellij.codeInsight.documentation.AbstractExternalFilter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable popup : JBPopup to imgMatcher : Matcher in method public testImagesInsideJavadocJar() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type popup : JBPopup to imgMatcher : Matcher in method public testImagesInsideJavadocJar() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type documentationComponent : DocumentationComponent to relativeUrl : String in method public testImagesInsideJavadocJar() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type editorPane : JEditorPane to actualText : String in method public testReferenceStyleDoesntMatchBytecodeVersion() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type document : HTMLDocument to expectedText : String in method public testReferenceStyleDoesntMatchBytecodeVersion() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getImageDataFromDocumentationComponent(documentationComponent DocumentationComponent) : byte[] renamed to public testReferenceStyleDoesntMatchBytecodeVersion() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type documentationComponent : DocumentationComponent to documentationComponent : MockDocumentationComponent in method private getDocumentationText(sourceEditorText String) : String from class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 28911
}, {
  "id" : 1100868,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "7655200f58293e5a30bf8b3cbb29ebadae374564",
  "url" : "https://github.com/JetBrains/intellij-community/commit/7655200f58293e5a30bf8b3cbb29ebadae374564",
  "author" : "Egor.Ushakov",
  "time" : "6/8/15 6:06 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private checkRemap() : void extracted from public getLine() : int in class com.intellij.debugger.engine.RemappedSourcePosition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private checkRemap() : void extracted from public getOffset() : int in class com.intellij.debugger.engine.RemappedSourcePosition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter document : Document to position : XSourcePosition in method public runToCursor(position XSourcePosition, ignoreBreakpoints boolean) : void in class com.intellij.debugger.impl.DebuggerSession",
    "comment" : "<p>Parameters <span class='blob-code-inner blob-code-marker-deletion'><span class='pl-smi x x-first'>Document</span> <span class='pl-v x'>document</span><span class='x'>, </span><span class='pl-k x'>int</span> <span class='pl-v x x-last'>line</span></span> are merged into <span class='blob-code-inner blob-code-marker-addition'><span class='pl-smi x'>XSourcePosition</span> <span class='pl-v x x-last'>position</span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [document : Document, line : int] to position : XSourcePosition in method public runToCursor(position XSourcePosition, ignoreBreakpoints boolean) : void from class com.intellij.debugger.impl.DebuggerSession",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [document : Document, lineIndex : int] to position : XSourcePosition in method public addRunToCursorBreakpoint(position XSourcePosition, ignoreBreakpoints boolean) : RunToCursorBreakpoint from class com.intellij.debugger.ui.breakpoints.BreakpointManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [document : Document, lineIndex : int] to position : XSourcePosition in method public createRunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) : ResumeCommand from class com.intellij.debugger.engine.DebugProcessImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter document : Document to position : XSourcePosition in method public createRunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) : ResumeCommand in class com.intellij.debugger.engine.DebugProcessImpl",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter document : Document to position : XSourcePosition in method private RunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) in class com.intellij.debugger.engine.DebugProcessImpl.RunToCursorCommand",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter document : Document to position : XSourcePosition in method public addRunToCursorBreakpoint(position XSourcePosition, ignoreBreakpoints boolean) : RunToCursorBreakpoint in class com.intellij.debugger.ui.breakpoints.BreakpointManager",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter document : Document to classType : ReferenceType in method protected acceptLocation(debugProcess DebugProcessImpl, classType ReferenceType, loc Location) : boolean in class com.intellij.debugger.ui.breakpoints.RunToCursorBreakpoint",
    "comment" : "<p>method acceptLocation() is new</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter lineIndex : int to loc : Location in method protected acceptLocation(debugProcess DebugProcessImpl, classType ReferenceType, loc Location) : boolean in class com.intellij.debugger.ui.breakpoints.RunToCursorBreakpoint",
    "comment" : "<p>method acceptLocation() is new</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable virtualFile : VirtualFile to position : SourcePosition in method public compute() : Boolean in class com.intellij.debugger.ui.breakpoints.RunToCursorBreakpoint.acceptLocation.runReadAction",
    "comment" : "<p>method acceptLocation() is new</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable line : int to offset : int in method public getCaretPosition(project Project, context DataContext) : XSourcePosition from class com.intellij.xdebugger.impl.XDebuggerUtilImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type document : Document to position : XSourcePosition in method public createRunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) : ResumeCommand in class com.intellij.debugger.engine.DebugProcessImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type document : Document to position : XSourcePosition in method private RunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) in class com.intellij.debugger.engine.DebugProcessImpl.RunToCursorCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type document : Document to position : XSourcePosition in method public runToCursor(position XSourcePosition, ignoreBreakpoints boolean) : void in class com.intellij.debugger.impl.DebuggerSession",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type document : Document to position : XSourcePosition in method public addRunToCursorBreakpoint(position XSourcePosition, ignoreBreakpoints boolean) : RunToCursorBreakpoint in class com.intellij.debugger.ui.breakpoints.BreakpointManager",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type document : Document to classType : ReferenceType in method protected acceptLocation(debugProcess DebugProcessImpl, classType ReferenceType, loc Location) : boolean in class com.intellij.debugger.ui.breakpoints.RunToCursorBreakpoint",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to void in method private checkRemap() : void in class com.intellij.debugger.engine.RemappedSourcePosition",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOffset() : int renamed to private checkRemap() : void in class com.intellij.debugger.engine.RemappedSourcePosition",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter position : XSourcePosition in method public createRunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) : ResumeCommand from class com.intellij.debugger.engine.DebugProcessImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter position : XSourcePosition in method private RunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) from class com.intellij.debugger.engine.DebugProcessImpl.RunToCursorCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter position : XSourcePosition in method public runToCursor(position XSourcePosition, ignoreBreakpoints boolean) : void from class com.intellij.debugger.impl.DebuggerSession",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter position : XSourcePosition in method public addRunToCursorBreakpoint(position XSourcePosition, ignoreBreakpoints boolean) : RunToCursorBreakpoint from class com.intellij.debugger.ui.breakpoints.BreakpointManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [document : Document, lineIndex : int] to position : XSourcePosition in method private RunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) from class com.intellij.debugger.engine.DebugProcessImpl.RunToCursorCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable method : Method in method public getSourcePosition(location Location) : SourcePosition from class com.intellij.debugger.engine.PositionManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter ignoreBreakpoints : boolean in method public createRunToCursorCommand(suspendContext SuspendContextImpl, document Document, lineIndex int, ignoreBreakpoints boolean) : ResumeCommand from class com.intellij.debugger.engine.DebugProcessImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable breakpointManager : BreakpointManager in method private RunToCursorCommand(suspendContext SuspendContextImpl, document Document, lineIndex int, ignoreBreakpoints boolean) from class com.intellij.debugger.engine.DebugProcessImpl.RunToCursorCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable line : int in method public getCaretPosition(project Project, context DataContext) : XSourcePosition from class com.intellij.xdebugger.impl.XDebuggerUtilImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable psiFile : PsiFile in method public createRunToCursorCommand(suspendContext SuspendContextImpl, document Document, lineIndex int, ignoreBreakpoints boolean) : ResumeCommand from class com.intellij.debugger.engine.DebugProcessImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 37410
}, {
  "id" : 1101296,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "4a2247c24efee48de53ca07302b6810ab7205621",
  "url" : "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
  "author" : "Teryk Bellahsene",
  "time" : "6/8/15 11:12 AM",
  "refactorings" : [ {
    "type" : "Move Package",
    "description" : "Move Package org.sonar.server.custommeasure to org.sonar.server.measure.custom",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.persistence.CustomMeasureDao moved to org.sonar.server.measure.custom.persistence.CustomMeasureDao",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.persistence.CustomMeasureDaoTest moved to org.sonar.server.measure.custom.persistence.CustomMeasureDaoTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.persistence.CustomMeasureTesting moved to org.sonar.server.measure.custom.persistence.CustomMeasureTesting",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWs moved to org.sonar.server.measure.custom.ws.CustomMeasuresWs",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsAction moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsAction",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsModule moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsModule",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsModuleTest moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsModuleTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsTest moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.ws.DeleteAction moved to org.sonar.server.measure.custom.ws.DeleteAction",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.ws.DeleteActionTest moved to org.sonar.server.measure.custom.ws.DeleteActionTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3691
}, {
  "id" : 1101310,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "abbf32571232db81a5343db17a933a9ce6923b44",
  "url" : "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
  "author" : "Simon Brandhof",
  "time" : "6/8/15 10:22 AM",
  "refactorings" : [ {
    "type" : "Rename Package",
    "description" : "Rename Package org.sonar.server.notifications to org.sonar.server.notification",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.DefaultNotificationManagerTest moved to org.sonar.server.notification.DefaultNotificationManagerTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.NotificationChannelTest moved to org.sonar.server.notification.NotificationChannelTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.NotificationDispatcher moved to org.sonar.server.notification.NotificationDispatcher",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.NotificationDispatcherMetadata moved to org.sonar.server.notification.NotificationDispatcherMetadata",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.NotificationDispatcherMetadataTest moved to org.sonar.server.notification.NotificationDispatcherMetadataTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.NotificationDispatcherTest moved to org.sonar.server.notification.NotificationDispatcherTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.NotificationCenter moved to org.sonar.server.notification.NotificationCenter",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.NotificationCenterTest moved to org.sonar.server.notification.NotificationCenterTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.NotificationService moved to org.sonar.server.notification.NotificationService",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.NotificationServiceTest moved to org.sonar.server.notification.NotificationServiceTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.NotificationTest moved to org.sonar.server.notification.NotificationTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.email.AlertsEmailTemplate moved to org.sonar.server.notification.email.AlertsEmailTemplate",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.email.AlertsEmailTemplateTest moved to org.sonar.server.notification.email.AlertsEmailTemplateTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.email.EmailNotificationChannel moved to org.sonar.server.notification.email.EmailNotificationChannel",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.email.EmailNotificationChannelTest moved to org.sonar.server.notification.email.EmailNotificationChannelTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.DefaultNotificationManager moved to org.sonar.server.notification.DefaultNotificationManager",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface org.sonar.server.notification.NotificationManager from class org.sonar.server.notification.DefaultNotificationManager",
    "comment" : "NotificationManager existed in the previous revision too",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.NotificationManager moved to org.sonar.server.notification.NotificationManager",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @RequiresDB in class org.sonar.core.notification.DefaultNotificationManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @ServerSide in class org.sonar.core.notification.NotificationManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @BatchSide in class org.sonar.core.notification.NotificationManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @InstantiationStrategy(InstantiationStrategy.PER_BATCH) in class org.sonar.core.notification.NotificationManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 9294
}, {
  "id" : 1102793,
  "repository" : "https://github.com/crashub/crash.git",
  "sha1" : "2801269c7e47bd6e243612654a74cee809d20959",
  "url" : "https://github.com/crashub/crash/commit/2801269c7e47bd6e243612654a74cee809d20959",
  "author" : "Oliver Trosien",
  "time" : "6/7/15 11:15 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private convertPemKeyPair(pemKeyPair PEMKeyPair) : KeyPair extracted from public loadKeys() : Iterable<KeyPair> in class org.crsh.auth.FilePublicKeyProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable keyPair : PEMKeyPair to pemKeyPair : PEMKeyPair in method private convertPemKeyPair(pemKeyPair PEMKeyPair) : KeyPair from class org.crsh.auth.FilePublicKeyProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 417
}, {
  "id" : 1102923,
  "repository" : "https://github.com/jeeeyul/eclipse-themes.git",
  "sha1" : "72f61ec9b85a740fd09d10ad711e275d2ec2e564",
  "url" : "https://github.com/jeeeyul/eclipse-themes/commit/72f61ec9b85a740fd09d10ad711e275d2ec2e564",
  "author" : "Jeeeyul Lee",
  "time" : "6/8/15 6:29 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class net.jeeeyul.eclipse.themes.test.e4app.TestView moved to net.jeeeyul.eclipse.themes.test.e4app.views.TestView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.jeeeyul.eclipse.themes.test.e4app.SplashHandler moved to net.jeeeyul.eclipse.themes.test.e4app.handlers.SplashHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.jeeeyul.eclipse.themes.test.e4app.AboutHandler moved to net.jeeeyul.eclipse.themes.test.e4app.handlers.AboutHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 313
}, {
  "id" : 1103199,
  "repository" : "https://github.com/oblac/jodd.git",
  "sha1" : "722ef9156896248ef3fbe83adde0f6ff8f46856a",
  "url" : "https://github.com/oblac/jodd/commit/722ef9156896248ef3fbe83adde0f6ff8f46856a",
  "author" : "Igor Spasi?",
  "time" : "6/8/15 6:08 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected resolveFormEncoding() : String extracted from protected formBuffer() : Buffer in class jodd.http.HttpBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @MultipartConfig in class jodd.http.Echo2Servlet",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable utf8Stirng : String in method protected formBuffer() : Buffer from class jodd.http.HttpBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1225
}, {
  "id" : 1103658,
  "repository" : "https://github.com/glyptodon/guacamole-client.git",
  "sha1" : "ebb483320d971ff4d9e947309668f5da1fcd3d23",
  "url" : "https://github.com/glyptodon/guacamole-client/commit/ebb483320d971ff4d9e947309668f5da1fcd3d23",
  "author" : "Michael Jumper",
  "time" : "6/8/15 5:46 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private CONFIRM_NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private CONFIRM_NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private logger : Logger from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private CONFIRM_NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private CONFIRM_NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private EXPIRED_PASSWORD : CredentialsInfo from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private EXPIRED_PASSWORD : CredentialsInfo from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type GuacamoleException in method public retrieveUser(credentials Credentials) : ModeledUser from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1103823,
  "repository" : "https://github.com/raphw/byte-buddy.git",
  "sha1" : "372f4ae6cebcd664e3b43cade356d1df233f6467",
  "url" : "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
  "author" : "Rafael Winterhalter",
  "time" : "6/8/15 12:07 PM",
  "refactorings" : [ {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection to public ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Retaining moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.Retaining",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public onType(typeDescription TypeDescription) : TypeVariableProxy from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to public onType(typeDescription TypeDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion, Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the method is the same since both class implement the same extends the same class | Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP. However, I would mark the entire thing as a rename class. All the methods/attributes of the removed class is being repeated (with small modifications) in the new class. Matin, Davood: FP, condidate move and rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion, Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the method is the same since both class implement the same extends the same class | Davood: same as above",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from public prepare(instrumentedType InstrumentedType) : InstrumentedType in class net.bytebuddy.implementation.FieldAccessor.ForNamedField.PreparationHandler.FieldDefiner & moved to class net.bytebuddy.dynamic.TargetType",
    "comment" : "call to resolve() with three args in old vrs call to resolve() with two args in new",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from protected resolveReturnType(instrumentedType TypeDescription) : TypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken & moved to class net.bytebuddy.dynamic.TargetType",
    "comment" : "The call to method resolve() with three params is changed to method resolve() with two params in the refactored version. Not an extract method refactroing.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from protected resolveFieldType(instrumentedType TypeDescription) : TypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.FieldToken & moved to class net.bytebuddy.dynamic.TargetType",
    "comment" : "call to resolve() with three args in old vrs call to resolve() with two args in new",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private substitutionMatcher : ElementMatcher<? super TypeDescription> from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to private substitutionMatcher : ElementMatcher<? super TypeDescription> from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion. Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the attribute is the same since both class implement the same extends the same class |  Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private substitute : TypeDescription from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to private substitute : TypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion. Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the attribute is the same since both class implement the same extends the same class | Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor moved and renamed to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable resolved : List<GenericTypeDescription> to substituted : List<GenericTypeDescription> in method public resolve(typeDescriptions List<? extends GenericTypeDescription>, substitute TypeDescription) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter typeList : List<? extends GenericTypeDescription> to typeDescriptions : List<? extends GenericTypeDescription> in method public resolve(typeDescriptions List<? extends GenericTypeDescription>, substitute TypeDescription) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private MethodToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, methodDescription MethodDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute targetType : TypeDescription to levelType : TypeDescription in class net.bytebuddy.dynamic.scaffold.inline.InlineInstrumentedTypeTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected ParameterToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, parameterDescription ParameterDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.ParameterToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private FieldToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, fieldDescription FieldDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.FieldToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type parameterTypes : List<? extends TypeDescription> to parameterTypes : List<? extends GenericTypeDescription> in method public MethodToken(parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type exceptionTypes : List<? extends TypeDescription> to exceptionTypes : List<? extends GenericTypeDescription> in method public MethodToken(parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type returnType : TypeDescription to returnType : GenericTypeDescription in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type parameterTypes : List<? extends TypeDescription> to parameterTypes : List<? extends GenericTypeDescription> in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type exceptionTypes : List<? extends TypeDescription> to exceptionTypes : List<? extends GenericTypeDescription> in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private FieldToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, fieldDescription FieldDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.FieldToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private MethodToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, methodDescription MethodDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected ParameterToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, parameterDescription ParameterDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.ParameterToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type exceptionMatcher : ElementMatcher<? super List<? extends TypeDescription>> to exceptionMatcher : ElementMatcher<? super Iterable<? extends TypeDescription>> in method public declaresException(exceptionMatcher ElementMatcher<? super Iterable<? extends TypeDescription>>) : ElementMatcher.Junction<T> from class net.bytebuddy.matcher.ElementMatchers",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method protected resolveReturnType(instrumentedType TypeDescription) : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method protected resolveParameterTypes(instrumentedType TypeDescription) : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method protected resolveExceptionTypes(instrumentedType TypeDescription) : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method public getReturnType() : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method public getParameterTypes() : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method public getExceptionTypes() : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method protected resolveFieldType(instrumentedType TypeDescription) : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.FieldToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter substitutionMatcher : ElementMatcher<? super TypeDescription> to typeDescription : GenericTypeDescription in method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription in class net.bytebuddy.dynamic.TargetType",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type returnType : TypeDescription to returnType : GenericTypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type parameterTypes : List<TypeDescription> to parameterTypes : List<GenericTypeDescription> in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type exceptionTypes : List<TypeDescription> to exceptionTypes : List<GenericTypeDescription> in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type parameterTypes : TypeList to parameterTypes : GenericTypeList in class net.bytebuddy.dynamic.DynamicTypeBuilderTokenTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type exceptionTypes : TypeList to exceptionTypes : GenericTypeList in class net.bytebuddy.dynamic.DynamicTypeBuilderTokenTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection to public ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.ForType moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForType",
    "comment" : "<p>Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getInterfacesGen() : GenericTypeList from class net.bytebuddy.description.type.TypeDescription to public getInterfacesGen() : GenericTypeList from class net.bytebuddy.description.type.generic.GenericTypeDescription",
    "comment" : "<p>These are abstract methods</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getSuperTypeGen() : GenericTypeDescription from class net.bytebuddy.description.type.TypeDescription to public getSuperTypeGen() : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription",
    "comment" : "<p>this is an abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter substitutionMatcher : ElementMatcher<? super TypeDescription> in method public resolve(typeList List<? extends GenericTypeDescription>, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public asRawType() : TypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.ForWildcardType",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected ForType(substitute TypeDescription) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected ForRawType(substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType to public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter substitutionMatcher : ElementMatcher<? super TypeDescription> in method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter substitute : TypeDescription in method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter observed : TypeDescription to typeDescription : TypeDescription in method public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to public in attribute public ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected AbstractBase(loadedTypeInitializer LoadedTypeInitializer, typeInitializer TypeInitializer, matcher ElementMatcher<? super TypeDescription>, typeVariables List<? extends GenericTypeDescription>, fieldDescriptions List<? extends FieldDescription>, methodDescriptions List<? extends MethodDescription>) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected ForMethod(substitute TypeDescription, typeVariableMethodMatcher ElementMatcher<? super MethodDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in method protected ForMethod(substitute TypeDescription, typeVariableMethodMatcher ElementMatcher<? super MethodDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in method protected ForMethod(substitute TypeDescription, typeVariableMethodMatcher ElementMatcher<? super MethodDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getSuperTypeGen() : GenericTypeDescription extracted from public next() : GenericTypeDescription in class net.bytebuddy.description.type.TypeDescription.AbstractTypeDescription.SuperTypeIterator & moved to class net.bytebuddy.description.type.generic.GenericTypeDescription.ForParameterizedType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4590
}, {
  "id" : 1103915,
  "repository" : "https://github.com/Athou/commafeed.git",
  "sha1" : "18a7bd1fd1a83b3b8d1b245e32f78c0b4443b7a7",
  "url" : "https://github.com/Athou/commafeed/commit/18a7bd1fd1a83b3b8d1b245e32f78c0b4443b7a7",
  "author" : "Athou",
  "time" : "6/8/15 10:53 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private fetch(url String) : byte[] extracted from public fetch(feed Feed) : byte[] in class com.commafeed.backend.favicon.DefaultFaviconFetcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 256
}, {
  "id" : 1103963,
  "repository" : "https://github.com/fabric8io/fabric8.git",
  "sha1" : "8127b21a220ca677c4e59961d019e7753da7ea6e",
  "url" : "https://github.com/fabric8io/fabric8/commit/8127b21a220ca677c4e59961d019e7753da7ea6e",
  "author" : "Jimmi Dyson",
  "time" : "6/8/15 8:49 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected getProbe(prefix String) : Probe extracted from protected getLivenessProbe() : Probe in class io.fabric8.maven.JsonMojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 13059
}, {
  "id" : 1104589,
  "repository" : "https://github.com/puniverse/quasar.git",
  "sha1" : "c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
  "url" : "https://github.com/puniverse/quasar/commit/c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
  "author" : "pron",
  "time" : "6/8/15 8:49 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected failedSubscribe(s Subscription) : void extracted from public onSubscribe(s Subscription) : void in class co.paralleluniverse.strands.channels.reactivestreams.ChannelSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected failedSubscribe(s Subscriber<? super T>, t Throwable) : void extracted from public subscribe(s Subscriber<? super T>) : void in class co.paralleluniverse.strands.channels.reactivestreams.ChannelPublisher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable e : Exception to t : Throwable in method protected failedSubscribe(s Subscriber<? super T>, t Throwable) : void from class co.paralleluniverse.strands.channels.reactivestreams.ChannelPublisher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : Exception to t : Throwable in method protected failedSubscribe(s Subscriber<? super T>, t Throwable) : void from class co.paralleluniverse.strands.channels.reactivestreams.ChannelPublisher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 548
}, {
  "id" : 1104637,
  "repository" : "https://github.com/dreamhead/moco.git",
  "sha1" : "55ffa2f3353c5dc77fe6b790e5e045b76a07a772",
  "url" : "https://github.com/dreamhead/moco/commit/55ffa2f3353c5dc77fe6b790e5e045b76a07a772",
  "author" : "dreamhead",
  "time" : "6/8/15 11:18 AM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected onRequestAttached(matcher RequestMatcher) : HttpResponseSetting from class com.github.dreamhead.moco.internal.ActualHttpServer to protected onRequestAttached(matcher RequestMatcher) : HttpResponseSetting from class com.github.dreamhead.moco.internal.HttpConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public redirectTo(url String) : HttpResponseSetting from class com.github.dreamhead.moco.internal.ActualHttpServer to public redirectTo(url String) : HttpResponseSetting from class com.github.dreamhead.moco.internal.HttpConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 472
}, {
  "id" : 1104952,
  "repository" : "https://github.com/gradle/gradle.git",
  "sha1" : "04bcfe98dbe7b05e508559930c21379ece845732",
  "url" : "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
  "author" : "Cedric Champeau",
  "time" : "6/8/15 9:02 AM",
  "refactorings" : [ {
    "type" : "Extract Interface",
    "description" : "Extract Interface org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedArtifactsContainer from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ResolvedArtifactResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.gradle.internal.component.model.ComponentArtifactIdentifier moved to org.gradle.api.artifacts.component.ComponentArtifactIdentifier",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method private assertHasArtifacts() : void from class org.gradle.api.internal.artifacts.ResolverResults to private assertHasArtifacts() : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method private assertHasResult() : void from class org.gradle.api.internal.artifacts.ResolverResults to private assertHasResult() : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public eachResolvedProject(action Action<ResolvedProjectConfiguration>) : void from class org.gradle.api.internal.artifacts.ResolverResults to public eachResolvedProject(action Action<ResolvedProjectConfiguration>) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public failed(failure ResolveException) : void from class org.gradle.api.internal.artifacts.ResolverResults to public failed(failure ResolveException) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getArtifactsBuilder() : ResolvedArtifactsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to public getArtifactsBuilder() : ResolvedArtifactsBuilder from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getGraphResults() : ResolvedGraphResults from class org.gradle.api.internal.artifacts.ResolverResults to public getGraphResults() : ResolvedGraphResults from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getTransientConfigurationResultsBuilder() : TransientConfigurationResultsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to public getTransientConfigurationResultsBuilder() : TransientConfigurationResultsBuilder from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public resolved(resolutionResult ResolutionResult, resolvedLocalComponentsResult ResolvedLocalComponentsResult) : void from class org.gradle.api.internal.artifacts.ResolverResults to public resolved(resolutionResult ResolutionResult, resolvedLocalComponentsResult ResolvedLocalComponentsResult) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public retainState(graphResults ResolvedGraphResults, artifactResults ResolvedArtifactsBuilder, transientConfigurationResultsBuilder TransientConfigurationResultsBuilder) : void from class org.gradle.api.internal.artifacts.ResolverResults to public retainState(graphResults ResolvedGraphResults, artifactResults ResolvedArtifactsBuilder, transientConfigurationResultsBuilder TransientConfigurationResultsBuilder) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public withResolvedConfiguration(resolvedConfiguration ResolvedConfiguration) : void from class org.gradle.api.internal.artifacts.ResolverResults to public withResolvedConfiguration(resolvedConfiguration ResolvedConfiguration) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private fatalFailure : ResolveException from class org.gradle.api.internal.artifacts.ResolverResults to private fatalFailure : ResolveException from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private graphResults : ResolvedGraphResults from class org.gradle.api.internal.artifacts.ResolverResults to private graphResults : ResolvedGraphResults from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private resolutionResult : ResolutionResult from class org.gradle.api.internal.artifacts.ResolverResults to private resolutionResult : ResolutionResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private resolvedConfiguration : ResolvedConfiguration from class org.gradle.api.internal.artifacts.ResolverResults to private resolvedConfiguration : ResolvedConfiguration from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private resolvedLocalComponentsResult : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.ResolverResults to private resolvedLocalComponentsResult : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private transientConfigurationResultsBuilder : TransientConfigurationResultsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to private transientConfigurationResultsBuilder : TransientConfigurationResultsBuilder from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private artifactResults : ResolvedArtifactsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to private artifactResults : ResolvedArtifactsBuilder from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getResolutionResult() : ResolutionResult from class org.gradle.api.internal.artifacts.ResolverResults to public getResolutionResult() : ResolutionResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getResolvedConfiguration() : ResolvedConfiguration from class org.gradle.api.internal.artifacts.ResolverResults to public getResolvedConfiguration() : ResolvedConfiguration from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getResolvedLocalComponents() : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.ResolverResults to public getResolvedLocalComponents() : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public hasError() : boolean from class org.gradle.api.internal.artifacts.ResolverResults to public hasError() : boolean from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Subclass",
    "description" : "Extract Subclass org.gradle.api.internal.artifacts.DefaultResolverResults from class org.gradle.api.internal.artifacts.ResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.CacheLockingArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.CacheLockingArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(configuration ConfigurationInternal, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.DefaultConfigurationResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(configuration ConfigurationInternal, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.DefaultConfigurationResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.SelfResolvingDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(contextInternal ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.SelfResolvingDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.ShortcircuitEmptyConfigsArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.ShortcircuitEmptyConfigsArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type onResolve : Action<ResolverResults> to onResolve : Action<DefaultResolverResults> in method public resolve(resolveContext ResolveContext, onResolve Action<DefaultResolverResults>) : void from class org.gradle.language.java.plugins.JavaLanguagePlugin.DependencyResolvingClasspath",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(configuration ConfigurationInternal, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ConfigurationResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(configuration ConfigurationInternal, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ConfigurationResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type cachedResolverResults : ResolverResults to cachedResolverResults : DefaultResolverResults in class org.gradle.api.internal.artifacts.configurations.DefaultConfiguration",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type resolverResults : ResolverResults to resolverResults : DefaultResolverResults in method public execute(resolverResults DefaultResolverResults) : void from class org.gradle.language.java.plugins.JavaLanguagePlugin.DependencyResolvingClasspath.assertResolved.resolve.new Action<DefaultResolverResults>",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ResolvedArtifactsBuilder to ResolvedArtifactsContainer in method public getResolvedArtifacts() : ResolvedArtifactsContainer in class org.gradle.api.internal.artifacts.ResolverResults",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type resolve : ResolvedArtifactResults to resolvedLocalComponents : ResolvedLocalComponentsResult in method public execute(resolverResults DefaultResolverResults) : void in class org.gradle.language.java.plugins.JavaLanguagePlugin.DependencyResolvingClasspath.assertResolved.resolve",
    "comment" : "<p>the functionality has changed. A for loop has been deleted.</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getArtifacts() : Set<ResolvedArtifact> from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ResolvedArtifactResults to public getArtifacts() : Set<ResolvedArtifact> from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedArtifactsContainer",
    "comment" : "<p>There is already a Extract Interface detected.&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getArtifactsBuilder() : ResolvedArtifactsBuilder renamed to public getResolvedArtifacts() : ResolvedArtifactsContainer in class org.gradle.api.internal.artifacts.ResolverResults",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public hasError() : boolean from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getResolvedConfiguration() : ResolvedConfiguration from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getResolutionResult() : ResolutionResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getResolvedLocalComponents() : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter artifactId : ComponentArtifactIdentifier in method public DefaultResolvedArtifact(owner ResolvedModuleVersion, artifact IvyArtifactName, artifactId ComponentArtifactIdentifier, artifactSource Factory<File>) from class org.gradle.api.internal.artifacts.DefaultResolvedArtifact",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Type Declaration Kind",
    "description" : "Change Type Declaration Kind class to interface in type org.gradle.api.internal.artifacts.ResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 9978
}, {
  "id" : 1105075,
  "repository" : "https://github.com/JetBrains/MPS.git",
  "sha1" : "2bcd05a827ead109a56cb1f79a83dcd332f42888",
  "url" : "https://github.com/JetBrains/MPS/commit/2bcd05a827ead109a56cb1f79a83dcd332f42888",
  "author" : "Mihail Muhin",
  "time" : "6/7/15 7:36 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method public getLanguage(id SLanguageId, langName String, version int) : SLanguage inlined to public getLanguage(id SLanguageId, langName String) : SLanguage in class jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public getLanguageVersion() : int from class org.jetbrains.mps.openapi.language.SLanguage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Deprecated in method public addLanguage(id SLanguage, version int) : void from class jetbrains.mps.smodel.SModel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter version : int in method public LangKey(id SLanguageId, name String, version int) from class jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.LangKey",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter version : int in method protected SLanguageAdapter(language String, version int) from class jetbrains.mps.smodel.adapter.structure.language.SLanguageAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter version : int in method public getLanguage(langId SLanguageId, langName String, version int) : SLanguage from class jetbrains.mps.smodel.persistence.def.v9.IdInfoReadHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 43228
}, {
  "id" : 1105586,
  "repository" : "https://github.com/SecUpwN/Android-IMSI-Catcher-Detector.git",
  "sha1" : "e235f884f2e0bc258da77b9c80492ad33386fa86",
  "url" : "https://github.com/SecUpwN/Android-IMSI-Catcher-Detector/commit/e235f884f2e0bc258da77b9c80492ad33386fa86",
  "author" : "Marvin Arnold",
  "time" : "6/7/15 9:44 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private createCellSignalTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createOpenCellIDTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createDefaultMCCTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createLocationTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createSilentSmsTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createCellTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createEventLogTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 463
}, {
  "id" : 1105941,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "138911ce88b05039242b8d1b2bb5b7a59008f5ee",
  "url" : "https://github.com/JetBrains/intellij-community/commit/138911ce88b05039242b8d1b2bb5b7a59008f5ee",
  "author" : "Dmitry Batrak",
  "time" : "6/8/15 12:40 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public getHTMLEditorKit(noGapsBetweenParagraphs boolean) : HTMLEditorKit extracted from public getHTMLEditorKit() : HTMLEditorKit in class com.intellij.util.ui.UIUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "One condition has been added for adding one of the properties"
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable customCss : String in method public getHTMLEditorKit() : HTMLEditorKit from class com.intellij.util.ui.UIUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 15944
}, {
  "id" : 1105947,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "04397f41107bd6de41b31d45a4e8e2ed65628bbe",
  "url" : "https://github.com/JetBrains/intellij-community/commit/04397f41107bd6de41b31d45a4e8e2ed65628bbe",
  "author" : "Anna Kozlova",
  "time" : "6/8/15 11:50 AM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private checkForTestRoots(srcModule Module, testFolders Set<VirtualFile>, processed Set<Module>) : void inlined to protected checkForTestRoots(srcModule Module, testFolders Set<VirtualFile>) : void in class com.intellij.testIntegration.createTest.CreateTestAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 14649
}, {
  "id" : 1105950,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
  "url" : "https://github.com/JetBrains/intellij-community/commit/cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
  "author" : "Bas Leijdekkers",
  "time" : "6/8/15 11:39 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private canBinaryExpressionBeUnboxed(lhs PsiExpression, rhs PsiExpression) : boolean extracted from private canBeUnboxed(expression PsiExpression) : boolean in class com.siyeh.ig.migration.UnnecessaryBoxingInspection.UnnecessaryBoxingVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Functionality has been changed"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private isAnnotatedNotNull(expression PsiExpression) : boolean from class com.siyeh.ig.psiutils.SwitchUtils to private isAnnotated(expression PsiExpression, nullable boolean) : boolean from class com.siyeh.ig.psiutils.ExpressionUtils",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private isAnnotatedNullable(expression PsiExpression) : boolean from class com.siyeh.ig.psiutils.SwitchUtils to private isAnnotated(expression PsiExpression, nullable boolean) : boolean from class com.siyeh.ig.psiutils.ExpressionUtils",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nullable : boolean in method private isAnnotated(expression PsiExpression, nullable boolean) : boolean from class com.siyeh.ig.psiutils.ExpressionUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 15592
}, {
  "id" : 1105969,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "c55a8c3761e9aae9f375d312c14b1bbb9ee9c0fa",
  "url" : "https://github.com/SonarSource/sonarqube/commit/c55a8c3761e9aae9f375d312c14b1bbb9ee9c0fa",
  "author" : "Julien Lancelot",
  "time" : "6/8/15 1:21 PM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep to private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type now : long to now : Date in class org.sonar.server.computation.step.PersistComponentsStepTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter system2 : System2 in method public PersistComponentsStep(dbClient DbClient, treeRootHolder TreeRootHolder, reportReader BatchReportReader, dbIdsRepository DbIdsRepository, system2 System2) from class org.sonar.server.computation.step.PersistComponentsStep",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1106007,
  "repository" : "https://github.com/glyptodon/guacamole-client.git",
  "sha1" : "ce1f3d07976de31aed8f8189ec5e1a6453f4b580",
  "url" : "https://github.com/glyptodon/guacamole-client/commit/ce1f3d07976de31aed8f8189ec5e1a6453f4b580",
  "author" : "Michael Jumper",
  "time" : "6/8/15 2:17 PM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private CONFIRM_NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private CONFIRM_NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private logger : Logger from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private CONFIRM_NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private CONFIRM_NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private EXPIRED_PASSWORD : CredentialsInfo from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private EXPIRED_PASSWORD : CredentialsInfo from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type GuacamoleException in method public retrieveUser(credentials Credentials) : ModeledUser from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1106044,
  "repository" : "https://github.com/BroadleafCommerce/BroadleafCommerce.git",
  "sha1" : "4ef35268bb96bb78b2dc698fa68e7ce763cde32e",
  "url" : "https://github.com/BroadleafCommerce/BroadleafCommerce/commit/4ef35268bb96bb78b2dc698fa68e7ce763cde32e",
  "author" : "Chris Kittrell",
  "time" : "6/8/15 11:14 AM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public setColumn(column Integer) : void from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to public setColumn(column Integer) : void from class org.broadleafcommerce.openadmin.dto.FieldMetadata",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getColumn() : Integer from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to public getColumn() : Integer from class org.broadleafcommerce.openadmin.dto.FieldMetadata",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected column : Integer from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to private column : Integer from class org.broadleafcommerce.openadmin.dto.FieldMetadata",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private column : Integer from class org.broadleafcommerce.openadmin.dto.FieldMetadata",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1106247,
  "repository" : "https://github.com/datastax/java-driver.git",
  "sha1" : "1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
  "url" : "https://github.com/datastax/java-driver/commit/1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
  "author" : "olim7t",
  "time" : "6/8/15 11:19 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public setMaxRequestsPerConnection(distance HostDistance, newMaxRequests int) : PoolingOptions extracted from public setMaxSimultaneousRequestsPerHostThreshold(distance HostDistance, newMaxRequests int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Considering the Rename Attribute refactoring, this is indeed pure extract method!"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public getMaxRequestsPerConnection(distance HostDistance) : int extracted from public getMaxSimultaneousRequestsPerHostThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Considering the Rename Attribute refactoring, this is indeed pure extract method!"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public getNewConnectionThreshold(distance HostDistance) : int extracted from public getMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Rename Attribute refactoring on top of the Extract Method. Isn't it a Rename Method refactoring? Consistency check also admit this arguement."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public setNewConnectionThreshold(distance HostDistance, newValue int) : PoolingOptions extracted from public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "String Literal has been changed inside a method invocation. So, it may change the behavior of the extracted code"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter newMaxSimultaneousRequests : int to newValue : int in method public setNewConnectionThreshold(distance HostDistance, newValue int) : PoolingOptions from class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute DEFAULT_MAX_REQUESTS_PER_CONNECTION : int to DEFAULT_NEW_CONNECTION_THRESHOLD : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute DEFAULT_MAX_REQUESTS_PER_HOST_LOCAL : int to DEFAULT_MAX_REQUESTS_PER_CONNECTION_LOCAL : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute maxSimultaneousRequestsPerHostLocal : int to maxRequestsPerConnectionLocal : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute DEFAULT_MAX_REQUESTS_PER_HOST_REMOTE : int to DEFAULT_MAX_REQUESTS_PER_CONNECTION_REMOTE : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute maxSimultaneousRequestsPerHostRemote : int to maxRequestsPerConnectionRemote : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute maxSimultaneousRequestsPerConnection : int[] to newConnectionThreshold : int[] in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMinSimultaneousRequestsPerConnectionThreshold(distance HostDistance) : int renamed to public getCoreConnectionsPerHost(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMinSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMinSimultaneousRequests int) : PoolingOptions renamed to public getNewConnectionThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions renamed to public setNewConnectionThreshold(distance HostDistance, newValue int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCoreConnectionsPerHost(distance HostDistance) : int renamed to public getMaxRequestsPerConnection(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxSimultaneousRequestsPerHostThreshold(distance HostDistance, newMaxRequests int) : PoolingOptions renamed to public setMaxRequestsPerConnection(distance HostDistance, newMaxRequests int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMaxConnectionsPerHost(distance HostDistance) : int renamed to public getMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public getMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance) : int from class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions from class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public getMaxSimultaneousRequestsPerHostThreshold(distance HostDistance) : int from class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public setMaxSimultaneousRequestsPerHostThreshold(distance HostDistance, newMaxRequests int) : PoolingOptions from class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions from class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1106350,
  "repository" : "https://github.com/puniverse/quasar.git",
  "sha1" : "56d4b999e8be70be237049708f019c278c356e71",
  "url" : "https://github.com/puniverse/quasar/commit/56d4b999e8be70be237049708f019c278c356e71",
  "author" : "circlespainter",
  "time" : "6/8/15 3:49 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method public pushMethod(entry int, numSlots int, method String, sourceLine int) : void inlined to public pushMethod(entry int, numSlots int) : void in class co.paralleluniverse.fibers.Stack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method package verifySuspend(current Fiber, exc boolean) : Fiber inlined to package verifySuspend(current Fiber) : Fiber in class co.paralleluniverse.fibers.Fiber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public checkInstrumentation(exc boolean) : boolean inlined to public checkInstrumentation() : boolean in class co.paralleluniverse.fibers.Fiber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public popMethod(catchAll boolean) : void inlined to public popMethod() : void in class co.paralleluniverse.fibers.Stack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private isNonSuspendable(clazz Class, methodName String) : boolean renamed to private isSuspendable(clazz Class, methodName String) : boolean in class co.paralleluniverse.fibers.Fiber",
    "comment" : "The method is name is changed since the functionality is changed | Davood: The method is called in (almost) the same place than the older one, I mark it as TP",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private emitInstrumentedAnn() : void extracted from public visitEnd() : void in class co.paralleluniverse.fibers.instrument.InstrumentClass",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Another statement has been added"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable notInstrumented : boolean to ok : boolean in method public checkInstrumentation() : boolean from class co.paralleluniverse.fibers.Fiber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable classInstrumented : boolean in method public checkInstrumentation() : boolean from class co.paralleluniverse.fibers.Fiber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private emitInstrumentedAnn(mv MethodVisitor) : void extracted from public accept(mv MethodVisitor, hasAnnotation boolean) : void in class co.paralleluniverse.fibers.instrument.InstrumentMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Lots of added statements"
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type susp : Boolean to susp : boolean in method public collectCodeBlocks() : boolean from class co.paralleluniverse.fibers.instrument.InstrumentMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter exc : boolean to currentSteIdx : int in method private isCallSiteInstrumented(stes StackTraceElement[], currentSteIdx int, clazz Class, methodName String, lineNumber int) : Pair<Boolean,int[]> in class co.paralleluniverse.fibers.Fiber",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable methodInstrumented : boolean in method public checkInstrumentation() : boolean from class co.paralleluniverse.fibers.Fiber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type exc : boolean to currentSteIdx : int in method private isCallSiteInstrumented(stes StackTraceElement[], currentSteIdx int, clazz Class, methodName String, lineNumber int) : Pair<Boolean,int[]> in class co.paralleluniverse.fibers.Fiber",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private emitMethodCoordStringConst(mv MethodVisitor) : void renamed to private emitInstrumentedAnn(mv MethodVisitor) : void in class co.paralleluniverse.fibers.instrument.InstrumentMethod",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package verifySuspend(current Fiber, exc boolean) : Fiber renamed to private isCallSiteInstrumented(stes StackTraceElement[], currentSteIdx int, clazz Class, methodName String, lineNumber int) : Pair<Boolean,int[]> in class co.paralleluniverse.fibers.Fiber",
    "comment" : "<p>Inline Method package verifySuspend(current Fiber, exc boolean) : Fiber inlined to package verifySuspend(current Fiber) : Fiber in class co.paralleluniverse.fibers.Fiber</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"null\") in method public checkInstrumentation() : boolean from class co.paralleluniverse.fibers.Fiber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sourceName : String in method public InstrumentMethod(db MethodDatabase, sourceName String, className String, mn MethodNode) from class co.paralleluniverse.fibers.instrument.InstrumentMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter inCatchAll : boolean in method private emitPopMethod(mv MethodVisitor, inCatchAll boolean) : void from class co.paralleluniverse.fibers.instrument.InstrumentMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 970
}, {
  "id" : 1106355,
  "repository" : "https://github.com/hibernate/hibernate-orm.git",
  "sha1" : "2b89553db5081fe4e55b7b34d636d0ea2acf71c5",
  "url" : "https://github.com/hibernate/hibernate-orm/commit/2b89553db5081fe4e55b7b34d636d0ea2acf71c5",
  "author" : "Steve Ebersole",
  "time" : "6/8/15 4:24 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private categorizeAnnotatedClass(annotatedClass Class, attributeConverterManager AttributeConverterManager) : void extracted from public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) in class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Conditions have been changed!"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable annotateClass : Class to annotatedClass : Class in method public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable clazz : Class to annotatedClass : Class in method public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable annotateClass : Class to annotatedClass : Class in method private categorizeAnnotatedClass(annotatedClass Class, attributeConverterManager AttributeConverterManager) : void from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable clazz : Class to annotatedClass : Class in method private categorizeAnnotatedClass(annotatedClass Class, attributeConverterManager AttributeConverterManager) : void from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable clazz : Class in method public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
    "comment" : "<p>Extracted method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6112
}, {
  "id" : 1106365,
  "repository" : "https://github.com/apache/cassandra.git",
  "sha1" : "446e2537895c15b404a74107069a12f3fc404b15",
  "url" : "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
  "author" : "Philip Thompson",
  "time" : "6/8/15 4:41 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.hadoop.BulkRecordWriter.NullOutputHandler moved to org.apache.cassandra.hadoop.cql3.CqlBulkRecordWriter.NullOutputHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat.SplitCallable moved to org.apache.cassandra.hadoop.cql3.CqlInputFormat.SplitCallable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageFilter() : void renamed to public testCqlNativeStorageFilter() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageFullCopy() : void renamed to public testCqlNativeStorageFullCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageBagOnlyCopy() : void renamed to public testCqlNativeStorageBagOnlyCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageSingleTupleCopy() : void renamed to public testCqlNativeStorageSingleTupleCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageCounterCF() : void renamed to public testCqlNativeStorageCounterCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageJoin() : void renamed to public testCqlNativeStorageJoin() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageCompositeColumnCF() : void renamed to public testCqlNativeStorageCompositeColumnCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageSchema() : void renamed to public testCqlNativeStorageSchema() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageCompositeKeyCF() : void renamed to public testCqlNativeStorageCompositeKeyCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private describeSplits(keyspace String, table String, tokenRange TokenRange, splitSize int) : Map<TokenRange,Long> from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private describeSplits(keyspace String, table String, tokenRange TokenRange, splitSize int) : Map<TokenRange,Long> from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getRangeMap(conf Configuration, keyspace String) : Map<TokenRange,Set<Host>> from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private getRangeMap(conf Configuration, keyspace String) : Map<TokenRange,Set<Host>> from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getSubSplits(keyspace String, cfName String, range TokenRange, conf Configuration) : Map<TokenRange,Long> from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private getSubSplits(keyspace String, cfName String, range TokenRange, conf Configuration) : Map<TokenRange,Long> from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private rangeToTokenRange(metadata Metadata, range Range<Token>) : TokenRange from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private rangeToTokenRange(metadata Metadata, range Range<Token>) : TokenRange from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected validateConfiguration(conf Configuration) : void from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to protected validateConfiguration(conf Configuration) : void from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getSplits(context JobContext) : List<InputSplit> from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to public getSplits(context JobContext) : List<org.apache.hadoop.mapreduce.InputSplit> from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private cfName : String from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private cfName : String from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private keyspace : String from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private keyspace : String from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
    "validation" : "FP",
    "detectionTools" : "RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private partitioner : IPartitioner from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private partitioner : IPartitioner from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private session : Session from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private session : Session from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public MAPRED_TASK_ID : String from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to public MAPRED_TASK_ID : String from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class WordCount to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class WordCountSetup to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.BulkRecordWriter to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private keyspace : String from class org.apache.cassandra.hadoop.ColumnFamilyRecordReader to private keyspace : String from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private cfName : String from class org.apache.cassandra.hadoop.ColumnFamilyRecordReader to private cfName : String from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.ColumnFamilyOutputFormat to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class WordCountCounters to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public QUEUE_SIZE : String from class org.apache.cassandra.hadoop.ColumnFamilyOutputFormat to public QUEUE_SIZE : String from class org.apache.cassandra.hadoop.cql3.CqlOutputFormat",
    "comment" : "<p>The source class is deleted.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public BATCH_THRESHOLD : String from class org.apache.cassandra.hadoop.ColumnFamilyOutputFormat to public BATCH_THRESHOLD : String from class org.apache.cassandra.hadoop.cql3.CqlOutputFormat",
    "comment" : "<p>The source class is deleted.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.ColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "<p>The attribute logger is moved form the superclass of ColumnFamilyInputFormat (AbstractColumnFamilyInputFormat) to CqlInputFormat and it is already detected and marked as CTP.</p><p>&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1106365/141</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.ColumnFamilyRecordReader to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getSplits(jobConf JobConf, numSplits int) : InputSplit[] from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to public getSplits(jobConf JobConf, numSplits int) : InputSplit[] from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "<p>Return type is non-qualified after the move</p><p>public org.apache.hadoop.mapred.InputSplit[] getSplits(JobConf jobConf, int numSplits) throws IOException<br />public InputSplit[] getSplits(JobConf jobConf, int numSplits) throws IOException</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable got : ColumnOrSuperColumn to row : Row in method private getColumnValue(ks String, cf String, colName String, key String, validator String) : String from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Cassandra.Client to Session in method protected getClient() : Session from class org.apache.cassandra.pig.PigTestBase",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type got : ColumnOrSuperColumn to row : Row in method private getColumnValue(ks String, cf String, colName String, key String, validator String) : String from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type client : Cassandra.Client to client : Session in method protected executeCQLStatements(statements String[]) : void from class org.apache.cassandra.pig.PigTestBase",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type column : Tuple to column : Object in method public testCassandraStorageDataType() : void from class org.apache.cassandra.pig.ThriftColumnFamilyDataTypeTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type client : Cassandra.Client to client : Session in method private getColumnValue(ks String, cf String, colName String, key String, validator String) : String from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable tr : TTransport to cluster : Cluster in method protected getClient() : Session in class org.apache.cassandra.pig.PigTestBase",
    "comment" : "<p>Implementation is completely different, although method name is the same</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type org.apache.hadoop.mapred.InputSplit[] to InputSplit[] in method public getSplits(jobConf JobConf, numSplits int) : InputSplit[] from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tr : TTransport to cluster : Cluster in method protected getClient() : Session in class org.apache.cassandra.pig.PigTestBase",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cp : ColumnPath to rows : ResultSet in method private getColumnValue(ks String, cf String, colName String, key String, validator String) : String in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.ColumnFamilyInputFormat to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method protected executeCQLStatements(statements String[]) : void from class org.apache.cassandra.pig.PigTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TTransportException in method protected getClient() : Cassandra.Client from class org.apache.cassandra.pig.PigTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method public setup() : void from class org.apache.cassandra.pig.ThriftColumnFamilyDataTypeTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method public setup() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method private getColumnValue(ks String, cf String, colName String, key String, validator String) : String from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method public testCassandraStorageFullCopy() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method public testCassandraStorageSingleTupleCopy() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method public testCassandraStorageBagOnlyCopy() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method public testCassandraStorageFilter() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable key : Tuple in method public testCassandraStorageCompositeKeyCF() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type oldInputSplits : org.apache.hadoop.mapred.InputSplit[] to oldInputSplits : InputSplit[] in method public getSplits(jobConf JobConf, numSplits int) : InputSplit[] from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6589
}, {
  "id" : 1106576,
  "repository" : "https://github.com/liferay/liferay-portal.git",
  "sha1" : "59fd9e696cec5f2ed44c27422bbc426b11647321",
  "url" : "https://github.com/liferay/liferay-portal/commit/59fd9e696cec5f2ed44c27422bbc426b11647321",
  "author" : "Andrea Di Giorgi",
  "time" : "6/10/15 6:43 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public addDependency(project Project, configurationName String, group String, name String, version String, classifier String, transitive boolean) : Dependency extracted from public addDependency(project Project, configurationName String, group String, name String, version String, transitive boolean) : Dependency in class com.liferay.gradle.util.GradleUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "One extra condition has been added"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addDependency(project Project, configurationName String, group String, name String, version String, classifier String) : Dependency from class com.liferay.gradle.plugins.poshi.runner.util.GradleUtil to public addDependency(project Project, configurationName String, group String, name String, version String, classifier String, transitive boolean) : Dependency from class com.liferay.gradle.util.GradleUtil",
    "comment" : "class GradleUtil is deleted,  thus it does not total comply with the defenition of move method.",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter transitive : boolean in method public addDependency(project Project, configurationName String, group String, name String, version String, classifier String, transitive boolean) : Dependency from class com.liferay.gradle.util.GradleUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 10416
}, {
  "id" : 1106945,
  "repository" : "https://github.com/HubSpot/Singularity.git",
  "sha1" : "45ada13b852af85e1ae0491267a0239d9bdf6f3f",
  "url" : "https://github.com/HubSpot/Singularity/commit/45ada13b852af85e1ae0491267a0239d9bdf6f3f",
  "author" : "tpetr",
  "time" : "6/10/15 4:07 PM",
  "refactorings" : [ {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private validator : SingularityValidator from class com.hubspot.singularity.resources.DeployResource to protected validator : SingularityValidator from class com.hubspot.singularity.resources.AbstractRequestResource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private validator : SingularityValidator from class com.hubspot.singularity.resources.RequestResource to protected validator : SingularityValidator from class com.hubspot.singularity.resources.AbstractRequestResource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter validator : SingularityValidator in method public AbstractRequestResource(requestManager RequestManager, deployManager DeployManager, user Optional<SingularityUser>, validator SingularityValidator) from class com.hubspot.singularity.resources.AbstractRequestResource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected validator : SingularityValidator from class com.hubspot.singularity.resources.AbstractRequestResource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1107119,
  "repository" : "https://github.com/CyanogenMod/android_frameworks_base.git",
  "sha1" : "96a2c3410f3c71d3ab20857036422f1d64c3a6d3",
  "url" : "https://github.com/CyanogenMod/android_frameworks_base/commit/96a2c3410f3c71d3ab20857036422f1d64c3a6d3",
  "author" : "Steve Kondik",
  "time" : "6/11/15 12:41 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private cleanupProximityLocked() : void extracted from private cleanupProximity() : void in class com.android.server.power.PowerManagerService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 8657
}, {
  "id" : 1107345,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "219d6ddfd1db62c11efb57e0216436874e087834",
  "url" : "https://github.com/JetBrains/intellij-community/commit/219d6ddfd1db62c11efb57e0216436874e087834",
  "author" : "Michael Golubev",
  "time" : "6/10/15 4:04 PM",
  "refactorings" : [ {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass com.intellij.remoteServer.agent.util.log.LogPipeBase from class com.intellij.remoteServer.agent.util.log.LogPipe",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass com.intellij.remoteServer.impl.runtime.log.LoggingHandlerBase from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private addAdditionalLoggingHandler(loggingHandler LoggingHandlerBase) : void extracted from public addAdditionalLog(presentableName String) : LoggingHandler in class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "myAdditionalLoggingHandlers has been changed from a Map to a list. That's why we have non-mapped add statement in the child commit. Note that we have change attribute type refactoring regarding this change."
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLoggingHandler() : LoggingHandlerImpl renamed to public getComponent() : JComponent in class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentNodeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLoggingHandler() : LoggingHandlerImpl renamed to public getComponent() : JComponent in class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentLogNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public dispose() : void from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerImpl to public dispose() : void from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable entry : Map.Entry<String,LoggingHandlerImpl> to loggingComponent : LoggingHandlerBase in method public getChildren() : Collection<? extends AbstractTreeNode> from class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentNodeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable handler : LoggingHandlerImpl to loggingHandler : LoggingHandlerBase in method private addAdditionalLoggingHandler(loggingHandler LoggingHandlerBase) : void from class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLoggingHandler() : LoggingHandlerImpl renamed to public getComponent() : JComponent in class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.LogProvidingNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type value : Pair<LoggingHandlerImpl,String> to value : LoggingHandlerBase in method public DeploymentLogNode(value LoggingHandlerBase, deploymentNode DeploymentNodeImpl) from class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentLogNode",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<? extends LogPipe> to List<? extends LogPipeBase> in method public createLogPipes(deploymentName String) : List<? extends LogPipeBase> from class com.intellij.remoteServer.agent.util.log.LogPipeProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Map<String,LoggingHandlerImpl> to List<LoggingHandlerBase> in method public getAdditionalLoggingHandlers() : List<LoggingHandlerBase> from class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LoggingHandlerImpl to JComponent in method public getComponent() : JComponent from class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentNodeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LoggingHandlerImpl to JComponent in method public getComponent() : JComponent from class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentLogNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LoggingHandlerImpl to JComponent in method public getComponent() : JComponent from class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.LogProvidingNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type handler : LoggingHandlerImpl to loggingHandler : LoggingHandlerBase in method private addAdditionalLoggingHandler(loggingHandler LoggingHandlerBase) : void from class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type entry : Map.Entry<String,LoggingHandlerImpl> to loggingComponent : LoggingHandlerBase in method public getChildren() : Collection<? extends AbstractTreeNode> from class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentNodeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type myDeploymentName2ActiveLogPipes : Map<String,List<LogPipe>> to myDeploymentName2ActiveLogPipes : Map<String,List<LogPipeBase>> in class com.intellij.remoteServer.agent.util.log.LogAgentManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pipes : ArrayList<LogPipe> to pipes : ArrayList<LogPipeBase> in method private doStartListeningLog(deploymentName String, provider LogPipeProvider) : void from class com.intellij.remoteServer.agent.util.log.LogAgentManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pipes : List<LogPipe> to pipes : List<LogPipeBase> in method public stopListeningLog(deploymentName String) : void from class com.intellij.remoteServer.agent.util.log.LogAgentManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type myAdditionalLoggingHandlers : Map<String,LoggingHandlerImpl> to myAdditionalLoggingHandlers : List<LoggingHandlerBase> in class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type result : HashMap<String,LoggingHandlerImpl> to result : List<LoggingHandlerBase> in method public getAdditionalLoggingHandlers() : List<LoggingHandlerBase> from class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable loggingHandler : LoggingHandlerImpl to logComponent : JComponent in method private onSelectionChanged() : void in class com.intellij.remoteServer.impl.runtime.ui.ServersToolWindowContent",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'> <span class='pl-smi'>JComponent</span> logComponent <span class='pl-k'>=</span> loggingHandler<span class='pl-k'>.</span>getConsole()<span class='pl-k'>.</span>getComponent();</span>&nbsp; exists in parent commit</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pipe : LogPipe to pipe : LogPipeBase in method private doStartListeningLog(deploymentName String, provider LogPipeProvider) : void from class com.intellij.remoteServer.agent.util.log.LogAgentManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pipe : LogPipe to pipe : LogPipeBase in method public stopListeningLog(deploymentName String) : void from class com.intellij.remoteServer.agent.util.log.LogAgentManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter presentableName : String in method public LoggingHandlerImpl(presentableName String, project Project) from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 14854
}, {
  "id" : 1107379,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "484038e916dc40bf87eca10c77889d79eca96c4d",
  "url" : "https://github.com/JetBrains/intellij-community/commit/484038e916dc40bf87eca10c77889d79eca96c4d",
  "author" : "Eugene Zhuravlev",
  "time" : "6/10/15 9:11 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public removeNodes(paths Collection<TreePath>) : void extracted from public removeNode(nodePath TreePath) : void in class com.intellij.compiler.options.AnnotationProcessorsPanel.MyTreeModel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Added other functionalities"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter parent : TreePath to path : TreePath in method public removeNode(path TreePath) : void from class com.intellij.util.ui.EditableTreeModel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 16962
}, {
  "id" : 1107713,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
  "url" : "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
  "author" : "Julien Lancelot",
  "time" : "6/10/15 9:30 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.component.SnapshotQuery moved to org.sonar.core.component.db.SnapshotQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.component.SnapshotQueryTest moved to org.sonar.core.component.db.SnapshotQueryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent renamed to org.sonar.server.computation.step.PersistComponentsStep.PersistComponentExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public not_update_create_at() : void renamed to public do_not_update_created_at_on_existing_component() : void in class org.sonar.server.computation.step.PersistComponentsStepTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public fail_to_get_periods_if_not_initialized() : void renamed to public get_periods_throws_illegal_state_exception_if_not_initialized() : void in class org.sonar.server.computation.period.PeriodsHolderImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable persisComponent : PersisComponent to persistComponentExecutor : PersistComponentExecutor in method public execute() : void from class org.sonar.server.computation.step.PersistComponentsStep",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type persisComponent : PersisComponent to persistComponentExecutor : PersistComponentExecutor in method public execute() : void from class org.sonar.server.computation.step.PersistComponentsStep",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type periods : List<Period> to periods : ImmutableList<Period> in class org.sonar.server.computation.period.PeriodsHolderImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @CheckForNull in attribute private periods : ImmutableList<Period> from class org.sonar.server.computation.period.PeriodsHolderImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter resourceCache : BatchComponentCache in method public QualityGateVerifier(qualityGate QualityGate, resourceCache BatchComponentCache, periods Periods, i18n I18n, durations Durations) from class org.sonar.batch.qualitygate.QualityGateVerifier",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter periods : Periods in method public QualityGateVerifier(qualityGate QualityGate, resourceCache BatchComponentCache, periods Periods, i18n I18n, durations Durations) from class org.sonar.batch.qualitygate.QualityGateVerifier",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public recursivelyProcessComponent(component Component, lastModule ComponentDto) : void from class org.sonar.server.computation.step.PersistComponentsStep.PersistComponentExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2491
}, {
  "id" : 1107718,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "7668c875dfa7240b1ec08eb60b42107bae1b4cd3",
  "url" : "https://github.com/SonarSource/sonarqube/commit/7668c875dfa7240b1ec08eb60b42107bae1b4cd3",
  "author" : "Julien Lancelot",
  "time" : "6/10/15 9:30 AM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep to private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type now : long to now : Date in class org.sonar.server.computation.step.PersistComponentsStepTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter system2 : System2 in method public PersistComponentsStep(dbClient DbClient, treeRootHolder TreeRootHolder, reportReader BatchReportReader, dbIdsRepository DbIdsRepository, system2 System2) from class org.sonar.server.computation.step.PersistComponentsStep",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2975
}, {
  "id" : 1107899,
  "repository" : "https://github.com/elastic/elasticsearch.git",
  "sha1" : "c928852d4ab7d8c744063979208709ed4429b8e9",
  "url" : "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
  "author" : "Christoph Büscher",
  "time" : "6/11/15 9:40 AM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method public newFilter(parseContext QueryParseContext, fieldPattern String, queryName String) : Query from class org.elasticsearch.index.query.ExistsQueryParser to public newFilter(parseContext QueryParseContext, fieldPattern String, queryName String) : Query from class org.elasticsearch.index.query.ExistsQueryBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public parse(parseContext QueryParseContext) : Query renamed to public fromXContent(parseContext QueryParseContext) : QueryBuilder in class org.elasticsearch.index.query.ExistsQueryParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Query to QueryBuilder in method public fromXContent(parseContext QueryParseContext) : QueryBuilder from class org.elasticsearch.index.query.ExistsQueryParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type deserializedQuery : QB to deserializedQuery : QueryBuilder in method public testSerialization() : void from class org.elasticsearch.index.query.BaseQueryTestCase",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private name : String from class org.elasticsearch.index.query.ExistsQueryBuilder",
    "comment" : "<p>public String name()<br />called in method<br />protected Query createExpectedQuery(ExistsQueryBuilder queryBuilder, QueryParseContext context)<br />core/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTest.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private queryName : String from class org.elasticsearch.index.query.ExistsQueryBuilder",
    "comment" : "<p>public String queryName()<br />called in method<br />protected void assertLuceneQuery(ExistsQueryBuilder queryBuilder, Query query, QueryParseContext context)<br />core/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTest.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private name : String from class org.elasticsearch.index.query.ExistsQueryBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3765
}, {
  "id" : 1107905,
  "repository" : "https://github.com/elastic/elasticsearch.git",
  "sha1" : "f77804dad35c13d9ff96456e85737883cf7ddd99",
  "url" : "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
  "author" : "Simon Willnauer",
  "time" : "6/11/15 6:58 AM",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method public getMergePolicyProvider() : MergePolicyProvider renamed to public getMergePolicy() : MergePolicy in class org.elasticsearch.index.engine.EngineConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.elasticsearch.index.merge.policy.ElasticsearchMergePolicy moved to org.elasticsearch.index.shard.ElasticsearchMergePolicy",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.elasticsearch.index.merge.policy.FilterDocValuesProducer moved to org.elasticsearch.index.shard.FilterDocValuesProducer",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.elasticsearch.index.merge.policy.VersionFieldUpgrader moved to org.elasticsearch.index.shard.VersionFieldUpgrader",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.elasticsearch.index.merge.policy.VersionFieldUpgraderTest moved to org.elasticsearch.index.shard.VersionFieldUpgraderTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.elasticsearch.index.merge.policy.TieredMergePolicyProvider moved and renamed to org.elasticsearch.index.shard.MergePolicyConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public formatNoCFSRatio(ratio double) : String from class org.elasticsearch.index.merge.policy.AbstractMergePolicyProvider to public formatNoCFSRatio(ratio double) : String from class org.elasticsearch.index.shard.MergePolicyConfig",
    "comment" : "class AbstractMergePolicyProvider is deleted,  thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public parseNoCFSRatio(noCFSRatio String) : double from class org.elasticsearch.index.merge.policy.AbstractMergePolicyProvider to public parseNoCFSRatio(noCFSRatio String) : double from class org.elasticsearch.index.shard.MergePolicyConfig",
    "comment" : "class AbstractMergePolicyProvider is deleted,  thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getMergePolicy() : LogByteSizeMergePolicy from class org.elasticsearch.index.merge.policy.LogByteSizeMergePolicyProvider to public getMergePolicy() : MergePolicy from class org.elasticsearch.index.engine.EngineConfig",
    "comment" : "LogByteSizeMergePolicyProvider is deleted, in class EngineConfig field mergePolicyProvider -> mergePolicy and thus the getter is renmed to  getMergePolicy ",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getMergePolicy() : LogDocMergePolicy from class org.elasticsearch.index.merge.policy.LogDocMergePolicyProvider to public getMergePolicy() : MergePolicy from class org.elasticsearch.index.engine.EngineConfig",
    "comment" : "<p>The method is a getter, the coresponding&nbsp;attribute has changed, so do the method signature.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public onRefreshSettings(settings Settings) : void from class org.elasticsearch.index.merge.policy.TieredMergePolicyProvider.ApplySettings to public onRefreshSettings(settings Settings) : void from class org.elasticsearch.index.shard.MergePolicyConfig",
    "comment" : "<p>Matin: Second Opinion. The method is renamed since the return type is changed</p><p>Davood: There are three implementations of the same interface and the method is forced to be implemented in all the implementing classes. All the classes are deleted in this commit, and the newly-added class implements the same interface and the method is identical to one of the removed ones</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public build(value String) : Settings from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest to public build(value String) : Settings from class org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : "Second Opinion. It is a move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTieredMergePolicySettingsUpdate() : void from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest to public testTieredMergePolicySettingsUpdate() : void from class org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : "The class in based version is deleted and the class in refactored version is added. Five methods in total are moved frome the deletd class, to the added class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public INDEX_COMPOUND_FORMAT : String from class org.elasticsearch.index.merge.policy.AbstractMergePolicyProvider to public INDEX_COMPOUND_FORMAT : String from class org.elasticsearch.index.shard.MergePolicyConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Package",
    "description" : "Move Package org.elasticsearch.index.merge.policy to org.elasticsearch.index.shard",
    "comment" : "<p>Package org.elasticsearch.index.merge.policy does not exist in child commit after refactoring</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.elasticsearch.index.merge.policy.MergePolicySettingsTest moved to org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter mergePolicyProvider : MergePolicyProvider to mergePolicy : MergePolicy in method public EngineConfig(shardId ShardId, threadPool ThreadPool, indexingService ShardIndexingService, indexSettingsService IndexSettingsService, warmer IndicesWarmer, store Store, deletionPolicy SnapshotDeletionPolicy, mergePolicy MergePolicy, mergeScheduler MergeSchedulerProvider, analyzer Analyzer, similarity Similarity, codecService CodecService, failedEngineListener Engine.FailedEngineListener, translogRecoveryPerformer TranslogRecoveryPerformer, filterCache QueryCache, filterCachingPolicy QueryCachingPolicy, translogConfig TranslogConfig) from class org.elasticsearch.index.engine.EngineConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute mergePolicyProvider : MergePolicyProvider to mergePolicy : MergePolicy in class org.elasticsearch.index.engine.EngineConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type mergePolicyProvider : MergePolicyProvider to mergePolicy : MergePolicy in method public EngineConfig(shardId ShardId, threadPool ThreadPool, indexingService ShardIndexingService, indexSettingsService IndexSettingsService, warmer IndicesWarmer, store Store, deletionPolicy SnapshotDeletionPolicy, mergePolicy MergePolicy, mergeScheduler MergeSchedulerProvider, analyzer Analyzer, similarity Similarity, codecService CodecService, failedEngineListener Engine.FailedEngineListener, translogRecoveryPerformer TranslogRecoveryPerformer, filterCache QueryCache, filterCachingPolicy QueryCachingPolicy, translogConfig TranslogConfig) from class org.elasticsearch.index.engine.EngineConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type MergePolicyProvider to MergePolicy in method public getMergePolicy() : MergePolicy from class org.elasticsearch.index.engine.EngineConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type mergePolicyProvider : MergePolicyProvider to mergePolicy : MergePolicy in class org.elasticsearch.index.engine.EngineConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute mergePolicyProvider : MergePolicyProvider to mergePolicyConfig : MergePolicyConfig in class org.elasticsearch.index.shard.IndexShard",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='x x-first'>mergePolicyProvider is replaced with mergePolicyConfig</span><span class='pl-k x'>.</span><span class='x x-last'>getMergePolicy()<br />MergePolicyConfig contains attribute <span class='pl-k'>private</span> <span class='pl-k'>final</span> <span class='pl-smi'>TieredMergePolicy</span> mergePolicy <span class='pl-k'>=</span> <span class='pl-k'>new</span> <span class='pl-smi'>TieredMergePolicy</span>();<br /></span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TieredMergePolicy to MergePolicy in method public getMergePolicy() : MergePolicy from class org.elasticsearch.index.shard.MergePolicyConfig",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type mergePolicyProvider : MergePolicyProvider to mergePolicyConfig : MergePolicyConfig in class org.elasticsearch.index.shard.IndexShard",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public build(value boolean) : Settings from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest to public build(value String) : Settings from class org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public build(value double) : Settings from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest to public build(value String) : Settings from class org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public build(value int) : Settings from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest to public build(value String) : Settings from class org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createMergePolicy() : MergePolicyProvider<?> renamed to protected createEngine(indexSettingsService IndexSettingsService, store Store, translogPath Path, mergeSchedulerProvider MergeSchedulerProvider, mergePolicy MergePolicy) : InternalEngine in class org.elasticsearch.index.engine.InternalEngineTests",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public getMergePolicy() : TieredMergePolicy from class org.elasticsearch.index.merge.policy.TieredMergePolicyProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter mergePolicy : MergePolicy in method protected createEngine(indexSettingsService IndexSettingsService, store Store, translogPath Path, mergeSchedulerProvider MergeSchedulerProvider, mergePolicy MergePolicy) : InternalEngine from class org.elasticsearch.index.engine.InternalEngineTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter mergePolicy : MergePolicy in method public config(indexSettingsService IndexSettingsService, store Store, translogPath Path, mergeSchedulerProvider MergeSchedulerProvider, mergePolicy MergePolicy) : EngineConfig from class org.elasticsearch.index.engine.InternalEngineTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter mergePolicyProvider : MergePolicyProvider in method public IndexShard(shardId ShardId, indexSettingsService IndexSettingsService, indicesLifecycle IndicesLifecycle, store Store, mergeScheduler MergeSchedulerProvider, threadPool ThreadPool, mapperService MapperService, queryParserService IndexQueryParserService, indexCache IndexCache, indexAliasesService IndexAliasesService, indexingService ShardIndexingService, getService ShardGetService, searchService ShardSearchService, shardWarmerService ShardIndexWarmerService, shardFilterCache ShardFilterCache, shardFieldData ShardFieldData, percolatorQueriesRegistry PercolatorQueriesRegistry, shardPercolateService ShardPercolateService, codecService CodecService, termVectorsService ShardTermVectorsService, indexFieldDataService IndexFieldDataService, indexService IndexService, shardSuggestService ShardSuggestService, shardQueryCache ShardQueryCache, shardBitsetFilterCache ShardBitsetFilterCache, warmer IndicesWarmer, deletionPolicy SnapshotDeletionPolicy, similarityService SimilarityService, mergePolicyProvider MergePolicyProvider, factory EngineFactory, clusterService ClusterService, nodeEnv NodeEnvironment, path ShardPath, bigArrays BigArrays) from class org.elasticsearch.index.shard.IndexShard",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter mergePolicyProvider : MergePolicyProvider in method public ShadowIndexShard(shardId ShardId, indexSettingsService IndexSettingsService, indicesLifecycle IndicesLifecycle, store Store, mergeScheduler MergeSchedulerProvider, threadPool ThreadPool, mapperService MapperService, queryParserService IndexQueryParserService, indexCache IndexCache, indexAliasesService IndexAliasesService, indexingService ShardIndexingService, getService ShardGetService, searchService ShardSearchService, shardWarmerService ShardIndexWarmerService, shardFilterCache ShardFilterCache, shardFieldData ShardFieldData, percolatorQueriesRegistry PercolatorQueriesRegistry, shardPercolateService ShardPercolateService, codecService CodecService, termVectorsService ShardTermVectorsService, indexFieldDataService IndexFieldDataService, indexService IndexService, shardSuggestService ShardSuggestService, shardQueryCache ShardQueryCache, shardBitsetFilterCache ShardBitsetFilterCache, warmer IndicesWarmer, deletionPolicy SnapshotDeletionPolicy, similarityService SimilarityService, mergePolicyProvider MergePolicyProvider, factory EngineFactory, clusterService ClusterService, nodeEnv NodeEnvironment, path ShardPath, bigArrays BigArrays) from class org.elasticsearch.index.shard.ShadowIndexShard",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type IOException in method public testForceMerge() : void from class org.elasticsearch.index.engine.InternalEngineTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier final in class org.elasticsearch.index.shard.MergePolicyConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type mp : TieredMergePolicyProvider to mp : MergePolicyConfig in method public testTieredMergePolicySettingsUpdate() : void from class org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type mp : TieredMergePolicyProvider to mp : MergePolicyConfig in method public testUpdateSettings() : void from class org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable service : IndexSettingsService in method public testCompoundFileSettings() : void from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 8239
}, {
  "id" : 1107917,
  "repository" : "https://github.com/elastic/elasticsearch.git",
  "sha1" : "ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
  "url" : "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
  "author" : "javanna",
  "time" : "6/10/15 7:46 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected buildFQuery(builder XContentBuilder, params Params) : void extracted from protected doXContent(builder XContentBuilder, params Params) : void in class org.elasticsearch.index.query.QueryFilterBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "The string value of FQUERY_NAME is the same as the FQueryFilterBuilder.NAME ultimately"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter value : long[] to values : long[] in method public writeLongArray(values long[]) : void from class org.elasticsearch.common.io.stream.StreamOutput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter value : float[] to values : float[] in method public writeFloatArray(values float[]) : void from class org.elasticsearch.common.io.stream.StreamOutput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter value : double[] to values : double[] in method public writeDoubleArray(values double[]) : void from class org.elasticsearch.common.io.stream.StreamOutput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter value : int[] to values : int[] in method public writeIntArray(values int[]) : void from class org.elasticsearch.common.io.stream.StreamOutput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type QueryFilterBuilder to FQueryFilterBuilder in method public getBuilderPrototype() : FQueryFilterBuilder from class org.elasticsearch.index.query.FQueryFilterParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected doXContent(builder XContentBuilder, params Params) : void renamed to protected buildFQuery(builder XContentBuilder, params Params) : void in class org.elasticsearch.index.query.QueryFilterBuilder",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public readMap() : Map<String,Object> from class org.elasticsearch.common.io.stream.StreamInput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public IndicesQueriesRegistry(settings Settings, injectedQueryParsers Set<QueryParser>, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.indices.query.IndicesQueriesRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public LocalTransport(settings Settings, threadPool ThreadPool, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.local.LocalTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public NettyTransport(settings Settings, threadPool ThreadPool, networkService NetworkService, bigArrays BigArrays, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.netty.NettyTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public ServerChannelPipelineFactory(nettyTransport NettyTransport, name String, settings Settings, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.netty.NettyTransport.ServerChannelPipelineFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public CountingAssertingLocalTransport(settings Settings, threadPool ThreadPool, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.plugins.PluggableTransportModuleTests.CountingAssertingLocalTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public AssertingLocalTransport(settings Settings, threadPool ThreadPool, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.test.transport.AssertingLocalTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method protected build(settings Settings, version Version, namedWriteableRegistry NamedWriteableRegistry) : MockTransportService from class org.elasticsearch.transport.local.SimpleLocalTransportTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public ExceptionThrowingNettyTransport(settings Settings, threadPool ThreadPool, networkService NetworkService, bigArrays BigArrays, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.netty.NettyTransportTests.ExceptionThrowingNettyTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public ErrorPipelineFactory(exceptionThrowingNettyTransport ExceptionThrowingNettyTransport, name String, groupSettings Settings, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.netty.NettyTransportTests.ExceptionThrowingNettyTransport.ErrorPipelineFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method protected build(settings Settings, version Version, namedWriteableRegistry NamedWriteableRegistry) : MockTransportService from class org.elasticsearch.transport.netty.SimpleNettyTransportTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method protected abstract build(settings Settings, version Version, namedWriteableRegistry NamedWriteableRegistry) : MockTransportService from class org.elasticsearch.transport.AbstractSimpleTransportTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Annotation",
    "description" : "Add Variable Annotation @SuppressWarnings(\"unchecked\") in variable map : Map<String,Object> in method public writeGenericValue(value Object) : void from class org.elasticsearch.common.io.stream.StreamOutput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 7383
}, {
  "id" : 1108190,
  "repository" : "https://github.com/kuujo/copycat.git",
  "sha1" : "19a49f8f36b2f6d82534dc13504d672e41a3a8d1",
  "url" : "https://github.com/kuujo/copycat/commit/19a49f8f36b2f6d82534dc13504d672e41a3a8d1",
  "author" : "Jordan Halterman",
  "time" : "6/10/15 6:01 AM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private doAppendEntries(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private doAppendEntries(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private doCheckPreviousEntry(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private doCheckPreviousEntry(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private handleAppend(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private handleAppend(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private applyCommits(commitIndex long) : CompletableFuture<Void> from class net.kuujo.copycat.raft.state.ActiveState to private applyCommits(commitIndex long) : CompletableFuture<Void> from class net.kuujo.copycat.raft.state.PassiveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private applyIndex(globalIndex long) : void from class net.kuujo.copycat.raft.state.ActiveState to private applyIndex(globalIndex long) : void from class net.kuujo.copycat.raft.state.PassiveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected transition : boolean from class net.kuujo.copycat.raft.state.ActiveState to protected transition : boolean from class net.kuujo.copycat.raft.state.PassiveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type CompletableFuture<RaftState> to void in method protected transition(state RaftState) : void from class net.kuujo.copycat.raft.state.ActiveState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected transition(state RaftState) : void from class net.kuujo.copycat.raft.state.ActiveState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter request : AppendRequest in method protected append(request AppendRequest) : CompletableFuture<AppendResponse> from class net.kuujo.copycat.raft.state.PassiveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 858
}, {
  "id" : 1108762,
  "repository" : "https://github.com/raphw/byte-buddy.git",
  "sha1" : "f1dfb66a368760e77094ac1e3860b332cf0e4eb5",
  "url" : "https://github.com/raphw/byte-buddy/commit/f1dfb66a368760e77094ac1e3860b332cf0e4eb5",
  "author" : "Rafael Winterhalter",
  "time" : "6/10/15 5:31 AM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.Explicit to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable.OfLegacyVmMethod to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable.OfLegacyVmConstructor to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1005
}, {
  "id" : 1109077,
  "repository" : "https://github.com/FasterXML/jackson-databind.git",
  "sha1" : "44dea1f292933192ea5287d9b3e14a7daaef3c0f",
  "url" : "https://github.com/FasterXML/jackson-databind/commit/44dea1f292933192ea5287d9b3e14a7daaef3c0f",
  "author" : "Cowtowncoder",
  "time" : "6/10/15 8:33 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class com.fasterxml.jackson.failing.TestExternalTypeId222.Issue222BeanB moved to com.fasterxml.jackson.databind.jsontype.TestExternalId.Issue222BeanB",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.fasterxml.jackson.failing.TestExternalTypeId222.Issue222Bean moved to com.fasterxml.jackson.databind.jsontype.TestExternalId.Issue222Bean",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public testIssue222() : void from class com.fasterxml.jackson.failing.TestExternalTypeId222 to public testExternalTypeWithProp222() : void from class com.fasterxml.jackson.databind.jsontype.TestExternalId",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute protected _typeSerializer : TypeSerializer from class com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
    "comment" : "<p>public void assignTypeSerializer(TypeSerializer typeSer)<br />is called in<br />protected List&lt;BeanPropertyWriter&gt; removeOverlappingTypeIds()<br />src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute protected _typeSerializer : TypeSerializer from class com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1439
}, {
  "id" : 1109425,
  "repository" : "https://github.com/Alluxio/alluxio.git",
  "sha1" : "6d10621465c0e6ae81ad8d240d70a55c72caeea6",
  "url" : "https://github.com/Alluxio/alluxio/commit/6d10621465c0e6ae81ad8d240d70a55c72caeea6",
  "author" : "Bin Fan",
  "time" : "6/10/15 9:21 PM",
  "refactorings" : [ {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute protected mBlockSize : long from class tachyon.worker.block.meta.BlockMetaBase to private mBlockSize : long from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getBlockSize() : long from class tachyon.worker.block.meta.BlockMetaBase to public getBlockSize() : long from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter blockSize : long to initialBlockSize : long in method public TempBlockMeta(userId long, blockId long, initialBlockSize long, dir StorageDir) from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getBlockSize() : long from class tachyon.worker.block.meta.BlockMetaBase to public getBlockSize() : long from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getBlockSize() : long from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter blockSize : long in method public BlockMetaBase(blockId long, blockSize long, dir StorageDir) from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private mBlockSize : long from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private mUserId : long from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : "<p>public long getUserId() is not called</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute protected mDir : StorageDir from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private mBlockSize : long from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1109449,
  "repository" : "https://github.com/Alluxio/alluxio.git",
  "sha1" : "0ba343846f21649e29ffc600f30a7f3e463fb24c",
  "url" : "https://github.com/Alluxio/alluxio/commit/0ba343846f21649e29ffc600f30a7f3e463fb24c",
  "author" : "Bin Fan",
  "time" : "6/10/15 3:33 AM",
  "refactorings" : [ {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass tachyon.worker.block.meta.BlockMetaBase from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass tachyon.worker.block.meta.BlockMetaBase from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getParentDir() : StorageDir from class tachyon.worker.block.meta.BlockMeta to public getParentDir() : StorageDir from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getBlockId() : long from class tachyon.worker.block.meta.BlockMeta to public getBlockId() : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getBlockSize() : long from class tachyon.worker.block.meta.BlockMeta to public getBlockSize() : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private mDir : StorageDir from class tachyon.worker.block.meta.BlockMeta to protected mDir : StorageDir from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private mBlockSize : long from class tachyon.worker.block.meta.BlockMeta to protected mBlockSize : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private mBlockId : long from class tachyon.worker.block.meta.BlockMeta to protected mBlockId : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public getTmpPath(userId long) : String from class tachyon.worker.block.meta.BlockMeta to public getPath() : String from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getPath() : String from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getPath() : String from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter userId : long in method public getTmpPath(userId long) : String from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected mBlockId : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected mBlockSize : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected mDir : StorageDir from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1110072,
  "repository" : "https://github.com/orientechnologies/orientdb.git",
  "sha1" : "b40adc25008b6f608ee3eb3422c8884fff987337",
  "url" : "https://github.com/orientechnologies/orientdb/commit/b40adc25008b6f608ee3eb3422c8884fff987337",
  "author" : "lvca",
  "time" : "6/15/15 7:43 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected readSynchResult(network OChannelBinaryAsynchClient, database ODatabaseDocument) : Object extracted from public command(iCommand OCommandRequestText) : Object in class com.orientechnologies.orient.client.remote.OStorageRemote",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Hard to catch. -Default- implementation in switch case has been changed. Note that this is because of the final variable declaration inside the extracted method. It should be whether initialized or assign value in each case, consisting default."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public serializeValue(listener OAbstractCommandResultListener, result Object) : void extracted from private indexGet() : void in class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "It may contain a bug fix - null check"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public serializeValue(listener OAbstractCommandResultListener, result Object) : void extracted from protected command() : void in class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "It may contain a bug fix - null check"
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ODatabase<ORecord> to ODatabaseDocumentInternal in method protected getDatabase() : ODatabaseDocumentInternal from class com.orientechnologies.orient.core.index.OIndexRemote",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type REQUEST_INDEX_GET : int to REQUEST_INDEX_GET : byte in class com.orientechnologies.orient.enterprise.channel.binary.OChannelBinaryProtocol",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type REQUEST_INDEX_PUT : int to REQUEST_INDEX_PUT : byte in class com.orientechnologies.orient.enterprise.channel.binary.OChannelBinaryProtocol",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type REQUEST_INDEX_REMOVE : int to REQUEST_INDEX_REMOVE : byte in class com.orientechnologies.orient.enterprise.channel.binary.OChannelBinaryProtocol",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable doc : ODocument in method public command(iCommand OCommandRequestText) : Object from class com.orientechnologies.orient.client.remote.OStorageRemote",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable token : Integer in method public command(iCommand OCommandRequestText) : Object from class com.orientechnologies.orient.client.remote.OStorageRemote",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable unsubscribe : Boolean in method public command(iCommand OCommandRequestText) : Object from class com.orientechnologies.orient.client.remote.OStorageRemote",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable index : OIndex<?> in method private indexPut() : void from class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable index : OIndex<?> in method private indexRemove() : void from class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable res : boolean in method private indexRemove() : void from class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable index : OIndex<?> in method private indexGet() : void from class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable result : Object in method protected readSynchResult(network OChannelBinaryAsynchClient, database ODatabaseDocument) : Object from class com.orientechnologies.orient.client.remote.OStorageRemote",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable value : ORecordId in method private indexPut() : void from class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4630
}, {
  "id" : 1110153,
  "repository" : "https://github.com/VoltDB/voltdb.git",
  "sha1" : "e9efc045fbc6fa893c66a03b72b7eedb388cf96c",
  "url" : "https://github.com/VoltDB/voltdb/commit/e9efc045fbc6fa893c66a03b72b7eedb388cf96c",
  "author" : "wweiss",
  "time" : "6/15/15 12:27 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public setMpUniqueIdListener(listener DurableMpUniqueIdListener) : void extracted from public setMpDRGateway(mpGateway PartitionDRGateway) : void in class org.voltdb.iv2.SpScheduler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Condition statement has been changed completely"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter task : TransactionTask to listener : DurableSpUniqueIdListener in method public setSpUniqueIdListener(listener DurableSpUniqueIdListener) : void in class org.voltdb.iv2.SpScheduler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter pendingTask : TransactionTask to listener : DurableMpUniqueIdListener in method public setMpUniqueIdListener(listener DurableMpUniqueIdListener) : void in class org.voltdb.iv2.SpScheduler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter lastMpUniqueId : long to uniqueId : long in method public lastSpUniqueIdMadeDurable(uniqueId long) : void in class org.voltdb.iv2.SpScheduler.DurableSpUniqueIdListener",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type task : TransactionTask to listener : DurableSpUniqueIdListener in method public setSpUniqueIdListener(listener DurableSpUniqueIdListener) : void in class org.voltdb.iv2.SpScheduler",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type pendingTask : TransactionTask to listener : DurableMpUniqueIdListener in method public setMpUniqueIdListener(listener DurableMpUniqueIdListener) : void in class org.voltdb.iv2.SpScheduler",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public uniqueIdDurable(uniqueId long) : void renamed to public lastMpUniqueIdMadeDurable(uniqueId long) : void in class org.voltdb.PartitionDRGateway",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public lastMpUniqueIdMadeDurable(uniqueId long) : void from class org.voltdb.PartitionDRGateway",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public offerPendingMPTasks(txnId long) : void from class org.voltdb.iv2.SpScheduler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1110155,
  "repository" : "https://github.com/VoltDB/voltdb.git",
  "sha1" : "669e0722324965e3c99f29685517ac24d4ff2848",
  "url" : "https://github.com/VoltDB/voltdb/commit/669e0722324965e3c99f29685517ac24d4ff2848",
  "author" : "Manju James",
  "time" : "6/15/15 10:56 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public getClient(timeout long, scheme ClientAuthHashScheme, useAdmin boolean) : Client extracted from public getClient(timeout long, scheme ClientAuthHashScheme) : Client in class org.voltdb.regressionsuites.RegressionSuite",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Added functionality - if-else condition"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private runPausedMode(isAdmin boolean) : void extracted from public testPausedMode() : void in class org.voltdb.TestClientInterface",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Added some asserts"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public makeStoredProcAdHocPlannerWork(replySiteId long, sql String, userParams Object[], singlePartition boolean, context CatalogContext, completionHandler AsyncCompilerWorkCompletionHandler, isAdmin boolean) : AdHocPlannerWork extracted from public makeStoredProcAdHocPlannerWork(replySiteId long, sql String, userParams Object[], singlePartition boolean, context CatalogContext, completionHandler AsyncCompilerWorkCompletionHandler) : AdHocPlannerWork in class org.voltdb.compiler.AdHocPlannerWork",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public mockStatementBatch(replySiteId long, sql String, extractedValues Object[], paramTypes VoltType[], userParams Object[], partitionParamIndex int, catalogHash byte[], readOnly boolean, isAdmin boolean) : AdHocPlannedStmtBatch extracted from public mockStatementBatch(replySiteId long, sql String, extractedValues Object[], paramTypes VoltType[], userParams Object[], partitionParamIndex int, catalogHash byte[]) : AdHocPlannedStmtBatch in class org.voltdb.compiler.AdHocPlannedStmtBatch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "One parameter has been added to the method call -mockStatementBatch-, which itself has been extracted during this commit. So, like parametrize variable, extract method can cause this behavior."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getListenerAddress(hostId int, useAdmin boolean) : String extracted from public getListenerAddress(hostId int) : String in class org.voltdb.regressionsuites.LocalCluster",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private allowPauseModeExecution(handler ClientInputHandler, procedure Procedure, invocation StoredProcedureInvocation) : boolean extracted from package handleRead(buf ByteBuffer, handler ClientInputHandler, ccxn Connection) : ClientResponseImpl in class org.voltdb.ClientInterface",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private writeResponseToConnection(response ClientResponseImpl) : void extracted from public run() : void in class org.voltdb.ClientInterface.processFinishedCompilerWork.ft.create.new Runnable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
} ]
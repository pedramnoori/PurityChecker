[ {
  "id" : 1103823,
  "repository" : "https://github.com/raphw/byte-buddy.git",
  "sha1" : "372f4ae6cebcd664e3b43cade356d1df233f6467",
  "url" : "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
  "author" : "Rafael Winterhalter",
  "time" : "6/8/15 12:07 PM",
  "refactorings" : [ {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection to public ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Retaining moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.Retaining",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public onType(typeDescription TypeDescription) : TypeVariableProxy from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to public onType(typeDescription TypeDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion, Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the method is the same since both class implement the same extends the same class | Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP. However, I would mark the entire thing as a rename class. All the methods/attributes of the removed class is being repeated (with small modifications) in the new class. Matin, Davood: FP, condidate move and rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion, Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the method is the same since both class implement the same extends the same class | Davood: same as above",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from public prepare(instrumentedType InstrumentedType) : InstrumentedType in class net.bytebuddy.implementation.FieldAccessor.ForNamedField.PreparationHandler.FieldDefiner & moved to class net.bytebuddy.dynamic.TargetType",
    "comment" : "call to resolve() with three args in old vrs call to resolve() with two args in new",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from protected resolveReturnType(instrumentedType TypeDescription) : TypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken & moved to class net.bytebuddy.dynamic.TargetType",
    "comment" : "The call to method resolve() with three params is changed to method resolve() with two params in the refactored version. Not an extract method refactroing.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from protected resolveFieldType(instrumentedType TypeDescription) : TypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.FieldToken & moved to class net.bytebuddy.dynamic.TargetType",
    "comment" : "call to resolve() with three args in old vrs call to resolve() with two args in new",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private substitutionMatcher : ElementMatcher<? super TypeDescription> from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to private substitutionMatcher : ElementMatcher<? super TypeDescription> from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion. Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the attribute is the same since both class implement the same extends the same class |  Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private substitute : TypeDescription from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to private substitute : TypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion. Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the attribute is the same since both class implement the same extends the same class | Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor moved and renamed to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable resolved : List<GenericTypeDescription> to substituted : List<GenericTypeDescription> in method public resolve(typeDescriptions List<? extends GenericTypeDescription>, substitute TypeDescription) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter typeList : List<? extends GenericTypeDescription> to typeDescriptions : List<? extends GenericTypeDescription> in method public resolve(typeDescriptions List<? extends GenericTypeDescription>, substitute TypeDescription) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private MethodToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, methodDescription MethodDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute targetType : TypeDescription to levelType : TypeDescription in class net.bytebuddy.dynamic.scaffold.inline.InlineInstrumentedTypeTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected ParameterToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, parameterDescription ParameterDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.ParameterToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private FieldToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, fieldDescription FieldDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.FieldToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type parameterTypes : List<? extends TypeDescription> to parameterTypes : List<? extends GenericTypeDescription> in method public MethodToken(parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type exceptionTypes : List<? extends TypeDescription> to exceptionTypes : List<? extends GenericTypeDescription> in method public MethodToken(parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type returnType : TypeDescription to returnType : GenericTypeDescription in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type parameterTypes : List<? extends TypeDescription> to parameterTypes : List<? extends GenericTypeDescription> in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type exceptionTypes : List<? extends TypeDescription> to exceptionTypes : List<? extends GenericTypeDescription> in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private FieldToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, fieldDescription FieldDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.FieldToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private MethodToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, methodDescription MethodDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected ParameterToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, parameterDescription ParameterDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.ParameterToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type exceptionMatcher : ElementMatcher<? super List<? extends TypeDescription>> to exceptionMatcher : ElementMatcher<? super Iterable<? extends TypeDescription>> in method public declaresException(exceptionMatcher ElementMatcher<? super Iterable<? extends TypeDescription>>) : ElementMatcher.Junction<T> from class net.bytebuddy.matcher.ElementMatchers",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method protected resolveReturnType(instrumentedType TypeDescription) : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method protected resolveParameterTypes(instrumentedType TypeDescription) : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method protected resolveExceptionTypes(instrumentedType TypeDescription) : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method public getReturnType() : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method public getParameterTypes() : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method public getExceptionTypes() : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method protected resolveFieldType(instrumentedType TypeDescription) : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.FieldToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter substitutionMatcher : ElementMatcher<? super TypeDescription> to typeDescription : GenericTypeDescription in method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription in class net.bytebuddy.dynamic.TargetType",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type returnType : TypeDescription to returnType : GenericTypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type parameterTypes : List<TypeDescription> to parameterTypes : List<GenericTypeDescription> in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type exceptionTypes : List<TypeDescription> to exceptionTypes : List<GenericTypeDescription> in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type parameterTypes : TypeList to parameterTypes : GenericTypeList in class net.bytebuddy.dynamic.DynamicTypeBuilderTokenTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type exceptionTypes : TypeList to exceptionTypes : GenericTypeList in class net.bytebuddy.dynamic.DynamicTypeBuilderTokenTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection to public ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.ForType moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForType",
    "comment" : "<p>Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getInterfacesGen() : GenericTypeList from class net.bytebuddy.description.type.TypeDescription to public getInterfacesGen() : GenericTypeList from class net.bytebuddy.description.type.generic.GenericTypeDescription",
    "comment" : "<p>These are abstract methods</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getSuperTypeGen() : GenericTypeDescription from class net.bytebuddy.description.type.TypeDescription to public getSuperTypeGen() : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription",
    "comment" : "<p>this is an abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter substitutionMatcher : ElementMatcher<? super TypeDescription> in method public resolve(typeList List<? extends GenericTypeDescription>, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public asRawType() : TypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.ForWildcardType",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected ForType(substitute TypeDescription) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected ForRawType(substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType to public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter substitutionMatcher : ElementMatcher<? super TypeDescription> in method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter substitute : TypeDescription in method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter observed : TypeDescription to typeDescription : TypeDescription in method public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to public in attribute public ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected AbstractBase(loadedTypeInitializer LoadedTypeInitializer, typeInitializer TypeInitializer, matcher ElementMatcher<? super TypeDescription>, typeVariables List<? extends GenericTypeDescription>, fieldDescriptions List<? extends FieldDescription>, methodDescriptions List<? extends MethodDescription>) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected ForMethod(substitute TypeDescription, typeVariableMethodMatcher ElementMatcher<? super MethodDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in method protected ForMethod(substitute TypeDescription, typeVariableMethodMatcher ElementMatcher<? super MethodDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in method protected ForMethod(substitute TypeDescription, typeVariableMethodMatcher ElementMatcher<? super MethodDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getSuperTypeGen() : GenericTypeDescription extracted from public next() : GenericTypeDescription in class net.bytebuddy.description.type.TypeDescription.AbstractTypeDescription.SuperTypeIterator & moved to class net.bytebuddy.description.type.generic.GenericTypeDescription.ForParameterizedType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "functionality has been changed completely"
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4590
}, {
  "id" : 1112031,
  "repository" : "https://github.com/eclipse/vert.x.git",
  "sha1" : "718782014519034b28f6d3182fd9d340b7b31a74",
  "url" : "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
  "author" : "purplefox",
  "time" : "6/15/15 7:22 AM",
  "refactorings" : [ {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute protected connectionMap : Map<Channel,C> from class io.vertx.core.net.impl.VertxHandler to protected connectionMap : Map<Channel,C> from class io.vertx.core.http.impl.VertxHttpHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected getConnection(channel Channel) : C extracted from public channelWritabilityChanged(ctx ChannelHandlerContext) : void in class io.vertx.core.net.impl.VertxHandler & moved to class io.vertx.core.http.impl.VertxHttpHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics Severe changes",
      "mappingState" : 3,
      "validationComment" : "non-mapped leaves change the behavior of the program and are not justifiable; null check has been added"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected getConnection(channel Channel) : C extracted from public channelReadComplete(ctx ChannelHandlerContext) : void in class io.vertx.core.net.impl.VertxHandler & moved to class io.vertx.core.http.impl.VertxHttpHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics Severe changes",
      "mappingState" : 3,
      "validationComment" : "non-mapped leaves change the behavior of the program and are not justifiable; null check has been added"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter server : DatagramSocketImpl to socket : DatagramSocketImpl in method package DatagramServerHandler(vertx VertxInternal, socket DatagramSocketImpl) from class io.vertx.core.datagram.impl.DatagramServerHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute server : DatagramSocketImpl to socket : DatagramSocketImpl in class io.vertx.core.datagram.impl.DatagramServerHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute vertx : VertxInternal to connectionMap : Map<Channel,C> in class io.vertx.core.http.impl.VertxHttpHandler",
    "comment" : "<p>Conflicting refactoring:<br />Push Down Attribute protected connectionMap : Map&lt;Channel,C&gt; from class io.vertx.core.net.impl.VertxHandler to protected connectionMap : Map&lt;Channel,C&gt; from class io.vertx.core.http.impl.VertxHttpHandler</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter connectionMap : Map<Channel,C> to channel : Channel in method protected removeConnection(channel Channel) : C in class io.vertx.core.net.impl.VertxHandler",
    "comment" : "<p>removeConnection() is a newly abstract method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected getConnection(channel Channel) : NetSocketImpl extracted from public exceptionCaught(chctx ChannelHandlerContext, t Throwable) : void in class io.vertx.core.net.impl.VertxHandler & moved to class io.vertx.core.net.impl.VertxNetHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics",
      "mappingState" : 1,
      "validationComment" : "parameter to argument change, which is part of Extract Method mechanic and justifiable"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected getConnection(channel Channel) : NetSocketImpl extracted from public channelWritabilityChanged(ctx ChannelHandlerContext) : void in class io.vertx.core.net.impl.VertxHandler & moved to class io.vertx.core.net.impl.VertxNetHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics",
      "mappingState" : 1,
      "validationComment" : "parameter to argument change, which is part of Extract Method mechanic and justifiable"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected removeConnection(channel Channel) : NetSocketImpl extracted from public channelInactive(chctx ChannelHandlerContext) : void in class io.vertx.core.net.impl.VertxHandler & moved to class io.vertx.core.net.impl.VertxNetHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics",
      "mappingState" : 1,
      "validationComment" : "parameter to argument change, which is part of Extract Method mechanic and justifiable"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected getConnection(channel Channel) : NetSocketImpl extracted from public channelRead(chctx ChannelHandlerContext, msg Object) : void in class io.vertx.core.net.impl.VertxHandler & moved to class io.vertx.core.net.impl.VertxNetHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics",
      "mappingState" : 1,
      "validationComment" : "parameter to argument change, which is part of Extract Method mechanic and justifiable"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected getConnection(channel Channel) : NetSocketImpl extracted from public channelReadComplete(ctx ChannelHandlerContext) : void in class io.vertx.core.net.impl.VertxHandler & moved to class io.vertx.core.net.impl.VertxNetHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics",
      "mappingState" : 1,
      "validationComment" : "parameter to argument change, which is part of Extract Method mechanic and justifiable"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected VertxHandler(vertx VertxInternal, connectionMap Map<Channel,C>) renamed to protected abstract removeConnection(channel Channel) : C in class io.vertx.core.net.impl.VertxHandler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter vertx : VertxInternal in method public ClientHandler(vertx VertxInternal, context ContextImpl) from class io.vertx.core.http.impl.HttpClientImpl.ClientHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter vertx : VertxInternal in method public ServerHandler(vertx VertxInternal) from class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter connectionMap : Map<Channel,C> in method protected VertxHandler(vertx VertxInternal, connectionMap Map<Channel,C>) from class io.vertx.core.net.impl.VertxHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute protected connectionMap : Map<Channel,C> from class io.vertx.core.net.impl.VertxHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1710
}, {
  "id" : 1112091,
  "repository" : "https://github.com/droolsjbpm/drools.git",
  "sha1" : "1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
  "url" : "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
  "author" : "Mario Fusco",
  "time" : "6/15/15 9:41 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected initPriorityQueue(kBase InternalKnowledgeBase) : BinaryHeapQueue extracted from public AgendaGroupQueueImpl(name String, kBase InternalKnowledgeBase) in class org.drools.core.common.AgendaGroupQueueImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private internalAddEntry(entry PropagationEntry) : void extracted from public addEntry(entry PropagationEntry) : void in class org.drools.core.phreak.SynchronizedPropagationList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute protected evaluatingActionQueue : AtomicBoolean from class org.drools.core.impl.StatefulKnowledgeSessionImpl to private evaluatingActionQueue : AtomicBoolean from class org.drools.reteoo.common.ReteWorkingMemory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public notifyHalt() : void from class org.drools.core.common.DefaultAgenda to public notifyHalt() : void from class org.drools.core.phreak.SynchronizedBypassPropagationList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public notifyHalt() : void from class org.drools.reteoo.common.ReteAgenda to public notifyHalt() : void from class org.drools.core.phreak.SynchronizedBypassPropagationList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PhreakTimerNode.TimerAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PropagationEntry.AbstractPropagationEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isHighestSalience(nextRule RuleAgendaItem) : boolean renamed to private isHigherSalience(nextRule RuleAgendaItem) : boolean in class org.drools.core.phreak.RuleExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public executeIfNotFiring(task Runnable) : boolean renamed to public executeTask(executable ExecutableEntry) : void in class org.drools.reteoo.common.ReteAgenda",
    "comment" : "<p>Obvious case</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private internalFlush() : void renamed to public flush(workingMemory InternalWorkingMemory, currentHead PropagationEntry) : void in class org.drools.core.phreak.SynchronizedPropagationList",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public addActivation(item AgendaItem, notify boolean) : void renamed to public fireTimedActivation(activation Activation) : boolean in class org.drools.core.common.DefaultAgenda",
    "comment" : "<p>Second Opinion. Seems FP</p><p>Davood: The bodies are the same with one throw statement</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private waitAndEnterExecutionState(newState ExecutionState) : void extracted from public fireUntilHalt(agendaFilter AgendaFilter) : void in class org.drools.core.common.DefaultAgenda",
    "comment" : " Statements in waitAndEnterExecutionState(..) are not part of  fireUntilHalt(..)",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public takeAll() : PropagationEntry extracted from public flush() : void in class org.drools.core.phreak.SynchronizedPropagationList",
    "comment" : "<p>Laleh: hard to say if indeed it is an extract method, there&nbsp;are other changes too</p><p>Davood and Matin: internalFlush() was renamed to takeAll()</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public add(handle EventFactHandle) : void extracted from public assertFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : boolean in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "It is extract and move since the method is moved to the inner class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public peek() : EventFactHandle extracted from public assertFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : boolean in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "It is extract and move since the method is moved to the inner class",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public peek() : EventFactHandle extracted from public retractFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "It is extract and move since the method is moved to the inner class",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public peek() : EventFactHandle extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "<p>Extract and Move to the inner class.</p><p>Since RefDiff does not detect 'Extract and Move refactoring' we accept it as CTP.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public poll() : EventFactHandle extracted from public retractFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "It is extract and move since the method is moved to the inner class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused a justifiable change"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public remove() : EventFactHandle extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "It is extract and move since the method is moved to the inner class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused a justifiable change"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public remove(handle EventFactHandle) : void extracted from public retractFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "It is extract and move since the method is moved to the inner class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public notifyHalt() : void extracted from public queueWorkingMemoryAction(action WorkingMemoryAction) : void in class org.drools.reteoo.common.ReteWorkingMemory & moved to class org.drools.core.impl.StatefulKnowledgeSessionImpl",
    "comment" : "<p>added</p><p>The extracted method does not have anything to do with the original method! Should be FP. TO BE CHECKED WITH LALEH</p><p>Laleh:</p><p>in the base version we have this.agenda.notifyHalt(); agenda is of type&nbsp; InternalAgenda. In the refactored version we have notifyHalt().<br />notifyHalt() is defied (in the refactored version) in the parent of class ReteWorkingMemory which is StatefulKnowledgeSessionImpl<br />the body of notifyHalt() in StatefulKnowledgeSessionImpl we have: propagationList.notifyHalt();<br />knowing that InternalAgenda has no type relation with PropagationList =&gt; it is FP</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "This is not a Extract and Move Method. There is no connection between this.agenda and propagationList as the types are completely different"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setExpiringHandle(expiringHandle EventFactHandle) : void extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics",
      "mappingState" : 1,
      "validationComment" : "parameter to argument change, which is part of Extract Method mechanic and justifiable"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private haltRuleFiring(fireCount int, fireLimit int, localFireCount int, agenda InternalAgenda) : boolean extracted from private fire(wm InternalWorkingMemory, filter AgendaFilter, fireCount int, fireLimit int, outerStack LinkedList<StackEntry>, agenda InternalAgenda) : int in class org.drools.core.phreak.RuleExecutor",
    "comment" : "<p>There exists&nbsp; method haltRuleFiring(..) in the before refactoring version, only one parameter is added to this method in the after refactoring version and its body is modified. </p>",
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter arg0 : Activation to existing : Activation in method public compare(existing Activation, adding Activation) : int from class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter arg1 : Activation to adding : Activation in method public compare(existing Activation, adding Activation) : int from class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PropagationEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type a : Object to a : T in method public compare(a T, b T) : int from class org.drools.core.util.NaturalComparator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type b : Object to b : T in method public compare(a T, b T) : int from class org.drools.core.util.NaturalComparator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type queries : ConcurrentMap<QueryImpl,RuleAgendaItem> to queries : Map<QueryImpl,RuleAgendaItem> in class org.drools.core.common.DefaultAgenda",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type comparator : Comparator to comparator : Comparator<Activation> in class org.drools.core.util.BinaryHeapQueue",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute halt : AtomicBoolean to currentState : ExecutionState in class org.drools.core.common.DefaultAgenda",
    "comment" : "<p>The logic based on halt has been replacement with new logic based on <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>enum</span> <span class='pl-en'>ExecutionState</span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter notify : boolean to firing : boolean in method package ExecutionState(firing boolean) in class org.drools.core.common.DefaultAgenda.ExecutionState",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void from class org.drools.core.common.InternalAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void from class org.drools.reteoo.common.ReteAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public executeIfNotFiring(task Runnable) : boolean renamed to public executeTask(executable ExecutableEntry) : void in class org.drools.core.common.InternalAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public executeTask(executable ExecutableEntry) : void from class org.drools.reteoo.common.ReteAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public executeTask(executable ExecutableEntry) : void from class org.drools.core.common.InternalAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void from class org.drools.reteoo.common.ReteAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void from class org.drools.core.common.InternalAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type existing : Item to existing : Activation in method public compare(existing Activation, adding Activation) : int in class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver",
    "comment" : "<p>compare(Activation arg0, Activation arg1) becomes compare(Activation existing, Activation adding)</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type halt : AtomicBoolean to currentState : ExecutionState in class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public isFiring() : boolean extracted from public fireAllRules(agendaFilter AgendaFilter, fireLimit int) : int in class org.drools.core.common.DefaultAgenda & moved to class org.drools.core.common.DefaultAgenda.ExecutionState",
    "comment" : "<p>There is a local method isFiring() which returns !<span class='x'>halt</span><span class='pl-k x'>.</span><span class='x x-last'>get</span>() and then it returns currentState.isFiring()</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public notifyHalt() : void from class org.drools.core.common.InternalAgenda to public notifyHalt() : void from class org.drools.core.common.InternalWorkingMemory",
    "comment" : "<p>This is a abstract method which is moved.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable agenda : InternalAgenda in method public queueRuleAgendaItem(wm InternalWorkingMemory) : void from class org.drools.core.reteoo.PathMemory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deactivateIfEmpty() : void renamed to public setFocus() : void in class org.drools.core.common.AgendaGroupQueueImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public fireUntilHalt(agendaFilter AgendaFilter) : void renamed to private waitAndEnterExecutionState(newState ExecutionState) : void in class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public executeIfNotFiring(task Runnable) : boolean renamed to public executeTask(executable ExecutableEntry) : void in class org.drools.core.common.DefaultAgenda",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public notifyHalt() : void renamed to public halt() : void in class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public halt() : void renamed to private immediateHalt() : void in class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public halt() : void renamed to public flushPropagations() : void in class org.drools.core.impl.StatefulKnowledgeSessionImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public flushPropagations() : void renamed to public flushPropagationsOnFireUntilHalt(fired boolean) : void in class org.drools.core.impl.StatefulKnowledgeSessionImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public flush() : void renamed to public flushOnFireUntilHalt(fired boolean, currentHead PropagationEntry) : void in class org.drools.core.phreak.SynchronizedPropagationList",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getComponentFactory() : KieComponentFactory renamed to private configureReteComponentFactory() : void in class org.drools.core.RuleBaseConfiguration",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Ignore in method public testExecuteQueueActions() : void from class org.drools.core.reteoo.ReteooWorkingMemoryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public notifyHalt() : void from class org.drools.core.phreak.SynchronizedBypassPropagationList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Test to @Test(timeout = 10000) in method public testEventExpirationInSlidingWindow() : void from class org.drools.compiler.integrationtests.CepEspTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @Ignore in class org.drools.compiler.integrationtests.CepFireUntilHaltTimerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method public fire(wm InternalWorkingMemory, outerStack LinkedList<StackEntry>) : void from class org.drools.core.phreak.RuleExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method private fire(wm InternalWorkingMemory, filter AgendaFilter, fireCount int, fireLimit int, outerStack LinkedList<StackEntry>, agenda InternalAgenda) : int from class org.drools.core.phreak.RuleExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method public reEvaluateNetwork(wm InternalWorkingMemory, outerStack LinkedList<StackEntry>) : void from class org.drools.core.phreak.RuleExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method public evaluateNetwork(pmem PathMemory, outerStack LinkedList<StackEntry>, executor RuleExecutor, wm InternalWorkingMemory) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method public outerEval(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter visitedRules : Set<String> in method public outerEval(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method public evalStackEntry(entry StackEntry, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, executor RuleExecutor, wm InternalWorkingMemory) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method public innerEval(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter visitedRules : Set<String> in method public innerEval(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter visitedRules : Set<String> in method private evalQueryNode(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, visitedRules Set<String>, srcTuples LeftTupleSets, sink LeftTupleSinkNode, stagedLeftTuples LeftTupleSets) : boolean from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method private evalBetaNode(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor, srcTuples LeftTupleSets, stagedLeftTuples LeftTupleSets, sink LeftTupleSinkNode) : boolean from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter visitedRules : Set<String> in method private evalBetaNode(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor, srcTuples LeftTupleSets, stagedLeftTuples LeftTupleSets, sink LeftTupleSinkNode) : boolean from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method private doRiaNode(wm InternalWorkingMemory, liaNode LeftInputAdapterNode, pmem PathMemory, srcTuples LeftTupleSets, betaNode BetaNode, sink LeftTupleSinkNode, smems SegmentMemory[], smemIndex int, nodeMem Memory, bm BetaMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter visitedRules : Set<String> in method private doRiaNode(wm InternalWorkingMemory, liaNode LeftInputAdapterNode, pmem PathMemory, srcTuples LeftTupleSets, betaNode BetaNode, sink LeftTupleSinkNode, smems SegmentMemory[], smemIndex int, nodeMem Memory, bm BetaMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter visitedRules : Set<String> in method public StackEntry(liaNode LeftInputAdapterNode, node NetworkNode, bit long, sink LeftTupleSinkNode, pmem PathMemory, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, visitedRules Set<String>, resumeFromNextNode boolean, processRian boolean) from class org.drools.core.phreak.StackEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pctx : PropagationContext in method protected updateNextExpiration(fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory, context Object, nodeId int) : void from class org.drools.core.rule.SlidingTimeWindow",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pctx : PropagationContext in method public BehaviorJobContext(nodeId int, workingMemory InternalWorkingMemory, behavior Behavior, behaviorContext Object, pctx PropagationContext) from class org.drools.core.rule.SlidingTimeWindow.BehaviorJobContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pctx : PropagationContext in method public BehaviorExpireWMAction(nodeId int, behavior Behavior, context Object, pctx PropagationContext) from class org.drools.core.rule.SlidingTimeWindow.BehaviorExpireWMAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter saveForLater : boolean in method public fireTimedActivation(activation Activation, saveForLater boolean) : boolean from class org.drools.reteoo.common.ReteAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pctx : PropagationContext in method protected updateNextExpiration(fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory, context Object, nodeId int) : void from class org.drools.reteoo.nodes.ReteSlidingTimeWindow",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter saveForLater : boolean in method public fireTimedActivation(activation Activation, saveForLater boolean) : boolean from class org.drools.core.common.InternalAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test(timeout = 10000) in method public testEventExpirationInSlidingWindow() : void from class org.drools.compiler.integrationtests.CepEspTest",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public execute(wm InternalWorkingMemory) : void from class org.drools.core.common.AgendaGroupQueueImpl.ClearAction",
    "comment" : "<p>execute() is extracted from clear() and moved to inner class ClearAction</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public execute(wm InternalWorkingMemory) : void from class org.drools.core.common.AgendaGroupQueueImpl.SetFocusAction",
    "comment" : "<p>setFocus() is renamed to execute() and moved to inner class SetFocusAction</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public flushOnFireUntilHalt(fired boolean, currentHead PropagationEntry) : void from class org.drools.core.phreak.SynchronizedPropagationList",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Test in method public testEventExpirationInSlidingWindow() : void from class org.drools.compiler.integrationtests.CepEspTest",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private isHigherSalience(nextRule RuleAgendaItem) : boolean from class org.drools.core.phreak.RuleExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected isExpired(currentTime long, handle EventFactHandle) : boolean from class org.drools.core.rule.SlidingTimeWindow",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected priorityQueue : BinaryHeapQueue from class org.drools.core.common.AgendaGroupQueueImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private queue : PriorityQueue<EventFactHandle> from class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private expiringHandle : EventFactHandle from class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private evaluatingActionQueue : AtomicBoolean from class org.drools.reteoo.common.ReteWorkingMemory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private expiringHandle : EventFactHandle from class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "<p>The access modifier is changed to private</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier synchronized in method public isEmpty() : boolean from class org.drools.core.phreak.SynchronizedPropagationList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public compare(existing Activation, adding Activation) : int from class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public fireActivation(activation Activation) : void from class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method private fireActivationEvent(activation Activation, event Consequence) : void from class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public evaluateNetwork(wm InternalWorkingMemory) : void from class org.drools.core.phreak.RuleExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public evaluateNetworkAndFire(wm InternalWorkingMemory, filter AgendaFilter, fireCount int, fireLimit int) : int from class org.drools.core.phreak.RuleExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public fire(wm InternalWorkingMemory, outerStack LinkedList<StackEntry>) : void from class org.drools.core.phreak.RuleExecutor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public reEvaluateNetwork(wm InternalWorkingMemory, outerStack LinkedList<StackEntry>) : void from class org.drools.core.phreak.RuleExecutor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public addEntry(propagationEntry PropagationEntry) : void from class org.drools.core.phreak.SynchronizedBypassPropagationList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public getOrCreateRuleAgendaItem(wm InternalWorkingMemory) : RuleAgendaItem from class org.drools.core.reteoo.PathMemory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public doLinkRule(wm InternalWorkingMemory) : void from class org.drools.core.reteoo.PathMemory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public doUnlinkRule(wm InternalWorkingMemory) : void from class org.drools.core.reteoo.PathMemory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public clear() : void from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public isEmpty() : boolean from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public isFull() : boolean from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public size() : int from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public peek() : Activation from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public enqueue(element Activation) : void from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public dequeue() : Activation from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public dequeue(activation Activation) : Activation from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method package dequeue(index int) : Activation from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public toArray(a Object[]) : Object[] from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : NoClassDefFoundError to e : Throwable in method public testDynamicFunction() : void from class org.drools.compiler.integrationtests.DynamicRulesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void from class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void from class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public executeTask(executable ExecutableEntry) : void from class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter saveForLater : boolean in method public fireTimedActivation(activation Activation, saveForLater boolean) : boolean from class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public fireTimedActivation(activation Activation, saveForLater boolean) : boolean from class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter existing : Activation in method public compare(existing Activation, adding Activation) : int from class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter adding : Activation in method public compare(existing Activation, adding Activation) : int from class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable fired : boolean in method public fireUntilHalt(agendaFilter AgendaFilter) : void from class org.drools.core.common.DefaultAgenda",
    "comment" : "<p>boolean fired = fireNextItem( agendaFilter, 0, -1 ) &gt; 0;<br />inlined to<br />workingMemory.flushPropagationsOnFireUntilHalt( fireNextItem( agendaFilter, 0, -1 ) &gt; 0 );<br />and<br />workingMemory.flushPropagationsOnFireUntilHalt( fireNextItem( agendaFilter, 0, -1 ) &gt; 0, head );</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 13908
}, {
  "id" : 1117304,
  "repository" : "https://github.com/graphhopper/graphhopper.git",
  "sha1" : "7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
  "url" : "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
  "author" : "Peter",
  "time" : "6/17/15 5:42 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected edgeCount : int from class com.graphhopper.storage.GraphHopperStorage to protected edgeCount : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private flagsSizeIsLong : boolean from class com.graphhopper.storage.GraphHopperStorage to package flagsSizeIsLong : boolean from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_ELE : int from class com.graphhopper.storage.GraphHopperStorage to protected N_ELE : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package internalEdgeDisconnect(edgeToRemove int, edgeToUpdatePointer long, baseNode int, adjNode int) : long from class com.graphhopper.storage.GraphHopperStorage to package internalEdgeDisconnect(edgeToRemove int, edgeToUpdatePointer long, baseNode int, adjNode int) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private removedNodes : GHBitSet from class com.graphhopper.storage.GraphHopperStorage to private removedNodes : GHBitSet from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_ADDITIONAL : int from class com.graphhopper.storage.GraphHopperStorage to protected E_ADDITIONAL : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private NO_NODE : int from class com.graphhopper.storage.GraphHopperStorage to private NO_NODE : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private initialized : boolean from class com.graphhopper.storage.GraphHopperStorage to private initialized : boolean from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_NODEA : int from class com.graphhopper.storage.GraphHopperStorage to protected E_NODEA : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package bounds : BBox from class com.graphhopper.storage.GraphHopperStorage to package bounds : BBox from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_ADDITIONAL : int from class com.graphhopper.storage.GraphHopperStorage to protected N_ADDITIONAL : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected nodes : DataAccess from class com.graphhopper.storage.GraphHopperStorage to protected nodes : DataAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private wayGeometry : DataAccess from class com.graphhopper.storage.GraphHopperStorage to package wayGeometry : DataAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getDebugInfo(node int, area int) : String from class com.graphhopper.storage.GraphHopperStorage to public getDebugInfo(node int, area int) : String from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_LAT : int from class com.graphhopper.storage.GraphHopperStorage to protected N_LAT : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private maxGeoRef : int from class com.graphhopper.storage.GraphHopperStorage to private maxGeoRef : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected createSingleEdge(edgeId int, nodeId int) : SingleEdge from class com.graphhopper.storage.GraphHopperStorage to protected createSingleEdge(edgeId int, nodeId int) : SingleEdge from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getDist(pointer long) : double from class com.graphhopper.storage.GraphHopperStorage to private getDist(pointer long) : double from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_LON : int from class com.graphhopper.storage.GraphHopperStorage to protected N_LON : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeAccess : NodeAccess from class com.graphhopper.storage.GraphHopperStorage to package nodeAccess : NodeAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected setNodesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setNodesHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected loadNodesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadNodesHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private nextEdge() : int from class com.graphhopper.storage.GraphHopperStorage to private nextEdge() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeCount : int from class com.graphhopper.storage.GraphHopperStorage to protected nodeCount : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_LINKB : int from class com.graphhopper.storage.GraphHopperStorage to protected E_LINKB : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected initStorage() : void from class com.graphhopper.storage.GraphHopperStorage to package initStorage() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private edgeEntryIndex : int from class com.graphhopper.storage.GraphHopperStorage to private edgeEntryIndex : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private MAX_EDGES : int from class com.graphhopper.storage.GraphHopperStorage to private MAX_EDGES : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package extStorage : GraphExtension from class com.graphhopper.storage.GraphHopperStorage to package extStorage : GraphExtension from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_LINKA : int from class com.graphhopper.storage.GraphHopperStorage to protected E_LINKA : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private ensureEdgeIndex(edgeIndex int) : void from class com.graphhopper.storage.GraphHopperStorage to private ensureEdgeIndex(edgeIndex int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private ensureGeometry(bytePos long, byteLength int) : void from class com.graphhopper.storage.GraphHopperStorage to private ensureGeometry(bytePos long, byteLength int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected setEdgesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setEdgesHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_EDGE_REF : int from class com.graphhopper.storage.GraphHopperStorage to protected N_EDGE_REF : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private nextGeoRef(arrayLength int) : int from class com.graphhopper.storage.GraphHopperStorage to private nextGeoRef(arrayLength int) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_FLAGS : int from class com.graphhopper.storage.GraphHopperStorage to protected E_FLAGS : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package setEdgeCount(cnt int) : void from class com.graphhopper.storage.GraphHopperStorage to package setEdgeCount(cnt int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private connectNewEdge(fromNode int, newOrExistingEdge int) : void from class com.graphhopper.storage.GraphHopperStorage to private connectNewEdge(fromNode int, newOrExistingEdge int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.GraphHopperStorage to package inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected setWayGeometryHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setWayGeometryHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected initNodeAndEdgeEntrySize() : void from class com.graphhopper.storage.GraphHopperStorage to protected initNodeAndEdgeEntrySize() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getOtherNode(nodeThis int, edgePointer long) : int from class com.graphhopper.storage.GraphHopperStorage to private getOtherNode(nodeThis int, edgePointer long) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.GraphHopperStorage to package initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_DIST : int from class com.graphhopper.storage.GraphHopperStorage to protected E_DIST : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package checkInit() : void from class com.graphhopper.storage.GraphHopperStorage to package checkInit() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private invalidateEdge(edgePointer long) : void from class com.graphhopper.storage.GraphHopperStorage to private invalidateEdge(edgePointer long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected nodeEntryBytes : int from class com.graphhopper.storage.GraphHopperStorage to protected nodeEntryBytes : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage to package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_NAME : int from class com.graphhopper.storage.GraphHopperStorage to protected E_NAME : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected getLinkPosInEdgeArea(nodeThis int, nodeOther int, edgePointer long) : long from class com.graphhopper.storage.GraphHopperStorage to protected getLinkPosInEdgeArea(nodeThis int, nodeOther int, edgePointer long) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private writeEdge(edge int, nodeThis int, nodeOther int, nextEdge int, nextEdgeOther int) : long from class com.graphhopper.storage.GraphHopperStorage to private writeEdge(edge int, nodeThis int, nodeOther int, nextEdge int, nextEdgeOther int) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected edges : DataAccess from class com.graphhopper.storage.GraphHopperStorage to protected edges : DataAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private distToInt(distance double) : int from class com.graphhopper.storage.GraphHopperStorage to private distToInt(distance double) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeEntryIndex : int from class com.graphhopper.storage.GraphHopperStorage to private nodeEntryIndex : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_GEO : int from class com.graphhopper.storage.GraphHopperStorage to protected E_GEO : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getRemovedNodes() : GHBitSet from class com.graphhopper.storage.GraphHopperStorage to package getRemovedNodes() : GHBitSet from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected loadEdgesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadEdgesHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected edgeEntryBytes : int from class com.graphhopper.storage.GraphHopperStorage to protected edgeEntryBytes : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private isTestingEnabled() : boolean from class com.graphhopper.storage.GraphHopperStorage to private isTestingEnabled() : boolean from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected nextNodeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.GraphHopperStorage to protected nextNodeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nameIndex : NameIndex from class com.graphhopper.storage.GraphHopperStorage to package nameIndex : NameIndex from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_NODEB : int from class com.graphhopper.storage.GraphHopperStorage to protected E_NODEB : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private trimToSize() : void from class com.graphhopper.storage.GraphHopperStorage to protected trimToSize() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package internalEdgeAdd(fromNodeId int, toNodeId int) : int from class com.graphhopper.storage.GraphHopperStorage to package internalEdgeAdd(fromNodeId int, toNodeId int) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private INT_DIST_FACTOR : double from class com.graphhopper.storage.GraphHopperStorage to private INT_DIST_FACTOR : double from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected nextEdgeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.GraphHopperStorage to protected nextEdgeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private stringHashCode(str String) : int from class com.graphhopper.storage.GraphHopperStorage to private stringHashCode(str String) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected loadWayGeometryHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadWayGeometryHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private bitUtil : BitUtil from class com.graphhopper.storage.GraphHopperStorage to package bitUtil : BitUtil from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package ensureNodeIndex(nodeIndex int) : void from class com.graphhopper.storage.GraphHopperStorage to package ensureNodeIndex(nodeIndex int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.graphhopper.storage.LevelGraphStorageTest renamed to com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph(is3D boolean) : Graph renamed to protected createGHStorage(is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph(em EncodingManager, is3D boolean) : Graph renamed to protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package calcPathViaQuery(weighting String, graph Graph, fromLat double, fromLon double, toLat double, toLon double) : Path renamed to package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected newRAMGraph() : GraphStorage renamed to protected newRAMGHStorage() : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph() : GraphStorage renamed to protected createGHStorage() : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createTarjanTestGraph() : GraphStorage renamed to package createTarjanTestStorage() : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(eman EncodingManager) : GraphStorage renamed to package createStorage(eman EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createDeadEndUnvisitedNetworkGraph(em EncodingManager) : GraphStorage renamed to package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createSubnetworkTestGraph2(em EncodingManager) : GraphStorage renamed to package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createSubnetworkTestGraph() : GraphStorage renamed to package createSubnetworkTestStorage() : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createGraph(location String, enabled3D boolean) : GraphStorage renamed to public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected newGraph(dir Directory, enabled3D boolean) : GraphStorage renamed to protected newGHStorage(dir Directory, enabled3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getGraph() : GraphStorage renamed to public getGraphHopperStorage() : GraphHopperStorage in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setGraph(graph GraphStorage) : void renamed to public setGraphHopperStorage(ghStorage GraphHopperStorage) : void in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(dir Directory, encodingManager EncodingManager, is3D boolean) : Graph renamed to package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.index.AbstractLocationIndexTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected newGraph(dir Directory, is3D boolean) : GraphStorage renamed to protected newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph(em EncodingManager) : GraphStorage renamed to protected createStorage(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createGraph(location String, is3D boolean) : GraphStorage renamed to public createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphStorageViaMMapTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createTestGraph() : Graph renamed to protected createTestStorage() : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setAdditionalEdgeField(edgePointer long, value int) : void extracted from public setAdditionalEdgeField(edgePointer long, value int) : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.graphhopper.storage.LevelGraphStorage renamed to com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.graphhopper.storage.GraphExtension.NoExtendedStorage renamed to com.graphhopper.storage.GraphExtension.NoOpExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph(em EncodingManager, is3D boolean) : LevelGraph renamed to protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(dir Directory, encodingManager EncodingManager, is3D boolean) : LevelGraph renamed to package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package guessStorage(g Graph, outdir Directory, encodingManager EncodingManager) : GraphStorage renamed to public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, GumTreeDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph() : LevelGraph renamed to package createGHStorage() : GraphHopperStorage in class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public newGraph(dir Directory, is3D boolean) : GraphStorage renamed to public newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getAdjNode() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getAdjNode() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getBaseNode() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getBaseNode() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public toString() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getAdjNode() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getAdjNode() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getBaseNode() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getBaseNode() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getEdge() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getEdge() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getEdgePointer() : long from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to private getEdgePointer() : long from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public toString() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "original class moved to antoher class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public next() : boolean from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public next() : boolean from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected setEdgeId(edgeId int) : void from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to protected setEdgeId(edgeId int) : void from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "the original Class moved to another class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public next() : boolean from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public next() : boolean from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setBaseNode(baseNode int) : EdgeIterator from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setBaseNode(baseNode int) : EdgeIterator from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getEdge() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getEdge() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getName() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getName() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "In reality method getName() from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "<p>The inner class has moved and contains the method which is marked as moved</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getDistance() : double from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getDistance() : double from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getDistance() : double from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getDistance() : double from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "In reality method getDistance() from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getAdditionalField() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getAdditionalField() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getAdditionalField() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getAdditionalField() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "original class moved to another class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getCount() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getCount() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "In reality method copyPropertiesTo(edge EdgeIteratorState) from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public fetchWayGeometry(mode int) : PointList from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public fetchWayGeometry(mode int) : PointList from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public fetchWayGeometry(type int) : PointList from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public fetchWayGeometry(type int) : PointList from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "In reality method setWayGeometry(pillarNodes PointList) from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setFlags(fl long) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setFlags(fl long) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setFlags(flags long) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setFlags(flags long) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getGraph(ghStorage GraphHopperStorage) : Graph extracted from public testTwoWeightsPerEdge2() : void in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Not Reported bt RM"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getGraph(ghStorage GraphHopperStorage) : Graph extracted from public testWithCoordinates() : void in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Not Reported bt RM"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getGraph(ghStorage GraphHopperStorage) : LevelGraph extracted from public createFactory(g Graph, opts AlgorithmOptions) : RoutingAlgorithmFactory in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "It will be hard to detect, it needs semantic analysis.",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Not Reported bt RM"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package close() : void extracted from public close() : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package create(initSize long) : void extracted from public create(byteCount long) : GraphStorage in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package flush() : void extracted from public flush() : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package loadExisting(dim String) : void extracted from public loadExisting() : boolean in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "by converting the condition in the if statement, the else branch moved to then branch. So, it's a pure change"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package setSegmentSize(bytes int) : void extracted from public setSegmentSize(bytes int) : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package toDetailsString() : String extracted from public toDetailsString() : String in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "nodeCount attribute moved and got encapsulated in the getNodes() method. So, the replacement is a pure change"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public isCHPossible() : boolean extracted from public toString() : String in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public isCHPossible() : boolean extracted from package _copyTo(clonedG GraphHopperStorage) : Graph in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "The  statement in isCHPossible() does not match to any statements in  _copyTo(clonedG GraphHopperStorage)",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeA : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to private nodeA : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeB : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to private nodeB : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package baseNode : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package baseNode : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package edgeId : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package edgeId : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package nextEdge : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package nextEdge : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private reverse : boolean from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to private reverse : boolean from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected edgePointer : long from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to protected edgePointer : long from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private maxEdges : long from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to private maxEdges : long from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package reverse : boolean from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package reverse : boolean from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package filter : EdgeFilter from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package filter : EdgeFilter from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package edgePointer : long from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package edgePointer : long from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package adjNode : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package adjNode : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package calcPathViaQuery(graph Graph, fromLat double, fromLon double, toLat double, toLon double) : Path renamed to package calcPathViaQuery_(ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.graphhopper.storage.GraphHopperStorage.EdgeIterable moved to com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator moved to com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testCalcShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testWeightLimit() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_FromEqualsTo() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graphShortest : Graph to ghStorage : GraphHopperStorage in method public testCalcFootPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_WithCoordinates() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testWikipediaShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter graph : Graph to ghStorage : GraphHopperStorage in method package calcPath(ghStorage GraphHopperStorage, fromNode1 int, fromNode2 int, toNode1 int, toNode2 int) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable g : LevelGraphStorage to lg : LevelGraphImpl in method public testGetWeightIfAdvancedEncoder() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable lg : LevelGraph to ghStorage : GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable g : Graph to ghStorage : GraphHopperStorage in method public testBaseGraph() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method public createFactory(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter tmpGraph : GraphStorage to ghStorage : GraphHopperStorage in method protected createReader(ghStorage GraphHopperStorage) : DataReader from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter graph : GraphStorage to ghStorage : GraphHopperStorage in method public setGraphHopperStorage(ghStorage GraphHopperStorage) : void from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : LevelGraph to baseGraph : Graph in method public PrepareContractionHierarchies(dir Directory, baseGraph Graph, levelGraph LevelGraph, encoder FlagEncoder, weighting Weighting, traversalMode TraversalMode) from class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : GraphStorage to ghStorage : GraphHopperStorage in method public testEstimatedCenter() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : GraphStorage to graph : GraphHopperStorage in method public TarjansStronglyConnectedComponentsAlgorithm(graph GraphHopperStorage, edgeFilter EdgeFilter) from class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : GraphStorage to ghStorage : GraphHopperStorage in method public testGetRestrictionAsEntries() : void from class com.graphhopper.reader.OSMTurnRelationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : GraphStorage to ghStorage : GraphHopperStorage in method public PrepareRoutingSubnetworks(ghStorage GraphHopperStorage, em EncodingManager) from class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute graph : GraphStorage to ghStorage : GraphHopperStorage in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute graphStorage : GraphStorage to graph : Graph in class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute g : GraphStorage to graph : GraphHopperStorage in class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute g : GraphStorage to baseGraph : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute level : boolean to levelGraph : boolean in class com.graphhopper.storage.GraphBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute graphStorage : GraphStorage to ghStorage : GraphStorage in class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable ghStorage : GraphHopperStorage in method public testRelation() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable ghStorage : GraphHopperStorage in method public testTurnFlagCombination() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter bothDirections : boolean to bothDirection : boolean in method public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph",
    "comment" : "<p>Move Method public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph to public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage<br /><br /> Move Method public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage to public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package abstract createGraph(location String, is3D boolean) : GraphStorage renamed to package abstract createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method public abstract createFactory(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : LevelGraph to levelGraph : LevelGraph in method public PrepareContractionHierarchies(dir Directory, baseGraph Graph, levelGraph LevelGraph, encoder FlagEncoder, weighting Weighting, traversalMode TraversalMode) from class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter storage : GraphStorage to ghStorage : GraphHopperStorage in method public OSMReader(ghStorage GraphHopperStorage) from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method package createAlgos(ghStorage GraphHopperStorage, idx LocationIndex, encoder FlagEncoder, withCh boolean, tMode TraversalMode, weighting Weighting, manager EncodingManager) : List<AlgoHelperEntry> from class com.graphhopper.routing.RoutingAlgorithmIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : GraphStorage to g : GraphHopperStorage in method protected loadGraph(g GraphHopperStorage) : GraphHopper from class com.graphhopper.GraphHopper",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : GraphStorage to ghStorage : GraphHopperStorage in method public setGraphHopperStorage(ghStorage GraphHopperStorage) : void from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type tmpGraph : GraphStorage to ghStorage : GraphHopperStorage in method protected createReader(ghStorage GraphHopperStorage) : DataReader from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type storage : GraphStorage to ghStorage : GraphHopperStorage in method public OSMReader(ghStorage GraphHopperStorage) from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : GraphStorage to ghStorage : GraphHopperStorage in method public PrepareRoutingSubnetworks(ghStorage GraphHopperStorage, em EncodingManager) from class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : GraphStorage to graph : GraphHopperStorage in method public TarjansStronglyConnectedComponentsAlgorithm(graph GraphHopperStorage, edgeFilter EdgeFilter) from class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type that : GraphHopperStorage to that : BaseGraph in method public GHNodeAccess(that BaseGraph, withElevation boolean) from class com.graphhopper.storage.GHNodeAccess",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : GraphStorage to graph : Graph in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.TurnCostExtension",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected createReader(tmpGraph GraphHopperStorage) : DataReader from class com.graphhopper.reader.OSMReaderTest.GraphHopperTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.AStarBidirectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.AStarTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to g : GraphHopperStorage in method protected createAlgo(g GraphHopperStorage) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : Graph to ghStorage : GraphHopperStorage in method package calcPath(ghStorage GraphHopperStorage, fromNode1 int, fromNode2 int, toNode1 int, toNode2 int) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.DijkstraBidirectionRefTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.DijkstraOneToManyTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.DijkstraTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method package createAlgos(ghStorage GraphHopperStorage, idx LocationIndex, encoder FlagEncoder, withCh boolean, tMode TraversalMode, weighting Weighting, manager EncodingManager) : List<AlgoHelperEntry> from class com.graphhopper.routing.RoutingAlgorithmIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method public createFactory(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : LevelGraphStorage to g : LevelGraph in method package initUnpackingGraph(g LevelGraph, w Weighting) : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : GraphStorage to g : GraphHopperStorage in method private printGraphDetails(g GraphHopperStorage, vehicleStr String) : void from class com.graphhopper.tools.Measurement",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : GraphStorage to graph : Graph in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method public abstract createFactory(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public getGraphHopperStorage() : GraphHopperStorage from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraphStorage to LevelGraph in method public levelGraphBuild() : LevelGraph from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraphStorage to LevelGraph in method public levelGraphCreate() : LevelGraph from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public build() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public create() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public load() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public create(byteCount long) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package newGraph(directory String, encodingManager EncodingManager, is3D boolean, turnRestrictionsImport boolean) : GraphHopperStorage from class com.graphhopper.reader.OSMReaderTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method protected createWikipediaTestGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method public getMatrixAlikeGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method private createMatrixAlikeGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method protected createGHStorage(is3D boolean) : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method protected createTestStorage() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected createStorage(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraph to GraphHopperStorage in method protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraph to GraphHopperStorage in method package createExampleGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraph to GraphHopperStorage in method package createGHStorage() : GraphHopperStorage from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createStorage(eman EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createSubnetworkTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createTarjanTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected createGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected newRAMGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected newGHStorage(dir Directory, enabled3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public createGHStorage(location String, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphStorageViaMMapTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.index.AbstractLocationIndexTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraph to GraphHopperStorage in method package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package abstract createGHStorage(location String, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type graph : GraphStorage to ghStorage : GraphHopperStorage in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type graphStorage : GraphStorage to graph : Graph in class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : LevelGraph to baseGraph : Graph in method public PrepareContractionHierarchies(dir Directory, baseGraph Graph, levelGraph LevelGraph, encoder FlagEncoder, weighting Weighting, traversalMode TraversalMode) from class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type g : GraphStorage to baseGraph : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type g : GraphStorage to graph : GraphHopperStorage in class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to ghStorage : GraphHopperStorage in method public testEstimatedCenter() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to ghStorage : GraphHopperStorage in method public testGetRestrictionAsEntries() : void from class com.graphhopper.reader.OSMTurnRelationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testCalcShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testWeightLimit() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graphShortest : Graph to ghStorage : GraphHopperStorage in method public testCalcFootPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testWikipediaShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_FromEqualsTo() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_WithCoordinates() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : Graph to ghStorage : GraphHopperStorage in method public testBaseGraph() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type lg : LevelGraph to ghStorage : GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to lg : LevelGraphImpl in method public testGetWeightIfAdvancedEncoder() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type newGraph : GraphStorage to newGraph : GraphHopperStorage in method protected optimize() : void from class com.graphhopper.GraphHopper",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type prepareGraph : LevelGraph to prepareGraph : LevelGraphImpl in class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type that : GraphHopperStorage to that : BaseGraph in class com.graphhopper.storage.GHNodeAccess",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public build() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public load() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public testLoad() : void from class com.graphhopper.GraphHopperAPITest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public testDisconnected179() : void from class com.graphhopper.GraphHopperAPITest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public testMain() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : Graph in method public testTurnRestrictions() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected importData() : DataReader from class com.graphhopper.reader.OSMReaderTest.GraphHopperTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type matrixGraph : Graph to matrixGraph : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testWeightLimit_issue380() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graphShortest : Graph to graphShortest : GraphHopperStorage in method public testCalcFastestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graphFastest : Graph to graphFastest : GraphHopperStorage in method public testCalcFastestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testNoPathFound() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testBidirectional() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testBidirectional2() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testCannotCalculateSP() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testDirectedGraphBug1() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testDirectedGraphBug2() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testWithCoordinates() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testViaEdges_BiGraph() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testViaEdges_SpecialCases() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testQueryGraphAndFastest() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public test0SpeedButUnblocked_Issue242() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method protected createWikipediaTestGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method protected createTestStorage() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : Graph to g : GraphHopperStorage in method public testIssue239_and362() : void from class com.graphhopper.routing.DijkstraOneToManyTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testBasicTurnRestriction() : void from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testUTurns() : void from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testBasicTurnCosts() : void from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testFound() : void from class com.graphhopper.routing.PathTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testTime() : void from class com.graphhopper.routing.PathTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testWayList() : void from class com.graphhopper.routing.PathTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type g : GraphStorage to g : GraphHopperStorage in class com.graphhopper.routing.QueryGraphTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type preparedMatrixGraph : Graph to preparedMatrixGraph : GraphHopperStorage in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : Graph to g : GraphHopperStorage in method public testBaseGraphMultipleVehicles() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testShortestPathSkipNode() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testShortestPathSkipNode2() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testShortestPathLimit() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testAddShortcuts() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testDirectedGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testDirectedGraph2() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testDirectedGraph3() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testRoundaboutUnpacking() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : GraphHopperStorage in method public testFindShortcuts_Roundabout() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : GraphHopperStorage in method public testUnpackingOrder() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : GraphHopperStorage in method public testUnpackingOrder_Fastest() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testCircleBug() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testBug178() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method package createExampleGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testFindSubnetworks() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testKeepLargestNetworks() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testRemoveSubnetworkIfOnlyOneVehicle() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testRemoveDeadEndUnvisitedNetworks() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testTarjan() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testNodeOrderingRegression() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createSubnetworkTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createTarjanTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type graph : GraphStorage to graph : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public testCopyTo() : void from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public createGHStorage(location String, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphStorageViaMMapTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testLevelGraph() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package start(args CmdArgs) : void from class com.graphhopper.tools.Measurement",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type baseGraph : Graph to baseGraph : BaseGraph in class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testCannotBeLoadedWithNormalGraphHopperStorageClass() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable queryGraph : QueryGraph to routingGraph : Graph in method protected getPaths(request GHRequest, rsp GHResponse) : List<Path> in class com.graphhopper.GraphHopper",
    "comment" : "<p>queryGraph is composed of routingGraph<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>QueryGraph</span> queryGraph <span class='pl-k'>=</span> <span class='pl-k'>new</span> <span class='pl-smi'>QueryGraph</span>(routingGraph);</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute lg : LevelGraph to listener : InternalGraphEventListener in class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter lg : LevelGraph to listener : InternalGraphEventListener in method public BaseGraph(dir Directory, encodingManager EncodingManager, withElevation boolean, listener InternalGraphEventListener, internalPropAccess InternalGraphPropertyAccess, extendedStorage GraphExtension) in class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter edgeIterState : EdgeIteratorState to from : EdgeIteratorState in method package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState in class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter edgeIterState : EdgeIteratorState to to : EdgeIteratorState in method package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState in class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter list : PointList to pillarNodes : PointList in method public setWayGeometry(pillarNodes PointList) : EdgeIteratorState in class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "<p>method&nbsp;setWayGeometry() is moved from&nbsp;GraphHopperStorage to BaseGraph with the same parameter name</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute bitUtil : BitUtil to baseGraph : BaseGraph in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "<p>GraphHopperStorage has a containment relationship with BaseGraph after refactoring, and bitUtil is moved to BaseGraph</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter sizeInBytes : int to enableCH : boolean in method public GraphHopperStorage(enableCH boolean, dir Directory, encodingManager EncodingManager, withElevation boolean, extendedStorage GraphExtension) in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter name : String to clazz : Class<T> in method public getGraph(clazz Class<T>) : T in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to store : GraphHopperStorage in method public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method protected getGraph(ghStorage GraphHopperStorage) : LevelGraph in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "<p>getGraph() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable g : LevelGraph to lg : LevelGraph in method public testMoreComplexGraph() : void in class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "<p>lg is created through g<br /><span class='pl-smi'>LevelGraph</span> lg <span class='pl-k'>=</span> g<span class='pl-k'>.</span>getGraph(<span class='pl-smi'>LevelGraph</span><span class='pl-k'>.</span>class);</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable lg : LevelGraph to g : GraphHopperStorage in method public testSortHighLevelFirst() : void in class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : "<p>lg is created through g<br /><span class='pl-k'>final</span> <span class='pl-smi'>LevelGraph</span> lg <span class='pl-k'>=</span> g<span class='pl-k'>.</span>getGraph(<span class='pl-smi'>LevelGraph</span><span class='pl-k'>.</span>class);</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type lg : LevelGraph to listener : InternalGraphEventListener in method public BaseGraph(dir Directory, encodingManager EncodingManager, withElevation boolean, listener InternalGraphEventListener, internalPropAccess InternalGraphPropertyAccess, extendedStorage GraphExtension) in class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type sizeInBytes : int to enableCH : boolean in method public GraphHopperStorage(enableCH boolean, dir Directory, encodingManager EncodingManager, withElevation boolean, extendedStorage GraphExtension) in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to store : GraphHopperStorage in method public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method createAlgos(ghStorage GraphHopperStorage, idx LocationIndex, encoder FlagEncoder, withCh boolean, tMode TraversalMode, weighting Weighting, manager EncodingManager) : List<AlgoHelperEntry> in class com.graphhopper.routing.RoutingAlgorithmIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method protected getGraph(ghStorage GraphHopperStorage) : LevelGraph in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tmpGraph : Graph to tmpGraph : GraphHopperStorage in method private createMatrixAlikeGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testPerformance() : void from class com.graphhopper.routing.RoutingAlgorithmIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraphStorage to LevelGraph in method public create(bytes long) : LevelGraph from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nodeCount : long to bytes : long in method public create(bytes long) : LevelGraph from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to double in method public getDistance() : double in class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to long in method public getFlags() : long in class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to double in method public getDistance() : double in class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type EdgeIteratorState to T in method public getGraph(clazz Class<T>) : T in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public isCHPossible() : boolean in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type PointList to GraphHopperStorage in method public create(byteCount long) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to long in method public getCapacity() : long in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type EdgeIteratorState to BaseGraph.SingleEdge in method public createSingleEdge(edgeId int, nodeId int) : BaseGraph.SingleEdge in class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type EdgeIteratorState to BaseGraph.SingleEdge in method public createSingleEdge(edgeId int, nodeId int) : BaseGraph.SingleEdge in class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.chPropAccess",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type long to void in method public initStorage() : void in class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.listener",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method abstract createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type queryGraph : QueryGraph to routingGraph : Graph in method protected getPaths(request GHRequest, rsp GHResponse) : List<Path> in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type lg : LevelGraph to listener : InternalGraphEventListener in class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type bitUtil : BitUtil to baseGraph : BaseGraph in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type nodeAccess : NodeAccess to chGraph : LevelGraphImpl in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type hash : int to cnt : long in method public getCapacity() : long in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type iter : EdgeIterable to chPropAccess : InternalGraphPropertyAccess in method public GraphHopperStorage(enableCH boolean, dir Directory, encodingManager EncodingManager, withElevation boolean, extendedStorage GraphExtension) in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type edgePointer : long to isShortcut : boolean in method public reverseFlags(edgePointer long, flags long...) : long in class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.chPropAccess",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testTwoWeightsPerEdge() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testTwoWeightsPerEdge2() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : Graph to g : GraphHopperStorage in method public testDifferentEdgeFilter() : void from class com.graphhopper.routing.DijkstraOneToManyTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graphWithTurnCosts : GraphStorage to graphWithTurnCosts : GraphHopperStorage in method public testTurnCostsProperlyPropagated_Issue282() : void from class com.graphhopper.routing.QueryGraphTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g2 : LevelGraphStorage to g2 : LevelGraphImpl in method public testPathRecursiveUnpacking() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method private initExampleGraph() : Graph from class com.graphhopper.routing.util.Bike2WeightFlagEncoderTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method protected createGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package getCapacity() : long extracted from public getCapacity() : long in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "the return statement has been impurely changed"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public loadExisting() : boolean extracted from public loadExisting() : boolean in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package toDetailsString() : String extracted from public toDetailsString() : String in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(encodingManager EncodingManager) : Graph renamed to package createGHStorage(encodingManager EncodingManager) : GraphHopperStorage in class com.graphhopper.storage.index.AbstractLocationIndexTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.graphhopper.storage.GraphHopperStorage.SingleEdge moved to com.graphhopper.storage.BaseGraph.SingleEdge",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private getFlags(edgePointer long, reverse boolean) : long from class com.graphhopper.storage.GraphHopperStorage to package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private setFlags(edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.GraphHopperStorage to package setFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private setWayGeometry(pillarNodes PointList, edgePointer long, reverse boolean) : void from class com.graphhopper.storage.GraphHopperStorage to private setWayGeometry_(pillarNodes PointList, edgePointer long, reverse boolean) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private fetchWayGeometry(edgePointer long, reverse boolean, mode int, baseNode int, adjNode int) : PointList from class com.graphhopper.storage.GraphHopperStorage to private fetchWayGeometry_(edgePointer long, reverse boolean, mode int, baseNode int, adjNode int) : PointList from class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter edge : int to edgeId : int in method public SingleLevelEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.LevelGraphImpl.SingleLevelEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(location String, is3D boolean) : GraphStorage renamed to package createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "<p>abstract methods</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getNodes() : int extracted from package contractNodes() : void in class com.graphhopper.routing.ch.PrepareContractionHierarchies & moved to class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setGraphHopperStorage(ghStorage GraphHopperStorage) : void extracted from protected importData() : DataReader in class com.graphhopper.reader.OSMReaderTest.GraphHopperTest & moved to class com.graphhopper.GraphHopper",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNodeAccess() : NodeAccess renamed to protected setNodesHeader() : int in class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getBounds() : BBox renamed to protected loadEdgesHeader() : int in class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public copyTo(g Graph) : Graph renamed to public setAdditionalEdgeField(edgePointer long, value int) : void in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private inPlaceNodeRemove(removeNodeCount int) : void renamed to private _copyTo(clonedG GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected initStorage() : void renamed to public flush() : void in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected loadNodesHeader() : int renamed to public getCapacity() : long in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected setNodesHeader() : int renamed to public toString() : String in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected loadEdgesHeader() : int renamed to public getNodes() : int in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected setEdgesHeader() : int renamed to public getNodeAccess() : NodeAccess in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected loadWayGeometryHeader() : int renamed to public getBounds() : BBox in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected setWayGeometryHeader() : int renamed to public edge(a int, b int) : EdgeIteratorState in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public close() : void renamed to public getEdgeProps(edgeId int, adjNode int) : EdgeIteratorState in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isClosed() : boolean renamed to public getAllEdges() : AllEdgesIterator in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getExtension() : GraphExtension renamed to public createEdgeExplorer(filter EdgeFilter) : EdgeExplorer in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCapacity() : long renamed to public createEdgeExplorer() : EdgeExplorer in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private stringHashCode(str String) : int renamed to public getExtension() : GraphExtension in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public toString() : String renamed to public getBaseGraph() : Graph in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public reverseFlags(edgePointer long, flags long) : long from class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess.new InternalGraphPropertyAccess",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected initStorage() : void from class com.graphhopper.storage.LevelGraphStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected createSingleEdge(edge int, nodeId int) : SingleEdge from class com.graphhopper.storage.LevelGraphStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected loadEdgesHeader() : int from class com.graphhopper.storage.LevelGraphStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected setEdgesHeader() : int from class com.graphhopper.storage.LevelGraphStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : Graph in method public PrepareContractionHierarchies(dir Directory, baseGraph Graph, levelGraph LevelGraph, encoder FlagEncoder, weighting Weighting, traversalMode TraversalMode) from class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : Graph in method public AlgoHelperEntry(g Graph, baseGraph Graph, opts AlgorithmOptions, idx LocationIndex) from class com.graphhopper.routing.util.TestAlgoCollector.AlgoHelperEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter dir : Directory in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.TurnCostExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : BaseGraph in method public EdgeIterable(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, filter EdgeFilter) from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter propAccess : InternalGraphPropertyAccess in method public EdgeIterable(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, filter EdgeFilter) from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : BaseGraph in method public EdgeSkipIteratorImpl(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, filter EdgeFilter) from class com.graphhopper.storage.LevelGraphImpl.EdgeSkipIteratorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter propAccess : InternalGraphPropertyAccess in method public EdgeSkipIteratorImpl(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, filter EdgeFilter) from class com.graphhopper.storage.LevelGraphImpl.EdgeSkipIteratorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : BaseGraph in method public SingleLevelEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.LevelGraphImpl.SingleLevelEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter propAccess : InternalGraphPropertyAccess in method public SingleLevelEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.LevelGraphImpl.SingleLevelEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter tmpPropAccess : InternalGraphPropertyAccess in method package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter tmpPropAccess : InternalGraphPropertyAccess in method package setFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter dir : Directory in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getFlags() : long from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "<p>new method in new inner class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "<p>new method in new inner class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getName() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "<p>new method in new inner class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public markNodeRemoved(index int) : void from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public isNodeRemoved(index int) : boolean from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public isClosed() : boolean from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public getExtension() : GraphExtension from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toDetailsString() : String from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public reverseFlags(edgePointer long, flags long) : long from class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess.new InternalGraphPropertyAccess",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected createAlgo(g GraphHopperStorage) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package initStorage() : void from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package setFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package getRemovedNodes() : GHBitSet from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected trimToSize() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package initStorage() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter propAccess : InternalGraphPropertyAccess in method public SingleEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.BaseGraph.SingleEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : BaseGraph in method public SingleEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.BaseGraph.SingleEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package lastEdgeIndex : int from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package scDirMask : long from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected nodeCount : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package wayGeometry : DataAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package nameIndex : NameIndex from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package bitUtil : BitUtil from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package flagsSizeIsLong : boolean from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package nodeAccess : NodeAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getNodes() : int from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getNodeAccess() : NodeAccess from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getBounds() : BBox from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public edge(a int, b int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getAllEdges() : AllEdgesIterator from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getEdgeProps(edgeId int, adjNode int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public createEdgeExplorer(filter EdgeFilter) : EdgeExplorer from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public createEdgeExplorer() : EdgeExplorer from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public copyTo(g Graph) : Graph from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getExtension() : GraphExtension from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method protected newRAMGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method package setFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method protected createAlgo(g GraphHopperStorage) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public reverseFlags(edgePointer long, flags long) : long from class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess.new InternalGraphPropertyAccess",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private exitOnlyPillarNodeException : boolean from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private outExplorerMap : Map<FlagEncoder,EdgeExplorer> from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private inExplorerMap : Map<FlagEncoder,EdgeExplorer> from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type grap : GraphStorage to grap : Graph in method public init(grap Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension.NoOpExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter dir : Directory in method public init(grap Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension.NoOpExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter g : GraphStorage in method public TarjansStronglyConnectedComponentsAlgorithm(g GraphStorage, edgeFilter EdgeFilter) from class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter filter : EdgeFilter in method public createEdgeExplorer(filter EdgeFilter) : EdgeExplorer from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier final in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method package createGHStorage(encodingManager EncodingManager) : GraphHopperStorage from class com.graphhopper.storage.index.AbstractLocationIndexTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : LevelGraphImpl in method public testDisconnectEdge() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : LevelGraphImpl in method public testGetWeight() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testMoreComplexGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testFindShortcuts_Roundabout() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testLevelGraph() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testDirectedGraph2() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testAddShortcuts() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testUnpackingOrder_Fastest() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testRoundaboutUnpacking() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testDirectedGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testUnpackingOrder() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : GraphHopperStorage to storage : GraphHopperStorage in method public internalDisconnect() : void from class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable lg : LevelGraphStorage to g : GraphHopperStorage in method public testLevelGraphBug() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable g : LevelGraphStorage to storage : GraphHopperStorage in method public testPriosWhileDeleting() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to storage : GraphHopperStorage in method public testPriosWhileDeleting() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type lg : LevelGraphStorage to g : GraphHopperStorage in method public testLevelGraphBug() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected createReader(tmpGraph GraphHopperStorage) : DataReader from class com.graphhopper.reader.OSMReaderTest.testWithBounds.hopper.new GraphHopperTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected createReader(tmpGraph GraphHopperStorage) : DataReader from class com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM.hopper.importOrLoad.setElevation.new GraphHopperTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable res : long to resFlags : long in method package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class com.graphhopper.storage.BaseGraph.SingleEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method package guessStorage(g Graph, outdir Directory, encodingManager EncodingManager) : GraphStorage inlined to public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "if statement has been removed. Although the new method only accepts GraphHopperStorage, the logic has been changed. Also, the replacement between the two constructor is not justifiable because there is no corresponding Add Parameter refactoring for that change"
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type store : GraphStorage to store : GraphHopperStorage in method public newStorage(store GraphHopperStorage) : GraphHopperStorage from class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public newStorage(store GraphHopperStorage) : GraphHopperStorage from class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph to public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage to public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testMoreComplexGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3012
}, {
  "id" : 1117817,
  "repository" : "https://github.com/FasterXML/jackson-databind.git",
  "sha1" : "da29a040ebae664274b28117b157044af0f525fa",
  "url" : "https://github.com/FasterXML/jackson-databind/commit/da29a040ebae664274b28117b157044af0f525fa",
  "author" : "Tatu Saloranta",
  "time" : "6/17/15 3:02 AM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private _writeCloseableValue(gen JsonGenerator, value Object, cfg SerializationConfig) : void inlined to public writeValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the most hardest refactoring to validate. Extract and Move method on top of the Inline Method"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from protected _configAndWriteValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "It is moved to the inner class, it should be extract and move",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n- Remove Parameter- Severe changes",
      "mappingState" : 3,
      "validationComment" : "Remove Parameter on top, which caused an impure modification"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from private _writeCloseable(gen JsonGenerator, value Object, cfg SerializationConfig) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "It is extract and move since the method is moved to the inner class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n- Remove Parameter- Severe changes",
      "mappingState" : 3,
      "validationComment" : "Remove Parameter on top, which caused an impure modification"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from public writeValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "It is moved to the inner class, it should be extract and move",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n- Inline Variable- Severe changes",
      "mappingState" : 3,
      "validationComment" : "Inline Variable and Remove Parameter on top, which caused an impure modification"
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable ser : JsonSerializer<Object> to valueSer : JsonSerializer<Object> in method public serializePolymorphic(gen JsonGenerator, value Object, rootType JavaType, valueSer JsonSerializer<Object>, typeSer TypeSerializer) : void from class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter type : JavaType to rootT : JavaType in method private Prefetch(rootT JavaType, baseT JavaType, ser JsonSerializer<Object>, typeSer TypeSerializer) from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter valueType : JavaType to rootT : JavaType in method private Prefetch(rootT JavaType, baseT JavaType, ser JsonSerializer<Object>, typeSer TypeSerializer) in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter cfg : SerializationConfig to baseT : JavaType in method private Prefetch(rootT JavaType, baseT JavaType, ser JsonSerializer<Object>, typeSer TypeSerializer) in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter type : JavaType to parent : ObjectWriter in method public withBaseType(parent ObjectWriter, newType JavaType) : Prefetch in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter type : JavaType to newType : JavaType in method public withBaseType(parent ObjectWriter, newType JavaType) : Prefetch in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter typeSer : TypeSerializer to prov : DefaultSerializerProvider in method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type cfg : SerializationConfig to baseT : JavaType in method private Prefetch(rootT JavaType, baseT JavaType, ser JsonSerializer<Object>, typeSer TypeSerializer) in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type type : JavaType to parent : ObjectWriter in method public withBaseType(parent ObjectWriter, newType JavaType) : Prefetch in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type typeSer : TypeSerializer to prov : DefaultSerializerProvider in method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getValueSerializer() : JsonSerializer<Object> extracted from public SequenceWriter(prov DefaultSerializerProvider, gen JsonGenerator, closeGenerator boolean, prefetch ObjectWriter.Prefetch) in class com.fasterxml.jackson.databind.SequenceWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "<p>field access replaced with getter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getTypeSerializer() : TypeSerializer extracted from public SequenceWriter(prov DefaultSerializerProvider, gen JsonGenerator, closeGenerator boolean, prefetch ObjectWriter.Prefetch) in class com.fasterxml.jackson.databind.SequenceWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "<p>field access replaced with getter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private Prefetch(type JavaType, ser JsonSerializer<Object>, typeSer TypeSerializer) renamed to public withBaseType(parent ObjectWriter, newType JavaType) : Prefetch in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public construct(type JavaType, typeSer TypeSerializer) : Prefetch renamed to public getValueSerializer() : JsonSerializer<Object> in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getActiveView() : Class<?> from class com.fasterxml.jackson.databind.cfg.MapperConfigBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public toString() : String from class com.fasterxml.jackson.databind.seq.PolyMapWriter827Test.CustomKey",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter cfg : SerializationConfig in method private _writeCloseable(gen JsonGenerator, value Object, cfg SerializationConfig) : void from class com.fasterxml.jackson.databind.ObjectWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private rootType : JavaType from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private valueSerializer : JsonSerializer<Object> from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private typeSerializer : TypeSerializer from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private valueSerializer : JsonSerializer<Object> from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "<p>public final JsonSerializer&lt;Object&gt; getValueSerializer()<br />called in<br />public SequenceWriter(DefaultSerializerProvider prov, JsonGenerator gen,<br />boolean closeGenerator, ObjectWriter.Prefetch prefetch)<br />src/main/java/com/fasterxml/jackson/databind/SequenceWriter.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private typeSerializer : TypeSerializer from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "<p>public final TypeSerializer getTypeSerializer()<br />called in<br />public SequenceWriter(DefaultSerializerProvider prov, JsonGenerator gen,<br />boolean closeGenerator, ObjectWriter.Prefetch prefetch)<br />src/main/java/com/fasterxml/jackson/databind/SequenceWriter.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseT : JavaType in method private Prefetch(rootT JavaType, baseT JavaType, ser JsonSerializer<Object>, typeSer TypeSerializer) from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter config : SerializationConfig in method protected _serializerProvider(config SerializationConfig) : DefaultSerializerProvider from class com.fasterxml.jackson.databind.ObjectWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute config : SerializationConfig to _config : SerializationConfig in method protected _serializerProvider() : DefaultSerializerProvider from class com.fasterxml.jackson.databind.ObjectWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1433
}, {
  "id" : 1117885,
  "repository" : "https://github.com/apache/cassandra.git",
  "sha1" : "ec52e77ecde749e7c5a483b26cbd8041f2a5a33c",
  "url" : "https://github.com/apache/cassandra/commit/ec52e77ecde749e7c5a483b26cbd8041f2a5a33c",
  "author" : "Benedict Elliott Smith",
  "time" : "6/16/15 12:28 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public submitBackground(cfs ColumnFamilyStore, autoFill boolean) : List<Future<?>> extracted from public submitBackground(cfs ColumnFamilyStore) : List<Future<?>> in class org.apache.cassandra.db.compaction.CompactionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "condition has been changed. According to the argument passed, it's a pure refactoring. But, I cannot evaluate the condition."
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getBackgroundCompactionTaskSubmitter() : Runnable extracted from protected setup() : void in class org.apache.cassandra.service.CassandraDaemon & moved to class org.apache.cassandra.db.ColumnFamilyStore",
    "comment" : "<p>Extract and Move to other class.</p><p>Since RefDiff does not support 'Extract and Move' refactoring we consider it as CTP.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "FP",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics",
      "mappingState" : 1,
      "validationComment" : "lots of impure changes on top within the anonymous class declaration"
    }
  } ],
  "refDiffExecutionTime" : 6099
}, {
  "id" : 1118145,
  "repository" : "https://github.com/rstudio/rstudio.git",
  "sha1" : "9a581e07cb6381d70f3fd9bb2055e810e2a682a9",
  "url" : "https://github.com/rstudio/rstudio/commit/9a581e07cb6381d70f3fd9bb2055e810e2a682a9",
  "author" : "Kevin Ushey",
  "time" : "6/17/15 9:52 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getBoolean(key String) : boolean extracted from public init(widget AceEditorWidget, position Position) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "We are not sure if the arguement is the same as before. So, I would consider this as a pure case"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private has(key String) : boolean extracted from public init(widget AceEditorWidget, position Position) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "We are not sure if the arguement is the same as before. So, I would consider this as a pure case"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private addCheckboxController(optionName String, label String) : void renamed to private makeTriStateCheckBox(label String, option String) : TriStateCheckBox in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : "The changes in the code is huge. Nikos: not rename. Davood and Matin: rename",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setValue(value boolean) : void extracted from public init(widget AceEditorWidget, position Position) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel & moved to class org.rstudio.core.client.widget.TriStateCheckBox",
    "comment" : "<p>Extract and Move to the other class.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key String) : String extracted from public init(widget AceEditorWidget, position Position) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private set(key String, value String) : void extracted from private addCheckboxController(optionName String, label String) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : "The method addCheckboxController(..) is deleted in the base version, though one statement of addCheckboxController is in method set(..) that is added in the refactored version, we cannot say it is an extract method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private unset(key String) : void extracted from private addCheckboxController(optionName String, label String) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : "The method addCheckboxController(..) is deleted in the base version, though one statement of addCheckboxController is in method unset(..) that is added in the refactored version, we cannot say it is an extract method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute BOOLEAN_CHUNK_OPTIONS : HashMap<String,String> to outputComboBox_ : SelectWidget in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type state : TriStateCheckBox.State to state : State in method public onValueChange(event ValueChangeEvent<State>) : void from class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel.makeTriStateCheckBox.checkBox",
    "comment" : "<p>makeTriStateCheckBox() seems to be extracted from <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-en'>addCheckboxController</span></span>()</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private addCheckboxController(optionName String, label String) : void renamed to private revert(key String) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2636
}, {
  "id" : 1118473,
  "repository" : "https://github.com/jfinal/jfinal.git",
  "sha1" : "881baed894540031bd55e402933bcad28b74ca88",
  "url" : "https://github.com/jfinal/jfinal/commit/881baed894540031bd55e402933bcad28b74ca88",
  "author" : "James",
  "time" : "6/18/15 5:57 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private validateLongValue(value String, min long, max long, errorKey String, errorMessage String) : void extracted from protected validateLong(field String, min long, max long, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Lots of changes - Also trim() has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private validateIntegerValue(value String, min int, max int, errorKey String, errorMessage String) : void extracted from protected validateInteger(field String, min int, max int, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Lots of changes - Also trim() has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private validateLongValue(value String, errorKey String, errorMessage String) : void extracted from protected validateLong(field String, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Lots of changes - Also trim() has been added"
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.jfinal.plugin.activerecord.tx.TxByActionMethods renamed to com.jfinal.plugin.activerecord.tx.TxByMethods",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public findById(id Object, columns String) : M renamed to public findByIdLoadColumns(idValues Object[], columns String) : M in class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.jfinal.core.InterceptorBuilder renamed to com.jfinal.core.ActionInterceptorBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.jfinal.kit.EncryptionKit renamed to com.jfinal.kit.HashKit",
    "comment" : "The classes are so similar. the only difference is that the mehtods are renamed too",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public encrypt(algorithm String, srcStr String) : String renamed to public hash(algorithm String, srcStr String) : String in class com.jfinal.kit.HashKit",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public sha1Encrypt(srcStr String) : String renamed to public sha1(srcStr String) : String in class com.jfinal.kit.HashKit",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public sha256Encrypt(srcStr String) : String renamed to public sha256(srcStr String) : String in class com.jfinal.kit.HashKit",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public sha384Encrypt(srcStr String) : String renamed to public sha384(srcStr String) : String in class com.jfinal.kit.HashKit",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public sha512Encrypt(srcStr String) : String renamed to public sha512(srcStr String) : String in class com.jfinal.kit.HashKit",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public md5Encrypt(srcStr String) : String renamed to public md5(srcStr String) : String in class com.jfinal.kit.HashKit",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected validateString(field String, notBlank boolean, minLen int, maxLen int, errorKey String, errorMessage String) : void renamed to private validateStringValue(value String, minLen int, maxLen int, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private warnning(actionKey String, controllerClass Class<? extends Controller>, method Method) : void renamed to private buildMsg(actionKey String, controllerClass Class<? extends Controller>, method Method) : String in class com.jfinal.core.ActionMapping",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getController() : Controller from class com.jfinal.core.ActionInvocation to protected getController() : Controller from class com.jfinal.validate.Validator",
    "comment" : "Class ActionInvocation in base version is deleted, thus it does not total comply with the defenition of move method. Morover it seems that com.jfinal.core.ActionInvocation is moved and rename to class com.jfinal.aop.InvocationWrapper ",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.jfinal.aop.ActionInvocationWrapper renamed to com.jfinal.aop.InvocationWrapper",
    "comment" : "<p>The new name is&nbsp;com.jfinal.aop.InvocationWrapper (in the dataset one r is missing)</p><p>There is another parent class where Action is removed from the name. It seems to be a consistent renaming of a class while new functionality is also added</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.jfinal.core.ActionInvocation moved and renamed to com.jfinal.aop.Invocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public invoke() : void from class com.jfinal.aop.ActionInvocationWrapper to public invoke() : void from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public invoke() : void from class com.jfinal.core.ActionInvocation to public invoke() : void from class com.jfinal.aop.Invocation",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getControllerKey() : String from class com.jfinal.core.ActionInvocation to public getControllerKey() : String from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getViewPath() : String from class com.jfinal.core.ActionInvocation to public getViewPath() : String from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getMethodName() : String from class com.jfinal.core.ActionInvocation to public getMethodName() : String from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getActionKey() : String from class com.jfinal.core.ActionInvocation to public getActionKey() : String from class com.jfinal.aop.InvocationWrapper",
    "comment" : "ActionInvocation is deleted in base version and InvocationWrapper is added in the refactored version. Thus it is Move and rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getControllerKey() : String from class com.jfinal.aop.ActionInvocationWrapper to public getControllerKey() : String from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getMethod() : Method from class com.jfinal.core.ActionInvocation to public getMethod() : Method from class com.jfinal.aop.InvocationWrapper",
    "comment" : "ActionInvocation is deleted in base version and InvocationWrapper is added in the refactored version. Thus it is Move and rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getViewPath() : String from class com.jfinal.aop.ActionInvocationWrapper to public getViewPath() : String from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getMethodName() : String from class com.jfinal.aop.ActionInvocationWrapper to public getMethodName() : String from class com.jfinal.aop.InvocationWrapper",
    "comment" : "ActionInvocation is deleted in base version and InvocationWrapper is added in the refactored version. Thus it is Move and rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getActionKey() : String extracted from public getActionKey() : String in class com.jfinal.core.ActionInvocation & moved to class com.jfinal.aop.Invocation",
    "comment" : "<p>Extract and Move to other class</p><p>Same as: <small> http://refactoring.encs.concordia.ca/oracle/refactoring-details/1118473/935</small></p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getControllerKey() : String extracted from public getControllerKey() : String in class com.jfinal.core.ActionInvocation & moved to class com.jfinal.aop.Invocation",
    "comment" : "<p>Extract and Move to other class.</p><p>Same as <small>: http://refactoring.encs.concordia.ca/oracle/refactoring-details/1118473/935</small></p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getMethod() : Method extracted from public getMethod() : Method in class com.jfinal.core.ActionInvocation & moved to class com.jfinal.aop.Invocation",
    "comment" : "<p>Extract and Move to other class.</p><p>Same case as: Same as : http://refactoring.encs.concordia.ca/oracle/refactoring-details/1118473/935</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getMethodName() : String extracted from public getMethodName() : String in class com.jfinal.core.ActionInvocation & moved to class com.jfinal.aop.Invocation",
    "comment" : "<p>Extract and Move to the inner class.</p><p>Same as : http://refactoring.encs.concordia.ca/oracle/refactoring-details/1118473/935</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getViewPath() : String extracted from public getViewPath() : String in class com.jfinal.core.ActionInvocation & moved to class com.jfinal.aop.Invocation",
    "comment" : "<p>Extract and Move to the inner class.</p><p>The class ActionInvocation is renamed to Invocation which is TP. However, this extract method is FP.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean' is added to superclass&nbsp; of AnsiSqlDialect.</p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean'&nbsp; is added to the superClass PostgreSqlDialect.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.OracleDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to the other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean' is moved to the superClass&nbsp; of OracleDialect.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.MysqlDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to other class.</p><p>&nbsp;The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean'&nbsp;&nbsp; is added to the superclass of MysqlDialect.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to&nbsp; other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean' is added to the superclass of Sqlite3Dialect</p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forModelSave(table Table, attrs Map<String,Object>, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.OracleDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean' is added in superClass of com.jfinal.plugin.activerecord.dialect.OracleDialect .java</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.MysqlDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to other class.</p><p>Same as refactoring with ID= 946.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to other class.</p><p>Same as refactoring with ID = 946.</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to other class.</p><p>Same as refactoring with ID =946.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to the other class.</p><p>Same as refactoring with ID = 946.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to the other class.</p><p>We cannot even consider it as Extract and Move.</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private inters : Interceptor[] from class com.jfinal.aop.ActionInvocationWrapper to private inters : Interceptor[] from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private index : int from class com.jfinal.aop.ActionInvocationWrapper to private index : int from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private index : int from class com.jfinal.core.ActionInvocation to private index : int from class com.jfinal.aop.Invocation",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private inters : Interceptor[] from class com.jfinal.core.ActionInvocation to private inters : Interceptor[] from class com.jfinal.aop.Invocation",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable colName : String in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method private buildCacheName(inv Invocation, controller Controller) : String from class com.jfinal.plugin.ehcache.CacheInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.ehcache.EvictInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.POST",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.NotAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValue : Object... in method public deleteById(tableName String, primaryKey String, idValue Object...) : boolean from class com.jfinal.plugin.activerecord.Db",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.TxByMethods",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.aop.PrototypeInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method private buildCacheName(inv Invocation) : String from class com.jfinal.plugin.ehcache.EvictInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter actionInvocation : ActionInvocation to invocation : Invocation in method package InvocationWrapper(invocation Invocation, inters Interceptor[]) from class com.jfinal.aop.InvocationWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.SessionInViewInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.TxByActionKeys",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.GET",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.Restful",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public getConfigWithTxConfig(inv Invocation) : Config from class com.jfinal.plugin.activerecord.tx.Tx",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.Tx",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.ehcache.CacheInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.aop.InterceptorStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method private buildCacheKey(inv Invocation, controller Controller) : String from class com.jfinal.plugin.ehcache.CacheInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValue : Object in method public deleteById(tableName String, idValue Object) : boolean from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValue : Object... in method public deleteById(tableName String, primaryKey String, idValue Object...) : boolean from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.TxByRegex",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValue : Object in method public deleteById(tableName String, idValue Object) : boolean from class com.jfinal.plugin.activerecord.Db",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter globalInterceptor : Interceptor to globalActionInterceptor : Interceptor in method public add(globalActionInterceptor Interceptor) : Interceptors from class com.jfinal.config.Interceptors",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter invocation : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.NoUrlPara",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValue : Object in method public deleteById(idValue Object) : boolean from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValues : Object[] in method public findByIdLoadColumns(idValues Object[], columns String) : M from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValues : Object... in method private deleteById(table Table, idValues Object...) : boolean from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to arr : String[] in method public forModelFindById(table Table, columns String) : String from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to arr : String[] in method public forModelFindById(table Table, columns String) : String from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable pKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable pKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable primaryKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable pKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable primaryKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to pKeys : String[] in method public forModelFindById(table Table, columns String) : String from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to pKeys : String[] in method public forModelFindById(table Table, columns String) : String from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to pKeys : String[] in method public forModelFindById(table Table, columns String) : String from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable pKey : String to pKeys : String[] in method public forModelSave(table Table, attrs Map<String,Object>, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable id : Object to ids : Object[] in method public delete() : boolean from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable id : Object to ids : Object[] in method package update(config Config, conn Connection, tableName String, primaryKey String, record Record) : boolean from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable cause : Throwable to t : Throwable in method public invoke() : void from class com.jfinal.aop.Invocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable defaultInters : Interceptor[] to globalInters : Interceptor[] in method package buildActionMapping() : void from class com.jfinal.core.ActionMapping",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute actionInvocation : ActionInvocation to invocation : Invocation in class com.jfinal.aop.InvocationWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute controller : Controller to target : Object in class com.jfinal.aop.Invocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute interceptorList : List<Interceptor> to globalActionInterceptor : List<Interceptor> in class com.jfinal.config.Interceptors",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable uploadedFileSaveDirectory : String in method private initOreillyCos() : void from class com.jfinal.core.JFinal",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable ct : Constants in method private initOreillyCos() : void from class com.jfinal.core.JFinal",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getUsefulClass() : Class<? extends Model> extracted from private find(conn Connection, sql String, paras Object...) : List<M> in class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Change has happened in the return statement"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable modelClass : Class<? extends Model> to c : Class in method private getUsefulClass() : Class<? extends Model> from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getDatePattern() : String extracted from protected validateDate(field String, min Date, max Date, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Not detected by RM, which I agree btw"
    }
  }, {
    "type" : "Merge Variable",
    "description" : "Merge Variable [primaryKey : String, columns : String] to pKeys : String[] in method public findById(tableName String, primaryKey String, idValue Object...) : Record from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValue : Object in method public findById(idValue Object) : M from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.aop.Interceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.LogInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.aop.InterceptorStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.aop.PrototypeInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type maxPostSize : Integer to maxPostSize : int in method public setMaxPostSize(maxPostSize int) : void from class com.jfinal.config.Constants",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.GET",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.LogInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type invocation : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.NoUrlPara",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.NotAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.POST",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.Restful",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.SessionInViewInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type idValue : Number to idValue : Object... in method public findById(tableName String, primaryKey String, idValue Object...) : Record from class com.jfinal.plugin.activerecord.Db",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to idValue : Object... in method public deleteById(tableName String, primaryKey String, idValue Object...) : boolean from class com.jfinal.plugin.activerecord.Db",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type idValue : Object to idValue : Object... in method public findById(tableName String, primaryKey String, idValue Object...) : Record from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to idValue : Object... in method public deleteById(tableName String, primaryKey String, idValue Object...) : boolean from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to idValues : Object... in method private deleteById(table Table, idValues Object...) : boolean from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to idValues : Object[] in method public findByIdLoadColumns(idValues Object[], columns String) : M from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public getConfigWithTxConfig(inv Invocation) : Config from class com.jfinal.plugin.activerecord.tx.Tx",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.Tx",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.TxByActionKeys",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.TxByRegex",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.ehcache.CacheInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method private buildCacheName(inv Invocation, controller Controller) : String from class com.jfinal.plugin.ehcache.CacheInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method private buildCacheKey(inv Invocation, controller Controller) : String from class com.jfinal.plugin.ehcache.CacheInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.ehcache.EvictInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method private buildCacheName(inv Invocation) : String from class com.jfinal.plugin.ehcache.EvictInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type invocation : ActionInvocation to invocation : Invocation in method public intercept(invocation Invocation) : void from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.TxByMethods",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type actionInvocation : ActionInvocation to invocation : Invocation in method package InvocationWrapper(invocation Invocation, inters Interceptor[]) from class com.jfinal.aop.InvocationWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.aop.Interceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Integer to int in method public getMaxPostSize() : int from class com.jfinal.config.Constants",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to String[] in method public getPrimaryKey() : String[] from class com.jfinal.plugin.activerecord.Table",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method package build(tableList List<Table>, config Config) : void from class com.jfinal.plugin.activerecord.TableBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type id : Object to ids : Object[] in method package update(config Config, conn Connection, tableName String, primaryKey String, record Record) : boolean from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type modelClass : Class<? extends Model> to c : Class in method private getUsefulClass() : Class<? extends Model> from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type id : Object to ids : Object[] in method public delete() : boolean from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type primaryKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pKey : String to pKeys : String[] in method public forModelSave(table Table, attrs Map<String,Object>, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type primaryKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type actionInvocation : ActionInvocation to invocation : Invocation in class com.jfinal.aop.InvocationWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type controller : Controller to target : Object in class com.jfinal.aop.Invocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type maxPostSize : Integer to maxPostSize : int in class com.jfinal.config.Constants",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type interceptorBuilder : InterceptorBuilder to interceptorBuilder : ActionInterceptorBuilder in method package buildActionMapping() : void from class com.jfinal.core.ActionMapping",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type primaryKey : String to primaryKey : String[] in class com.jfinal.plugin.activerecord.Table",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type fileRenamePolicy : DefaultFileRenamePolicy to fileRenamePolicy : FileRenamePolicy in class com.jfinal.upload.MultipartRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type invocation : ActionInvocation to invocation : Invocation in class com.jfinal.validate.Validator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public abstract doIntercept(inv Invocation) : void in class com.jfinal.aop.PrototypeInterceptor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter i18nResourceBaseName : String to defaultBaseName : String in method public setI18nDefaultBaseName(defaultBaseName String) : void in class com.jfinal.config.Constants",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter i18nResourceBaseName : String to defaultLocale : String in method public setI18nDefaultLocale(defaultLocale String) : void in class com.jfinal.config.Constants",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter defaultValue : String to singletonKey : String in method public enhance(singletonKey String, targetClass Class<T>) : T in class com.jfinal.core.Controller",
    "comment" : "<p>enhance(singletonKey String, targetClass Class&lt;T&gt;) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter key : String to singletonKey : String in method public enhance(singletonKey String, targetClass Class<T>, injectInters Interceptor...) : T in class com.jfinal.core.Controller",
    "comment" : "<p>enhance(singletonKey String, targetClass Class&lt;T&gt;, injectInters Interceptor...) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter key : String to singletonKey : String in method public enhance(singletonKey String, targetClass Class<T>, injectIntersClasses Class<? extends Interceptor>...) : T in class com.jfinal.core.Controller",
    "comment" : "<p>enhance(singletonKey String, targetClass Class&lt;T&gt;, injectIntersClasses Class&lt;? extends Interceptor&gt;...) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter columns : String to cacheName : String in method public findFirstByCache(cacheName String, key Object, sql String, paras Object...) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : "<p>findFirstByCache(cacheName String, key Object, sql String, paras Object...) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to key : Object in method public findFirstByCache(cacheName String, key Object, sql String, paras Object...) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : "<p>findFirstByCache(cacheName String, key Object, sql String, paras Object...) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter tableName : String to sql : String in method public findFirstByCache(cacheName String, key Object, sql String, paras Object...) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : "<p>findFirstByCache(cacheName String, key Object, sql String, paras Object...) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter tableName : String to cacheName : String in method public findFirstByCache(cacheName String, key Object, sql String) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : "<p>findFirstByCache(cacheName String, key Object, sql String) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to key : Object in method public findFirstByCache(cacheName String, key Object, sql String) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : "<p>findFirstByCache(cacheName String, key Object, sql String) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter tableName : String to cacheName : String in method public findFirstByCache(cacheName String, key Object, sql String, paras Object...) : Record in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "<p>findFirstByCache(cacheName String, key Object, sql String, paras Object...) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to sql : String in method public findFirstByCache(cacheName String, key Object, sql String, paras Object...) : Record in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "<p>findFirstByCache(cacheName String, key Object, sql String, paras Object...) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValues : Object... in method public findById(idValues Object...) : M in class com.jfinal.plugin.activerecord.Model",
    "comment" : "<p>method <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>findByIdLoadColumns</span>(<span class='pl-k'>Object</span>[] <span class='pl-v'>idValues</span>, <span class='pl-smi'>String</span> <span class='pl-v'>columns</span>)</span> is renamed from <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-en'>findById</span>(<span class='pl-smi'>Object</span> <span class='pl-v'>id</span>, <span class='pl-smi'>String</span> <span class='pl-v'>columns</span>)<br /><span class='pl-en'>findById</span>(<span class='pl-smi'>Object</span>... <span class='pl-v'>idValues</span>) appears to be a new method<br /></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable pKey : String to pKeys : String[] in method private getGeneratedKey(pst PreparedStatement, table Table, config Config) : void from class com.jfinal.plugin.activerecord.Model",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable pKey : String to pKeys : String[] in method public delete() : boolean in class com.jfinal.plugin.activerecord.Model",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to sql : StringBuilder in method public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to sql : StringBuilder in method public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public abstract forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public abstract forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public abstract forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to ids : Object[] in method public abstract forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to sql : StringBuilder in method public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to sql : StringBuilder in method public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to sql : StringBuilder in method public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to sql : StringBuilder in method public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter notBlank : boolean to index : int in method protected validateString(index int, minLen int, maxLen int, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public abstract forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to ids : Object[] in method public abstract forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable pKey : String to pKeys : String[] in method public update() : boolean from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pKey : String to pKeys : String[] in method private getGeneratedKey(pst PreparedStatement, table Table, config Config) : void from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pKey : String to pKeys : String[] in method public update() : boolean from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public abstract doIntercept(inv Invocation) : void in class com.jfinal.aop.PrototypeInterceptor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type idValue : Number to idValue : Object in method public deleteById(tableName String, idValue Object) : boolean in class com.jfinal.plugin.activerecord.Db",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to key : Object in method public findFirstByCache(cacheName String, key Object, sql String) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type idValue : Number to idValue : Object in method public deleteById(tableName String, idValue Object) : boolean in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type notBlank : boolean to index : int in method protected validateString(index int, minLen int, maxLen int, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Locale to T in method public enhance(singletonKey String, targetClass Class<T>, injectIntersClasses Class<? extends Interceptor>...) : T in class com.jfinal.core.Controller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method private getGeneratedKey(pst PreparedStatement, record Record, pKeys String[]) : void in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method build(tableList List<Table>, config Config) : void in class com.jfinal.plugin.activerecord.TableBuilder",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>private</span> <span class='pl-k'>static</span> <span class='pl-k'>final</span> <span class='pl-k'>Map&lt;<span class='pl-smi'>String</span>, Class&lt;?&gt;&gt;</span> strToType</span> has been extracted from <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>static</span> <span class='pl-k'>boolean</span> <span class='pl-en'>build</span>(<span class='pl-k'>List&lt;<span class='pl-smi'>Table</span>&gt;</span> <span class='pl-v'>tableList</span>, <span class='pl-smi'>Config</span> <span class='pl-v'>config</span>)</span></p>",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public setFileRenamePolicy(fileRenamePolicy FileRenamePolicy) : void in class com.jfinal.upload.OreillyCos",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method private isAbsolutelyPath(saveDirectory String) : boolean in class com.jfinal.upload.OreillyCos",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package addToInterceptorsMap(defaultInters Interceptor[]) : void from class com.jfinal.core.InterceptorBuilder to package addToInterceptorsMap(globalInters Interceptor[]) : void from class com.jfinal.core.ActionInterceptorBuilder",
    "comment" : "<p>Rename Class com.jfinal.core.InterceptorBuilder renamed to com.jfinal.core.ActionInterceptorBuilder</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createInterceptors(beforeAnnotation Before) : Interceptor[] from class com.jfinal.core.InterceptorBuilder to private createInterceptors(beforeAnnotation Before) : Interceptor[] from class com.jfinal.aop.InterceptorBuilder",
    "comment" : "<p>Rename Class com.jfinal.core.InterceptorBuilder renamed to com.jfinal.core.ActionInterceptorBuilder</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private intersMap : Map<Class<Interceptor>,Interceptor> from class com.jfinal.core.InterceptorBuilder to private intersMap : Map<Class<? extends Interceptor>,Interceptor> from class com.jfinal.core.ActionInterceptorBuilder",
    "comment" : "<p>Rename Class com.jfinal.core.InterceptorBuilder renamed to com.jfinal.core.ActionInterceptorBuilder</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public isOracle() : boolean inlined to private batch(config Config, conn Connection, sql String, paras Object[][], batchSize int) : int[] in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public encrypt(algorithm String, srcStr String) : String from class com.jfinal.kit.EncryptionKit to public hash(algorithm String, srcStr String) : String from class com.jfinal.kit.HashKit",
    "comment" : "<p>EncryptionKit is renamed to HashKit</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Davood, Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public isOracle() : boolean inlined to private batch(config Config, conn Connection, sql String, columns String, list List, batchSize int) : int[] in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private detectOreillyCos() : void inlined to public init(saveDirectory String, maxPostSize int, encoding String) : void in class com.jfinal.upload.OreillyCos",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The attribute -isMultipartSupported- has been removed, so the nonMappedLeavesT1 are justifiable"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isMultipartSupported() : boolean renamed to public setFileRenamePolicy(fileRenamePolicy FileRenamePolicy) : void in class com.jfinal.upload.OreillyCos",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public init(saveDirectory String, maxPostSize int, encoding String) : void renamed to private doInit(saveDirectory String, maxPostSize int, encoding String) : void in class com.jfinal.upload.OreillyCos",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String...) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String...) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public findById(tableName String, primaryKey String, idValue Number) : Record renamed to public deleteById(tableName String, idValue Object) : boolean in class com.jfinal.plugin.activerecord.Db",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public findById(tableName String, primaryKey String, idValue Object, columns String...) : Record renamed to public deleteById(tableName String, primaryKey String, idValue Object) : boolean in class com.jfinal.plugin.activerecord.Db",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteById(tableName String, id Object) : boolean renamed to public findFirstByCache(cacheName String, key Object, sql String, paras Object...) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteById(tableName String, primaryKey String, id Object) : boolean renamed to public findFirstByCache(cacheName String, key Object, sql String) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public findById(id Object, columns String...) : M renamed to public findByIdLoadColumns(idValue Object, columns String...) : M in class com.jfinal.plugin.activerecord.Model",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String...) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getInterceptorArray() : Interceptor[] renamed to public addGlobalActionInterceptor(globalActionInterceptor Interceptor) : void in class com.jfinal.config.Interceptors",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public findById(tableName String, primaryKey String, idValue Number) : Record renamed to public deleteById(tableName String, idValue Object) : boolean in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public findById(tableName String, primaryKey String, idValue Object, columns String...) : Record renamed to public deleteById(tableName String, primaryKey String, idValue Object) : boolean in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteById(tableName String, id Object) : boolean renamed to private getGeneratedKey(pst PreparedStatement, record Record, pKeys String[]) : void in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteById(tableName String, primaryKey String, id Object) : boolean renamed to public findFirstByCache(cacheName String, key Object, sql String, paras Object...) : Record in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setI18n(i18nResourceBaseName String, defaultLocale Locale, i18nMaxAgeOfCookie Integer) : void renamed to public setI18nDefaultBaseName(defaultBaseName String) : void in class com.jfinal.config.Constants",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setI18n(i18nResourceBaseName String) : void renamed to public setI18nDefaultLocale(defaultLocale String) : void in class com.jfinal.config.Constants",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @SuppressWarnings(\"unchecked\") in class com.jfinal.aop.Invocation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter config : Config in method private getGeneratedKey(pst PreparedStatement, table Table, config Config) : void from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pKeys : String[] in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pKeys : String[] in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pKeys : String[] in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pKeys : String[] in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pKeys : String[] in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pKeys : String[] in method public abstract forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter columns : String in method public findById(tableName String, primaryKey String, idValue Object, columns String) : Record from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pKey : String in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter id : Object in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter primaryKey : String in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, primaryKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter id : Object in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, primaryKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pKey : String in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter id : Object in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter primaryKey : String in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, primaryKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter id : Object in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, primaryKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pKey : String in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter id : Object in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter notBlank : boolean in method protected validateString(field String, notBlank boolean, minLen int, maxLen int, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pKey : String in method public abstract forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter id : Object in method public abstract forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public getConfigWithTxConfig(inv Invocation) : Config from class com.jfinal.plugin.activerecord.tx.Tx",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to private in method private validateStringValue(value String, minLen int, maxLen int, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public Invocation(action Action, controller Controller) from class com.jfinal.aop.Invocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method package addToInterceptorsMap(defaultInters Interceptor[]) : void from class com.jfinal.core.InterceptorBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter defaultInters : Interceptor[] to globalInters : Interceptor[] in method package addToInterceptorsMap(globalInters Interceptor[]) : void from class com.jfinal.core.ActionInterceptorBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type interceptorClasses : Class<Interceptor>[] to interceptorClasses : Class<? extends Interceptor>[] in method private createInterceptors(beforeAnnotation Before) : Interceptor[] from class com.jfinal.core.ActionInterceptorBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type intersMap : Map<Class<Interceptor>,Interceptor> to intersMap : Map<Class<? extends Interceptor>,Interceptor> in class com.jfinal.core.ActionInterceptorBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package fileRenamePolicy : FileRenamePolicy from class com.jfinal.upload.MultipartRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pKeys : String[] in method private getGeneratedKey(pst PreparedStatement, record Record, pKeys String[]) : void from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter record : Record in method private getGeneratedKey(pst PreparedStatement, record Record, pKeys String[]) : void from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Object to void in method private getGeneratedKey(pst PreparedStatement, record Record, pKeys String[]) : void from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private rootClassPath : String from class com.jfinal.kit.PathKit",
    "comment" : "<p>public void setRootClassPath(String rootClassPath) is not called in the commit</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private jsonText : String from class com.jfinal.render.JsonRender",
    "comment" : "<p>called in file<br />src/com/jfinal/plugin/ehcache/RenderInfo.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private attrs : String[] from class com.jfinal.render.JsonRender",
    "comment" : "<p>called in file<br />src/com/jfinal/plugin/ehcache/RenderInfo.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private controller : Controller from class com.jfinal.validate.Validator",
    "comment" : "<p>String value = controller.getPara(field);<br />is called estensively withing the Validator class</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private datePattern : String from class com.jfinal.validate.Validator",
    "comment" : "<p>self-encapsulate field</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private forIE : boolean from class com.jfinal.render.JsonRender",
    "comment" : "<p>called in file<br />src/com/jfinal/plugin/ehcache/RenderInfo.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier final in method package init(encoding String, devMode boolean) : void from class com.jfinal.render.Render",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier final in method public getEncoding() : String from class com.jfinal.render.Render",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier final in method public getDevMode() : boolean from class com.jfinal.render.Render",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier final in method public setContext(request HttpServletRequest, response HttpServletResponse) : Render from class com.jfinal.render.Render",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier final in method public setContext(request HttpServletRequest, response HttpServletResponse, viewPath String) : Render from class com.jfinal.render.Render",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier volatile in attribute private lockMap : ConcurrentHashMap<String,ReentrantLock> from class com.jfinal.plugin.ehcache.CacheInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier volatile in attribute private cacheManager : CacheManager from class com.jfinal.plugin.ehcache.CacheKit",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private fileRenamePolicy : DefaultFileRenamePolicy from class com.jfinal.upload.MultipartRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private datePattern : String from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private datePattern : String from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Annotation",
    "description" : "Remove Variable Annotation @SuppressWarnings(\"unchecked\") in variable interceptorClasses : Class<Interceptor>[] in method private createInterceptors(beforeAnnotation Before) : Interceptor[] from class com.jfinal.core.InterceptorBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : ParseException to e : Exception in method protected validateDate(field String, min String, max String, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : ParseException to e : Exception in method private toDate(value String, defaultValue Date) : Date from class com.jfinal.core.Controller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter invocation : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.OneConnectionPerThread",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type invocation : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.OneConnectionPerThread",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter errorCode : int in method public ActionException(errorCode int, errorRender Render) from class com.jfinal.core.ActionException",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter errorRender : Render in method public ActionException(errorCode int, errorRender Render) from class com.jfinal.core.ActionException",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class com.jfinal.core.Action",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable keyArr : String[] to arr : String[] in method package setPrimaryKey(primaryKey String) : void from class com.jfinal.plugin.activerecord.Table",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable pKeys : String[] in method public deleteById(tableName String, primaryKey String, idValue Object...) : boolean from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable pKeys : String[] in method package update(config Config, conn Connection, tableName String, primaryKey String, record Record) : boolean from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable value : String to value : String in method private validateStringValue(value String, minLen int, maxLen int, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter field : String in method protected validateString(field String, notBlank boolean, minLen int, maxLen int, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public abstract forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method private buildMsg(actionKey String, controllerClass Class<? extends Controller>, method Method) : String from class com.jfinal.core.ActionMapping",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable value : String in method protected validateLong(field String, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : "<p>inlined to validateLongValue(controller.getPara(field), errorKey, errorMessage);</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable value : String in method protected validateInteger(field String, min int, max int, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : "<p>inlined to validateIntegerValue(controller.getPara(field), min, max, errorKey, errorMessage);</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable value : String in method protected validateLong(field String, min long, max long, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : "<p>inlined to validateLongValue(controller.getPara(field), min, max, errorKey, errorMessage);</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1822
}, {
  "id" : 1119109,
  "repository" : "https://github.com/infinispan/infinispan.git",
  "sha1" : "ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
  "url" : "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
  "author" : "Pedro Ruivo",
  "time" : "6/18/15 3:08 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private replayRemoteTransactionIfNeeded(ctx RemoteTxInvocationContext, topologyId int) : void extracted from public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object in class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public throwRollbackExceptionIfAny() : void extracted from public commit() : void in class org.infinispan.transaction.tm.DummyTransaction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected assertNoTransactions(cacheName String) : void extracted from protected assertNoTransactions() : void in class org.infinispan.test.MultipleCacheManagersTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The log message has been changed. Also, the regular for implementation has been changed to forEach. Also. String literall has been added. All the changes are not behavioral."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected eventually(message String, ec Condition, timeout long, pollInterval long, unit TimeUnit) : void extracted from protected eventually(ec Condition, timeout long, pollInterval long, unit TimeUnit) : void in class org.infinispan.test.AbstractInfinispanTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Assert message has been added. This will not change the behavior of the program in my opinion"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected eventually(message String, ec Condition, timeoutMillis long, loops int) : void extracted from protected eventually(ec Condition, timeoutMillis long, loops int) : void in class org.infinispan.test.AbstractInfinispanTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Extract method on the top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void extracted from private invokeNextInterceptorAndVerifyTransaction(ctx TxInvocationContext, command AbstractTransactionBoundaryCommand) : Object in class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "if condition has been changed"
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method protected lockAndWrap(ctx InvocationContext, key Object, ice InternalCacheEntry, command FlagAffectedCommand) : void inlined to private localGet(ctx InvocationContext, key Object, isWrite boolean, command FlagAffectedCommand, isGetCacheEntry boolean) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "There are three unjustifiable non-mapped leaves in T1"
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method protected lockAndWrap(ctx InvocationContext, key Object, ice InternalCacheEntry, command FlagAffectedCommand) : void inlined to private remoteGet(ctx InvocationContext, key Object, isWrite boolean, command FlagAffectedCommand) : InternalCacheEntry in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "There are three unjustifiable non-mapped leaves in T1"
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private sendCommitCommand(ctx TxInvocationContext, command CommitCommand) : void inlined to public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the if-else in the original method hasn't been inlined"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createRollbackRpcOptions() : RpcOptions extracted from public visitRollbackCommand(ctx TxInvocationContext, command RollbackCommand) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "I don't believe this is even an extract method"
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private configuration : Configuration from class org.infinispan.tx.TransactionXaAdapterTmIntegrationTest to class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public removeRecoveryInformationFromCluster(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.tx.recovery.PostCommitRecoveryStateTest.RecoveryManagerDelegate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public removeRecoveryInformationFromCluster(lockOwners Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(lockOwners Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.transaction.xa.recovery.RecoveryManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected assertNotLocked(cache Cache, key Object) : void renamed to protected assertEventuallyNotLocked(cache Cache, key Object) : void in class org.infinispan.test.AbstractCacheTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected createPrepareRpcOptions() : RpcOptions extracted from protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, ignored boolean) : void in class org.infinispan.interceptors.distribution.VersionedDistributionInterceptor & moved to class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : "<p>Extract and Move to the other class. Moved to class <span class='blob-code-inner'><span class='pl-smi'>org.infinispan.interceptors.distribution</span>.<a class='link-gray-dark' title='core/src/main/java/org/infinispan/interceptors/distribution/TxDistributionInterceptor.java' href='https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c#diff-1f89fae5cdc8e35ed85504c05f20d66e'>TxDistributionInterceptor.java<br /></a></span>The method was locally extracted in TxDistributionInterceptor<br />Extract Method protected createPrepareRpcOptions() : RpcOptions extracted from protected prepareOnAffectedNodes(ctx TxInvocationContext&lt;?&gt;, command PrepareCommand, recipients Collection&lt;Address&gt;, sync boolean) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptor</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh, Nikos",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "The expression replaced with a ternary, which can be an impure change. So, I would consider this case as impure"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private extractJGroupsTransport(transport Transport) : JGroupsTransport extracted from private channel(cache Cache<Object,Object>) : Channel in class org.infinispan.partitionhandling.BasePartitionHandlingTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable globalTransaction : GlobalTransaction in method private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void from class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable k : Object to key : Object in method protected remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void from class org.infinispan.interceptors.distribution.NonTxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable k : Object to key : Object in method protected remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter recipientGenerator : RecipientGenerator to key : Object in method private handleTxWriteCommand(ctx InvocationContext, command WriteCommand, key Object, skipRemoteGet boolean) : Object from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable cache : Cache<Object,Object> in method private channel(i int) : Channel from class org.infinispan.partitionhandling.BasePartitionHandlingTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable lockManager : LockManager in method protected checkLocked(cache Cache, key Object) : boolean from class org.infinispan.test.AbstractCacheTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute txCoordinator : TransactionCoordinator to partitionHandlingManager : PartitionHandlingManager in class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Variable",
    "description" : "Merge Variable [localTxCount : int, remoteTxCount : int] to transactionTable : TransactionTable in method public isSatisfied() : boolean from class org.infinispan.test.MultipleCacheManagersTest.assertNoTransactions.eventually.new Condition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public removeRecoveryInformationFromCluster(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.transaction.xa.recovery.RecoveryManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter keygen : RecipientGenerator to key : Object in method protected abstract remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void from class org.infinispan.interceptors.distribution.BaseDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type recipientGenerator : RecipientGenerator to key : Object in method private handleTxWriteCommand(ctx InvocationContext, command WriteCommand, key Object, skipRemoteGet boolean) : Object from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type cache : Cache<Object,Object> to cache : Cache<?,?> in method private channel(cache Cache<?,?>) : Channel from class org.infinispan.partitionhandling.BasePartitionHandlingTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type keygen : RecipientGenerator to key : Object in method protected abstract remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void from class org.infinispan.interceptors.distribution.BaseDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Cache> to List<Cache<K,V>> in method private cachesInThisPartition() : List<Cache<K,V>> from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Cache<?,?> to Cache<K,V> in method private getCache(index int, name String) : Cache<K,V> from class org.infinispan.test.MultipleCacheManagersTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type txCoordinator : TransactionCoordinator to partitionHandlingManager : PartitionHandlingManager in class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type it : Iterator<Address> to it : Iterator<Map.Entry<Address,List<InboundTransferTask>>> in method private restartBrokenTransfers(cacheTopology CacheTopology, addedSegments Set<Integer>) : void from class org.infinispan.statetransfer.StateConsumerImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type advancedCache : AdvancedCache to advancedCache : AdvancedCache<String,String> in class org.infinispan.api.ForceWriteLockTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cache1 : Cache to cache1 : Cache<String,String> in method public testWithNoTx() : void from class org.infinispan.replication.AsyncReplTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cache2 : Cache to cache2 : Cache<String,String> in method public testWithNoTx() : void from class org.infinispan.replication.AsyncReplTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cache1 : Cache to cache1 : Cache<String,String> in method public testWithTx() : void from class org.infinispan.replication.AsyncReplTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cache2 : Cache to cache2 : Cache<String,String> in method public testWithTx() : void from class org.infinispan.replication.AsyncReplTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cache1 : Cache to cache1 : Cache<String,String> in method public simpleTest() : void from class org.infinispan.replication.AsyncReplTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter txCoordinator : TransactionCoordinator to partitionHandlingManager : PartitionHandlingManager in method public init(txTable TransactionTable, configuration Configuration, rpcManager RpcManager, recoveryManager RecoveryManager, commandsFactory CommandsFactory, cache Cache, partitionHandlingManager PartitionHandlingManager) : void in class org.infinispan.interceptors.TxInterceptor",
    "comment" : "<p>There are not replacements of the two variables in the body of the method.</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable k : Object to key : Object in method protected remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void in class org.infinispan.interceptors.distribution.NonTxDistributionInterceptor",
    "comment" : "<p>k is the current element in a for loop and becomes parameter key</p>",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ctx : TxInvocationContext to context : LocalTxInvocationContext in method protected checkTxCommandResponses(responseMap Map<Address,Response>, command TransactionBoundaryCommand, context LocalTxInvocationContext, recipients Collection<Address>) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : "<p>checkTxCommandResponses(responseMap Map&lt;Address,Response&gt;, command TransactionBoundaryCommand, context LocalTxInvocationContext, recipients Collection&lt;Address&gt;) : void exists with the same parameters in the parent commit</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected createPrepareRpcOptions() : RpcOptions extracted from protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, sync boolean) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "I don't believe this is even an extract method"
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type txCoordinator : TransactionCoordinator to partitionHandlingManager : PartitionHandlingManager in method public init(txTable TransactionTable, configuration Configuration, rpcManager RpcManager, recoveryManager RecoveryManager, commandsFactory CommandsFactory, cache Cache, partitionHandlingManager PartitionHandlingManager) : void in class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ctx : TxInvocationContext to context : LocalTxInvocationContext in method protected checkTxCommandResponses(responseMap Map<Address,Response>, command TransactionBoundaryCommand, context LocalTxInvocationContext, recipients Collection<Address>) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type caches : List<Cache> to caches : List<Cache<K,V>> in method private cachesInThisPartition() : List<Cache<K,V>> from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type c : Cache to c : Cache<Object,Object> in method public assertKeyAvailableForWrite(k Object, newValue Object) : void from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type c : Cache to c : Cache<Object,?> in method protected assertKeyNotAvailableForRead(key Object) : void from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type c : Cache to c : Cache<Object,Object> in method public assertKeyNotAvailableForWrite(key Object) : void from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type c : Cache to c : Cache<K,V> in method private cachesInThisPartition() : List<Cache<K,V>> from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cache : Cache<?,?> to cache : Cache<K,V> in method protected getLockOwner(key Object, cacheName String) : Cache<K,V> from class org.infinispan.test.MultipleCacheManagersTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable rpcOptions : RpcOptions in method public forwardCommandIfNeeded(command TopologyAffectedCommand, affectedKeys Set<Object>, origin Address) : Map<Address,Response> from class org.infinispan.statetransfer.StateTransferManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable availabilityMode : AvailabilityMode in method public handleStatusRequest(viewId int) : ManagerStatusResponse from class org.infinispan.topology.LocalTopologyManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private channel(cache Cache<Object,Object>) : Channel renamed to private extractJGroupsTransport(transport Transport) : JGroupsTransport in class org.infinispan.partitionhandling.BasePartitionHandlingTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private invokeNextInterceptorAndVerifyTransaction(ctx TxInvocationContext, command AbstractTransactionBoundaryCommand) : Object renamed to private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void in class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visitEntryRetrievalCommand(ctx InvocationContext, command EntryRetrievalCommand) : EntryIterable renamed to private replayRemoteTransactionIfNeeded(ctx RemoteTxInvocationContext, topologyId int) : void in class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private sendCommitCommand(ctx TxInvocationContext, command CommitCommand) : void renamed to protected checkTxCommandResponses(responseMap Map<Address,Response>, command TransactionBoundaryCommand, context LocalTxInvocationContext, recipients Collection<Address>) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public getLastStableTopology() : CacheTopology from class org.infinispan.partitionhandling.impl.PartitionHandlingManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unused\") in method public setDependencies(txTable TransactionTable, rpcManager RpcManager, timeService TimeService) : void from class org.infinispan.interceptors.locking.AbstractTxLockingInterceptor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public setDependencies(txTable TransactionTable, rpcManager RpcManager, timeService TimeService, partitionHandlingManager PartitionHandlingManager, commandsFactory CommandsFactory) : void from class org.infinispan.interceptors.locking.AbstractTxLockingInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter commandsFactory : CommandsFactory in method public setDependencies(txTable TransactionTable, rpcManager RpcManager, timeService TimeService, partitionHandlingManager PartitionHandlingManager, commandsFactory CommandsFactory) : void from class org.infinispan.interceptors.locking.AbstractTxLockingInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter commandsFactory : CommandsFactory in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter configuration : Configuration in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter rpcManager : RpcManager in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter lockManager : LockManager in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public AbstractEnlistmentAdapter(cacheTransaction CacheTransaction, commandsFactory CommandsFactory, rpcManager RpcManager, txTable TransactionTable, clusteringLogic ClusteringDependentLogic, configuration Configuration, txCoordinator TransactionCoordinator, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.impl.AbstractEnlistmentAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public AbstractEnlistmentAdapter(commandsFactory CommandsFactory, rpcManager RpcManager, txTable TransactionTable, clusteringLogic ClusteringDependentLogic, configuration Configuration, txCoordinator TransactionCoordinator, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.impl.AbstractEnlistmentAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public initialize(rpcManager RpcManager, configuration Configuration, icf InvocationContextFactory, invoker InterceptorChain, notifier CacheNotifier, gtf TransactionFactory, txCoordinator TransactionCoordinator, transactionSynchronizationRegistry TransactionSynchronizationRegistry, commandsFactory CommandsFactory, clusteringDependentLogic ClusteringDependentLogic, cache Cache, timeService TimeService, cacheManagerNotifier CacheManagerNotifier, partitionHandlingManager PartitionHandlingManager) : void from class org.infinispan.transaction.impl.TransactionTable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public SynchronizationAdapter(localTransaction LocalTransaction, txCoordinator TransactionCoordinator, commandsFactory CommandsFactory, rpcManager RpcManager, transactionTable TransactionTable, clusteringLogic ClusteringDependentLogic, configuration Configuration, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.synchronization.SynchronizationAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public TransactionXaAdapter(localTransaction LocalXaTransaction, txTable TransactionTable, rm RecoveryManager, txCoordinator TransactionCoordinator, commandsFactory CommandsFactory, rpcManager RpcManager, clusteringDependentLogic ClusteringDependentLogic, configuration Configuration, cacheName String, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.xa.TransactionXaAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public TransactionXaAdapter(txTable TransactionTable, rm RecoveryManager, txCoordinator TransactionCoordinator, commandsFactory CommandsFactory, rpcManager RpcManager, clusteringDependentLogic ClusteringDependentLogic, configuration Configuration, cacheName String, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.xa.TransactionXaAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter fromCluster : boolean in method public removeRecoveryInformation(lockOwners Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void from class org.infinispan.transaction.xa.recovery.RecoveryManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter fromCluster : boolean in method public removeRecoveryInformation(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void from class org.infinispan.tx.recovery.PostCommitRecoveryStateTest.RecoveryManagerDelegate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter fromCluster : boolean in method public removeRecoveryInformation(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void from class org.infinispan.transaction.xa.recovery.RecoveryManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter sync : boolean in method protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, sync boolean) : void from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter ignored : boolean in method protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, ignored boolean) : void from class org.infinispan.interceptors.distribution.VersionedDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter sync : boolean in method protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, sync boolean) : void from class org.infinispan.interceptors.totalorder.TotalOrderDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter sync : boolean in method protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, sync boolean) : void from class org.infinispan.interceptors.totalorder.TotalOrderVersionedDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter componentRegistry : ComponentRegistry in method public init(stateTransferManager StateTransferManager, transport Transport, componentRegistry ComponentRegistry) : void from class org.infinispan.statetransfer.StateTransferInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter ctx : InvocationContext in method private isLocalOnly(ctx InvocationContext, command VisitableCommand) : boolean from class org.infinispan.statetransfer.StateTransferInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter sync : boolean in method public forwardCommandIfNeeded(command TopologyAffectedCommand, affectedKeys Set<Object>, origin Address, sync boolean) : Map<Address,Response> from class org.infinispan.statetransfer.StateTransferManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter sync : boolean in method public forwardCommandIfNeeded(command TopologyAffectedCommand, affectedKeys Set<Object>, origin Address, sync boolean) : Map<Address,Response> from class org.infinispan.statetransfer.StateTransferManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Inject in method public inject(partitionHandlingManager PartitionHandlingManager) : void from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : "<p>inject(partitionHandlingManager PartitionHandlingManager) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private rpcManager : RpcManager from class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private partitionHandlingManager : PartitionHandlingManager from class org.infinispan.interceptors.TxInterceptor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute protected actual : Transport from class org.infinispan.remoting.transport.AbstractDelegatingTransport",
    "comment" : "<p>public Transport getDelegate()<br />called in method private static JGroupsTransport extractJGroupsTransport(Transport transport)<br />core/src/test/java/org/infinispan/partitionhandling/BasePartitionHandlingTest.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public start() : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable origin : Address in method private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void from class org.infinispan.interceptors.TxInterceptor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable cacheTopology : CacheTopology in method public forwardCommandIfNeeded(command TopologyAffectedCommand, affectedKeys Set<Object>, origin Address) : Map<Address,Response> from class org.infinispan.statetransfer.StateTransferManagerImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public init(txTable TransactionTable, configuration Configuration, rpcManager RpcManager, recoveryManager RecoveryManager, commandsFactory CommandsFactory, cache Cache, partitionHandlingManager PartitionHandlingManager) : void from class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter txCoordinator : TransactionCoordinator in method public init(txTable TransactionTable, configuration Configuration, txCoordinator TransactionCoordinator, rpcManager RpcManager, recoveryManager RecoveryManager, commandsFactory CommandsFactory, cache Cache) : void from class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.infinispan.test.AbstractCacheTest.CleanupPhase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable recipientGenerator : RecipientGenerator in method protected handleNonTxWriteCommand(ctx InvocationContext, command DataWriteCommand) : Object from class org.infinispan.interceptors.distribution.BaseDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable skrg : SingleKeyRecipientGenerator in method public visitPutKeyValueCommand(ctx InvocationContext, command PutKeyValueCommand) : Object from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable entry : Map.Entry<Address,List<InboundTransferTask>> in method private restartBrokenTransfers(cacheTopology CacheTopology, addedSegments Set<Integer>) : void from class org.infinispan.statetransfer.StateConsumerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createCommitRpcOptions() : RpcOptions extracted from public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : "<p>private void sendCommitCommand(TxInvocationContext ctx, CommitCommand command) is inlined to<br />visitCommitCommand(TxInvocationContext ctx, CommitCommand command)<br />and then statement<br />boolean syncCommitPhase = cacheConfiguration.transaction().syncCommitPhase();<br />is extracted to private RpcOptions createCommitRpcOptions() as part of statement<br />return createRpcOptionsFor2ndPhase(cacheConfiguration.transaction().syncCommitPhase());</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The behavior is totally different"
    }
  } ],
  "refDiffExecutionTime" : 7011
}, {
  "id" : 1120023,
  "repository" : "https://github.com/Alluxio/alluxio.git",
  "sha1" : "ed966510ccf8441115614e2258aea61df0ea55f5",
  "url" : "https://github.com/Alluxio/alluxio/commit/ed966510ccf8441115614e2258aea61df0ea55f5",
  "author" : "Bin Fan",
  "time" : "6/18/15 8:46 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private reserveSpace(size long) : void extracted from public addBlockMeta(block BlockMeta) : Optional<BlockMeta> in class tachyon.worker.block.meta.StorageDir",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the checkState function condtion has been changed - blockSize variable can be different numbers"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private reclaimSpace(size long) : void extracted from public removeTempBlockMeta(tempBlockMeta TempBlockMeta) : boolean in class tachyon.worker.block.meta.StorageDir",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "+size has been added, which completely changes the logic"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private reclaimSpace(size long) : void extracted from public removeBlockMeta(block BlockMeta) : boolean in class tachyon.worker.block.meta.StorageDir",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "contain one nonMappeLeave, which cannot be justified"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private reserveSpace(size long) : void extracted from public addTempBlockMeta(tempBlockMeta TempBlockMeta) : boolean in class tachyon.worker.block.meta.StorageDir",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Same extracted method, but for this refactoring, we have one nonMappedLeave."
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public resizeTempBlockMeta(tempBlockMeta TempBlockMeta, newSize long) : void extracted from private requestSpaceNoLock(userId long, blockId long, moreBytes long) : boolean in class tachyon.worker.block.TieredBlockStore & moved to class tachyon.worker.block.meta.StorageDir",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics Severe changes",
      "mappingState" : 3,
      "validationComment" : "impure changes (logic addition) on top of the refactoring"
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable blockSize : long to size : long in method private reserveSpace(size long) : void from class tachyon.worker.block.meta.StorageDir",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1120391,
  "repository" : "https://github.com/apache/tomcat.git",
  "sha1" : "40f00732b9652350ac11830367fd32db67987fc7",
  "url" : "https://github.com/apache/tomcat/commit/40f00732b9652350ac11830367fd32db67987fc7",
  "author" : "Mark Thomas",
  "time" : "6/19/15 4:38 PM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private certificateKeystoreType : String from class org.apache.tomcat.util.net.SSLHostConfig to private certificateKeystoreType : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getCertificateKeyAlias() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeyAlias() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private certificateKeystoreFile : String from class org.apache.tomcat.util.net.SSLHostConfig to private certificateKeystoreFile : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private certificateKeyAlias : String from class org.apache.tomcat.util.net.SSLHostConfig to private certificateKeyAlias : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private certificateKeystoreProvider : String from class org.apache.tomcat.util.net.SSLHostConfig to private certificateKeystoreProvider : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private certificateKeystorePassword : String from class org.apache.tomcat.util.net.SSLHostConfig to private certificateKeystorePassword : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getCertificateKeystoreFile() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeystoreFile() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getCertificateKeystorePassword() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeystorePassword() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getCertificateKeystoreType() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeystoreType() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getCertificateKeystoreProvider() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeystoreProvider() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setCertificateKeyAlias(certificateKeyAlias String) : void extracted from public setCertificateKeyAlias(certificateKeyAlias String) : void in class org.apache.tomcat.util.net.SSLHostConfig & moved to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : "<p>Extract and Move to other class.</p><div><p>Since RefDiff does not detect 'Extract and Move', we consider this one as CTP.</p><p>The method is extracted and moved to class <span class='pl-smi'>SSLHostConfigCertificate.</span></p></div>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused two justifiable changes, but the addition of -Certificate.- is not justifiable. So, it's an impure case"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setCertificateKeystoreFile(certificateKeystoreFile String) : void extracted from public setCertificateKeystoreFile(certificateKeystoreFile String) : void in class org.apache.tomcat.util.net.SSLHostConfig & moved to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : "<p>Extract and Move to other class.</p><div><p>Since RefDiff does not detect 'Extract and Move', we consider this one as CTP.</p><p>The method is extracted and moved to class <span class='pl-smi'>SSLHostConfigCertificate.</span></p></div>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused two justifiable changes, but the addition of -Certificate.- is not justifiable. So, it's an impure case"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setCertificateKeystorePassword(certificateKeystorePassword String) : void extracted from public setCertificateKeystorePassword(certificateKeystorePassword String) : void in class org.apache.tomcat.util.net.SSLHostConfig & moved to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : "<p>Extract and Move to other class.</p><div><p>Since RefDiff does not detect 'Extract and Move', we consider this one as CTP.</p><p>The method is extracted and moved to class <span class='pl-smi'>SSLHostConfigCertificate.</span></p></div>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused two justifiable changes, but the addition of -Certificate.- is not justifiable. So, it's an impure case"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setCertificateKeystoreProvider(certificateKeystoreProvider String) : void extracted from public setCertificateKeystoreProvider(certificateKeystoreProvider String) : void in class org.apache.tomcat.util.net.SSLHostConfig & moved to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : "<p>Extract and Move to other class.</p><div><p>Since RefDiff does not detect 'Extract and Move', we consider this one as CTP.</p><p>The method is extracted and moved to class <span class='pl-smi'>SSLHostConfigCertificate.</span></p></div><p>&nbsp;</p><p style='color: gray;'>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused two justifiable changes, but the addition of -Certificate.- is not justifiable. So, it's an impure case"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setCertificateKeystoreType(certificateKeystoreType String) : void extracted from public setCertificateKeystoreType(certificateKeystoreType String) : void in class org.apache.tomcat.util.net.SSLHostConfig & moved to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : "<p>Extract and Move to other class.</p><div><p>Since RefDiff does not detect 'Extract and Move', we consider this one as CTP.</p><p>The method is extracted and moved to class <span class='pl-smi'>SSLHostConfigCertificate.</span></p></div>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused two justifiable changes, but the addition of -Certificate.- is not justifiable. So, it's an impure case"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sslHostConfig : SSLHostConfig in method public SSLHostConfigCertificate(sslHostConfig SSLHostConfig, type Type) from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package setProperty(name String, configType Type) : void from class org.apache.tomcat.util.net.SSLHostConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1133
}, {
  "id" : 1120496,
  "repository" : "https://github.com/CyanogenMod/android_frameworks_base.git",
  "sha1" : "5d1a70a4d32ac4c96a32535c68c69b20288d8968",
  "url" : "https://github.com/CyanogenMod/android_frameworks_base/commit/5d1a70a4d32ac4c96a32535c68c69b20288d8968",
  "author" : "jinchul.kim",
  "time" : "6/20/15 9:39 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public killProcessGroup(uid int, pid int) : void extracted from package removeLruProcessLocked(app ProcessRecord) : void in class com.android.server.am.ActivityManagerService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Functionality has been changed by the sendMessage added line"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public killProcessGroup(uid int, pid int) : void extracted from package appDiedLocked(app ProcessRecord, pid int, thread IApplicationThread, fromBinderDied boolean) : void in class com.android.server.am.ActivityManagerService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Functionality has been changed by the sendMessage added line"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public killProcessGroup(uid int, pid int) : void extracted from package startProcessLocked(processName String, info ApplicationInfo, knownToBeDead boolean, intentFlags int, hostingType String, hostingName ComponentName, allowWhileBooting boolean, isolated boolean, isolatedUid int, keepIfLarge boolean, abiOverride String, entryPoint String, entryPointArgs String[], crashHandler Runnable) : ProcessRecord in class com.android.server.am.ActivityManagerService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Functionality has been changed by the sendMessage added line"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public killProcessGroup(uid int, pid int) : void extracted from private crashApplication(r ProcessRecord, crashInfo ApplicationErrorReport.CrashInfo) : void in class com.android.server.am.ActivityManagerService",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Functionality has been changed by the sendMessage added line"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public killProcessGroup(uid int, pid int) : void extracted from package kill(reason String, noisy boolean) : void in class com.android.server.am.ProcessRecord & moved to class com.android.server.am.ActivityManagerService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics Severe changes",
      "mappingState" : 3,
      "validationComment" : "added statements in the extracted method are not justifiable and the funtionality has been changed"
    }
  } ],
  "refDiffExecutionTime" : 7362
}, {
  "id" : 1120803,
  "repository" : "https://github.com/codefollower/Lealone.git",
  "sha1" : "7a2e0ae5f6172cbe34f9bc4a5cde666314ff75dd",
  "url" : "https://github.com/codefollower/Lealone/commit/7a2e0ae5f6172cbe34f9bc4a5cde666314ff75dd",
  "author" : "Honghua Zhu",
  "time" : "6/20/15 11:57 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method package setPassword(user User, session Session, password Expression) : void extracted from public update() : int in class org.lealone.command.ddl.CreateUser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "There are some added statements"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method package setSaltAndHash(user User, session Session, salt Expression, hash Expression) : void extracted from public update() : int in class org.lealone.command.ddl.CreateUser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "There are two replacement which can be justified with Add Parameter refactoring on top. So, it's pure"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getCharArray(e Expression) : char[] renamed to private getByteArray(session Session, e Expression) : byte[] in class org.lealone.command.ddl.CreateUser",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package setPassword(user User, session Session, password Expression) : void extracted from public update() : int in class org.lealone.command.ddl.AlterUser & moved to class org.lealone.command.ddl.CreateUser",
    "comment" : "<p>Extract and Move to other class. setPassword is in class <span class='blob-code-inner'><span class='pl-smi'>CreateUser.</span></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n- Rename Variable- Severe changes",
      "mappingState" : 3,
      "validationComment" : "non-mapped leaves change the behavior of the program and are not justifiable - if condition has been added to the extracted operation"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package setSaltAndHash(user User, session Session, salt Expression, hash Expression) : void extracted from public update() : int in class org.lealone.command.ddl.AlterUser & moved to class org.lealone.command.ddl.CreateUser",
    "comment" : "<p>Extract and Move to other class. setSaltAndHash(..) is in class <span class='blob-code-inner'><span class='pl-smi'>CreateUser.</span></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n- Add Parameter-",
      "mappingState" : 1,
      "validationComment" : "Add Parameter on top"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter e : Expression to salt : Expression in method setSaltAndHash(user User, session Session, salt Expression, hash Expression) : void in class org.lealone.command.ddl.CreateUser",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getCharArray(e Expression) : char[] renamed to package setSaltAndHash(user User, session Session, salt Expression, hash Expression) : void in class org.lealone.command.ddl.CreateUser",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public update() : int from class org.lealone.command.ddl.AlterUser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getType() : int from class org.lealone.command.ddl.AlterUser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public update() : int from class org.lealone.command.ddl.CreateUser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getType() : int from class org.lealone.command.ddl.CreateUser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter session : Session in method private getByteArray(session Session, e Expression) : byte[] from class org.lealone.command.ddl.CreateUser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private getByteArray(session Session, e Expression) : byte[] from class org.lealone.command.ddl.CreateUser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 638
}, {
  "id" : 1120836,
  "repository" : "https://github.com/SlimeKnights/TinkersConstruct.git",
  "sha1" : "71820e573134be3fad3935035249cd77c4412f4e",
  "url" : "https://github.com/SlimeKnights/TinkersConstruct/commit/71820e573134be3fad3935035249cd77c4412f4e",
  "author" : "Bernhard Bonigl",
  "time" : "6/20/15 11:27 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class tconstruct.library.modifiers.RecipeMatch moved to tconstruct.library.mantle.RecipeMatch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public matches(stacks Collection<ItemStack>) : RecipeMatch.Match extracted from public matches(stacks ItemStack[]) : RecipeMatch.Match in class tconstruct.library.modifiers.Modifier & moved to class tconstruct.library.mantle.RecipeMatchRegistry",
    "comment" : "<p>For me, it is an 'extract class' refactoring. Class RecipeMatchRegistry is extracted from Modifier.</p><p>See that RecipeMatchRegistry is an attribute of class Modifier in the refactored version, and the 3 addItem(..) methods in the refactored version of Modifier are now delegating to the 3 addItem(..) in RecipeMatchRegistry.</p><p><span class='blob-code-inner'><span class='pl-en'>matches(stacks ItemStack[]) : RecipeMatch.Match<br />has been extracted and moved from Modifier to RecipeMatchRegistry<br /><br />matches(stacks Collection) : RecipeMatch.Match<br />is a newly added method that simply delegates to matches(stacks ItemStack[]) : RecipeMatch.Match<br /></span></span></p><p><span class='blob-code-inner'>  public RecipeMatch.Match matches(Collection&lt;ItemStack&gt; stacks) {<br />  return matches(stacks.toArray(new ItemStack[stacks.size()]));<br />  }</span></p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class tconstruct.library.modifiers.RecipeMatch.Match moved to tconstruct.library.mantle.RecipeMatch.Match",
    "comment" : "<p>Outer class RecipeMatch is moved along with inner class Match</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addItem(oredictItem String) : void extracted from public addItem(item Item) : void in class tconstruct.library.modifiers.Modifier & moved to class tconstruct.library.mantle.RecipeMatchRegistry",
    "comment" : "<p>For me, it is an 'extract class' refactoring. Class RecipeMatchRegistry is extracted from Modifier.</p><p>See that RecipeMatchRegistry is an attribute of class Modifier in the refactored version, and the 3 addItem(..) methods in the refactored version of Modifier are now delegating to the 3 addItem(..) in RecipeMatchRegistry.</p><p>After refactoring method delegates to&nbsp;<span class='blob-code-inner'><span class='pl-smi x x-first x-last'>RecipeMatchRegistry</span> </span>through field modifierItems {<span class='blob-code-inner'><span class='x x-first'>modifierItems</span><span class='pl-k x x-last'>.</span>addItem(oredictItem String)</span>}<br /><br />Modifier. addItem(oredictItem String) {<span class='blob-code-inner'>addItem(oredictItem<span class='x x-first'>, </span><span class='pl-c1 x x-last'>1</span>);</span> }<br />RecipeMatchRegistry.addItem(item Item) {<span class='blob-code-inner'>addItem(item, <span class='pl-c1'>1</span>, <span class='pl-c1'>1</span>);</span>}</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Matin, Laleh, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private oredictEntry : String from class tconstruct.library.modifiers.RecipeMatch.Oredict to private oredictEntry : String from class tconstruct.library.mantle.RecipeMatch.Oredict",
    "comment" : "<p>class tconstruct.library.modifiers.RecipeMatch.Oredict is moved to&nbsp; tconstruct.library.mantle.RecipeMatch.Oredict.</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public removeMatch(stacks ItemStack[], match Match) : void from class tconstruct.library.modifiers.RecipeMatch to public removeMatch(stacks ItemStack[], match Match) : void from class tconstruct.library.mantle.RecipeMatch",
    "comment" : "<p>Move class tconstruct.library.modifiers.RecipeMatch to tconstruct.library.mantle.RecipeMatch&nbsp; is already detetced by RefDiff and it is TP. So this case is FP.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addItem(oredictItem String) : void extracted from public addItem(oredictItem String) : void in class tconstruct.library.modifiers.Modifier & moved to class tconstruct.library.mantle.RecipeMatchRegistry",
    "comment" : "<p>For me, it is an 'extract class' refactoring. Class&nbsp;<span class='blob-code-inner'><span class='pl-en'>RecipeMatchRegistry</span></span> is extracted from Modifier.</p><p>See that <span class='blob-code-inner'><span class='pl-smi x x-first x-last'>RecipeMatchRegistry is an attribute of class&nbsp; Modifier in the refactored version, and the&nbsp; 3 </span></span><span class='blob-code-inner'><span class='pl-en'>addItem(..)</span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'> methods in the refactored version of Modifier are now </span></span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>delegating to the 3 addItem(..) in RecipeMatchRegistry.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>This can be considered as a Move Method, because after refactoring the original method delegates to class RecipeMatchRegistry through field <span class='x x-first'>modifierItems</span><br />{<span class='x x-first'>modifierItems</span><span class='pl-k x x-last'>.</span>addItem(oredictItem);}<br /></span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>- public void addItem(String oredictItem) {<br />- addItem(oredictItem, 1);<br />- }</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'> public void addItem(String oredictItem) {<br /> addItem(oredictItem, 1, 1);<br /> }</span></span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Matin, Laleh, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addItem(block Block, amountMatched int) : void extracted from public addItem(block Block, count int) : void in class tconstruct.library.modifiers.Modifier & moved to class tconstruct.library.mantle.RecipeMatchRegistry",
    "comment" : "<p>For me, it is an 'extract class' refactoring. Class&nbsp;<span class='blob-code-inner'><span class='pl-en'>RecipeMatchRegistry</span></span> is extracted from Modifier.</p><p>See that <span class='blob-code-inner'><span class='pl-smi x x-first x-last'>RecipeMatchRegistry is an attribute of class&nbsp; Modifier in the refactored version, and the&nbsp; 3 </span></span><span class='blob-code-inner'><span class='pl-en'>addItem(..)</span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'> methods in the refactored version of Modifier are now </span></span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>delegating to the 3 addItem(..) in RecipeMatchRegistry.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>This can be considered as a Move Method, because after refactoring the original method delegates to class RecipeMatchRegistry through field modifierItems<br />{modifierItems<span class='pl-k'>.</span><span class='x x-first x-last'>addItem(</span>block, count);}<br /></span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>- public void addItem(Block block, int count) {<br />- modifierItems.add(new RecipeMatch.Item(new ItemStack(block), count));<br />- }</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>  public void addItem(Block block, int amountMatched) {<br />  items.add(new RecipeMatch.Item(new ItemStack(block), 1, amountMatched));<br />  }</span></span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addItem(oredictItem String, count int) : void from class tconstruct.library.modifiers.Modifier to public addItem(oredictItem String, amountNeeded int, amountMatched int) : void from class tconstruct.library.mantle.RecipeMatchRegistry",
    "comment" : "<p>For me, it is an 'extract class' refactoring. Class&nbsp;<span class='blob-code-inner'><span class='pl-en'>RecipeMatchRegistry</span></span> is extracted from Modifier.</p><p>See that <span class='blob-code-inner'><span class='pl-smi x x-first x-last'>RecipeMatchRegistry is an attribute of class&nbsp; Modifier in the refactored version, and the&nbsp; 3 </span></span><span class='blob-code-inner'><span class='pl-en'>addItem(..)</span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'> methods in the refactored version of Modifier are now </span></span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>delegating to the 3 addItem(..) in RecipeMatchRegistry.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>The method has been moved with the addition of a parameter (amountMatched), which is not used.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>- public void addItem(String oredictItem, int count) {<br />- modifierItems.add(new RecipeMatch.Oredict(oredictItem, count));<br />- }</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>  public void addItem(String oredictItem, int amountNeeded, int amountMatched) {<br />  items.add(new RecipeMatch.Oredict(oredictItem, amountNeeded));<br />  }</span></span></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Laleh, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private template : ItemStack from class tconstruct.library.modifiers.RecipeMatch.Item to private template : ItemStack from class tconstruct.library.mantle.RecipeMatch.Item",
    "comment" : "<p>Basically the inner class <span class='blob-code-inner'><span class='pl-smi'>tconstruct.library.<span class='x x-first x-last'>modifiers</span></span></span>.RecipeMatch.Item is moved to class construct.library.mantle.RecipeMatch.Item.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addItem(item Item, count int) : void from class tconstruct.library.modifiers.Modifier to public addItem(item Item, amountNeeded int, amountMatched int) : void from class tconstruct.library.mantle.RecipeMatchRegistry",
    "comment" : "<p>For me, it is an 'extract class' refactoring. Class&nbsp;<span class='blob-code-inner'><span class='pl-en'>RecipeMatchRegistry</span></span> is extracted from Modifier.</p><p>See that <span class='blob-code-inner'><span class='pl-smi x x-first x-last'>RecipeMatchRegistry is an attribute of class&nbsp; Modifier in the refactored version, and the&nbsp; 3 </span></span><span class='blob-code-inner'><span class='pl-en'>addItem(..)</span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'> methods in the refactored version of Modifier are now </span></span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>delegating to the 3 addItem(..) in RecipeMatchRegistry.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>&nbsp;The method is moved with the addition of a new parameter (amountNeeded), which is not used.<br /></span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>- public void addItem(Item item, int count) {<br />- modifierItems.add(new RecipeMatch.Item(new ItemStack(item), count));<br />- }</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>  public void addItem(Item item, int amountNeeded, int amountMatched) {<br />  items.add(new RecipeMatch.Item(new ItemStack(item), 1, amountMatched));<br />  }</span></span></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Laleh, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type modifierItems : List<RecipeMatch> to modifierItems : RecipeMatchRegistry in class tconstruct.library.modifiers.Modifier",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class tconstruct.library.modifiers.RecipeMatch.Oredict moved and renamed to tconstruct.library.mantle.RecipeMatch.Item",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class tconstruct.library.modifiers.RecipeMatch.Item moved and renamed to tconstruct.library.mantle.RecipeMatch.Oredict",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute protected modifierItems : RecipeMatchRegistry from class tconstruct.library.modifiers.Modifier",
    "comment" : "<p>public RecipeMatchRegistry getItemRegistry() is not called</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter count : int to amountNeeded : int in method public addItem(oredictItem String, amountNeeded int, amountMatched int) : void from class tconstruct.library.mantle.RecipeMatchRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1121426,
  "repository" : "https://github.com/spring-projects/spring-framework.git",
  "sha1" : "dd4bc630c3de70204081ab196945d6b55ab03beb",
  "url" : "https://github.com/spring-projects/spring-framework/commit/dd4bc630c3de70204081ab196945d6b55ab03beb",
  "author" : "Juergen Hoeller",
  "time" : "6/21/15 7:29 PM",
  "refactorings" : [ {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private completableFuturePresent : boolean from class org.springframework.aop.interceptor.AsyncExecutionInterceptor to private completableFuturePresent : boolean from class org.springframework.aop.interceptor.AsyncExecutionAspectSupport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.aop.interceptor.AsyncExecutionInterceptor.CompletableFutureDelegate moved to org.springframework.aop.interceptor.AsyncExecutionAspectSupport.CompletableFutureDelegate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected doSubmit(task Callable<Object>, executor AsyncTaskExecutor, returnType Class<?>) : Object extracted from public invoke(invocation MethodInvocation) : Object in class org.springframework.aop.interceptor.AsyncExecutionInterceptor & moved to class org.springframework.aop.interceptor.AsyncExecutionAspectSupport",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2258
}, {
  "id" : 1121732,
  "repository" : "https://github.com/apache/drill.git",
  "sha1" : "ffae1691c0cd526ed1095fbabbc0855d016790d7",
  "url" : "https://github.com/apache/drill/commit/ffae1691c0cd526ed1095fbabbc0855d016790d7",
  "author" : "Jinfeng Ni",
  "time" : "6/20/15 7:42 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected validateAndConvert(sqlNode SqlNode) : ConvertedRelNode extracted from public getPlan(sqlNode SqlNode) : PhysicalPlan in class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected convertToDrel(relNode RelNode) : DrillRel extracted from protected convertToDrel(relNode RelNode, validatedRowType RelDataType) : DrillRel in class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The non-mapped leave can be justified using other refactorings."
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected convertToDrel(relNode RelNode) : DrillRel extracted from private convertToDrel(relNode RelNode, schema AbstractSchema, tableName String, partitionColumns List<String>) : DrillRel in class org.apache.drill.exec.planner.sql.handlers.CreateTableHandler & moved to class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : "<p>Extract and Move to other class.</p><p>The convertToDrel(relNode RelNode)&nbsp; in the parent class (<span class='pl-e'>DefaultSqlHandler</span>) is extratced form convertToDrel(relNode RelNode, schema AbstractSchema, tableName String, partitionColumns List) .</p><p>See refactoring: http://refactoring.encs.concordia.ca/oracle/refactoring-details/1121732/1073</p><p>So for this class consider it as CTP since it is 'extract and move to other class'</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "FP",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics Severe changes",
      "mappingState" : 3,
      "validationComment" : "Lots of added statements, which change the behavior of the program"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected validateAndConvert(sqlNode SqlNode) : ConvertedRelNode extracted from public getPlan(node SqlNode) : PhysicalPlan in class org.apache.drill.exec.planner.sql.handlers.ExplainHandler & moved to class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : "<p>Extract and Move to other class.</p><p>The validateAndConvert(sqlNode SqlNode) in the parent class (DefaultSqlHandler) is extracted from getPlan(node SqlNode).</p><p>See refactoring:&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1121732/1072</p><p>So for this class we should consider it as Extract and move to other (here parent) class.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "FP",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n- Rename Variable- Severe changes",
      "mappingState" : 2,
      "validationComment" : "it can be both pure or impure based on the interpretation of the commit. So far, based on the result of RefactoringMiner, I consider this as an impure case."
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable rel : RelNode to queryRelNode : RelNode in method public getPlan(sqlNode SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable rel : RelNode to queryRelNode : RelNode in method public getPlan(sqlNode SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.ExplainHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable queryRowType : RelDataType to validatedRowtype : RelDataType in method public resolveNewTableRel(isNewTableView boolean, tableFieldNames List<String>, validatedRowtype RelDataType, queryRelNode RelNode) : RelNode from class org.apache.drill.exec.planner.sql.handlers.SqlHandlerUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable validatedQueryRelNode : RelNode to queryRelNode : RelNode in method public resolveNewTableRel(isNewTableView boolean, tableFieldNames List<String>, validatedRowtype RelDataType, queryRelNode RelNode) : RelNode from class org.apache.drill.exec.planner.sql.handlers.SqlHandlerUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : QueryContext to config : SqlHandlerConfig in method public ViewHandler(config SqlHandlerConfig) in class org.apache.drill.exec.planner.sql.handlers.ViewHandler",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-smi x x-first'>Parameters (Planner</span> <span class='pl-v x'>planner</span><span class='x'>, </span><span class='pl-smi x'>QueryContext</span> <span class='pl-v x x-last'>context) are merged to (<span class='pl-smi x x-first'>SqlHandlerConfig</span> config)<br />QueryContext is wrapped in <span class='pl-smi x x-first'>SqlHandlerConfig</span><br /></span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : QueryContext to config : SqlHandlerConfig in method public CreateView(config SqlHandlerConfig) in class org.apache.drill.exec.planner.sql.handlers.ViewHandler.CreateView",
    "comment" : "<p>Parameters (Planner planner, QueryContext context) are merged to (SqlHandlerConfig config)</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable validatedTypedSqlNode : TypedSqlNode to convertedRelNode : ConvertedRelNode in method public getPlan(sqlNode SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.ExplainHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter node : SqlNode to sqlNode : SqlNode in method public getPlan(sqlNode SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.ExplainHandler",
    "comment" : "<p>Variable declaration <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-smi'>SqlNode</span> sqlNode <span class='pl-k'>=</span> rewrite(node); is deleted, and variable sqlNode replaces parameter node.<br /></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [planner : Planner, context : QueryContext] to config : SqlHandlerConfig in method public CreateView(config SqlHandlerConfig) from class org.apache.drill.exec.planner.sql.handlers.ViewHandler.CreateView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : QueryContext to config : SqlHandlerConfig in method public ViewHandler(config SqlHandlerConfig) in class org.apache.drill.exec.planner.sql.handlers.ViewHandler",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : QueryContext to config : SqlHandlerConfig in method public CreateView(config SqlHandlerConfig) in class org.apache.drill.exec.planner.sql.handlers.ViewHandler.CreateView",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type validatedTypedSqlNode : TypedSqlNode to convertedRelNode : ConvertedRelNode in method public getPlan(sqlNode SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.ExplainHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type convertedRelNode : RelNode to convertedRelNode : DrillRel in method private convertToDrel(relNode RelNode, schema AbstractSchema, tableName String, partitionColumns List<String>, queryRowType RelDataType) : DrillRel from class org.apache.drill.exec.planner.sql.handlers.CreateTableHandler",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to private in method private addRenamedProject(rel DrillRel, validatedRowType RelDataType) : DrillRel from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to private in method private validateNode(sqlNode SqlNode) : TypedSqlNode from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to private in method private convertToRel(node SqlNode) : RelNode from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to private in method private preprocessNode(rel RelNode) : RelNode from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected rewrite(node SqlNode) : SqlNode from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private getLoptJoinOrderTree(root RelNode, joinClass Class<? extends Join>, joinFactory RelFactories.JoinFactory, filterFactory RelFactories.FilterFactory, projectFactory RelFactories.ProjectFactory) : RelNode from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter queryRowType : RelDataType in method private convertToDrel(relNode RelNode, schema AbstractSchema, tableName String, partitionColumns List<String>, queryRowType RelDataType) : DrillRel from class org.apache.drill.exec.planner.sql.handlers.CreateTableHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type SqlUnsupportedException in method private convertToDrel(relNode RelNode, schema AbstractSchema, tableName String, partitionColumns List<String>, queryRowType RelDataType) : DrillRel from class org.apache.drill.exec.planner.sql.handlers.CreateTableHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : QueryContext to config : SqlHandlerConfig in method public DropView(config SqlHandlerConfig) from class org.apache.drill.exec.planner.sql.handlers.ViewHandler.DropView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : QueryContext to config : SqlHandlerConfig in method public DropView(config SqlHandlerConfig) from class org.apache.drill.exec.planner.sql.handlers.ViewHandler.DropView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable rewrittenSqlNode : SqlNode in method protected validateAndConvert(sqlNode SqlNode) : ConvertedRelNode from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable validatedTypedSqlNode : TypedSqlNode in method protected validateAndConvert(sqlNode SqlNode) : ConvertedRelNode from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable validated : SqlNode in method protected validateAndConvert(sqlNode SqlNode) : ConvertedRelNode from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable queryRelNode : RelNode in method public getPlan(sqlNode SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable convertedRelNode : ConvertedRelNode in method public getPlan(sqlNode SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.ExplainHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable queryRelNode : RelNode in method public getPlan(sqlNode SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.ExplainHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable queryRowType : RelDataType in method public resolveNewTableRel(isNewTableView boolean, planner Planner, tableFieldNames List<String>, newTableQueryDef SqlNode) : RelNode from class org.apache.drill.exec.planner.sql.handlers.SqlHandlerUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable validatedQueryRelNode : RelNode in method public resolveNewTableRel(isNewTableView boolean, planner Planner, tableFieldNames List<String>, newTableQueryDef SqlNode) : RelNode from class org.apache.drill.exec.planner.sql.handlers.SqlHandlerUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter planner : Planner in method public resolveNewTableRel(isNewTableView boolean, planner Planner, tableFieldNames List<String>, newTableQueryDef SqlNode) : RelNode from class org.apache.drill.exec.planner.sql.handlers.SqlHandlerUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter newTableQueryDef : SqlNode in method public resolveNewTableRel(isNewTableView boolean, planner Planner, tableFieldNames List<String>, newTableQueryDef SqlNode) : RelNode from class org.apache.drill.exec.planner.sql.handlers.SqlHandlerUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable convertedRelNode : DrillRel in method protected convertToDrel(relNode RelNode) : DrillRel from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable convertedRelNode : DrillRel in method protected convertToDrel(relNode RelNode, validatedRowType RelDataType) : DrillRel from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable convertedRelNode : DrillRel in method private convertToDrel(relNode RelNode, schema AbstractSchema, tableName String, partitionColumns List<String>, queryRowType RelDataType) : DrillRel from class org.apache.drill.exec.planner.sql.handlers.CreateTableHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable validatedRowType : RelDataType in method public getPlan(sqlNode SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.ExplainHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable validatedRowType : RelDataType in method public getPlan(sqlNode SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type convertedRelNode : RelNode to convertedRelNode : DrillRel in method protected convertToDrel(relNode RelNode, validatedRowType RelDataType) : DrillRel from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type convertedRelNode : RelNode to convertedRelNode : DrillRel in method protected convertToDrel(relNode RelNode) : DrillRel from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable sqlNode : SqlNode to sqlNode : SqlNode in method public getPlan(sqlNode SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.ExplainHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter node : SqlNode in method public getPlan(node SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.ExplainHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable validatedTypedSqlNode : TypedSqlNode to convertedRelNode : ConvertedRelNode in method public getPlan(sqlNode SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type validatedTypedSqlNode : TypedSqlNode to convertedRelNode : ConvertedRelNode in method public getPlan(sqlNode SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable convertedRelNode : ConvertedRelNode in method public getPlan(sqlNode SqlNode) : PhysicalPlan from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2598
}, {
  "id" : 1122164,
  "repository" : "https://github.com/neo4j/neo4j.git",
  "sha1" : "001de307492df8f84ad15f6aaa0bd1e748d4ce27",
  "url" : "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
  "author" : "Davide Grohmann",
  "time" : "6/22/15 1:34 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.neo4j.kernel.Recovery moved to org.neo4j.kernel.recovery.Recovery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.neo4j.kernel.impl.transaction.log.rotation.LogRotationControl renamed to org.neo4j.kernel.impl.transaction.log.rotation.StoreFlusher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package rotateDone() : void renamed to package checkPointDone() : void in class synchronization.TestConcurrentRotation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private rotateLog() : void renamed to private checkPoint() : void in class recovery.CountsStoreRecoveryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private rotate(db GraphDatabaseAPI) : void renamed to private rotateAndCheckPoint(db GraphDatabaseAPI) : void in class org.neo4j.backup.BackupServiceIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private rotateLog(db GraphDatabaseAPI) : void renamed to private rotateLogAndCheckPoint(db GraphDatabaseAPI) : void in class org.neo4j.backup.BackupServiceStressTestingBuilder.RunTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private rotateLog() : void renamed to private rotateLogAndCheckPoint() : void in class org.neo4j.index.recovery.UniqueIndexRecoveryTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private rotateLogs() : void renamed to private rotateLogsAndCheckPoint() : void in class org.neo4j.kernel.api.impl.index.LuceneIndexRecoveryIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private rotateLogicalLog(graphdb GraphDatabaseAPI) : void renamed to private checkPoint(graphdb GraphDatabaseAPI) : void in class synchronization.TestConcurrentRotation.RotateIndexLogTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private rotateLog(db GraphDatabaseAPI) : void renamed to private checkPoint(db GraphDatabaseAPI) : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private rotateLog() : void renamed to private checkPoint() : void in class recovery.TestRecoveryScenarios",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public start() : void from class org.neo4j.kernel.Recovery to public start() : void from class org.neo4j.kernel.recovery.Recovery",
    "comment" : "It is like rename package refactroing, but since RefDiff does not detetc package level refactroing, I was expecting a move class refactroing at least. But since the class body is changed as well, it is really hard to decide which type of refactoring it is",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public awaitAllTransactionsClosed() : void from class org.neo4j.kernel.impl.transaction.log.rotation.LogRotationControl to private awaitAllTransactionsClosed() : void from class org.neo4j.kernel.NeoStoreDataSource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public close() : void extracted from public close() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor & moved to class org.neo4j.kernel.impl.transaction.log.LogEntryCursor",
    "comment" : "<p>Extract and Move to other inner class.</p><p>Statement in method close() is extracted and moved to method close() in class LogEntryCursor.java (is an added class).</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public next() : boolean extracted from public next() : boolean in class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor & moved to class org.neo4j.kernel.impl.transaction.log.LogEntryCursor",
    "comment" : "<p>Extract and Move to other inner class.</p><p>Statements in method next() are extracted and move to method next() in class LogEntryCursor.java (is an added class).</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public start(logVersion long) : LogPosition extracted from private verifyThatIndexCreationTransactionIsTheFirstOne() : void in class org.neo4j.index.impl.lucene.IndexCreationTest & moved to class org.neo4j.kernel.impl.transaction.log.LogPosition",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nTolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "the getReader method invocation has been removed, which is an impure change"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public start(logVersion long) : LogPosition extracted from public accept(visitor LogHeaderVisitor) : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogFile & moved to class org.neo4j.kernel.impl.transaction.log.LogPosition",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : "parameter to argument change, which is part of Extract Method mechanic and justifiable"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public currentPosition() : long extracted from public next() : boolean in class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor & moved to class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor.Marker",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private assertGet(sequence OutOfOrderSequence, number long, meta long) : void inlined to public shouldExposeGapFreeSequenceSingleThreaded() : void in class org.neo4j.kernel.impl.store.ArrayQueueOutOfOrderSequenceTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private assertGet(sequence OutOfOrderSequence, number long, meta long) : void inlined to public shouldExtendArrayIfNeedBe() : void in class org.neo4j.kernel.impl.store.ArrayQueueOutOfOrderSequenceTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private assertGet(sequence OutOfOrderSequence, number long, meta long) : void inlined to public shouldDealWithThisScenario() : void in class org.neo4j.kernel.impl.store.ArrayQueueOutOfOrderSequenceTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private assertGet(sequence OutOfOrderSequence, number long, meta long) : void inlined to public shouldKeepItsCoolWhenMultipleThreadsAreHammeringIt() : void in class org.neo4j.kernel.impl.store.ArrayQueueOutOfOrderSequenceTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private pruneLock : Lock from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruning to private pruneLock : Lock from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruningImpl",
    "comment" : "LogPruning changed to an interface and the LogPruningImpl did not exist (it is a new class)",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private pruneStrategy : LogPruneStrategy from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruning to private pruneStrategy : LogPruneStrategy from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruningImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private msgLog : Log from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruning to private msgLog : Log from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruningImpl",
    "comment" : "LogPruning changed to an interface and the LogPruningImpl did not exist (it is a new class)",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private monitor : Monitor from class org.neo4j.kernel.Recovery to private monitor : Monitor from class org.neo4j.kernel.recovery.Recovery",
    "comment" : "It is a move class or move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private channel : T from class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor to private channel : T from class org.neo4j.kernel.impl.transaction.log.LogEntryCursor",
    "comment" : "<p>channel appears now in two new classes,&nbsp;LogEntryCursor and Maker. Both of them are now used in the source class, and the old channel (coming from the ctor's param) is passed to both of them</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private recoveredLog : boolean from class org.neo4j.kernel.Recovery to private recoveredLog : boolean from class org.neo4j.kernel.recovery.Recovery",
    "comment" : "It is a move class or move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private spi : SPI from class org.neo4j.kernel.Recovery to private spi : SPI from class org.neo4j.kernel.recovery.Recovery",
    "comment" : "It is a move class or move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private entryReader : LogEntryReader<T> from class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor to private entryReader : LogEntryReader<T> from class org.neo4j.kernel.impl.transaction.log.LogEntryCursor",
    "comment" : "<p>The attribute is moved to the new class which has been instantiated in the source class.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private msgLog : Log from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruning to private msgLog : Log from class org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointerImpl",
    "comment" : "<p>There are&nbsp;different possibilities: The old class has become an interface and a new class implementing the interface is created.</p><p>1) The old class has become an interface and a new class implementing the interface is created. The attribute is pushed down to this new class</p><p>2) The new interface is extracted from the existing class (<span style='background-color: #f6d5d9;'>something&nbsp;</span>like extract super class)</p><p>3) The old class is renamed to the new class and an interface with the same name as the old class is created and the old class is now implementing it</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private channel : T from class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor to private channel : T from class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor.Marker",
    "comment" : "<p>channel appears now in two new classes,&nbsp;LogEntryCursor and Maker. Both of them are now used in the source class, and the old channel (coming from the ctor's param) is passed to both of them</p><p>Davood &amp; Laleh: The places where channel is used in PhysicalTransactionCursor do not relate to the places where Marker is used in the new version</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public finishedRotating(currentVersion long) : void from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruning to public pruneLogs(upToVersion long) : void from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruningImpl",
    "comment" : "Move and rename",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public LogPruning(pruneStrategy LogPruneStrategy, logProvider LogProvider) from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruning to public LogPruningImpl(pruneStrategy LogPruneStrategy, logProvider LogProvider) from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruningImpl",
    "comment" : "<p>new</p><p>In can be this case: LogPruning has been renamed to&nbsp;LogPruningImpl, but it now implements the interface with the same name =&gt; it will be extract interface in this case and should be pull up</p><p>Note that the method is constructor</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private channel : WritableLogChannel from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest to private channel : WritableLogChannel from class org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointerImpl",
    "comment" : "<p>new</p><p>channel still exists in the source class, but as local variable.CheckPointerImpl does not have any relationship with&nbsp;WritableLogChannel</p>",
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public start(logVersion long) : LogPosition extracted from private buildTransactionLogs(storeDir File, config Config, logProvider LogProvider, labelScanStore LabelScanStore, fileSystemAbstraction FileSystemAbstraction, neoStore NeoStore, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexProviders Iterable<IndexImplementation>) : TransactionLogModule in class org.neo4j.kernel.NeoStoreDataSource & moved to class org.neo4j.kernel.impl.transaction.log.LogPosition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics",
      "mappingState" : 1,
      "validationComment" : "parameter to argument change, which is part of Extract Method mechanic and justifiable"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public StoreCopyServer(transactionIdStore TransactionIdStore, dataSource NeoStoreDataSource, storeFlusher StoreFlusher, fileSystem FileSystemAbstraction, storeDirectory File, monitor Monitor) from class org.neo4j.com.storecopy.StoreCopyServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter logRotationControlSupplier : LogRotationControl to storeFlusher : StoreFlusher in method public DefaultMasterImplSPI(graphDb GraphDatabaseAPI, fileSystemAbstraction FileSystemAbstraction, monitors Monitors, labels LabelTokenHolder, propertyKeyTokenHolder PropertyKeyTokenHolder, relationshipTypeTokenHolder RelationshipTypeTokenHolder, idGeneratorFactory IdGeneratorFactory, locks Locks, transactionCommitProcess TransactionCommitProcess, storeFlusher StoreFlusher, transactionIdStore TransactionIdStore, logicalTransactionStore LogicalTransactionStore, neoStoreDataSource NeoStoreDataSource, jobScheduler JobScheduler) from class org.neo4j.kernel.ha.cluster.DefaultMasterImplSPI",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method private buildTransactionLogs(storeDir File, config Config, logProvider LogProvider, labelScanStore LabelScanStore, fileSystemAbstraction FileSystemAbstraction, neoStore NeoStore, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexProviders Iterable<IndexImplementation>) : TransactionLogModule from class org.neo4j.kernel.NeoStoreDataSource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter logRotationControlSupplier : Supplier<LogRotationControl> to storeFlusherSupplier : Supplier<StoreFlusher> in method public OnlineBackupKernelExtension(config Config, graphDatabaseAPI GraphDatabaseAPI, logProvider LogProvider, monitors Monitors, neoStoreDataSource NeoStoreDataSource, storeFlusherSupplier Supplier<StoreFlusher>, transactionIdStoreSupplier Supplier<TransactionIdStore>, logicalTransactionStoreSupplier Supplier<LogicalTransactionStore>, logFileInformationSupplier Supplier<LogFileInformation>, fileSystemAbstraction FileSystemAbstraction) from class org.neo4j.backup.OnlineBackupKernelExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter recoveredLogVersion : long to startPosition : LogPosition in method public recoveryRequired(startPosition LogPosition) : void from class org.neo4j.kernel.impl.transaction.log.LoggingLogFileMonitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public shouldVisitLogFile() : void from class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public stop() : void from class org.neo4j.kernel.NeoStoreDataSource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public copyStore(writer StoreWriter) : Response<?> from class org.neo4j.com.storecopy.StoreCopyClientTest.storeCopyRequest.spy.new StoreCopyClient.StoreCopyRequester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable recoveryVersion : long to recoveryPosition : LogPosition in method public init() : void from class org.neo4j.kernel.recovery.Recovery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public shouldOpenInFreshDirectoryAndFinallyAddHeader() : void from class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable recoverer : Visitor<LogVersionedStoreChannel,IOException> in method public init() : void from class org.neo4j.kernel.recovery.Recovery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable currentLogVersion : long in method private writeTransactionsToActiveLogFile(storeDir File, response Response<?>) : void from class org.neo4j.com.storecopy.StoreCopyClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable currentLogFile : File in method private writeTransactionsToActiveLogFile(storeDir File, response Response<?>) : void from class org.neo4j.com.storecopy.StoreCopyClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable currentLogVersion : long to upToLogVersion : long in method public prune(upToLogVersion long) : void from class org.neo4j.kernel.impl.transaction.log.pruning.ThresholdBasedPruneStrategy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in class org.neo4j.com.storecopy.StoreCopyServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute logRotationControlSupplier : LogRotationControl to storeFlusher : StoreFlusher in class org.neo4j.kernel.ha.cluster.DefaultMasterImplSPI",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable startEntry : LogEntryStart in method public visit(transaction CommittedTransactionRepresentation) : boolean from class org.neo4j.kernel.impl.transaction.state.RecoveryVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Subclass",
    "description" : "Extract Subclass org.neo4j.kernel.impl.transaction.log.pruning.LogPruningImpl from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruning",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.neo4j.kernel.impl.transaction.log.LogEntryCursor from class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter currentVersion : long to upToVersion : long in method public pruneLogs(upToVersion long) : void from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruningImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method private buildRecovery(fileSystemAbstraction FileSystemAbstraction, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexUpdatesValidator IndexUpdatesValidator, labelScanStore LabelScanStore, neoStore NeoStore, recoveryVisitorMonitor RecoveryVisitor.Monitor, recoveryMonitor Recovery.Monitor, logFiles PhysicalLogFiles, storeFlusher StoreFlusher, startupStatistics StartupStatisticsProvider) : void from class org.neo4j.kernel.NeoStoreDataSource",
    "comment" : "<p>There is no reference mapping in the body of the method supporting this refactoring</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method private buildRecovery(fileSystemAbstraction FileSystemAbstraction, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexUpdatesValidator IndexUpdatesValidator, labelScanStore LabelScanStore, neoStore NeoStore, recoveryVisitorMonitor RecoveryVisitor.Monitor, recoveryMonitor Recovery.Monitor, logFiles PhysicalLogFiles, storeFlusher StoreFlusher, startupStatistics StartupStatisticsProvider) : void from class org.neo4j.kernel.NeoStoreDataSource",
    "comment" : "<p>There is no reference mapping in the body of the method supporting this refactoring</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type recoveredLogVersion : long to startPosition : LogPosition in method public recoveryRequired(startPosition LogPosition) : void from class org.neo4j.kernel.impl.transaction.log.LoggingLogFileMonitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type meta : long to meta : long[] in method public offer(number long, meta long[]) : boolean from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type meta : long to meta : long[] in method private createResult(number long, meta long[]) : long[] from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
    "comment" : "<p>createResult() is extracted from <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>public</span> <span class='pl-k'>long</span>[] <span class='pl-en'>get</span>()</span>, in which there is a local variable meta whose type is changing from long to long[] and is passed as argument to createResult()</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type meta : long to meta : long[] in method public seen(number long, meta long[]) : boolean from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type meta : long to meta : long[] in method public set(number long, meta long[]) : void from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type meta : long to meta : long[] in method private offer(sequence OutOfOrderSequence, number long, meta long[]) : boolean from class org.neo4j.kernel.impl.store.ArrayQueueOutOfOrderSequenceTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type logRotationControlSupplier : Supplier<LogRotationControl> to storeFlusherSupplier : Supplier<StoreFlusher> in method public OnlineBackupKernelExtension(config Config, graphDatabaseAPI GraphDatabaseAPI, logProvider LogProvider, monitors Monitors, neoStoreDataSource NeoStoreDataSource, storeFlusherSupplier Supplier<StoreFlusher>, transactionIdStoreSupplier Supplier<TransactionIdStore>, logicalTransactionStoreSupplier Supplier<LogicalTransactionStore>, logFileInformationSupplier Supplier<LogFileInformation>, fileSystemAbstraction FileSystemAbstraction) from class org.neo4j.backup.OnlineBackupKernelExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public StoreCopyServer(transactionIdStore TransactionIdStore, dataSource NeoStoreDataSource, storeFlusher StoreFlusher, fileSystem FileSystemAbstraction, storeDirectory File, monitor Monitor) from class org.neo4j.com.storecopy.StoreCopyServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type logRotationControlSupplier : LogRotationControl to storeFlusher : StoreFlusher in method public DefaultMasterImplSPI(graphDb GraphDatabaseAPI, fileSystemAbstraction FileSystemAbstraction, monitors Monitors, labels LabelTokenHolder, propertyKeyTokenHolder PropertyKeyTokenHolder, relationshipTypeTokenHolder RelationshipTypeTokenHolder, idGeneratorFactory IdGeneratorFactory, locks Locks, transactionCommitProcess TransactionCommitProcess, storeFlusher StoreFlusher, transactionIdStore TransactionIdStore, logicalTransactionStore LogicalTransactionStore, neoStoreDataSource NeoStoreDataSource, jobScheduler JobScheduler) from class org.neo4j.kernel.ha.cluster.DefaultMasterImplSPI",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type meta : long to meta : long[] in method public offer(number long, meta long[]) : boolean from class org.neo4j.kernel.impl.util.OutOfOrderSequence",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type meta : long to meta : long[] in method public seen(number long, meta long[]) : boolean from class org.neo4j.kernel.impl.util.OutOfOrderSequence",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type meta : long to meta : long[] in method public set(number long, meta long[]) : void from class org.neo4j.kernel.impl.util.OutOfOrderSequence",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method private buildTransactionLogs(storeDir File, config Config, logProvider LogProvider, labelScanStore LabelScanStore, fileSystemAbstraction FileSystemAbstraction, neoStore NeoStore, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexProviders Iterable<IndexImplementation>) : TransactionLogModule from class org.neo4j.kernel.NeoStoreDataSource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public stop() : void from class org.neo4j.kernel.NeoStoreDataSource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public shouldOpenInFreshDirectoryAndFinallyAddHeader() : void from class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public shouldVisitLogFile() : void from class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in class org.neo4j.com.storecopy.StoreCopyServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public copyStore(writer StoreWriter) : Response<?> from class org.neo4j.com.storecopy.StoreCopyClientTest.storeCopyRequest.spy.new StoreCopyClient.StoreCopyRequester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type logRotationControlSupplier : LogRotationControl to storeFlusher : StoreFlusher in class org.neo4j.kernel.ha.cluster.DefaultMasterImplSPI",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type recoveryVersion : long to recoveryPosition : LogPosition in method public init() : void from class org.neo4j.kernel.recovery.Recovery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type highestGapFreeMeta : long to highestGapFreeMeta : long[] in class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private pack(meta long) : long[] renamed to private createResult(number long, meta long[]) : long[] in class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type logRotationControl : LogRotationControl to logRotationControl : StoreFlusher in method public shouldWriteSomeDataIntoTheLog() : void from class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type logRotationControl : LogRotationControl to logRotationControl : StoreFlusher in method public shouldReadOlderLogs() : void from class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable buffer : ByteBuffer to writableLogChannel : PhysicalWritableLogChannel in method private writeSomeData(file File, visitor Visitor<Pair<LogEntryWriter,Consumer<LogPositionMarker>>,IOException>) : void in class org.neo4j.kernel.RecoveryTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable recoveredTransactions : AtomicInteger to visitor : FakeRecoveryVisitor in method public shouldOpenAndRecoverExistingData() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable recoveredTransactions : AtomicInteger to visitor : FakeRecoveryVisitor in method public shouldExtractMetadataFromExistingTransaction() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter database : HighlyAvailableGraphDatabase to db : HighlyAvailableGraphDatabase in method private checkPoint(db HighlyAvailableGraphDatabase) : void in class slavetest.TestInstanceJoin",
    "comment" : "<p><span class='blob-code-inner'><span class='pl-k'>private</span> <span class='pl-smi'>KernelPanicEventGenerator</span> <span class='pl-en'>getKernelPanicGenerator</span>( <span class='pl-smi'>HighlyAvailableGraphDatabase</span> <span class='pl-v'>database</span> )</span> is deleted method and<br /><span class='blob-code-inner'><span class='pl-k'>private</span> <span class='pl-k'>void</span> <span class='pl-en'>checkPoint</span>( <span class='pl-smi'>HighlyAvailableGraphDatabase</span> <span class='pl-v'>db</span> )</span> is newly added method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type visitor : Visitor<ByteBuffer,IOException> to visitor : Visitor<Pair<LogEntryWriter,Consumer<LogPositionMarker>>,IOException> in method private writeSomeData(file File, visitor Visitor<Pair<LogEntryWriter,Consumer<LogPositionMarker>>,IOException>) : void in class org.neo4j.kernel.RecoveryTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LogVersionedStoreChannel to Iterator<LogVersionedStoreChannel> in method public getLogFiles(fromVersion long) : Iterator<LogVersionedStoreChannel> from class org.neo4j.kernel.recovery.Recovery.SPI",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter recoveryVersion : long to fromVersion : long in method public getLogFiles(fromVersion long) : Iterator<LogVersionedStoreChannel> from class org.neo4j.kernel.recovery.Recovery.SPI",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LogRotationControl to StoreFlusher in method public storeFlusher() : StoreFlusher in class org.neo4j.kernel.NeoStoreDataSource.TransactionLogModule",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LogRotationControl to StoreFlusher in method public storeFlusher() : StoreFlusher in class org.neo4j.kernel.NeoStoreDataSource.buildTransactionLogs",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type long to int in method public getVisitedTransactions() : int in class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest.FakeRecoveryVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Supplier<LogRotationControl> to Supplier<StoreFlusher> in method public storeFlusherSupplier() : Supplier<StoreFlusher> in class org.neo4j.backup.OnlineBackupExtensionFactory.Dependencies",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type log : File to finder : LatestCheckPointFinder in method public recoveryNeededAt(dataDir File, currentLogVersion long) : boolean in class org.neo4j.kernel.impl.recovery.StoreRecoverer",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type entryReader : LogEntryReader<T> to logEntryCursor : LogEntryCursor<T> in class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>LogEntryCursor wraps LogEntryReader<br /></span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type channel : StoreChannel to versionedStoreChannel : LogVersionedStoreChannel in method private writeSomeData(file File, visitor Visitor<Pair<LogEntryWriter,Consumer<LogPositionMarker>>,IOException>) : void from class org.neo4j.kernel.RecoveryTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type logFile : LogFile to db : GraphDatabaseService in method private createSomeDataAndCrash(store File, fileSystem EphemeralFileSystemAbstraction) : FileSystemAbstraction in class org.neo4j.kernel.impl.recovery.TestStoreRecoverer",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type transaction : PhysicalTransactionRepresentation to snapshot : EphemeralFileSystemAbstraction in method private createSomeDataAndCrash(store File, fileSystem EphemeralFileSystemAbstraction) : FileSystemAbstraction in class org.neo4j.kernel.impl.recovery.TestStoreRecoverer",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type recoveredTransactions : AtomicInteger to visitor : FakeRecoveryVisitor in method public shouldOpenAndRecoverExistingData() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type recoveredTransactions : AtomicInteger to visitor : FakeRecoveryVisitor in method public shouldExtractMetadataFromExistingTransaction() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type transaction : TransactionRepresentation to physicalLogVersionedStoreChannel : PhysicalLogVersionedStoreChannel in method public next() : LogVersionedStoreChannel in class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest.shouldOpenAndRecoverExistingData.life.getLogFiles",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter recoveredLogVersion : long to recoveryPosition : LogPosition in method public recoveryRequired(recoveryPosition LogPosition) : void from class org.neo4j.kernel.recovery.Recovery.Monitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type recoveredLogVersion : long to recoveryPosition : LogPosition in method public recoveryRequired(recoveryPosition LogPosition) : void from class org.neo4j.kernel.recovery.Recovery.Monitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public logRotationControlSupplier() : Supplier<LogRotationControl> renamed to public storeFlusherSupplier() : Supplier<StoreFlusher> in class org.neo4j.backup.OnlineBackupExtensionFactory.Dependencies",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public logRotationControl() : LogRotationControl renamed to public storeFlusher() : StoreFlusher in class org.neo4j.kernel.NeoStoreDataSource.TransactionLogModule",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public logRotationControl() : LogRotationControl renamed to public storeFlusher() : StoreFlusher in class org.neo4j.kernel.NeoStoreDataSource.buildTransactionLogs",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter logVersion : long in method public transactionCommitted(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.store.NeoStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter byteOffset : long in method public transactionCommitted(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.store.NeoStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter logVersion : long in method public setLastCommittedAndClosedTransactionId(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.store.NeoStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter byteOffset : long in method public setLastCommittedAndClosedTransactionId(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.store.NeoStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter lastTxLogVersion : long in method private migrateWithBatchImporter(storeDir File, migrationDir File, lastTxId long, lastTxChecksum long, lastTxLogVersion long, lastTxLogByteOffset long, pageCache PageCache) : void from class org.neo4j.kernel.impl.storemigration.StoreMigrator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter lastTxLogByteOffset : long in method private migrateWithBatchImporter(storeDir File, migrationDir File, lastTxId long, lastTxChecksum long, lastTxLogVersion long, lastTxLogByteOffset long, pageCache PageCache) : void from class org.neo4j.kernel.impl.storemigration.StoreMigrator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter lastTxLogVersion : long in method private readAdditionalIds(storeDir File, lastTxId long, lastTxChecksum long, lastTxLogVersion long, lastTxLogByteOffset long) : AdditionalInitialIds from class org.neo4j.kernel.impl.storemigration.StoreMigrator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter lastTxLogByteOffset : long in method private readAdditionalIds(storeDir File, lastTxId long, lastTxChecksum long, lastTxLogVersion long, lastTxLogByteOffset long) : AdditionalInitialIds from class org.neo4j.kernel.impl.storemigration.StoreMigrator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter checkPointer : CheckPointer in method public BatchingTransactionAppender(logFile LogFile, logRotation LogRotation, checkPointer CheckPointer, transactionCommitConsumer LongConsumer, transactionMetadataCache TransactionMetadataCache, transactionIdStore TransactionIdStore, legacyIndexTransactionOrdering IdOrderingQueue, kernelHealth KernelHealth) from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppender",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter transactionCommitConsumer : LongConsumer in method public BatchingTransactionAppender(logFile LogFile, logRotation LogRotation, checkPointer CheckPointer, transactionCommitConsumer LongConsumer, transactionMetadataCache TransactionMetadataCache, transactionIdStore TransactionIdStore, legacyIndexTransactionOrdering IdOrderingQueue, kernelHealth KernelHealth) from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppender",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter transactionLogPosition : LogPosition in method package TransactionCommitment(hasLegacyIndexChanges boolean, transactionId long, transactionChecksum long, transactionLogPosition LogPosition, transactionIdStore TransactionIdStore) from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppender.TransactionCommitment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter logVersion : long in method public transactionCommitted(transactionId long, checksum long, logVersion long, logByteOffset long) : void from class org.neo4j.kernel.impl.transaction.log.ReadOnlyTransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter logByteOffset : long in method public transactionCommitted(transactionId long, checksum long, logVersion long, logByteOffset long) : void from class org.neo4j.kernel.impl.transaction.log.ReadOnlyTransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter logVersion : long in method public setLastCommittedAndClosedTransactionId(transactionId long, checksum long, logVersion long, logByteOffset long) : void from class org.neo4j.kernel.impl.transaction.log.ReadOnlyTransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter logByteOffset : long in method public setLastCommittedAndClosedTransactionId(transactionId long, checksum long, logVersion long, logByteOffset long) : void from class org.neo4j.kernel.impl.transaction.log.ReadOnlyTransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter initialMeta : long[] in method public ArrayQueueOutOfOrderSequence(startingNumber long, initialArraySize int, initialMeta long[]) from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter previouslyCommittedTxLogVersion : long in method public DeadSimpleTransactionIdStore(previouslyCommittedTxId long, checksum long, previouslyCommittedTxLogVersion long, previouslyCommittedTxLogByteOffset long) from class org.neo4j.kernel.impl.transaction.DeadSimpleTransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter previouslyCommittedTxLogByteOffset : long in method public DeadSimpleTransactionIdStore(previouslyCommittedTxId long, checksum long, previouslyCommittedTxLogVersion long, previouslyCommittedTxLogByteOffset long) from class org.neo4j.kernel.impl.transaction.DeadSimpleTransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter logVersion : long in method public transactionCommitted(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.transaction.log.TransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter byteOffset : long in method public transactionCommitted(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.transaction.log.TransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter logVersion : long in method public setLastCommittedAndClosedTransactionId(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.transaction.log.TransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter byteOffset : long in method public setLastCommittedAndClosedTransactionId(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.transaction.log.TransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter upToLogVersion : long in method public prune(upToLogVersion long) : void from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruneStrategy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter number : long in method private createResult(number long, meta long[]) : long[] from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter transactionId : long in method public checkPoint(transactionId long, logPosition LogPosition) : void from class org.neo4j.kernel.impl.transaction.log.TransactionLogWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter transactionId : long in method public writeCheckPointEntry(transactionId long, logPosition LogPosition) : void from class org.neo4j.kernel.impl.transaction.log.entry.LogEntryWriterV1",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter versionRepo : LogVersionRepository in method public fromConfigValue(fileSystem FileSystemAbstraction, logFileInformation LogFileInformation, files PhysicalLogFiles, versionRepo LogVersionRepository, configValue String) : LogPruneStrategy from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruneStrategyFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter versionRepo : LogVersionRepository in method public ThresholdBasedPruneStrategy(fileSystem FileSystemAbstraction, logFileInformation LogFileInformation, files PhysicalLogFiles, versionRepo LogVersionRepository, threshold Threshold) from class org.neo4j.kernel.impl.transaction.log.pruning.ThresholdBasedPruneStrategy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter logRotationControl : LogRotationControl in method public LogRotationImpl(monitor Monitor, logFile LogFile, logRotationControl LogRotationControl, kernelHealth KernelHealth, logProvider LogProvider) from class org.neo4j.kernel.impl.transaction.log.rotation.LogRotationImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter transactionId : long in method public writeCheckPointEntry(transactionId long, logPosition LogPosition) : void from class org.neo4j.kernel.impl.transaction.log.entry.LogEntryWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public visit(committedTx CommittedTransactionRepresentation) : boolean from class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest.FakeRecoveryVisitor",
    "comment" : "<p>visit(committedTx CommittedTransactionRepresentation) is a new method in a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public finishedRotating(currentVersion long) : void from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruning",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public visit(buffer ByteBuffer) : boolean from class org.neo4j.kernel.RecoveryTest.shouldRecoverExistingData.writeSomeData",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type IOException in method public PhysicalTransactionCursor(channel T, entryReader LogEntryReader<T>) from class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package Position(id int, description String) from class org.neo4j.kernel.impl.store.NeoStore.Position",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public CheckPoint(logPosition LogPosition) from class org.neo4j.kernel.impl.transaction.log.entry.CheckPoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public CheckPoint(version byte, logPosition LogPosition) from class org.neo4j.kernel.impl.transaction.log.entry.CheckPoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private awaitAllTransactionsClosed() : void from class org.neo4j.kernel.NeoStoreDataSource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter byteOffset : long in method public setLastCommittedAndClosedTransactionId(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.transaction.DeadSimpleTransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter logVersion : long in method public setLastCommittedAndClosedTransactionId(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.transaction.DeadSimpleTransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute public NO_MORE_CHANNELS : LogVersionBridge from class org.neo4j.kernel.impl.transaction.log.LogVersionBridge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute public NO_MORE_CHANNELS : LogVersionBridge from class org.neo4j.kernel.impl.transaction.log.LogVersionBridge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute public BASE_TX_ID : long from class org.neo4j.kernel.impl.transaction.log.TransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute public BASE_TX_ID : long from class org.neo4j.kernel.impl.transaction.log.TransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute public BASE_TX_CHECKSUM : long from class org.neo4j.kernel.impl.transaction.log.TransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute public BASE_TX_CHECKSUM : long from class org.neo4j.kernel.impl.transaction.log.TransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private logPosition : LogPosition from class org.neo4j.kernel.impl.transaction.log.entry.CheckPoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private metaArray : long[] from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute public EMPTY : AdditionalInitialIds from class org.neo4j.unsafe.impl.batchimport.AdditionalInitialIds",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute public EMPTY : AdditionalInitialIds from class org.neo4j.unsafe.impl.batchimport.AdditionalInitialIds",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private cursor : PhysicalTransactionCursor<ReadableVersionableLogChannel> from class org.neo4j.kernel.impl.transaction.PhysicalTransactionCursorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private logFile : LogFile from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private logRotation : LogRotation from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private transactionMetadataCache : TransactionMetadataCache from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private transactionIdStore : TransactionIdStore from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private kernelHealth : KernelHealth from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private channelCommandQueue : BlockingQueue<ChannelCommand> from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private forceSemaphore : Semaphore from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter logVersion : long in method public transactionCommitted(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.transaction.DeadSimpleTransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter byteOffset : long in method public transactionCommitted(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.transaction.DeadSimpleTransactionIdStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter recoveryVersion : long in method public shouldOpenAndRecoverExistingData() : void from class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.neo4j.kernel.RecoveryLabelScanWriterProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.neo4j.kernel.impl.store.NeoStore.Position",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest.ChannelCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type meta : long to meta : long[] in method public get() : long[] from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable fileSystemAbstraction : FileSystemAbstraction in method public shouldBeAbleToRecoverBrokenStore() : void from class org.neo4j.kernel.impl.recovery.TestStoreRecoverer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable fileSystemAbstraction : FileSystemAbstraction in method public shouldWantToRecoverBrokenStore() : void from class org.neo4j.kernel.impl.recovery.TestStoreRecoverer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute legacyindexTransactionOrdering : IdOrderingQueue to legacyIndexTransactionOrdering : IdOrderingQueue in class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private legacyIndexTransactionOrdering : IdOrderingQueue from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Type Declaration Kind",
    "description" : "Change Type Declaration Kind class to interface in type org.neo4j.kernel.impl.transaction.log.pruning.LogPruning",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter endPosition : LogPosition in method public logRecovered(endPosition LogPosition) : void from class org.neo4j.kernel.recovery.Recovery.Monitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter endPosition : LogPosition in method public logRecovered(endPosition LogPosition) : void from class org.neo4j.kernel.impl.transaction.log.LoggingLogFileMonitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter logRotationControl : LogRotationControl in method private buildRecovery(fileSystemAbstraction FileSystemAbstraction, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexUpdatesValidator IndexUpdatesValidator, labelScanStore LabelScanStore, neoStore NeoStore, recoveryVisitorMonitor RecoveryVisitor.Monitor, recoveryMonitor Recovery.Monitor, logFiles PhysicalLogFiles, logRotationControl LogRotationControl, startupStatistics StartupStatisticsProvider) : void from class org.neo4j.kernel.NeoStoreDataSource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter storeFlusher : StoreFlusher in method private buildRecovery(fileSystemAbstraction FileSystemAbstraction, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexUpdatesValidator IndexUpdatesValidator, labelScanStore LabelScanStore, neoStore NeoStore, recoveryVisitorMonitor RecoveryVisitor.Monitor, recoveryMonitor Recovery.Monitor, logFiles PhysicalLogFiles, storeFlusher StoreFlusher, startupStatistics StartupStatisticsProvider) : void from class org.neo4j.kernel.NeoStoreDataSource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 11758
}, {
  "id" : 1122778,
  "repository" : "https://github.com/hazelcast/hazelcast.git",
  "sha1" : "4d05a3b1168441216dcaea8282c39338285182af",
  "url" : "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
  "author" : "alarmnummer",
  "time" : "6/22/15 3:53 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.ExecutorCallbackAdapter moved to com.hazelcast.spi.InvocationBuilder.ExecutorCallbackAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass com.hazelcast.spi.impl.SimpleExecutionCallback from class com.hazelcast.cache.impl.operation.CacheCreateConfigOperation.CacheConfigCreateCallback",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass com.hazelcast.spi.impl.SimpleExecutionCallback from class com.hazelcast.client.impl.client.MultiTargetClientRequest.SingleTargetCallback",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass com.hazelcast.spi.impl.SimpleExecutionCallback from class com.hazelcast.partition.impl.MigrationRequestOperation.MigrationCallback",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass com.hazelcast.spi.impl.SimpleExecutionCallback from class com.hazelcast.client.impl.protocol.task.AbstractMultiTargetMessageTask.SingleTargetCallback",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public notify(response Object) : void renamed to public onResponse(response Object) : void in class com.hazelcast.map.impl.proxy.MapProxySupport.MapExecutionCallbackAdapter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected getTargetExecutionCallback() : ExecutionCallback extracted from public invoke() : InternalCompletableFuture in class com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl & moved to class com.hazelcast.spi.InvocationBuilder",
    "comment" : "<p>Extract and Move to the parent class</p><p>Since RefDiff does not detects 'Extract and Move', we consider it as CTP. </p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable Changes in the body \nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n- Rename Variable- Severe changes",
      "mappingState" : 2,
      "validationComment" : "kind of a null check has been added - the null check has been changed somehow, which is an impure change"
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type callback : Callback<Object> to callback : ExecutionCallback in method private submitSyncReplicaOperations(thisAddress Address, s Semaphore, ok AtomicBoolean, callback ExecutionCallback) : int from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type callback : Callback<Object> to callback : ExecutionCallback in method public SyncReplicaVersion(syncReplicaIndex int, callback ExecutionCallback) from class com.hazelcast.partition.impl.SyncReplicaVersion",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type callback : Object to callback : ExecutionCallback in method package Invocation(nodeEngine NodeEngineImpl, serviceName String, op Operation, partitionId int, replicaIndex int, tryCount int, tryPauseMillis long, callTimeout long, callback ExecutionCallback, resultDeserialized boolean) from class com.hazelcast.spi.impl.operationservice.impl.Invocation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type callback : Object to callback : ExecutionCallback in method public PartitionInvocation(nodeEngine NodeEngineImpl, serviceName String, op Operation, partitionId int, replicaIndex int, tryCount int, tryPauseMillis long, callTimeout long, callback ExecutionCallback, resultDeserialized boolean) from class com.hazelcast.spi.impl.operationservice.impl.PartitionInvocation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type callback : Object to callback : ExecutionCallback in method public TargetInvocation(nodeEngine NodeEngineImpl, serviceName String, op Operation, target Address, tryCount int, tryPauseMillis long, callTimeout long, callback ExecutionCallback, resultDeserialized boolean) from class com.hazelcast.spi.impl.operationservice.impl.TargetInvocation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type callback : Callback<Object> to callback : ExecutionCallback<Object> in method public run() : void from class com.hazelcast.cache.impl.operation.CacheCreateConfigOperation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type callback : Callback<Object> to callback : ExecutionCallback in class com.hazelcast.partition.impl.SyncReplicaVersion",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter object : Object to response : Object in method public onResponse(response Object) : void in class com.hazelcast.partition.impl.InternalPartitionServiceImpl.checkReplicaSyncState.callback",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type callback : Callback<Object> to callback : ExecutionCallback<Object> in method private checkReplicaSyncState() : boolean from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public notify(object Object) : void renamed to public onResponse(response Object) : void in class com.hazelcast.partition.impl.InternalPartitionServiceImpl.checkReplicaSyncState.callback",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to package in class com.hazelcast.spi.InvocationBuilder.ExecutorCallbackAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 5152
}, {
  "id" : 1123108,
  "repository" : "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
  "sha1" : "b8929ccb4057c74ac64679216487a4abcd3ae1c3",
  "url" : "https://github.com/go-lang-plugin-org/go-lang-idea-plugin/commit/b8929ccb4057c74ac64679216487a4abcd3ae1c3",
  "author" : "Alexander Zolotov",
  "time" : "6/23/15 1:18 PM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private GO_CHECK_IMPORT_PATH : Pattern from class com.goide.runconfig.testing.frameworks.gocheck.GocheckRunConfiguration to private GO_CHECK_IMPORT_PATH : Pattern from class com.goide.runconfig.GoRunUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected isAvailableInModule(module Module) : boolean extracted from protected setupConfigurationFromContext(configuration GoTestRunConfigurationBase, context ConfigurationContext, sourceElement Ref) : boolean in class com.goide.runconfig.testing.GoTestRunConfigurationProducerBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "module.getProject() is different from configuration.getProject()"
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private GO_CHECK_GITHUB_IMPORT_PATH : Pattern from class com.goide.runconfig.testing.frameworks.gocheck.GocheckRunConfiguration to private GO_CHECK_GITHUB_IMPORT_PATH : Pattern from class com.goide.runconfig.GoRunUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public hasGoCheckSupport(module Module) : boolean extracted from public checkConfiguration() : void in class com.goide.runconfig.testing.frameworks.gocheck.GocheckRunConfiguration & moved to class com.goide.runconfig.GoRunUtil",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 3,
      "validationComment" : "-assert null- statement has been changed to an if condition checking the null. It's a pure case"
    }
  } ],
  "refDiffExecutionTime" : 917
}, {
  "id" : 1123761,
  "repository" : "https://github.com/bitcoinj/bitcoinj.git",
  "sha1" : "1d96e1ad1dca6e2151603e10515bb04f0c2730fc",
  "url" : "https://github.com/bitcoinj/bitcoinj/commit/1d96e1ad1dca6e2151603e10515bb04f0c2730fc",
  "author" : "Michael Bell",
  "time" : "6/24/15 10:29 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public updatedChannel(channel StoredServerChannel) : void extracted from public closeChannel(channel StoredServerChannel) : void in class org.bitcoinj.protocols.channels.StoredPaymentChannelServerStates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "log.info line does not change the logic"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method package updatedChannel(channel StoredClientChannel) : void extracted from package removeChannel(channel StoredClientChannel) : void in class org.bitcoinj.protocols.channels.StoredPaymentChannelClientStates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "log.info line does not change the logic"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method package updatedChannel(channel StoredClientChannel) : void extracted from private putChannel(channel StoredClientChannel, updateWallet boolean) : void in class org.bitcoinj.protocols.channels.StoredPaymentChannelClientStates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "log.info line does not change the logic"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package updatedChannel(channel StoredClientChannel) : void extracted from private updateChannelInWallet() : void in class org.bitcoinj.protocols.channels.PaymentChannelClientState & moved to class org.bitcoinj.protocols.channels.StoredPaymentChannelClientStates",
    "comment" : "<p>Extract and Move to other&nbsp; class.</p><p>Move to class StoredPaymentChannelServerStates</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public updatedChannel(channel StoredServerChannel) : void extracted from private updateChannelInWallet() : void in class org.bitcoinj.protocols.channels.PaymentChannelServerState & moved to class org.bitcoinj.protocols.channels.StoredPaymentChannelServerStates",
    "comment" : "<p>Extract and Move to other&nbsp; class.</p><p>Moved to class StoredPaymentChannelServerStates</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1268
}, {
  "id" : 1123773,
  "repository" : "https://github.com/bitcoinj/bitcoinj.git",
  "sha1" : "2fd96c777164dd812e8b5a4294b162889601df1d",
  "url" : "https://github.com/bitcoinj/bitcoinj/commit/2fd96c777164dd812e8b5a4294b162889601df1d",
  "author" : "Amichai Rothman",
  "time" : "6/24/15 10:21 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public newSha256Digest() : MessageDigest extracted from public sha256hash160(input byte[]) : byte[] in class org.bitcoinj.core.Utils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public newSha256Digest() : MessageDigest extracted from public hash(contents byte[]) : Sha256Hash in class org.bitcoinj.core.Sha256Hash & moved to class org.bitcoinj.core.Utils",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public newSha256Digest() : MessageDigest extracted from private readBinary(inputStream InputStream) : Sha256Hash in class org.bitcoinj.core.CheckpointManager & moved to class org.bitcoinj.core.Utils",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics Severe changes",
      "mappingState" : 3,
      "validationComment" : "try-catch has been added, which is an impure change"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public newSha256Digest() : MessageDigest extracted from public executeScript(txContainingThis Transaction, index long, script Script, stack LinkedList<byte[]>, enforceNullDummy boolean) : void in class org.bitcoinj.script.Script & moved to class org.bitcoinj.core.Utils",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public newSha256Digest() : MessageDigest extracted from public MnemonicCode(wordstream InputStream, wordListDigest String) in class org.bitcoinj.crypto.MnemonicCode & moved to class org.bitcoinj.core.Utils",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n- Rename Variable-",
      "mappingState" : 1,
      "validationComment" : "Parameter ex in the catch statement has been renamed to e, which is definitely a pure change"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public newSha256Digest() : MessageDigest extracted from private writeBinaryCheckpoints(checkpoints TreeMap<Integer,StoredBlock>, file File) : void in class org.bitcoinj.tools.BuildCheckpoints & moved to class org.bitcoinj.core.Utils",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics Severe changes",
      "mappingState" : 3,
      "validationComment" : "try-catch has been added, which is an impure change"
    }
  } ],
  "refDiffExecutionTime" : 1994
}, {
  "id" : 1123899,
  "repository" : "https://github.com/apache/cassandra.git",
  "sha1" : "f797bfa4da53315b49f8d97b784047f33ba1bf5f",
  "url" : "https://github.com/apache/cassandra/commit/f797bfa4da53315b49f8d97b784047f33ba1bf5f",
  "author" : "Stefania Alborghetti",
  "time" : "6/24/15 1:10 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private fromUnixTimestamp(timestamp long, nanos long) : long extracted from private fromUnixTimestamp(timestamp long) : long in class org.apache.cassandra.utils.UUIDGen",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "-nanos- has been added to the logic."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected createTableName() : String extracted from protected createTable(query String) : String in class org.apache.cassandra.cql3.CQLTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private makeCasRequest(queryState QueryState, options QueryOptions) : CQL3CasRequest extracted from public executeWithCondition(queryState QueryState, options QueryOptions) : ResultMessage in class org.apache.cassandra.cql3.statements.ModificationStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private executeInternalWithoutCondition(queryState QueryState, options QueryOptions) : ResultMessage extracted from public executeInternal(queryState QueryState, options QueryOptions) : ResultMessage in class org.apache.cassandra.cql3.statements.BatchStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Logic has been changed completely"
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.TypeTest moved to org.apache.cassandra.cql3.validation.entities.TypeTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private makeCasRequest(options BatchQueryOptions, state QueryState) : Pair<CQL3CasRequest,Set<ColumnDefinition>> extracted from private executeWithConditions(options BatchQueryOptions, state QueryState) : ResultMessage in class org.apache.cassandra.cql3.statements.BatchStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.CrcCheckChanceTest moved to org.apache.cassandra.cql3.validation.miscellaneous.CrcCheckChanceTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.SSTableMetadataTrackingTest moved to org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected assertInvalidThrowMessage(errorMessage String, exception Class<? extends Throwable>, query String, values Object...) : void extracted from protected assertInvalidMessage(errorMessage String, query String, values Object...) : void in class org.apache.cassandra.cql3.CQLTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Logic has been changed"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public executeInternalWithoutCondition(queryState QueryState, options QueryOptions) : ResultMessage extracted from public executeInternal(queryState QueryState, options QueryOptions) : ResultMessage in class org.apache.cassandra.cql3.statements.ModificationStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.FrozenCollectionsTest moved to org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.UserTypesTest moved to org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.SliceQueryFilterWithTombstonesTest moved and renamed to org.apache.cassandra.cql3.validation.miscellaneous.TombstonesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.UseStatementTest moved and renamed to org.apache.cassandra.cql3.validation.operations.UseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.MultiColumnRelationTest moved and renamed to org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.SingleColumnRelationTest moved and renamed to org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.AlterTableTest moved and renamed to org.apache.cassandra.cql3.validation.operations.AlterTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testInvalidCollectionsMix() : void from class org.apache.cassandra.cql3.CollectionsTest to public testInvalidCollectionsMix() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
    "comment" : "<p>It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting to see move class refactroing instead.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testLists() : void from class org.apache.cassandra.cql3.CollectionsTest to public testLists() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
    "comment" : "It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting  to see move class refactroing instead.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMapBulkRemoval() : void from class org.apache.cassandra.cql3.CollectionsTest to public testMapBulkRemoval() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
    "comment" : "It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting  to see move class refactroing instead.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMaps() : void from class org.apache.cassandra.cql3.CollectionsTest to public testMaps() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
    "comment" : "It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting  to see move class refactroing instead.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSets() : void from class org.apache.cassandra.cql3.CollectionsTest to public testSets() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
    "comment" : "<p>It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting to see move class refactroing instead.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testContainsKeyAndContainsWithIndexOnMapKey() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testContainsKeyAndContainsWithIndexOnMapKey() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testContainsKeyAndContainsWithIndexOnMapValue() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testContainsKeyAndContainsWithIndexOnMapValue() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testFilterForContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testFilterForContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexLookupWithClusteringPrefix() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testIndexLookupWithClusteringPrefix() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Laleh, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testListContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testListContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testListContainsWithFiltering() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testListContainsWithFiltering() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMapKeyContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testMapKeyContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMapValueContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testMapValueContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testQueryMultipleIndexTypes() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testQueryMultipleIndexTypes() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSetContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testSetContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private removeQuotes(indexName String) : String from class org.apache.cassandra.cql3.CreateIndexStatementTest to private removeQuotes(indexName String) : String from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCreateAndDropIndex() : void from class org.apache.cassandra.cql3.CreateIndexStatementTest to public testCreateAndDropIndex() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCreateAndDropIndexWithCamelCaseIdentifier() : void from class org.apache.cassandra.cql3.CreateIndexStatementTest to public testCreateAndDropIndexWithCamelCaseIdentifier() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCreateAndDropIndexWithQuotedIdentifier() : void from class org.apache.cassandra.cql3.CreateIndexStatementTest to public testCreateAndDropIndexWithQuotedIdentifier() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCQL3PartitionKeyOnlyTable() : void from class org.apache.cassandra.cql3.CreateTableTest to public testCQL3PartitionKeyOnlyTable() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private assertTriggerExists(name String, clazz Class<?>) : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to private assertTriggerExists(name String, clazz Class<?>) : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCreateTrigger() : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to public testCreateTrigger() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCreateTriggerIfNotExists() : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to public testCreateTriggerIfNotExists() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testDropTrigger() : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to public testDropTrigger() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testDropTriggerIfExists() : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to public testDropTriggerIfExists() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public augment(key ByteBuffer, update ColumnFamily) : Collection<Mutation> from class org.apache.cassandra.cql3.CreateTriggerStatementTest.TestTrigger to public augment(key ByteBuffer, update ColumnFamily) : Collection<Mutation> from class org.apache.cassandra.cql3.validation.operations.CreateTest.TestTrigger",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p><p>Inner class org.apache.cassandra.cql3.CreateTriggerStatementTest.TestTrigger was also merged</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public failInsert(insertCQL String, args Object...) : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public failInsert(insertCQL String, args Object...) : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public succeedInsert(insertCQL String, args Object...) : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public succeedInsert(insertCQL String, args Object...) : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCompactTableWithValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testCompactTableWithValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexOnClusteringColumnInsertPartitionKeyAndClusteringsOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnClusteringColumnInsertPartitionKeyAndClusteringsOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexOnClusteringColumnInsertValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnClusteringColumnInsertValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexOnCollectionKeyInsertPartitionKeyAndClusteringOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnCollectionKeyInsertPartitionKeyAndClusteringOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexOnCollectionValueInsertPartitionKeyAndCollectionKeyOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnCollectionValueInsertPartitionKeyAndCollectionKeyOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexOnCompositeValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnCompositeValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexOnFullCollectionEntryInsertCollectionValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnFullCollectionEntryInsertCollectionValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexOnPartitionKeyInsertValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnPartitionKeyInsertValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTokenFunctionWithCompoundPartitionAndClusteringCols() : void from class org.apache.cassandra.cql3.SelectWithTokenFunctionTest to public testTokenFunctionWithCompoundPartitionAndClusteringCols() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest",
    "comment" : "<p>Rename class, but with the possibility of move method</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTokenFunctionWithMultiColumnPartitionKey() : void from class org.apache.cassandra.cql3.SelectWithTokenFunctionTest to public testTokenFunctionWithMultiColumnPartitionKey() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest",
    "comment" : "<p>Rename class, but with the possibility of move method</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTokenFunctionWithPartitionKeyAndClusteringKeyArguments() : void from class org.apache.cassandra.cql3.SelectWithTokenFunctionTest to public testTokenFunctionWithPartitionKeyAndClusteringKeyArguments() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest",
    "comment" : "<p>Rename class, but with the possibility of move method</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTokenFunctionWithSingleColumnPartitionKey() : void from class org.apache.cassandra.cql3.SelectWithTokenFunctionTest to public testTokenFunctionWithSingleColumnPartitionKey() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest",
    "comment" : "<p>Rename class, but with the possibility of move method</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testFieldSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testFieldSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
    "comment" : "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testFunctionSelectionOrderMultipleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testFunctionSelectionOrderMultipleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
    "comment" : "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testFunctionSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testFunctionSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
    "comment" : "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testNormalSelectionOrderMultipleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testNormalSelectionOrderMultipleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
    "comment" : "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testNormalSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testNormalSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
    "comment" : "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSingleClustering() : void from class org.apache.cassandra.cql3.StaticColumnsQueryTest to public testSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSingleClusteringReversed() : void from class org.apache.cassandra.cql3.StaticColumnsQueryTest to public testSingleClusteringReversed() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testNegativeTimestamps() : void from class org.apache.cassandra.cql3.TimestampTest to public testNegativeTimestamps() : void from class org.apache.cassandra.cql3.validation.entities.TimestampTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testInvalidQueries() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testInvalidQueries() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testNestedTuple() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testNestedTuple() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTupleInClusteringKey() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testTupleInClusteringKey() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
    "comment" : "<p>It's move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTupleInPartitionKey() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testTupleInPartitionKey() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTuplePutAndGet() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testTuplePutAndGet() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testAlterUDT() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlterUDT() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testAlteringUserTypeNestedWithinList() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinList() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testAlteringUserTypeNestedWithinMap() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinMap() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testAlteringUserTypeNestedWithinNestedTuple() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinNestedTuple() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testAlteringUserTypeNestedWithinSet() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinSet() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testAlteringUserTypeNestedWithinTuple() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinTuple() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testAlteringUserTypeNestedWithinUserType() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinUserType() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCassandra8105() : void from class org.apache.cassandra.cql3.UserTypesTest to public testCassandra8105() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCreateInvalidTablesWithUDT() : void from class org.apache.cassandra.cql3.UserTypesTest to public testCreateInvalidTablesWithUDT() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testFor7684() : void from class org.apache.cassandra.cql3.UserTypesTest to public testFor7684() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testInvalidField() : void from class org.apache.cassandra.cql3.UserTypesTest to public testInvalidField() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private assertTriggerDoesNotExists(name String, clazz Class<?>) : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to private assertTriggerDoesNotExists(name String, clazz Class<?>) : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public requestNames() : List<ColumnSpecification> extracted from public metadata() : List<ColumnSpecification> in class org.apache.cassandra.cql3.UntypedResultSet.FromResultSet & moved to class org.apache.cassandra.cql3.ResultSet.Metadata",
    "comment" : "<p>Extract and Move to other&nbsp; class</p><p>Moved to class&nbsp; ResultSet.<span class='pl-en'>Metadata</span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private TOO_BIG : int from class org.apache.cassandra.cql3.IndexedValuesValidationTest to private TOO_BIG : int from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.TupleTypeTest moved to org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.SelectionOrderingTest moved and renamed to org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.TimestampTest moved to org.apache.cassandra.cql3.validation.entities.TimestampTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.CollectionsTest moved to org.apache.cassandra.cql3.validation.entities.CollectionsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.SelectWithTokenFunctionTest moved and renamed to org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.ContainsRelationTest moved and renamed to org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.CreateTriggerStatementTest.TestTrigger moved to org.apache.cassandra.cql3.validation.operations.CreateTest.TestTrigger",
    "comment" : "<p>The inner class TestTrigger was merged along with the outer class CreateTriggerStatementTest in class CreateTest<br />http://refactoring.encs.concordia.ca/oracle/refactoring-details/1123899/4815</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter clockSeqAndNode : long to nanos : long in method public getTimeUUID(when long, nanos long) : UUID from class org.apache.cassandra.utils.UUIDGen",
    "comment" : "<p>Parameter nanos is added to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>getTimeUUID</span>(<span class='pl-k'>long</span> <span class='pl-v'>when</span>, <span class='pl-k'>long</span> <span class='pl-v x x-first'>nanos</span><span class='x'>, </span><span class='pl-k x'>long</span> <span class='pl-v'>clockSeqAndNode</span>)</span></p>",
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private testCreateAndDropIndex(indexName String, addKeyspaceOnDrop boolean) : void from class org.apache.cassandra.cql3.CreateIndexStatementTest to private testCreateAndDropIndex(indexName String, addKeyspaceOnDrop boolean) : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public testCreateAndAlterWithDoubleWith() : void from class org.apache.cassandra.cql3.CreateAndAlterKeyspaceTest to public testDoubleWith() : void from class org.apache.cassandra.cql3.validation.operations.AlterTest",
    "comment" : "<p>testCreateAndAlterWithDoubleWith was split (and moved) to AlterTest.testWithDouble() and CreateTest.testWithDouble()</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.CreateTriggerStatementTest moved and renamed to org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.IndexedValuesValidationTest moved and renamed to org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public testCassandra8558() : void from class org.apache.cassandra.cql3.RangeDeletionTest to public testRangeDeletion() : void from class org.apache.cassandra.cql3.validation.operations.DeleteTest",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.TimestampTest moved and renamed to org.apache.cassandra.cql3.validation.entities.DateTypeTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public executeInternal(queryState QueryState, options QueryOptions) : ResultMessage renamed to private executeInternalWithoutCondition(queryState QueryState, options QueryOptions) : ResultMessage in class org.apache.cassandra.cql3.statements.BatchStatement",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setUpClass() : void renamed to public beforeTest() : void in class org.apache.cassandra.cql3.CQLTester",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected assertInvalidMessage(errorMessage String, query String, values Object) : void renamed to protected assertInvalidThrowMessage(errorMessage String, exception Class<? extends Throwable>, query String, values Object) : void in class org.apache.cassandra.cql3.CQLTester",
    "comment" : "<p>Extract Method protected assertInvalidThrowMessage(errorMessage String, exception Class&lt;? extends Throwable&gt;, query String, values Object...) : void extracted from protected assertInvalidMessage(errorMessage String, query String, values Object...) : void in class org.apache.cassandra.cql3.CQLTester</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @VisibleForTesting in method public getTimeUUID(when long, clockSeqAndNode long) : UUID from class org.apache.cassandra.utils.UUIDGen",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Before in method public beforeTest() : void from class org.apache.cassandra.cql3.CQLTester",
    "comment" : "<p>beforeTest() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type TruncateException in method public executeInternal(state QueryState, options QueryOptions) : ResultMessage from class org.apache.cassandra.cql3.statements.TruncateStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Throwable in method public setUpClass() : void from class org.apache.cassandra.cql3.CQLTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected schemaChange(query String) : void from class org.apache.cassandra.cql3.CQLTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package cfm : CFMetaData from class org.apache.cassandra.cql3.statements.CQL3CasRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package key : ByteBuffer from class org.apache.cassandra.cql3.statements.CQL3CasRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package now : long from class org.apache.cassandra.cql3.statements.CQL3CasRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package isBatch : boolean from class org.apache.cassandra.cql3.statements.CQL3CasRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : InvalidRequestException to e : CassandraException in method protected assertInvalidThrowMessage(errorMessage String, exception Class<? extends Throwable>, query String, values Object...) : void from class org.apache.cassandra.cql3.CQLTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testNonEqualsRelation() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testNonEqualsRelation() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMultipleMultiColumnRelation() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testMultipleMultiColumnRelation() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSingleClusteringInvalidQueries() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testSingleClusteringInvalidQueries() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMultipleClustering() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testMultipleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMultipleClusteringWithIndex() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testMultipleClusteringWithIndex() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSinglePartitionInvalidQueries() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testSinglePartitionInvalidQueries() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMultiAndSingleColumnRelationMix() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testMultiAndSingleColumnRelationMix() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSingleClustering() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSingleClustering() : void from class org.apache.cassandra.cql3.StaticColumnsQueryTest to public testSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMultiClusteringInvalidQueries() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testMultiClusteringInvalidQueries() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMultipleClusteringReversedComponents() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testMultipleClusteringReversedComponents() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMultiplePartitionKeyAndMultiClusteringWithIndex() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testMultiplePartitionKeyAndMultiClusteringWithIndex() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Class",
    "description" : "Merge Class [org.apache.cassandra.cql3.CreateTableTest, org.apache.cassandra.cql3.CreateTriggerStatementTest] merged to org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Class",
    "description" : "Merge Class [org.apache.cassandra.cql3.CreateIndexStatementTest, org.apache.cassandra.cql3.IndexedValuesValidationTest] merged to org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Class",
    "description" : "Merge Class [org.apache.cassandra.cql3.MultiColumnRelationTest, org.apache.cassandra.cql3.StaticColumnsQueryTest] merged to org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Class",
    "description" : "Merge Class [org.apache.cassandra.cql3.ContainsRelationTest, org.apache.cassandra.cql3.StaticColumnsQueryTest] merged to org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 7672
}, {
  "id" : 1124355,
  "repository" : "https://github.com/apache/drill.git",
  "sha1" : "00aa01fb90f3210d1e3027d7f759fb1085b814bd",
  "url" : "https://github.com/apache/drill/commit/00aa01fb90f3210d1e3027d7f759fb1085b814bd",
  "author" : "Sudheesh Katkam",
  "time" : "6/24/15 8:24 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public setSessionOption(drillClient DrillClient, option String, value String) : void extracted from public setControls(drillClient DrillClient, controls String) : void in class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "All the replacements can be justified."
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private assertCancelled(controls String, testQuery String, listener WaitUntilCompleteListener) : void inlined to private assertCancelledWithoutException(controls String, listener WaitUntilCompleteListener, query String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename Method on top of the Inline Method"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private assertCompleteState(result Pair<QueryState,Exception>, expectedState QueryState) : void renamed to private assertStateCompleted(result Pair<QueryState,Exception>, expectedState QueryState) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public resumeFragment(outcomeListener RpcOutcomeListener<Ack>, handle FragmentHandle) : void renamed to public unpauseFragment(outcomeListener RpcOutcomeListener<Ack>, handle FragmentHandle) : void in class org.apache.drill.exec.rpc.control.ControlTunnel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelBeforeAnyResultsArrive() : void renamed to public cancelWhenQueryIdArrives() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingPartitionerThreadFragment() : void renamed to public interruptingPartitionerThreadFragment() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingAfterMSorterSetup() : void renamed to public failsAfterMSorterSetup() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingAfterMSorterSorting() : void renamed to public failsAfterMSorterSorting() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private testInterruptingBlockedFragmentsWaitingForData(control String) : void renamed to private interruptingBlockedFragmentsWaitingForData(control String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private assertExceptionInjected(throwable Throwable, exceptionClass Class<? extends Throwable>, desc String) : void renamed to private assertExceptionMessage(throwable Throwable, exceptionClass Class<? extends Throwable>, desc String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public settingNoopInjectionsAndQuery() : void renamed to public settingNoOpInjectionsAndQuery() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void renamed to public interruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingBlockedMergingRecordBatch() : void renamed to public interruptingBlockedMergingRecordBatch() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingBlockedUnorderedReceiverBatch() : void renamed to public interruptingBlockedUnorderedReceiverBatch() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createExceptionOnBit(endpoint DrillbitEndpoint, desc String, nSkip int, nFire int, exceptionClass String) : String from class org.apache.drill.exec.testing.TestExceptionInjection to public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createException(desc String, nSkip int, nFire int, exceptionClass String) : String from class org.apache.drill.exec.testing.TestExceptionInjection to public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public newBuilder() : Builder extracted from private testForeman(desc String) : void in class org.apache.drill.exec.server.TestDrillbitResilience & moved to class org.apache.drill.exec.testing.Controls",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addException(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, nSkip int, nFire int) : Builder extracted from public checkedInjection() : void in class org.apache.drill.exec.testing.TestExceptionInjection & moved to class org.apache.drill.exec.testing.Controls.Builder",
    "comment" : "<p>Extract and Move to other&nbsp; class</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it as an added class)</span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addException(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, nSkip int, nFire int) : Builder extracted from public skipAndLimit() : void in class org.apache.drill.exec.testing.TestExceptionInjection & moved to class org.apache.drill.exec.testing.Controls.Builder",
    "comment" : "<p>Extract and Move to other&nbsp; class</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it as an added class)</span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addExceptionOnBit(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint, nSkip int, nFire int) : Builder extracted from public injectionOnSpecificBit() : void in class org.apache.drill.exec.testing.TestExceptionInjection & moved to class org.apache.drill.exec.testing.Controls.Builder",
    "comment" : "<p>Extract and Move to other class.</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it is an added class)</span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setSessionOption(drillClient DrillClient, option String, value String) : void extracted from private setSessionOption(option String, value String) : void in class org.apache.drill.exec.server.TestDrillbitResilience & moved to class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "<p>Detected&nbsp; as Extract and Move to other class.&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "FP",
      "purityComment" : "Tolerable changes in the body\n",
      "mappingState" : 1,
      "validationComment" : "All the replacements are justifiable except for the change in the argument of the -fail- method invocation. Although it's a string passed, but it might change the behavior at the end"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public validateControlsString(jsonString String) : void extracted from private validateControlsString(controls String) : void in class org.apache.drill.exec.testing.ControlsInjectionUtil & moved to class org.apache.drill.exec.testing.ExecutionControls",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics",
      "mappingState" : 1,
      "validationComment" : "parameter to argument change, which is part of Extract Method mechanic and justifiable"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public validateControlsString(jsonString String) : void extracted from public validate(v OptionValue) : void in class org.apache.drill.exec.testing.ExecutionControls.ControlsOptionValidator & moved to class org.apache.drill.exec.testing.ExecutionControls",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable jsonString : String to controls : String in method public pauseOnSpecificBit() : void from class org.apache.drill.exec.testing.TestPauseInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable jsonString : String to controls : String in method public pauseInjected() : void from class org.apache.drill.exec.testing.TestPauseInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable jsonString : String to controls : String in method public latchInjected() : void from class org.apache.drill.exec.testing.TestCountDownLatchInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter bitName : String to name : String in method private getEndpoint(name String) : DrillbitEndpoint in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable query : String in method public memoryLeaksWhenCancelled() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable query : String in method public memoryLeaksWhenFailed() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type logger : Logger to REPEAT_RULE : TestRule in class org.apache.drill.test.DrillTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private createSingleException(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.server.TestDrillbitResilience to public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private createSingleExceptionOnBit(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, bitName String) : String from class org.apache.drill.exec.server.TestDrillbitResilience to public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private createPauseInjection(siteClass Class, siteDesc String, nSkip int) : String from class org.apache.drill.exec.server.TestDrillbitResilience to public createPause(siteClass Class, desc String, nSkip int) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter siteDesc : String to desc : String in method public createPause(siteClass Class, desc String, nSkip int) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setControls(drillClient DrillClient, controls String...) : void renamed to public setSessionOption(drillClient DrillClient, option String, value String) : void in class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private createSingleExceptionOnBit(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, bitName String) : String renamed to private getEndpoint(name String) : DrillbitEndpoint in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public settingNoopInjectionsAndQuery() : void renamed to private setSessionOption(option String, value String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private testForeman(desc String) : void renamed to public settingNoOpInjectionsAndQuery() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private setSessionOption(option String, value String) : void renamed to private testForeman(desc String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public close() : void from class org.apache.drill.exec.physical.impl.ScanBatch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public foreman_runTryBeginning() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Ignore in method public foreman_runTryEnd() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public cancelInMiddleOfFetchingResults() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public cancelAfterAllResultsProduced() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public cancelAfterEverythingIsCompleted() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public memoryLeaksWhenCancelled() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Ignore in method public memoryLeaksWhenFailed() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public interruptingBlockedMergingRecordBatch() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public interruptingBlockedUnorderedReceiverBatch() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public interruptingPartitionerThreadFragment() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Ignore in method public interruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Ignore in method public cancelAfterEverythingIsCompleted() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @Ignore in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nSkip : int in method public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nFire : int in method public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Rule in attribute public REPEAT_RULE : TestRule from class org.apache.drill.test.DrillTest",
    "comment" : "<p>new field</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public testInterruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public validateControlsString(controls String) : void from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public createPause(siteClass Class, desc String, nSkip int) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private countAllocatedMemory() : long from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier volatile in attribute private cancelRequested : boolean from class org.apache.drill.exec.server.TestDrillbitResilience.memoryLeaksWhenCancelled.listener.new WaitUntilCompleteListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : InterruptedException in method private countAllocatedMemory() : long from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable name : String in method private countAllocatedMemory() : long from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : RpcException in method public setSessionOption(drillClient DrillClient, option String, value String) : void from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : Exception in method public setControls(session UserSession, controls String) : void from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : Exception in method public validateControlsString(controls String) : void from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nSkip : int in method public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nFire : int in method public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter bitName : String in method private createSingleExceptionOnBit(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, bitName String) : String from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier public to private in class org.apache.drill.exec.testing.ExecutionControls.Controls",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type exceptionClass : String to exceptionClass : Class<? extends Throwable> in method public skipAndLimit() : void from class org.apache.drill.exec.testing.TestExceptionInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type exceptionClass : String to exceptionClass : Class<? extends Throwable> in method public injectionOnSpecificBit() : void from class org.apache.drill.exec.testing.TestExceptionInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable endpoint : DrillbitEndpoint to endpoint : DrillbitEndpoint in method public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2963
}, {
  "id" : 1124370,
  "repository" : "https://github.com/aws/aws-sdk-java.git",
  "sha1" : "4baf0a4de8d03022df48d696d210cc8b3117d38a",
  "url" : "https://github.com/aws/aws-sdk-java/commit/4baf0a4de8d03022df48d696d210cc8b3117d38a",
  "author" : "AWS",
  "time" : "6/24/15 8:54 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private pause(delay long) : void extracted from private pauseExponentially(retries int) : void in class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "if statement has been added"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private callUntilCompletion(batch Map<String,List<WriteRequest>>) : FailedBatch renamed to private doBatchWriteItemWithRetry(batch Map<String,List<WriteRequest>>, batchWriteRetryStrategy BatchWriteRetryStrategy) : FailedBatch in class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private server : ServerSocket from class com.amazonaws.util.EC2MetadataUtilsTest to private server : ServerSocket from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private outputInstanceInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputInstanceInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private outputIamCredList(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputIamCredList(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private handleConnection(input BufferedReader, output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private handleConnection(input BufferedReader, output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private outputIamCred(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputIamCred(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private outputIamInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputIamInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private ignoreRequest(input BufferedReader) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private ignoreRequest(input BufferedReader) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable pendingItems : Map<String,List<WriteRequest>> in method private doBatchWriteItemWithRetry(batch Map<String,List<WriteRequest>>, batchWriteRetryStrategy BatchWriteRetryStrategy) : FailedBatch from class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Tag to ele : Tag in method public withTags(tags Tag...) : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withSecurityGroups(securityGroups String...) : ModifyMountTargetSecurityGroupsRequest from class com.amazonaws.services.elasticfilesystem.model.ModifyMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Artifact to ele : Artifact in method public withArtifactList(artifactList Artifact...) : UpdateJobResult from class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withTagKeys(tagKeys String...) : DeleteTagsRequest from class com.amazonaws.services.elasticfilesystem.model.DeleteTagsRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Artifact to ele : Artifact in method public withArtifactList(artifactList Artifact...) : CreateJobResult from class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : FileSystemDescription to ele : FileSystemDescription in method public withFileSystems(fileSystems FileSystemDescription...) : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Artifact to ele : Artifact in method public withArtifactList(artifactList Artifact...) : GetStatusResult from class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withSecurityGroups(securityGroups String...) : CreateMountTargetRequest from class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withSecurityGroups(securityGroups String...) : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Tag to ele : Tag in method public withTags(tags Tag...) : CreateTagsRequest from class com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withJobIds(jobIds String...) : GetShippingLabelRequest from class com.amazonaws.services.importexport.model.GetShippingLabelRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : MountTargetDescription to ele : MountTargetDescription in method public withMountTargets(mountTargets MountTargetDescription...) : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Job to ele : Job in method public withJobs(jobs Job...) : ListJobsResult from class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to maxItems : String in method public marshall(describeMountTargetsRequest DescribeMountTargetsRequest) : Request<DescribeMountTargetsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to maxItems : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to fileSystemId : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to fileSystemId : String in method public marshall(describeMountTargetsRequest DescribeMountTargetsRequest) : Request<DescribeMountTargetsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to marker : String in method public marshall(describeTagsRequest DescribeTagsRequest) : Request<DescribeTagsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to marker : String in method public marshall(describeMountTargetsRequest DescribeMountTargetsRequest) : Request<DescribeMountTargetsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to creationToken : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to marker : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to maxItems : String in method public marshall(describeTagsRequest DescribeTagsRequest) : Request<DescribeTagsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute server : ServerSocket to SERVER : EC2MetadataUtilsServer in class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class com.amazonaws.util.EC2MetadataUtilsServer from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected constructInstanceInfo() : String extracted from private outputInstanceInfo(output PrintWriter) : void in class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter executorService : ExecutorService to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "<p>Reordered constructors</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter clientConfiguration : ClientConfiguration to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "<p>Reordered constructors</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter responseHandler : HttpResponseHandler<AmazonWebServiceResponse<X>> to unmarshaller : Unmarshaller<X,JsonUnmarshallerContext> in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : "<p>responseHandler is instantiated inside invoke() and wraps the unmarshaller<br />JsonResponseHandler&lt;X&gt; responseHandler = new JsonResponseHandler&lt;X&gt;(unmarshaller);</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable target : String to uriResourcePath : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable target : String to uriResourcePath : String in method public marshall(describeMountTargetsRequest DescribeMountTargetsRequest) : Request<DescribeMountTargetsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable target : String to uriResourcePath : String in method public marshall(describeTagsRequest DescribeTagsRequest) : Request<DescribeTagsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter executorService : ExecutorService to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p>Reordered constructors</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter clientConfiguration : ClientConfiguration to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p>Reordered constructors</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "<p>from non-qualified to qualified</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p>from non-qualified to qualified</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type server : ServerSocket to SERVER : EC2MetadataUtilsServer in class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type jsonErrorUnmarshallers : List<JsonErrorUnmarshaller> to jsonErrorUnmarshallers : List<JsonErrorUnmarshallerV2> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type errorResponseHandler : JsonErrorResponseHandler to errorResponseHandler : JsonErrorResponseHandlerV2 in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type securityGroups : ListWithAutoConstructFlag<String> to securityGroups : SdkInternalList<String> in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type tags : ListWithAutoConstructFlag<Tag> to tags : SdkInternalList<Tag> in class com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type tagKeys : ListWithAutoConstructFlag<String> to tagKeys : SdkInternalList<String> in class com.amazonaws.services.elasticfilesystem.model.DeleteTagsRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type fileSystems : ListWithAutoConstructFlag<FileSystemDescription> to fileSystems : SdkInternalList<FileSystemDescription> in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type securityGroups : ListWithAutoConstructFlag<String> to securityGroups : SdkInternalList<String> in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type mountTargets : ListWithAutoConstructFlag<MountTargetDescription> to mountTargets : SdkInternalList<MountTargetDescription> in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type tags : ListWithAutoConstructFlag<Tag> to tags : SdkInternalList<Tag> in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type securityGroups : ListWithAutoConstructFlag<String> to securityGroups : SdkInternalList<String> in class com.amazonaws.services.elasticfilesystem.model.ModifyMountTargetSecurityGroupsRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type artifactList : ListWithAutoConstructFlag<Artifact> to artifactList : SdkInternalList<Artifact> in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type jobIds : ListWithAutoConstructFlag<String> to jobIds : SdkInternalList<String> in class com.amazonaws.services.importexport.model.GetShippingLabelRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type artifactList : ListWithAutoConstructFlag<Artifact> to artifactList : SdkInternalList<Artifact> in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type jobs : ListWithAutoConstructFlag<Job> to jobs : SdkInternalList<Job> in class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type artifactList : ListWithAutoConstructFlag<Artifact> to artifactList : SdkInternalList<Artifact> in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateTagsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteFileSystemRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteMountTargetRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteTagsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeTagsRequest,DescribeTagsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateTagsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteFileSystemRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteMountTargetRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteTagsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeTagsRequest,DescribeTagsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CancelJobRequest,CancelJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateJobRequest,CreateJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<GetStatusRequest,GetStatusResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult>) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ListJobsRequest,ListJobsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult> in method public listJobsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "<p>The two methods have a different number of parameters, although the type has been qualified in the overloaded methods</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<UpdateJobRequest,UpdateJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult>) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CancelJobRequest,CancelJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateJobRequest,CreateJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<GetStatusRequest,GetStatusResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult>) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ListJobsRequest,ListJobsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult> in method public listJobsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p>The two methods have a different number of parameters, although the type has been qualified in the overloaded methods</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<UpdateJobRequest,UpdateJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult>) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ListJobsRequest,ListJobsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ListJobsRequest,ListJobsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetSecurityGroupsResult> to java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetSecurityGroupsResult> to java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeTagsResult> to java.util.concurrent.Future<DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeTagsResult> to java.util.concurrent.Future<DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ExecutorService to java.util.concurrent.ExecutorService in method public getExecutorService() : java.util.concurrent.ExecutorService from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetSecurityGroupsResult> to java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetSecurityGroupsResult> to java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeTagsResult> to java.util.concurrent.Future<DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeTagsResult> to java.util.concurrent.Future<DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetStatusResult> to java.util.concurrent.Future<GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetStatusResult> to java.util.concurrent.Future<GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult>) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult>) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ExecutorService to java.util.concurrent.ExecutorService in method public getExecutorService() : java.util.concurrent.ExecutorService from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetStatusResult> to java.util.concurrent.Future<GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetStatusResult> to java.util.concurrent.Future<GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult>) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult>) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type jobIdsList : List<String> to jobIdsList : SdkInternalList<String> in method public marshall(getShippingLabelRequest GetShippingLabelRequest) : Request<GetShippingLabelRequest> from class com.amazonaws.services.importexport.model.transform.GetShippingLabelRequestMarshaller",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteTagsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteFileSystemAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteMountTargetAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.modifyMountTargetSecurityGroupsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createTagsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : java.util.concurrent.Future<CreateMountTargetResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync() : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : java.util.concurrent.Future<DescribeMountTargetsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync() : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>listJobsAsync</span>()</span> with 0 parameters is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync() : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>listJobsAsync</span>()</span> with 0 parameters is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type securityGroupsList : ListWithAutoConstructFlag<String> to securityGroupsList : SdkInternalList<String> in method public marshall(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Request<ModifyMountTargetSecurityGroupsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.ModifyMountTargetSecurityGroupsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tagsList : ListWithAutoConstructFlag<Tag> to tagsList : SdkInternalList<Tag> in method public marshall(createTagsRequest CreateTagsRequest) : Request<CreateTagsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type securityGroupsList : ListWithAutoConstructFlag<String> to securityGroupsList : SdkInternalList<String> in method public marshall(createMountTargetRequest CreateMountTargetRequest) : Request<CreateMountTargetRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateMountTargetRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tagKeysList : ListWithAutoConstructFlag<String> to tagKeysList : SdkInternalList<String> in method public marshall(deleteTagsRequest DeleteTagsRequest) : Request<DeleteTagsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteTagsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.IncorrectFileSystemLifeCycleStateExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.InternalServerErrorExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.IncorrectMountTargetStateExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.NoFreeAddressesInSubnetExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.IpAddressInUseExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemAlreadyExistsExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.SecurityGroupNotFoundExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.SecurityGroupLimitExceededExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.SubnetNotFoundExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.UnsupportedAvailabilityZoneExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.MountTargetNotFoundExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.BadRequestExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.MountTargetConflictExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemInUseExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemNotFoundExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemLimitExceededExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.NetworkInterfaceLimitExceededExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.DependencyTimeoutExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller to private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteFileSystemRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.RemoveTagsFromVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.ListTagsForVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.ListTagsForVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetSecurityGroupsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetSecurityGroupsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.RemoveTagsFromVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateMountTargetRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.ModifyMountTargetSecurityGroupsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteFileSystemRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.ModifyMountTargetSecurityGroupsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteMountTargetRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.RemoveTagsFromVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteTagsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteTagsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteMountTargetRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateMountTargetRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.ListTagsForVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public start() : void extracted from public setUp() : void in class com.amazonaws.util.EC2MetadataUtilsTest & moved to class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>setup() now calls SERVER.start()</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected constructInstanceInfo() : String extracted from private outputInstanceInfo(output PrintWriter) : void in class com.amazonaws.util.EC2MetadataUtilsTest & moved to class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>Extract Class com.amazonaws.util.EC2MetadataUtilsServer from class com.amazonaws.util.EC2MetadataUtilsTest</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getInstance() : TagJsonMarshaller extracted from public marshall(createTagsRequest CreateTagsRequest) : Request<CreateTagsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller & moved to class com.amazonaws.services.elasticfilesystem.model.transform.TagJsonMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public marshall(tag Tag, jsonWriter JSONWriter) : void extracted from public marshall(createTagsRequest CreateTagsRequest) : Request<CreateTagsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller & moved to class com.amazonaws.services.elasticfilesystem.model.transform.TagJsonMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private runServer() : void from class com.amazonaws.util.EC2MetadataUtilsTest to private startServer() : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private killServer() : void from class com.amazonaws.util.EC2MetadataUtilsTest to public stop() : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getLocalPort() : int extracted from public setUp() : void in class com.amazonaws.util.EC2MetadataUtilsTest & moved to class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.SecurityGroupNotFoundExceptionUnmarshaller moved and renamed to com.amazonaws.services.config.model.transform.InvalidRecordingGroupExceptionUnmarshaller",
    "comment" : "<p>for some reason nikos had validated as ukn</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemNotFoundExceptionUnmarshaller moved and renamed to com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.BadRequestExceptionUnmarshaller moved and renamed to com.amazonaws.services.cognitosync.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.NoFreeAddressesInSubnetExceptionUnmarshaller moved and renamed to com.amazonaws.services.config.model.transform.InvalidRecordingGroupExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.InternalServerErrorExceptionUnmarshaller moved and renamed to com.amazonaws.services.cognitosync.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemNotFoundExceptionUnmarshaller moved and renamed to com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDescription() : String renamed to public setDescription(description String) : void in class com.amazonaws.services.importexport.model.Artifact",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setDescription(description String) : void renamed to public getDescription() : String in class com.amazonaws.services.importexport.model.Artifact",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getURL() : String renamed to public setURL(uRL String) : void in class com.amazonaws.services.importexport.model.Artifact",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setURL(uRL String) : void renamed to public getURL() : String in class com.amazonaws.services.importexport.model.Artifact",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMaxItems() : Integer renamed to public setMaxItems(maxItems Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxItems(maxItems Integer...) : void renamed to public getMaxItems() : Integer in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.ModifyMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.ModifyMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNextMarker() : String renamed to public setNextMarker(nextMarker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNextMarker(nextMarker String) : void renamed to public getNextMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DeleteFileSystemRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DeleteFileSystemRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.GetStatusRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.GetStatusRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.GetStatusRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.GetStatusRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOwnerId() : String renamed to public setOwnerId(ownerId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOwnerId(ownerId String) : void renamed to public getOwnerId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSubnetId() : String renamed to public setSubnetId(subnetId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSubnetId(subnetId String) : void renamed to public getSubnetId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLifeCycleState() : String renamed to public setLifeCycleState(lifeCycleState String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLifeCycleState(lifeCycleState String) : void renamed to public getLifeCycleState() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIpAddress() : String renamed to public setIpAddress(ipAddress String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIpAddress(ipAddress String) : void renamed to public getIpAddress() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNetworkInterfaceId() : String renamed to public setNetworkInterfaceId(networkInterfaceId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNetworkInterfaceId(networkInterfaceId String) : void renamed to public getNetworkInterfaceId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult renamed to public createJob(createJobRequest CreateJobRequest) : CreateJobResult in class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelJob(cancelJobRequest CancelJobRequest) : CancelJobResult renamed to public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult in class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public listJobs() : ListJobsResult renamed to public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult in class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSuccess(success Boolean) : void renamed to public getSuccess() : Boolean in class com.amazonaws.services.importexport.model.CancelJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSuccess() : Boolean renamed to public isSuccess() : Boolean in class com.amazonaws.services.importexport.model.CancelJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.CancelJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.CancelJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.CancelJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.CancelJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicy(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest) : void renamed to public deleteVaultNotifications(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : void in class com.amazonaws.services.glacier.AmazonGlacier",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotifications(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : void renamed to public removeTagsFromVault(removeTagsFromVaultRequest RemoveTagsFromVaultRequest) : void in class com.amazonaws.services.glacier.AmazonGlacier",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSubnetId() : String renamed to public setSubnetId(subnetId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSubnetId(subnetId String) : void renamed to public getSubnetId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIpAddress() : String renamed to public setIpAddress(ipAddress String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIpAddress(ipAddress String) : void renamed to public getIpAddress() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLocationCode() : String renamed to public setLocationCode(locationCode String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLocationCode(locationCode String) : void renamed to public getLocationCode() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLocationMessage() : String renamed to public setLocationMessage(locationMessage String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLocationMessage(locationMessage String) : void renamed to public getLocationMessage() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getProgressCode() : String renamed to public setProgressCode(progressCode String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setProgressCode(progressCode String) : void renamed to public getProgressCode() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getProgressMessage() : String renamed to public setProgressMessage(progressMessage String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setProgressMessage(progressMessage String) : void renamed to public getProgressMessage() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCarrier() : String renamed to public setCarrier(carrier String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCarrier(carrier String) : void renamed to public getCarrier() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getTrackingNumber() : String renamed to public setTrackingNumber(trackingNumber String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setTrackingNumber(trackingNumber String) : void renamed to public getTrackingNumber() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLogBucket() : String renamed to public setLogBucket(logBucket String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLogBucket(logBucket String) : void renamed to public getLogBucket() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLogKey() : String renamed to public setLogKey(logKey String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLogKey(logKey String) : void renamed to public getLogKey() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getErrorCount() : Integer renamed to public setErrorCount(errorCount Integer) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setErrorCount(errorCount Integer) : void renamed to public getErrorCount() : Integer in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSignature() : String renamed to public setSignature(signature String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSignature(signature String) : void renamed to public getSignature() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSignatureFileContents() : String renamed to public setSignatureFileContents(signatureFileContents String...) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSignatureFileContents(signatureFileContents String...) : void renamed to public getSignatureFileContents() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCurrentManifest() : String renamed to public setCurrentManifest(currentManifest String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCurrentManifest(currentManifest String) : void renamed to public getCurrentManifest() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationDate() : java.util.Date renamed to public setCreationDate(creationDate java.util.Date) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : "<p>get-set investigate&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationDate(creationDate java.util.Date) : void renamed to public getCreationDate() : java.util.Date in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSignature() : String renamed to public setSignature(signature String) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSignature(signature String) : void renamed to public getSignature() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSignatureFileContents() : String renamed to public setSignatureFileContents(signatureFileContents String...) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSignatureFileContents(signatureFileContents String...) : void renamed to public getSignatureFileContents() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getWarningMessage() : String renamed to public setWarningMessage(warningMessage String) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setWarningMessage(warningMessage String) : void renamed to public getWarningMessage() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOwnerId() : String renamed to public setOwnerId(ownerId String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOwnerId(ownerId String) : void renamed to public getOwnerId() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationToken() : String renamed to public setCreationToken(creationToken String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationToken(creationToken String) : void renamed to public getCreationToken() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationTime() : java.util.Date renamed to public setCreationTime(creationTime java.util.Date) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationTime(creationTime java.util.Date) : void renamed to public getCreationTime() : java.util.Date in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLifeCycleState() : String renamed to public setLifeCycleState(lifeCycleState String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLifeCycleState(lifeCycleState String) : void renamed to public getLifeCycleState() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getName() : String renamed to public setName(name String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setName(name String) : void renamed to public getName() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumberOfMountTargets() : Integer renamed to public setNumberOfMountTargets(numberOfMountTargets Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNumberOfMountTargets(numberOfMountTargets Integer...) : void renamed to public getNumberOfMountTargets() : Integer in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSizeInBytes() : FileSystemSize renamed to public setSizeInBytes(sizeInBytes FileSystemSize...) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSizeInBytes(sizeInBytes FileSystemSize...) : void renamed to public getSizeInBytes() : FileSystemSize in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMaxItems() : Integer renamed to public setMaxItems(maxItems Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxItems(maxItems Integer...) : void renamed to public getMaxItems() : Integer in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationToken() : String renamed to public setCreationToken(creationToken String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationToken(creationToken String) : void renamed to public getCreationToken() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMaxItems() : Integer renamed to public setMaxItems(maxItems Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxItems(maxItems Integer...) : void renamed to public getMaxItems() : Integer in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getManifest() : String renamed to public setManifest(manifest String) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setManifest(manifest String) : void renamed to public getManifest() : String in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isValidateOnly() : Boolean renamed to public setValidateOnly(validateOnly Boolean) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setValidateOnly(validateOnly Boolean) : void renamed to public getValidateOnly() : Boolean in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getValidateOnly() : Boolean renamed to public isValidateOnly() : Boolean in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public listJobs() : ListJobsResult renamed to public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult in class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getValue() : Long renamed to public setValue(value Long) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemSize",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setValue(value Long) : void renamed to public getValue() : Long in class com.amazonaws.services.elasticfilesystem.model.FileSystemSize",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getTimestamp() : java.util.Date renamed to public setTimestamp(timestamp java.util.Date) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemSize",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setTimestamp(timestamp java.util.Date) : void renamed to public getTimestamp() : java.util.Date in class com.amazonaws.services.elasticfilesystem.model.FileSystemSize",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNextMarker() : String renamed to public setNextMarker(nextMarker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNextMarker(nextMarker String) : void renamed to public getNextMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getManifest() : String renamed to public setManifest(manifest String) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setManifest(manifest String) : void renamed to public getManifest() : String in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getManifestAddendum() : String renamed to public setManifestAddendum(manifestAddendum String) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setManifestAddendum(manifestAddendum String) : void renamed to public getManifestAddendum() : String in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isValidateOnly() : Boolean renamed to public setValidateOnly(validateOnly Boolean) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setValidateOnly(validateOnly Boolean) : void renamed to public getValidateOnly() : Boolean in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getValidateOnly() : Boolean renamed to public isValidateOnly() : Boolean in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationToken() : String renamed to public setCreationToken(creationToken String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationToken(creationToken String) : void renamed to public getCreationToken() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getKey() : String renamed to public setKey(key String) : void in class com.amazonaws.services.elasticfilesystem.model.Tag",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setKey(key String) : void renamed to public getKey() : String in class com.amazonaws.services.elasticfilesystem.model.Tag",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getValue() : String renamed to public setValue(value String) : void in class com.amazonaws.services.elasticfilesystem.model.Tag",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setValue(value String) : void renamed to public getValue() : String in class com.amazonaws.services.elasticfilesystem.model.Tag",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.DeleteMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.DeleteMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DeleteTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DeleteTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOwnerId() : String renamed to public setOwnerId(ownerId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOwnerId(ownerId String) : void renamed to public getOwnerId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSubnetId() : String renamed to public setSubnetId(subnetId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSubnetId(subnetId String) : void renamed to public getSubnetId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLifeCycleState() : String renamed to public setLifeCycleState(lifeCycleState String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLifeCycleState(lifeCycleState String) : void renamed to public getLifeCycleState() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIpAddress() : String renamed to public setIpAddress(ipAddress String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIpAddress(ipAddress String) : void renamed to public getIpAddress() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNetworkInterfaceId() : String renamed to public setNetworkInterfaceId(networkInterfaceId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNetworkInterfaceId(networkInterfaceId String) : void renamed to public getNetworkInterfaceId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationDate() : java.util.Date renamed to public setCreationDate(creationDate java.util.Date) : void in class com.amazonaws.services.importexport.model.Job",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationDate(creationDate java.util.Date) : void renamed to public getCreationDate() : java.util.Date in class com.amazonaws.services.importexport.model.Job",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isCanceled() : Boolean renamed to public setIsCanceled(isCanceled Boolean) : void in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIsCanceled(isCanceled Boolean) : void renamed to public getIsCanceled() : Boolean in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIsCanceled() : Boolean renamed to public isCanceled() : Boolean in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOwnerId() : String renamed to public setOwnerId(ownerId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOwnerId(ownerId String) : void renamed to public getOwnerId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationToken() : String renamed to public setCreationToken(creationToken String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationToken(creationToken String) : void renamed to public getCreationToken() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationTime() : java.util.Date renamed to public setCreationTime(creationTime java.util.Date) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationTime(creationTime java.util.Date) : void renamed to public getCreationTime() : java.util.Date in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLifeCycleState() : String renamed to public setLifeCycleState(lifeCycleState String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLifeCycleState(lifeCycleState String) : void renamed to public getLifeCycleState() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getName() : String renamed to public setName(name String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setName(name String) : void renamed to public getName() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumberOfMountTargets() : Integer renamed to public setNumberOfMountTargets(numberOfMountTargets Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNumberOfMountTargets(numberOfMountTargets Integer...) : void renamed to public getNumberOfMountTargets() : Integer in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSizeInBytes() : FileSystemSize renamed to public setSizeInBytes(sizeInBytes FileSystemSize...) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSizeInBytes(sizeInBytes FileSystemSize...) : void renamed to public getSizeInBytes() : FileSystemSize in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMaxJobs() : Integer renamed to public setMaxJobs(maxJobs Integer...) : void in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxJobs(maxJobs Integer...) : void renamed to public getMaxJobs() : Integer in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicyAsync(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest) : Future<Void> renamed to public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicyAsync(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest, asyncHandler AsyncHandler<DeleteVaultAccessPolicyRequest,Void>) : Future<Void> renamed to public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest, asyncHandler AsyncHandler<DeleteVaultNotificationsRequest,Void>) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : Future<Void> renamed to public listTagsForVaultAsync(listTagsForVaultRequest ListTagsForVaultRequest, asyncHandler AsyncHandler<ListTagsForVaultRequest,ListTagsForVaultResult>) : Future<ListTagsForVaultResult> in class com.amazonaws.services.glacier.AmazonGlacierAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest, asyncHandler AsyncHandler<DeleteVaultNotificationsRequest,Void>) : Future<Void> renamed to public removeTagsFromVaultAsync(removeTagsFromVaultRequest RemoveTagsFromVaultRequest, asyncHandler AsyncHandler<RemoveTagsFromVaultRequest,Void>) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> renamed to public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> renamed to public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> renamed to public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> renamed to public listJobsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> renamed to public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> renamed to public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> renamed to public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> renamed to public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> renamed to public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> renamed to public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSuccess(success Boolean) : void renamed to public getSuccess() : Boolean in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSuccess() : Boolean renamed to public isSuccess() : Boolean in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getWarningMessage() : String renamed to public setWarningMessage(warningMessage String) : void in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setWarningMessage(warningMessage String) : void renamed to public getWarningMessage() : String in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void renamed to public describeMountTargets(describeMountTargetsRequest DescribeMountTargetsRequest) : DescribeMountTargetsResult in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeFileSystems() : DescribeFileSystemsResult renamed to public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setErrorCode(errorCode String) : void renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemAlreadyExistsException",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNextMarker() : String renamed to public setNextMarker(nextMarker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNextMarker(nextMarker String) : void renamed to public getNextMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> renamed to public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : java.util.concurrent.Future<CreateMountTargetResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> renamed to public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> renamed to public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> renamed to public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> renamed to public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> renamed to public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> renamed to public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> renamed to public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> renamed to public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> renamed to public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> renamed to public describeFileSystemsAsync() : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> renamed to public describeFileSystemsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> renamed to public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : java.util.concurrent.Future<DescribeMountTargetsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> renamed to public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> renamed to public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> renamed to public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicyAsync(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest) : Future<Void> renamed to public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicyAsync(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest, asyncHandler AsyncHandler<DeleteVaultAccessPolicyRequest,Void>) : Future<Void> renamed to public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest, asyncHandler AsyncHandler<DeleteVaultNotificationsRequest,Void>) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : Future<Void> renamed to public listTagsForVaultAsync(listTagsForVaultRequest ListTagsForVaultRequest, asyncHandler AsyncHandler<ListTagsForVaultRequest,ListTagsForVaultResult>) : Future<ListTagsForVaultResult> in class com.amazonaws.services.glacier.AmazonGlacierAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest, asyncHandler AsyncHandler<DeleteVaultNotificationsRequest,Void>) : Future<Void> renamed to public removeTagsFromVaultAsync(removeTagsFromVaultRequest RemoveTagsFromVaultRequest, asyncHandler AsyncHandler<RemoveTagsFromVaultRequest,Void>) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isTruncated() : Boolean renamed to public setIsTruncated(isTruncated Boolean) : void in class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIsTruncated(isTruncated Boolean) : void renamed to public getIsTruncated() : Boolean in class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIsTruncated() : Boolean renamed to public isTruncated() : Boolean in class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createFileSystem(createFileSystemRequest CreateFileSystemRequest) : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystems(describeFileSystemsRequest DescribeFileSystemsRequest) : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargets(describeMountTargetsRequest DescribeMountTargetsRequest) : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createMountTarget(createMountTargetRequest CreateMountTargetRequest) : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetSecurityGroups(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeTags(describeTagsRequest DescribeTagsRequest) : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createJob(createJobRequest CreateJobRequest) : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public cancelJob(cancelJobRequest CancelJobRequest) : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getStatus(getStatusRequest GetStatusRequest) : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public listJobs(listJobsRequest ListJobsRequest) : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.BucketPermissionExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.CanceledJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.CreateJobQuotaExceededExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.ExpiredJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidAccessKeyIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidAddressExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidCustomsExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidFileSystemExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidManifestFieldExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidParameterExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidVersionExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MalformedManifestExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MissingCustomsExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MissingManifestFieldExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MissingParameterExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MultipleRegionsExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.NoSuchBucketExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.UnableToCancelJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.UnableToUpdateJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter batchWriteRetryStrategy : BatchWriteRetryStrategy in method private writeOneBatch(batch Map<String,List<WriteRequest>>, batchWriteRetryStrategy BatchWriteRetryStrategy) : List<FailedBatch> from class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter batchWriteRetryStrategy : BatchWriteRetryStrategy in method private doBatchWriteItemWithRetry(batch Map<String,List<WriteRequest>>, batchWriteRetryStrategy BatchWriteRetryStrategy) : FailedBatch from class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter batchWriteRetryStrategy : BatchWriteRetryStrategy in method private DynamoDBMapperConfig(saveBehavior SaveBehavior, consistentReads ConsistentReads, tableNameOverride TableNameOverride, tableNameResolver TableNameResolver, objectTableNameResolver ObjectTableNameResolver, paginationLoadingStrategy PaginationLoadingStrategy, requestMetricCollector RequestMetricCollector, conversionSchema ConversionSchema, batchWriteRetryStrategy BatchWriteRetryStrategy) from class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystemsAsync() : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createFileSystemAsync.submit.new java.util.concurrent.Callable<CreateFileSystemResult>",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createMountTargetAsync.submit.new java.util.concurrent.Callable<CreateMountTargetResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createTagsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteFileSystemAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteMountTargetAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteTagsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeFileSystemsAsync.submit.new java.util.concurrent.Callable<DescribeFileSystemsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeMountTargetSecurityGroupsAsync.submit.new java.util.concurrent.Callable<DescribeMountTargetSecurityGroupsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeMountTargetsAsync.submit.new java.util.concurrent.Callable<DescribeMountTargetsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeTagsAsync.submit.new java.util.concurrent.Callable<DescribeTagsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.modifyMountTargetSecurityGroupsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.cancelJobAsync.submit.new java.util.concurrent.Callable<CancelJobResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.createJobAsync.submit.new java.util.concurrent.Callable<CreateJobResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.getShippingLabelAsync.submit.new java.util.concurrent.Callable<GetShippingLabelResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.getStatusAsync.submit.new java.util.concurrent.Callable<GetStatusResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.listJobsAsync.submit.new java.util.concurrent.Callable<ListJobsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.updateJobAsync.submit.new java.util.concurrent.Callable<UpdateJobResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IllegalArgumentException in method public setEndpoint(endpoint String) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IllegalArgumentException in method public setRegion(region Region) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystem(createFileSystemRequest CreateFileSystemRequest) : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystem(createFileSystemRequest CreateFileSystemRequest) : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystems(describeFileSystemsRequest DescribeFileSystemsRequest) : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystems(describeFileSystemsRequest DescribeFileSystemsRequest) : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargets(describeMountTargetsRequest DescribeMountTargetsRequest) : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargets(describeMountTargetsRequest DescribeMountTargetsRequest) : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTarget(createMountTargetRequest CreateMountTargetRequest) : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTarget(createMountTargetRequest CreateMountTargetRequest) : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroups(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroups(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTags(describeTagsRequest DescribeTagsRequest) : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTags(describeTagsRequest DescribeTagsRequest) : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createFileSystemAsync.submit.new Callable<CreateFileSystemResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteMountTargetAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeFileSystemsAsync.submit.new Callable<DescribeFileSystemsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createTagsAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteFileSystemAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeMountTargetsAsync.submit.new Callable<DescribeMountTargetsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createMountTargetAsync.submit.new Callable<CreateMountTargetResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeMountTargetSecurityGroupsAsync.submit.new Callable<DescribeMountTargetSecurityGroupsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.modifyMountTargetSecurityGroupsAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeTagsAsync.submit.new Callable<DescribeTagsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteTagsAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IllegalArgumentException in method public setEndpoint(endpoint String) : void from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IllegalArgumentException in method public setRegion(region Region) : void from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJob(createJobRequest CreateJobRequest) : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJob(createJobRequest CreateJobRequest) : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJob(cancelJobRequest CancelJobRequest) : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJob(cancelJobRequest CancelJobRequest) : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatus(getStatusRequest GetStatusRequest) : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatus(getStatusRequest GetStatusRequest) : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobs(listJobsRequest ListJobsRequest) : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobs(listJobsRequest ListJobsRequest) : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.createJobAsync.submit.new Callable<CreateJobResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.getShippingLabelAsync.submit.new Callable<GetShippingLabelResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.cancelJobAsync.submit.new Callable<CancelJobResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.getStatusAsync.submit.new Callable<GetStatusResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.listJobsAsync.submit.new Callable<ListJobsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.updateJobAsync.submit.new Callable<UpdateJobResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public stop() : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private handleConnection(input BufferedReader, output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private ignoreRequest(input BufferedReader) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private outputIamInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private outputIamCredList(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private outputIamCred(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private outputInstanceInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private runServer() : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private killServer() : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private executorService : ExecutorService from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private executorService : ExecutorService from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type responseHandler : HttpResponseHandler<AmazonWebServiceResponse<X>> to responseHandler : JsonResponseHandler<X> in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter responseHandler : HttpResponseHandler<AmazonWebServiceResponse<X>> to responseHandler : JsonResponseHandler<X> in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unmarshaller : Unmarshaller<X,JsonUnmarshallerContext> in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private server : ServerSocket from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1125095,
  "repository" : "https://github.com/apache/drill.git",
  "sha1" : "c1b847acdc8cb90a1498b236b3bb5c81ca75c044",
  "url" : "https://github.com/apache/drill/commit/c1b847acdc8cb90a1498b236b3bb5c81ca75c044",
  "author" : "vkorukanti",
  "time" : "6/25/15 11:53 AM",
  "refactorings" : [ {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private org2Groups : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected org2Groups : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoaderLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoaderLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createTestData() : void extracted from public addMiniDfsBasedStorageAndGenerateTestData() : void in class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private org1Groups : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected org1Groups : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableNameLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableNameLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private org1Users : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected org1Users : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.DatabaseLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.DatabaseLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private org2Users : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected org2Users : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public createFileSystem(proxyUserName String, fsConf Configuration, stats OperatorStats) : DrillFileSystem inlined to public createFileSystem(proxyUserName String, fsConf Configuration) : DrillFileSystem in class org.apache.drill.exec.util.ImpersonationUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public addMiniDfsBasedStorageAndGenerateTestData() : void from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.store.hive.HiveTestDataGenerator to public executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.hive.HiveTestUtilities",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getTempDir(dirName String) : String extracted from public getInstance() : HiveTestDataGenerator in class org.apache.drill.exec.store.hive.HiveTestDataGenerator & moved to class org.apache.drill.BaseTestQuery",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to BaseTestQuery</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "Rename Variable and parameter to argument change on top"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getTempDir(dirName String) : String extracted from private generateTestData() : void in class org.apache.drill.exec.store.hive.HiveTestDataGenerator & moved to class org.apache.drill.BaseTestQuery",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to BaseTestQuery</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public createNonCloseableClientWithCaching(hiveConf HiveConf, hiveConfigOverride Map<String,String>) : DrillHiveMetaStoreClient extracted from public HiveSchemaFactory(plugin HiveStoragePlugin, name String, hiveConfigOverride Map<String,String>) in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory & moved to class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private tableLoaders : LoadingCache<String,LoadingCache<String,HiveReadEntry>> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory to private tableLoaders : LoadingCache<String,LoadingCache<String,HiveReadEntry>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private tableNameLoader : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory to private tableNameLoader : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private databases : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory to private databases : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable value : String in method public HiveSchemaFactory(plugin HiveStoragePlugin, name String, hiveConfigOverride Map<String,String>) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable property : String in method public HiveSchemaFactory(plugin HiveStoragePlugin, name String, hiveConfigOverride Map<String,String>) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute conf : Configuration to dfsConf : Configuration in class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute tableNameLoader : LoadingCache<String,List<String>> to isHS2DoAsSet : boolean in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter fs : FileSystem to workspaces : Map<String,WorkspaceConfig> in method protected createAndAddWorkspace(name String, path String, permissions short, owner String, group String, workspaces Map<String,WorkspaceConfig>) : void in class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to Map<String,WorkspaceConfig> in method private createTestWorkspaces() : Map<String,WorkspaceConfig> from class org.apache.drill.exec.impersonation.TestImpersonationMetadata",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to Map<String,WorkspaceConfig> in method private createTestWorkspaces() : Map<String,WorkspaceConfig> from class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getSplitsWithUGI() : void extracted from public HiveScan(userName String, hiveReadEntry HiveReadEntry, storagePluginName String, columns List<SchemaPath>, pluginRegistry StoragePluginRegistry) in class org.apache.drill.exec.store.hive.HiveScan",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getSplitsWithUGI() : void extracted from public HiveScan(userName String, hiveReadEntry HiveReadEntry, storagePlugin HiveStoragePlugin, columns List<SchemaPath>) in class org.apache.drill.exec.store.hive.HiveScan",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type name : String to schemaConfig : SchemaConfig in method public HiveSchema(schemaConfig SchemaConfig, mClient DrillHiveMetaStoreClient, name String) in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "<p>parameter names still exists in the constructor</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type DATABASES : String to globalMetastoreClient : DrillHiveMetaStoreClient in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private getSchemaFile(resource String) : String from class org.apache.drill.exec.store.hive.HiveTestDataGenerator to public getPhysicalFileFromResource(resource String) : String from class org.apache.drill.BaseTestQuery",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public load(key String) : HiveReadEntry from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoader to protected getHiveReadEntryHelper(mClient IMetaStoreClient, dbName String, tableName String, hiveConfigOverride Map<String,String>) : HiveReadEntry from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public addMiniDfsBasedStorageAndGenerateTestData() : void renamed to private createTestData() : void in class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public addMiniDfsBasedStorage() : void renamed to public setup() : void in class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS",
    "comment" : "<p>Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected addMiniDfsBasedStorage(workspaces Map&lt;String,WorkspaceConfig&gt;) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public addMiniDfsBasedStorage() : void renamed to public setup() : void in class org.apache.drill.exec.impersonation.TestImpersonationMetadata",
    "comment" : "<p>Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to protected addMiniDfsBasedStorage(workspaces Map&lt;String,WorkspaceConfig&gt;) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package getTableNames(dbName String) : List<String> renamed to package getDrillTable(dbName String, t String) : DrillTable in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @BeforeClass in method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @BeforeClass in method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationMetadata",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @BeforeClass in method public addMiniDfsBasedStorageAndGenerateTestData() : void from class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter userName : String in method public DrillHiveTable(storageEngineName String, plugin HiveStoragePlugin, userName String, readEntry HiveReadEntry) from class org.apache.drill.exec.store.hive.schema.DrillHiveTable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter userName : String in method public DrillHiveViewTable(storageEngineName String, plugin HiveStoragePlugin, userName String, readEntry HiveReadEntry) from class org.apache.drill.exec.store.hive.schema.DrillHiveViewTable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter schemaConfig : SchemaConfig in method public HiveSchema(schemaConfig SchemaConfig, mClient DrillHiveMetaStoreClient, name String) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter mClient : DrillHiveMetaStoreClient in method public HiveSchema(schemaConfig SchemaConfig, mClient DrillHiveMetaStoreClient, name String) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter fs : FileSystem in method protected createAndAddWorkspace(fs FileSystem, name String, path String, permissions short, owner String, group String, workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public load(key String) : LoadingCache<String,HiveReadEntry> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoaderLoader",
    "comment" : "<p>deleted method from deleted class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type Exception to IOException in method public getPhysicalFileFromResource(resource String) : String from class org.apache.drill.BaseTestQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public getPhysicalFileFromResource(resource String) : String from class org.apache.drill.BaseTestQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.hive.HiveTestUtilities",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected org1Users : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected org1Groups : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected org2Users : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected org2Groups : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method public getPhysicalFileFromResource(resource String) : String from class org.apache.drill.BaseTestQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method public executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.hive.HiveTestUtilities",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private plugin : HiveStoragePlugin from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : ExecutionException to e : TException in method package getSelectionBaseOnName(dbName String, t String) : HiveReadEntry from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : ExecutionException to e : TException in method public getSubSchemaNames() : Set<String> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : ExecutionException to e : TException in method public getSubSchema(name String) : AbstractSchema from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter name : String in method public HiveSchema(schemaConfig SchemaConfig, mClient DrillHiveMetaStoreClient, name String) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : TException in method public getSubSchema(name String) : AbstractSchema from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : TException in method public getSubSchemaNames() : Set<String> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : TException in method package getSelectionBaseOnName(dbName String, t String) : HiveReadEntry from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter userName : String in method public getRootSchema(userName String) : SchemaPlus from class org.apache.drill.exec.ops.QueryContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter workspaces : Map<String,WorkspaceConfig> in method protected createAndAddWorkspace(name String, path String, permissions short, owner String, group String, workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter dbName : String in method public TableLoader(dbName String) from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter workspaces : Map<String,WorkspaceConfig> to workspaces : Map<String,WorkspaceConfig> in method private createTestWorkspaces() : Map<String,WorkspaceConfig> from class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter workspaces : Map<String,WorkspaceConfig> to workspaces : Map<String,WorkspaceConfig> in method private createTestWorkspaces() : Map<String,WorkspaceConfig> from class org.apache.drill.exec.impersonation.TestImpersonationMetadata",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable workspaces : Map<String,WorkspaceConfig> to workspaces : Map<String,WorkspaceConfig> in method protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter workspaces : Map<String,WorkspaceConfig> in method protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private databases : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private tableNameLoader : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private tableLoaders : LoadingCache<String,LoadingCache<String,HiveReadEntry>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2022
}, {
  "id" : 1126576,
  "repository" : "https://github.com/apache/zookeeper.git",
  "sha1" : "3fd77b419673ce6ec41e06cdc27558b1d8f4ca06",
  "url" : "https://github.com/apache/zookeeper/commit/3fd77b419673ce6ec41e06cdc27558b1d8f4ca06",
  "author" : "Raúl Gutiérrez Segalés",
  "time" : "6/28/15 4:09 PM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.NIOServerCnxn to public cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.NettyServerCnxn to public cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.apache.zookeeper.server.command.FourLetterCommands from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected consCmd : int from class org.apache.zookeeper.server.ServerCnxn to public consCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected wchcCmd : int from class org.apache.zookeeper.server.ServerCnxn to public wchcCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected dumpCmd : int from class org.apache.zookeeper.server.ServerCnxn to public dumpCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected getTraceMaskCmd : int from class org.apache.zookeeper.server.ServerCnxn to public getTraceMaskCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected setTraceMaskCmd : int from class org.apache.zookeeper.server.ServerCnxn to public setTraceMaskCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected wchsCmd : int from class org.apache.zookeeper.server.ServerCnxn to public wchsCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected cmd2String : HashMap<Integer,String> from class org.apache.zookeeper.server.ServerCnxn to public cmd2String : HashMap<Integer,String> from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected srstCmd : int from class org.apache.zookeeper.server.ServerCnxn to public srstCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected enviCmd : int from class org.apache.zookeeper.server.ServerCnxn to public enviCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected ruokCmd : int from class org.apache.zookeeper.server.ServerCnxn to public ruokCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected wchpCmd : int from class org.apache.zookeeper.server.ServerCnxn to public wchpCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected srvrCmd : int from class org.apache.zookeeper.server.ServerCnxn to public srvrCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected confCmd : int from class org.apache.zookeeper.server.ServerCnxn to public confCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected statCmd : int from class org.apache.zookeeper.server.ServerCnxn to public statCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected mntrCmd : int from class org.apache.zookeeper.server.ServerCnxn to public mntrCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected isroCmd : int from class org.apache.zookeeper.server.ServerCnxn to public isroCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected crstCmd : int from class org.apache.zookeeper.server.ServerCnxn to public crstCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected telnetCloseCmd : int from class org.apache.zookeeper.server.ServerCnxn to public telnetCloseCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private ZK_NOT_SERVING : String from class org.apache.zookeeper.server.NIOServerCnxn to protected ZK_NOT_SERVING : String from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private ZK_NOT_SERVING : String from class org.apache.zookeeper.server.NettyServerCnxn to protected ZK_NOT_SERVING : String from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.ConsCommand moved to org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.StatResetCommand moved to org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.RuokCommand moved to org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.TraceMaskCommand moved to org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.ConfCommand moved to org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.DumpCommand moved to org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.IsroCommand moved to org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.CnxnStatResetCommand moved to org.apache.zookeeper.server.command.CnxnStatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.EnvCommand moved to org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.MonitorCommand moved to org.apache.zookeeper.server.command.MonitorCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cons : ConsCommand to commandExecutor : CommandExecutor in method private checkFourLetterWord(k SelectionKey, len int) : boolean in class org.apache.zookeeper.server.NIOServerCnxn",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cons : ConsCommand to commandExecutor : CommandExecutor in method private checkFourLetterWord(channel Channel, message ChannelBuffer, len int) : boolean in class org.apache.zookeeper.server.NettyServerCnxn",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.CnxnStatResetCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.StatResetCommand to public commandRun() : void from class org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.EnvCommand to public commandRun() : void from class org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.TraceMaskCommand to public commandRun() : void from class org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.StatCommand to public commandRun() : void from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.ConfCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.WatchCommand to public commandRun() : void from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.ConsCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.IsroCommand to public commandRun() : void from class org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.CnxnStatResetCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.RuokCommand to public commandRun() : void from class org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public run() : void from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to public run() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.DumpCommand to public commandRun() : void from class org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.SetTraceMaskCommand to public commandRun() : void from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public start() : void from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to public start() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.IsroCommand to public commandRun() : void from class org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.ConfCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.EnvCommand to public commandRun() : void from class org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.ConsCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public start() : void from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to public start() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.StatCommand to public commandRun() : void from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.WatchCommand to public commandRun() : void from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public run() : void from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to public run() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.SetTraceMaskCommand to public commandRun() : void from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.TraceMaskCommand to public commandRun() : void from class org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.RuokCommand to public commandRun() : void from class org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.DumpCommand to public commandRun() : void from class org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.StatResetCommand to public commandRun() : void from class org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package len : int from class org.apache.zookeeper.server.NIOServerCnxn.StatCommand to private len : int from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package trace : long from class org.apache.zookeeper.server.NIOServerCnxn.SetTraceMaskCommand to package trace : long from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package pw : PrintWriter from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to protected pw : PrintWriter from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package len : int from class org.apache.zookeeper.server.NIOServerCnxn.WatchCommand to package len : int from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package pw : PrintWriter from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to protected pw : PrintWriter from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package len : int from class org.apache.zookeeper.server.NettyServerCnxn.StatCommand to private len : int from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package len : int from class org.apache.zookeeper.server.NettyServerCnxn.WatchCommand to package len : int from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package trace : long from class org.apache.zookeeper.server.NettyServerCnxn.SetTraceMaskCommand to package trace : long from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public execute(serverCnxn ServerCnxn, pwriter PrintWriter, commandCode int, zkServer ZooKeeperServer, factory ServerCnxnFactory) : boolean extracted from private checkFourLetterWord(k SelectionKey, len int) : boolean in class org.apache.zookeeper.server.NIOServerCnxn & moved to class org.apache.zookeeper.server.command.CommandExecutor",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public execute(serverCnxn ServerCnxn, pwriter PrintWriter, commandCode int, zkServer ZooKeeperServer, factory ServerCnxnFactory) : boolean extracted from private checkFourLetterWord(channel Channel, message ChannelBuffer, len int) : boolean in class org.apache.zookeeper.server.NettyServerCnxn & moved to class org.apache.zookeeper.server.command.CommandExecutor",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.StatCommand moved to org.apache.zookeeper.server.command.StatCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.SetTraceMaskCommand moved to org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.WatchCommand moved to org.apache.zookeeper.server.command.WatchCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.zookeeper.server.NettyServerCnxn.CommandThread moved and renamed to org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.StatCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.ConsCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public RuokCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method package TraceMaskCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public SetTraceMaskCommand(pw PrintWriter, serverCnxn ServerCnxn, trace long) from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method package EnvCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method package ConfCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public StatResetCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public CnxnStatResetCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.CnxnStatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public DumpCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public StatCommand(pw PrintWriter, serverCnxn ServerCnxn, len int) from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public ConsCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public WatchCommand(pw PrintWriter, serverCnxn ServerCnxn, len int) from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method package MonitorCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.MonitorCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public IsroCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public AbstractFourLetterCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to public in method public dumpConnectionInfo(pwriter PrintWriter, brief boolean) : void from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public SetTraceMaskCommand(pw PrintWriter, serverCnxn ServerCnxn, trace long) from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public AbstractFourLetterCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to private in attribute private len : int from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to protected in attribute protected pw : PrintWriter from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.CnxnStatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.MonitorCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public confCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public consCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public crstCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public dumpCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public enviCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public getTraceMaskCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public ruokCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public setTraceMaskCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public srvrCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public srstCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public statCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public wchcCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public wchpCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public wchsCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public mntrCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public isroCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public telnetCloseCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public cmd2String : HashMap<Integer,String> from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Class",
    "description" : "Merge Class [org.apache.zookeeper.server.NIOServerCnxn.CommandThread, org.apache.zookeeper.server.NettyServerCnxn.CommandThread] merged to org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public abstract commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to public abstract commandRun() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public abstract commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to public abstract commandRun() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method package CommandThread(pw PrintWriter) from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to public AbstractFourLetterCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method package CommandThread(pw PrintWriter) from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to public AbstractFourLetterCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1127493,
  "repository" : "https://github.com/rstudio/rstudio.git",
  "sha1" : "229d1b60c03a3f8375451c68a6911660a3993777",
  "url" : "https://github.com/rstudio/rstudio/commit/229d1b60c03a3f8375451c68a6911660a3993777",
  "author" : "Jonathan McPherson",
  "time" : "6/30/15 3:32 PM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method public checkForExistingApp(account RSConnectAccount, appName String, onValidated OperationWithInput<Boolean>) : void from class org.rstudio.studio.client.rsconnect.RSConnect to private checkForExistingApp(account RSConnectAccount, appName String, onValidated OperationWithInput<Boolean>) : void from class org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private fireValidatedRSconnectPublish(result RSConnectPublishResult, launchBrowser boolean) : void inlined to public fireRSConnectPublishEvent(result RSConnectPublishResult, launchBrowser boolean) : void in class org.rstudio.studio.client.rsconnect.RSConnect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private isUpdate() : boolean extracted from public getResult() : RSConnectPublishResult in class org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected validate(input T) : boolean renamed to protected validateAsync(input T, onValidated OperationWithInput<Boolean>) : void in class org.rstudio.core.client.widget.Wizard",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method protected validateAsync(input T, onValidated OperationWithInput<Boolean>) : void from class org.rstudio.core.client.widget.Wizard",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected validateAsync(input T, onValidated OperationWithInput<Boolean>) : void extracted from protected validate(input T) : boolean in class org.rstudio.core.client.widget.Wizard & moved to class org.rstudio.core.client.widget.WizardPage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method protected validateAsync(input RSConnectPublishResult, onValidated OperationWithInput<Boolean>) : void in class org.rstudio.studio.client.rsconnect.ui.PublishFilesPage",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public validateResult(onComplete OperationWithInput<Boolean>) : void in class org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isResultValid() : boolean renamed to public validateResult(onComplete OperationWithInput<Boolean>) : void in class org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy",
    "comment" : "<p>Only <span class='blob-code-inner blob-code-marker' data-code-marker='-'> appName_<span class='pl-k'>.</span>validateAppName()</span> is common between the methods. A lot of new functionality added.<br />All references are updated in the same way.<br />https://github.com/rstudio/rstudio/commit/229d1b60c03a3f8375451c68a6911660a3993777?diff=split#diff-517218cb2785a932f796f742f27b0305R108</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private fireValidatedRSconnectPublish(result RSConnectPublishResult, launchBrowser boolean) : void renamed to public fireRSConnectPublishEvent(result RSConnectPublishResult, launchBrowser boolean) : void in class org.rstudio.studio.client.rsconnect.RSConnect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected validate(input RSConnectPublishResult) : boolean renamed to protected validateAsync(input RSConnectPublishResult, onValidated OperationWithInput<Boolean>) : void in class org.rstudio.studio.client.rsconnect.ui.PublishFilesPage",
    "comment" : "<p>All references are updated in the same way<br />https://github.com/rstudio/rstudio/commit/229d1b60c03a3f8375451c68a6911660a3993777?diff=split#diff-abd8ea1b641bab4114d8b2f7ed9a335bR84</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter onValidated : OperationWithInput<Boolean> in method protected validateAsync(input T, onValidated OperationWithInput<Boolean>) : void from class org.rstudio.core.client.widget.Wizard",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public execute(input T) : void from class org.rstudio.core.client.widget.Wizard.Wizard.nextButton_.onClick.page",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private checkForExistingApp(account RSConnectAccount, appName String, onValidated OperationWithInput<Boolean>) : void from class org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter executeOnSuccess : Command in method protected validateAndGo(input T, executeOnSuccess Command) : void from class org.rstudio.core.client.widget.ModalDialog",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter result : RSConnectPublishResult in method public fireRSConnectPublishEvent(result RSConnectPublishResult, launchBrowser boolean) : void from class org.rstudio.studio.client.rsconnect.RSConnect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter launchBrowser : boolean in method public fireRSConnectPublishEvent(result RSConnectPublishResult, launchBrowser boolean) : void from class org.rstudio.studio.client.rsconnect.RSConnect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected validateAsync(input T, onValidated OperationWithInput<Boolean>) : void extracted from protected validateAndGo(input T, executeOnSuccess Command) : void in class org.rstudio.core.client.widget.ModalDialog",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter input : T in method public Wizard(caption String, okCaption String, initialData I, firstPage WizardPage<I,T>, operation ProgressOperationWithInput<T>) from class org.rstudio.core.client.widget.Wizard",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter input : T in method public onClick(arg0 ClickEvent) : void from class org.rstudio.core.client.widget.Wizard.Wizard.new ThemedButton.new ClickHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3785
}, {
  "id" : 1129713,
  "repository" : "https://github.com/gradle/gradle.git",
  "sha1" : "527ac38334000e105daacb2aca25cb345d77c01e",
  "url" : "https://github.com/gradle/gradle/commit/527ac38334000e105daacb2aca25cb345d77c01e",
  "author" : "Gary Hale",
  "time" : "6/30/15 9:10 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private stopped : AtomicBoolean from class org.gradle.play.internal.run.PlayApplicationDeploymentHandle to private stopped : AtomicBoolean from class org.gradle.play.internal.run.PlayApplicationRunnerToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public isRunning() : boolean extracted from public isRunning() : boolean in class org.gradle.play.internal.run.PlayApplicationDeploymentHandle & moved to class org.gradle.play.internal.run.PlayApplicationRunnerToken",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter runner : PlayApplicationRunner to runnerToken : PlayApplicationRunnerToken in method public PlayApplicationDeploymentHandle(id String, runnerToken PlayApplicationRunnerToken) from class org.gradle.play.internal.run.PlayApplicationDeploymentHandle",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute deploymentId : String to playToolProvider : PlayToolProvider in class org.gradle.play.tasks.PlayRun",
    "comment" : "<p>The only evidence of this rename is the replacement of setter method<br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>public</span> <span class='pl-k'>void</span> <span class='pl-en x x-first'>setDeploymentId</span><span class='x'>(</span><span class='pl-smi x'>String</span> <span class='pl-v x x-last'>deploymentId</span>) with <span class='pl-en x x-first'>setPlayToolProvider</span><span class='x'>(</span><span class='pl-smi x'>PlayToolProvider</span> <span class='pl-v x x-last'>playToolProvider</span>)<br />which seem to appear in the same location.<br /></span></p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type runner : PlayApplicationRunner to runnerToken : PlayApplicationRunnerToken in method public PlayApplicationDeploymentHandle(id String, runnerToken PlayApplicationRunnerToken) from class org.gradle.play.internal.run.PlayApplicationDeploymentHandle",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type deploymentId : String to playToolProvider : PlayToolProvider in class org.gradle.play.tasks.PlayRun",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public start(spec PlayRunSpec) : void renamed to public reload() : void in class org.gradle.play.internal.run.PlayApplicationDeploymentHandle",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setDeploymentId(deploymentId String) : void renamed to public setPlayToolProvider(playToolProvider PlayToolProvider) : void in class org.gradle.play.tasks.PlayRun",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter playToolChain : PlayToolChainInternal in method package createPlayRunTask(tasks ModelMap<Task>, binaryContainer BinaryContainer, serviceRegistry ServiceRegistry, configurations PlayPluginConfigurations, projectIdentifier ProjectIdentifier, playToolChain PlayToolChainInternal) : void from class org.gradle.play.plugins.PlayApplicationPlugin.Rules",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private runnerToken : PlayApplicationRunnerToken from class org.gradle.play.internal.run.PlayApplicationDeploymentHandle",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 5368
}, {
  "id" : 1132674,
  "repository" : "https://github.com/orientechnologies/orientdb.git",
  "sha1" : "f50f234b24e6ada29c82ce57830118508bf55d51",
  "url" : "https://github.com/orientechnologies/orientdb/commit/f50f234b24e6ada29c82ce57830118508bf55d51",
  "author" : "laa",
  "time" : "7/6/15 10:20 AM",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method public getAllocatedPages() : long renamed to public getExclusiveWriteCachePagesSize() : long in class com.orientechnologies.orient.core.storage.impl.memory.ODirectMemoryOnlyDiskCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Package",
    "description" : "Move Package com.orientechnologies.orient.core.index.hashindex.local.cache to com.orientechnologies.orient.core.storage.cache.local",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface com.orientechnologies.orient.core.storage.cache.local.OWOWCacheMXBean from class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : "<p>The methods of interface OWOWCacheMXBean<br />long getWriteCacheSize();<br />long getWriteCacheSizeInMB();<br />double getWriteCacheSizeInGB();<br />long getExclusiveWriteCacheSize();<br />long getExclusiveWriteCacheSizeInMB();<br />double getExclusiveWriteCacheSizeInGB();<br />Date getLastFuzzyCheckpointDate();<br />long getLastAmountOfFlushedPages();<br />long getDurationOfLastFlush();<br />did not exist in class OWOWCache before implementing OWOWCacheMXBean</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.HashLRUListTest moved to com.orientechnologies.orient.core.storage.cache.local.HashLRUListTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.LRUEntry moved to com.orientechnologies.orient.core.storage.cache.local.LRUEntry",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.LRUList moved to com.orientechnologies.orient.core.storage.cache.local.LRUList",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OBlockedPageException moved to com.orientechnologies.orient.core.storage.cache.OBlockedPageException",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OPageDataVerificationError moved to com.orientechnologies.orient.core.storage.cache.OPageDataVerificationError",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OReadCache moved to com.orientechnologies.orient.core.storage.cache.OReadCache",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.PageGroup moved to com.orientechnologies.orient.core.storage.cache.local.PageGroup",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.SynchronizedLRUList moved to com.orientechnologies.orient.core.storage.cache.local.SynchronizedLRUList",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OCachePointer moved to com.orientechnologies.orient.core.storage.cache.OCachePointer",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.ConcurrentLRUList moved to com.orientechnologies.orient.core.storage.cache.local.ConcurrentLRUList",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.ReadWriteDiskCacheTest moved to com.orientechnologies.orient.core.storage.cache.local.ReadWriteDiskCacheTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.HashLRUList moved to com.orientechnologies.orient.core.storage.cache.local.HashLRUList",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OWOWCache moved to com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache.PageKey moved to com.orientechnologies.orient.core.storage.cache.local.O2QCache.PageKey",
    "comment" : "<p>Outer class O2QCache is moved<br />http://refactoring.encs.concordia.ca/oracle/refactoring-details/1132674/4679</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache.PinnedPage moved to com.orientechnologies.orient.core.storage.cache.local.O2QCache.PinnedPage",
    "comment" : "<p>Outer class O2QCache is moved<br />http://refactoring.encs.concordia.ca/oracle/refactoring-details/1132674/4679</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache.UpdateCacheResult moved to com.orientechnologies.orient.core.storage.cache.local.O2QCache.UpdateCacheResult",
    "comment" : "<p>Outer class O2QCache is moved<br />http://refactoring.encs.concordia.ca/oracle/refactoring-details/1132674/4679</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAllocatedPages() : long renamed to public getWriteCacheSize() : long in class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addFile(fileName String, writeCache OWriteCache) : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public addFile(fileName String, writeCache OWriteCache) : long from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public clear() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public clear() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public closeFile(fileId long, flush boolean, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public closeFile(fileId long, flush boolean, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public closeStorage(writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public closeStorage(writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public deleteFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public deleteFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public deleteStorage(writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public deleteStorage(writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private get(fileId long, pageIndex long, useOutQueue boolean) : OCacheEntry from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private get(fileId long, pageIndex long, useOutQueue boolean) : OCacheEntry from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package getA1in() : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to package getA1in() : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package getA1out() : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to package getA1out() : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package getAm() : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to package getAm() : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package getMaxSize() : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to package getMaxSize() : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getUsedMemory() : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public getUsedMemory() : long from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private normalizeMemory(maxSize long, pageSize int) : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private normalizeMemory(maxSize long, pageSize int) : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public openFile(fileName String, writeCache OWriteCache) : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public openFile(fileName String, writeCache OWriteCache) : long from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private removeColdestPagesIfNeeded() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private removeColdestPagesIfNeeded() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public truncateFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public truncateFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public acquireExclusiveLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public acquireExclusiveLock() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public acquireSharedLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public acquireSharedLock() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public decrementUsages() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public decrementUsages() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getCachePointer() : OCachePointer from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public getCachePointer() : OCachePointer from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getFileId() : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public getFileId() : long from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getPageIndex() : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public getPageIndex() : long from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getUsagesCount() : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public getUsagesCount() : int from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public incrementUsages() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public incrementUsages() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public releaseExclusiveLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public releaseExclusiveLock() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public releaseSharedLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public releaseSharedLock() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public allocateNewPage(fileId long, writeCache OWriteCache) : OCacheEntry from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public allocateNewPage(fileId long, writeCache OWriteCache) : OCacheEntry from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public load(fileId long, pageIndex long, checkPinnedPages boolean, writeCache OWriteCache) : OCacheEntry from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public load(fileId long, pageIndex long, checkPinnedPages boolean, writeCache OWriteCache) : OCacheEntry from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public hashCode() : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public hashCode() : int from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private updateCache(fileId long, pageIndex long, addNewPages boolean, writeCache OWriteCache) : UpdateCacheResult from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private updateCache(fileId long, pageIndex long, addNewPages boolean, writeCache OWriteCache) : UpdateCacheResult from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public equals(o Object) : boolean from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public equals(o Object) : boolean from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private doLoad(fileId long, pageIndex long, checkPinnedPages boolean, addNewPages boolean, writeCache OWriteCache) : UpdateCacheResult from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private doLoad(fileId long, pageIndex long, checkPinnedPages boolean, addNewPages boolean, writeCache OWriteCache) : UpdateCacheResult from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private remove(fileId long, pageIndex long) : OCacheEntry from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private remove(fileId long, pageIndex long) : OCacheEntry from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private clearFile(fileId long) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private clearFile(fileId long) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private removeColdPagesWithoutCacheLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private removeColdPagesWithoutCacheLock() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public pinPage(cacheEntry OCacheEntry) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public pinPage(cacheEntry OCacheEntry) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private removeColdPagesWithCacheLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private removeColdPagesWithCacheLock() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public release(cacheEntry OCacheEntry, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public release(cacheEntry OCacheEntry, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public toString() : String from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private clearPinnedPages() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private clearPinnedPages() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private clearCacheContent() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private clearCacheContent() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public clearCachePointer() : void extracted from private clearCacheContent() : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache & moved to class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "<p>Extract and Move to the inner class</p><p><span class='pl-en'>Extract and Move to OCacheEntry</span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused a justifiable change"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public clearCachePointer() : void extracted from private clearPinnedPages() : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache & moved to class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to <span class='pl-en'>OCacheEntry</span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused a justifiable change"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public clearCachePointer() : void extracted from private clearFile(fileId long) : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache & moved to class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to class <span class='pl-smi'>OCacheEntry</span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused a justifiable change"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public clearCachePointer() : void extracted from private removeColdPagesWithCacheLock() : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache & moved to class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to <span class='blob-code-inner'><span class='pl-smi'>OCacheEntry</span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused a justifiable change"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public clearCachePointer() : void extracted from private removeColdPagesWithoutCacheLock() : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache & moved to class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to class OCacheEntry</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused a justifiable change"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public clearDirty() : void extracted from public release(cacheEntry OCacheEntry, writeCache OWriteCache) : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache & moved to class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to class OCacheEntry</p><p>Field isDirty renamed to dirty (overlapping refactoring)</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Move Method mechanics caused a justifiable change"
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private MAX_CACHE_OVERFLOW : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private MAX_CACHE_OVERFLOW : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public MIN_CACHE_SIZE : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public MIN_CACHE_SIZE : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private cacheLock : OReadersWriterSpinLock from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private cacheLock : OReadersWriterSpinLock from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private coldPagesRemovalInProgress : AtomicBoolean from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private coldPagesRemovalInProgress : AtomicBoolean from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private pageSize : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private pageSize : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private maxSize : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private maxSize : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private fileLockManager : ONewLockManager from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private fileLockManager : ONewLockManager from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private pageLockManager : ONewLockManager<PageKey> from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private pageLockManager : ONewLockManager<PageKey> from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private pinnedPages : ConcurrentMap<PinnedPage,OCacheEntry> from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private pinnedPages : ConcurrentMap<PinnedPage,OCacheEntry> from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private a1out : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private a1out : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private am : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private am : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private filePages : ConcurrentMap<Long,Set<Long>> from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private filePages : ConcurrentMap<Long,Set<Long>> from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private a1in : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private a1in : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private K_OUT : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private K_OUT : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private K_IN : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private K_IN : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry moved to com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache moved to com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setCachePointer(cachePointer OCachePointer) : void extracted from private updateCache(fileId long, pageIndex long, addNewPages boolean, writeCache OWriteCache) : UpdateCacheResult in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache & moved to class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics",
      "mappingState" : 1,
      "validationComment" : "parameter to argument change, which is part of Extract Method mechanic and justifiable"
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute writePages : ConcurrentSkipListSet<PagedKey> to exclusiveWritePages : ConcurrentSkipListSet<PagedKey> in class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute isDirty : boolean to dirty : boolean in class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute writeCacheSize : ODistributedCounter to exclusiveWriteCacheSize : ODistributedCounter in class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute cachePages : ConcurrentSkipListMap<PagedKey,PageGroup> to writeCachePages : ConcurrentSkipListMap<PagedKey,PageGroup> in class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute cacheSize : ODistributedCounter to writeCacheSize : ODistributedCounter in class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAllocatedPages() : long renamed to public getExclusiveWriteCachePagesSize() : long in class com.orientechnologies.orient.core.storage.cache.OWriteCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type readCache : OReadCache to readCache : O2QCache in class com.orientechnologies.orient.core.engine.local.OEngineLocalPaginated",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addFile(fileName String, fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public addFile(fileName String, fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public openFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public openFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public openFile(fileName String, fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public openFile(fileName String, fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface com.orientechnologies.orient.core.storage.cache.local.O2QCacheMXBean from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache",
    "comment" : "<p>The methods of interface O2QCacheMXBean<br />int getA1InSize();<br />int getA1OutSize();<br />int getAmSize();<br />double getCacheHits();<br />void clearCacheStatistics();<br />long getUsedMemory();<br />long getUsedMemoryInMB();<br />double getUsedMemoryInGB();<br />did not exist in class O2QCache before implementing O2QCacheMXBean</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFlushedLSN() : OLogSequenceNumber renamed to public log(record OWALRecord) : OLogSequenceNumber in class com.orientechnologies.orient.core.storage.impl.local.paginated.wal.OMemoryWriteAheadLog",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getWriteCacheSize() : long from class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public getLastFlushedLsn() : OLogSequenceNumber from class com.orientechnologies.orient.core.storage.cache.OCachePointer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public setLastFlushedLsn(lastFlushedLsn OLogSequenceNumber) : void from class com.orientechnologies.orient.core.storage.cache.OCachePointer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute package dataPointer : OCachePointer from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute package dirty : boolean from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 5282
}, {
  "id" : 1133054,
  "repository" : "https://github.com/WhisperSystems/Signal-Android.git",
  "sha1" : "fa62b9bde224341e0c2d43c0694fc10c4df7336f",
  "url" : "https://github.com/WhisperSystems/Signal-Android/commit/fa62b9bde224341e0c2d43c0694fc10c4df7336f",
  "author" : "Jake McGinty",
  "time" : "7/6/15 8:50 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private init() : void inlined to public EmojiDrawer(context Context, attrs AttributeSet, defStyle int) in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private initializeResources() : void inlined to private initialize() : void in class org.thoughtcrime.securesms.components.emoji.EmojiToggle",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the statement: setImageDrawable(this.emojiToggle) hasn't been inlined"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected onKeyboardShown(keyboardHeight int) : void renamed to protected onKeyboardOpen(keyboardHeight int) : void in class org.thoughtcrime.securesms.components.KeyboardAwareLinearLayout",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private hideEmojiPopup(expectingKeyboard boolean) : void extracted from public onClick(v View) : void in class org.thoughtcrime.securesms.ConversationActivity.ComposeKeyPressedListener & moved to class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : "<p>Extract and Move to the outer class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh, Nikos",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n- Extract Method- Severe changes",
      "mappingState" : 3,
      "validationComment" : "Functionality has been changed by adding a new if condition and statement changes"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private hideEmojiPopup(expectingKeyboard boolean) : void extracted from public onBackPressed() : void in class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private hideEmojiPopup(expectingKeyboard boolean) : void extracted from public onFocusChange(v View, hasFocus boolean) : void in class org.thoughtcrime.securesms.ConversationActivity.ComposeKeyPressedListener & moved to class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : "<p>Extract and Move to the outer class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute rect : Rect to newRect : Rect in class org.thoughtcrime.securesms.components.KeyboardAwareLinearLayout",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute emojiDrawer : Optional<EmojiDrawer> to emojiPopup : Optional<EmojiPopup> in class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute composeText : EmojiEditText to listener : EmojiEventListener in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type emojiDrawer : Optional<EmojiDrawer> to emojiPopup : Optional<EmojiPopup> in class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type composeText : EmojiEditText to listener : EmojiEventListener in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type container : KeyboardAwareLinearLayout to container : LinearLayout in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable emojiDrawer : EmojiDrawer to emojiPopup : EmojiPopup in method private getEmojiPopup() : EmojiPopup in class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter composeText : EmojiEditText to listener : EmojiEventListener in method public setEmojiEventListener(listener EmojiEventListener) : void from class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type composeText : EmojiEditText to listener : EmojiEventListener in method public setEmojiEventListener(listener EmojiEventListener) : void from class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type EmojiDrawer to EmojiPopup in method private getEmojiPopup() : EmojiPopup in class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type emojiDrawer : EmojiDrawer to emojiPopup : EmojiPopup in method private getEmojiPopup() : EmojiPopup from class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type composeText : EmojiEditText to container : LinearLayout in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type container : KeyboardAwareLinearLayout to listener : EmojiEventListener in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setComposeEditText(composeText EmojiEditText) : void renamed to public setEmojiEventListener(listener EmojiEventListener) : void in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public setOnClickListener(listener OnClickListener) : void inlined to private initializeViews() : void in class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOnClickListener(listener OnClickListener) : void renamed to public setToEmoji() : void in class org.thoughtcrime.securesms.components.emoji.EmojiToggle",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public toggle() : void renamed to public setToIme() : void in class org.thoughtcrime.securesms.components.emoji.EmojiToggle",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private initializeResources() : void renamed to private initialize() : void in class org.thoughtcrime.securesms.components.emoji.EmojiToggle",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private init() : void renamed to public EmojiDrawer(context Context, attrs AttributeSet, defStyle int) in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getEmojiDrawer() : EmojiDrawer renamed to private getEmojiPopup() : EmojiPopup in class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @TargetApi(Build.VERSION_CODES.HONEYCOMB) in method public KeyboardAwareLinearLayout(context Context, attrs AttributeSet, defStyle int) from class org.thoughtcrime.securesms.components.KeyboardAwareLinearLayout",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public onClick(v View) : void from class org.thoughtcrime.securesms.ConversationActivity.ComposeKeyPressedListener",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public setOnClickListener(listener OnClickListener) : void from class org.thoughtcrime.securesms.components.emoji.EmojiToggle",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private getViewInset() : int from class org.thoughtcrime.securesms.components.KeyboardAwareLinearLayout",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private rect : Rect from class org.thoughtcrime.securesms.components.KeyboardAwareLinearLayout",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public setToEmoji() : void extracted from private initialize() : void in class org.thoughtcrime.securesms.components.emoji.EmojiToggle",
    "comment" : "<p>private void initializeResources() is inlined to private void initialize()<br />and statement setImageDrawable(this.emojiToggle);<br />is extracted to public void setToEmoji() as<br />setImageDrawable(emojiToggle);</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1255
}, {
  "id" : 1133661,
  "repository" : "https://github.com/real-logic/Aeron.git",
  "sha1" : "4b762c2c70f06b0c5d2cd85866424c46478c827b",
  "url" : "https://github.com/real-logic/Aeron/commit/4b762c2c70f06b0c5d2cd85866424c46478c827b",
  "author" : "Martin Thompson",
  "time" : "7/6/15 12:18 PM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private flowControl : FlowControl from class uk.co.real_logic.aeron.driver.cmd.NewPublicationCmd to private flowControl : FlowControl from class uk.co.real_logic.aeron.driver.NetworkPublication",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public onStatusMessage(termId int, termOffset int, receiverWindowLength int, srcAddress InetSocketAddress) : void extracted from private onStatusMessage(statusMsg StatusMessageFlyweight, srcAddress InetSocketAddress) : void in class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint & moved to class uk.co.real_logic.aeron.driver.NetworkPublication",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move class NetworkPublication</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package flowControl : FlowControl from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint.PublicationAssembly to private flowControl : FlowControl from class uk.co.real_logic.aeron.driver.NetworkPublication",
    "comment" : "<p>The inner class PublicationAssembly is simply deleted and the outher class SendChannelEndpoint is using the fields<br />private final BiInt2ObjectMap&lt;NetworkPublication&gt; driversPublicationByStreamAndSessionId = new BiInt2ObjectMap&lt;&gt;();<br />private final BiInt2ObjectMap&lt;NetworkPublication&gt; sendersPublicationByStreamAndSessionId = new BiInt2ObjectMap&lt;&gt;();<br />to access the NetworkPublication objects<br />replacing the previous fields<br />private final BiInt2ObjectMap&lt;NetworkPublication&gt; publicationByStreamAndSessionIdMap = new BiInt2ObjectMap&lt;&gt;();<br />private final BiInt2ObjectMap&lt;PublicationAssembly&gt; assemblyByStreamAndSessionIdMap = new BiInt2ObjectMap&lt;&gt;();</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable assembly : PublicationAssembly to publication : NetworkPublication in method private onStatusMessage(statusMsg StatusMessageFlyweight, srcAddress InetSocketAddress) : void from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable assembly : PublicationAssembly to publication : NetworkPublication in method private onNakMessage(nakMsg NakFlyweight) : void from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nakMessage : NakFlyweight to nakMsg : NakFlyweight in method private onNakMessage(nakMsg NakFlyweight) : void from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute publicationByStreamAndSessionIdMap : BiInt2ObjectMap<NetworkPublication> to driversPublicationByStreamAndSessionId : BiInt2ObjectMap<NetworkPublication> in class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute assemblyByStreamAndSessionIdMap : BiInt2ObjectMap<PublicationAssembly> to sendersPublicationByStreamAndSessionId : BiInt2ObjectMap<NetworkPublication> in class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type assembly : PublicationAssembly to publication : NetworkPublication in method private onStatusMessage(statusMsg StatusMessageFlyweight, srcAddress InetSocketAddress) : void from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type assembly : PublicationAssembly to publication : NetworkPublication in method private onNakMessage(nakMsg NakFlyweight) : void from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type assemblyByStreamAndSessionIdMap : BiInt2ObjectMap<PublicationAssembly> to sendersPublicationByStreamAndSessionId : BiInt2ObjectMap<NetworkPublication> in class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter flowControl : FlowControl in method public NetworkPublication(channelEndpoint SendChannelEndpoint, clock NanoClock, rawLog RawLog, senderPosition Position, publisherLimit Position, sessionId int, streamId int, initialTermId int, mtuLength int, initialPositionLimit long, systemCounters SystemCounters, flowControl FlowControl, retransmitHandler RetransmitHandler) from class uk.co.real_logic.aeron.driver.NetworkPublication",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter flowControl : FlowControl in method public onNewPublication(publication NetworkPublication, flowControl FlowControl) : void from class uk.co.real_logic.aeron.driver.Sender",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter flowControl : FlowControl in method public newPublication(publication NetworkPublication, flowControl FlowControl) : void from class uk.co.real_logic.aeron.driver.SenderProxy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter flowControl : FlowControl in method public NewPublicationCmd(publication NetworkPublication, flowControl FlowControl) from class uk.co.real_logic.aeron.driver.cmd.NewPublicationCmd",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter flowControl : FlowControl in method public addToDispatcher(publication NetworkPublication, flowControl FlowControl) : void from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1188
}, {
  "id" : 1139791,
  "repository" : "https://github.com/spring-projects/spring-boot.git",
  "sha1" : "84937551787072a4befac29fb48436b3187ac4c6",
  "url" : "https://github.com/spring-projects/spring-boot/commit/84937551787072a4befac29fb48436b3187ac4c6",
  "author" : "Andy Wilkinson",
  "time" : "7/14/15 8:30 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration.SpringBootSecDispatcher moved to org.springframework.boot.cli.compiler.MavenSettingsReader.SpringBootSecDispatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createMirrorSelector(settings Settings) : MirrorSelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createMirrorSelector(settings Settings) : MirrorSelector from class org.springframework.boot.cli.compiler.MavenSettings",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createSettingsDecrypter() : SettingsDecrypter from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createSettingsDecrypter() : SettingsDecrypter from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private decryptSettings(settings Settings) : SettingsDecryptionResult from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private decryptSettings(settings Settings) : SettingsDecryptionResult from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private loadSettings() : Settings from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private loadSettings() : Settings from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private setField(clazz Class<?>, fieldName String, target Object, value Object) : void from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private setField(clazz Class<?>, fieldName String, target Object, value Object) : void from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createProxySelector(proxies List<Proxy>) : ProxySelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createProxySelector(decryptedSettings SettingsDecryptionResult) : ProxySelector from class org.springframework.boot.cli.compiler.MavenSettings",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createAuthenticationSelector(servers List<Server>) : AuthenticationSelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createAuthenticationSelector(decryptedSettings SettingsDecryptionResult) : AuthenticationSelector from class org.springframework.boot.cli.compiler.MavenSettings",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private loadSettings() : Settings from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory to private loadSettings() : Settings from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "target class did not exust in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public readSettings() : MavenSettings extracted from public apply(session DefaultRepositorySystemSession, repositorySystem RepositorySystem) : void in class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration & moved to class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to <span class='blob-code-inner'><span class='pl-en'>MavenSettingsReader</span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private homeDir : String from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private homeDir : String from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.springframework.boot.cli.compiler.MavenSettingsReader from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type settings : Settings to settings : MavenSettings in method public apply(session DefaultRepositorySystemSession, repositorySystem RepositorySystem) : void from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public SettingsXmlRepositorySystemSessionAutoConfiguration() from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to public MavenSettingsReader() from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method package SettingsXmlRepositorySystemSessionAutoConfiguration(homeDir String) from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to public MavenSettingsReader(homeDir String) from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter localRepository : String in method private addDefaultCacheAsRepository(localRepository String, repositoryConfiguration List<RepositoryConfiguration>) : void from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private addDefaultCacheAsRepository(localRepository String, repositoryConfiguration List<RepositoryConfiguration>) : void from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public MavenSettingsReader(homeDir String) from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private loadSettings() : Settings from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable session : DefaultRepositorySystemSession in method private assertSessionCustomization(userHome String) : void from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable localRepository : String to localRepository : String in method private getLocalRepositoryDirectory(localRepository String) : File from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2343
}, {
  "id" : 1141077,
  "repository" : "https://github.com/spring-projects/spring-security.git",
  "sha1" : "fcc9a34356817d93c24b5ccf3107ec234a28b136",
  "url" : "https://github.com/spring-projects/spring-security/commit/fcc9a34356817d93c24b5ccf3107ec234a28b136",
  "author" : "Rob Winch",
  "time" : "7/14/15 4:49 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private doSaveContext() : void renamed to protected onResponseCommitted() : void in class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getOutputStream() : ServletOutputStream from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public getOutputStream() : ServletOutputStream from class org.springframework.security.web.context.OnCommittedResponseWrapper",
    "comment" : "It is a extract superclass",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getWriter() : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public getWriter() : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper",
    "comment" : "It is a extract superclass",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public sendError(sc int, msg String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendError(sc int, msg String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
    "comment" : "It is a extract superclass",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public sendRedirect(location String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendRedirect(location String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
    "comment" : "It is a extract superclass",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public flushBuffer() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public flushBuffer() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
    "comment" : "It is a extract superclass",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public checkError() : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public checkError() : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public equals(obj Object) : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public equals(obj Object) : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public format(l Locale, format String, args Object...) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public format(l Locale, format String, args Object...) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public hashCode() : int from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public hashCode() : int from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public printf(l Locale, format String, args Object...) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public printf(l Locale, format String, args Object...) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public toString() : String from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public equals(obj Object) : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public equals(obj Object) : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public hashCode() : int from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public hashCode() : int from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public toString() : String from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(buf char[], off int, len int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public write(buf char[], off int, len int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(b byte[], off int, len int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public write(b byte[], off int, len int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public append(c char) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public append(c char) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(b boolean) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(b boolean) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(b boolean) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(b boolean) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public println() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public close() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public close() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public close() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public close() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public flush() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public flush() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public flush() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public flush() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println(d double) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(d double) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public disableOnResponseCommitted() : void extracted from public disableSaveOnResponseCommitted() : void in class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper & moved to class org.springframework.security.web.context.OnCommittedResponseWrapper",
    "comment" : "<p>Extract and Move to parent class</p><p>Extract and Move to class <span class='blob-code-inner'><span class='pl-en'>OnCommittedResponseWrapper (superType of&nbsp; SaveContextOnUpdateOrErrorResponseWrapper)<br /></span></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private delegate : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to private delegate : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private delegate : ServletOutputStream from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to private delegate : ServletOutputStream from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : "It is a class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.springframework.security.web.context.OnCommittedResponseWrapper from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public sendError(sc int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendError(sc int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
    "comment" : "<p>Part of Extract Superclass refactoring</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter arg0 : String to s : String in method public print(s String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(c int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public write(c int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(d double) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(d double) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public printf(format String, args Object...) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public printf(format String, args Object...) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(f float) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(f float) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(d double) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(d double) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(s String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(s String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(i int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(i int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public format(format String, args Object...) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public format(format String, args Object...) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(c char) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(c char) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(l long) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(l long) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(l long) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(l long) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(b byte[]) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public write(b byte[]) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println(i int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(i int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(i int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(i int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(b int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public write(b int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println(l long) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(l long) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(s String, off int, len int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public write(s String, off int, len int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(s char[]) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(s String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println(s String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(s String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(obj Object) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(obj Object) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(c char) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(c char) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(s String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public write(s String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public append(csq CharSequence, start int, end int) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public append(csq CharSequence, start int, end int) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public append(csq CharSequence) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public append(csq CharSequence) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println(f float) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(f float) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println(c char) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(c char) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println(b boolean) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(b boolean) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(buf char[]) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public write(buf char[]) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(f float) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(f float) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4803
}, {
  "id" : 1141078,
  "repository" : "https://github.com/spring-projects/spring-security.git",
  "sha1" : "08b1b56e2cd5ad72126f4bbeb15a47d9b104dfff",
  "url" : "https://github.com/spring-projects/spring-security/commit/08b1b56e2cd5ad72126f4bbeb15a47d9b104dfff",
  "author" : "Rob Winch",
  "time" : "7/14/15 4:48 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private doSaveContext() : void renamed to protected onResponseCommitted() : void in class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getOutputStream() : ServletOutputStream from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public getOutputStream() : ServletOutputStream from class org.springframework.security.web.context.OnCommittedResponseWrapper",
    "comment" : "it is a extract super class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getWriter() : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public getWriter() : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper",
    "comment" : "it is a extract super class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public sendError(sc int, msg String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendError(sc int, msg String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
    "comment" : "it is a extract super class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public sendRedirect(location String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendRedirect(location String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
    "comment" : "it is a extract super class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public flushBuffer() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public flushBuffer() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
    "comment" : "it is a extract super class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public checkError() : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public checkError() : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public equals(obj Object) : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public equals(obj Object) : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public format(l Locale, format String, args Object...) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public format(l Locale, format String, args Object...) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public hashCode() : int from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public hashCode() : int from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public printf(l Locale, format String, args Object...) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public printf(l Locale, format String, args Object...) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public toString() : String from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public equals(obj Object) : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public equals(obj Object) : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public hashCode() : int from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public hashCode() : int from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public toString() : String from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(buf char[], off int, len int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public write(buf char[], off int, len int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(b byte[], off int, len int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public write(b byte[], off int, len int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public append(c char) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public append(c char) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(b boolean) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(b boolean) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(b boolean) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(b boolean) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public println() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public close() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public close() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public close() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public close() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public flush() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public flush() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public flush() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public flush() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "the method existed in the target class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println(d double) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(d double) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public disableOnResponseCommitted() : void extracted from public disableSaveOnResponseCommitted() : void in class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper & moved to class org.springframework.security.web.context.OnCommittedResponseWrapper",
    "comment" : "<p>Extract and Move to the inner class</p><p>Extract and move to super class actually</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private delegate : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to private delegate : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private delegate : ServletOutputStream from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to private delegate : ServletOutputStream from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : "It is a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.springframework.security.web.context.OnCommittedResponseWrapper from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter arg0 : String to s : String in method public print(s String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public sendError(sc int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendError(sc int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(c int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public write(c int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(d double) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(d double) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public printf(format String, args Object...) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public printf(format String, args Object...) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(f float) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(f float) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(d double) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(d double) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(s String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(s String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(i int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(i int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public format(format String, args Object...) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public format(format String, args Object...) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(c char) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(c char) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(l long) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(l long) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(l long) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(l long) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(b byte[]) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public write(b byte[]) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println(i int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(i int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(i int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(i int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(b int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public write(b int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println(l long) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(l long) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(s String, off int, len int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public write(s String, off int, len int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(s char[]) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(s String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println(s String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(s String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(obj Object) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(obj Object) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(c char) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(c char) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(s String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public write(s String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public append(csq CharSequence, start int, end int) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public append(csq CharSequence, start int, end int) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public append(csq CharSequence) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public append(csq CharSequence) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println(f float) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(f float) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println(c char) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(c char) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public println(b boolean) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(b boolean) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public write(buf char[]) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public write(buf char[]) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public print(f float) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(f float) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 764
}, {
  "id" : 1142210,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "6ad1dcbfef36821a71cbffa301c58d1c3ffe8d62",
  "url" : "https://github.com/JetBrains/intellij-community/commit/6ad1dcbfef36821a71cbffa301c58d1c3ffe8d62",
  "author" : "Anton Makeev",
  "time" : "7/16/15 8:31 AM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method protected createMainModule(moduleType ModuleType) : Module from class com.intellij.testFramework.LightPlatformTestCase to public createMainModule(project Project) : Module from class com.intellij.testFramework.LightProjectDescriptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setUpProject(project Project) : ProjectInfo extracted from private initProject(descriptor LightProjectDescriptor) : void in class com.intellij.testFramework.LightPlatformTestCase & moved to class com.intellij.testFramework.LightProjectDescriptor",
    "comment" : "<p>It is extracted and move to class <span class='blob-code-inner'><span class='pl-en'>LightProjectDescriptor. </span></span></p><p><span class='blob-code-inner'><span class='pl-en'>Since RefDiff does not detect <br /></span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getSdk() : Sdk from class com.intellij.testFramework.LightProjectDescriptor.Empty to public getSdk() : Sdk from class com.intellij.testFramework.LightProjectDescriptor",
    "comment" : "new",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getModuleType() : ModuleType from class com.intellij.testFramework.LightProjectDescriptor.Empty to public getModuleType() : ModuleType from class com.intellij.testFramework.LightProjectDescriptor",
    "comment" : "new",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ModuleType to Module in method public compute() : Module in class com.intellij.testFramework.LightProjectDescriptor.createMainModule.runWriteAction",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type dummyRoot : VirtualFile to projectInfo : LightProjectDescriptor.ProjectInfo in method protected run() : void in class com.intellij.testFramework.LightPlatformTestCase.initProject.throwException.execute",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Nullable in method public getSdk() : Sdk from class com.intellij.testFramework.LightPlatformTestCase.SimpleLightProjectDescriptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Nullable in method public getSdk() : Sdk from class com.intellij.testFramework.LightProjectDescriptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public getModuleType() : ModuleType from class com.intellij.testFramework.LightProjectDescriptor.Empty",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public getSdk() : Sdk from class com.intellij.testFramework.LightProjectDescriptor.Empty",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Nullable in attribute private mySdk : Sdk from class com.intellij.testFramework.LightPlatformTestCase.SimpleLightProjectDescriptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @Nullable in parameter sdk : Sdk in method package SimpleLightProjectDescriptor(moduleType ModuleType, sdk Sdk) from class com.intellij.testFramework.LightPlatformTestCase.SimpleLightProjectDescriptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected configureModule(module Module, model ModifiableRootModel, contentEntry ContentEntry) : void from class com.intellij.testFramework.LightProjectDescriptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to public in method public createMainModule(project Project) : Module from class com.intellij.testFramework.LightProjectDescriptor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method protected createMainModule(moduleType ModuleType) : Module from class com.intellij.testFramework.LightPlatformTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute public EMPTY_PROJECT_DESCRIPTOR : LightProjectDescriptor from class com.intellij.testFramework.LightProjectDescriptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier static in attribute public EMPTY_PROJECT_DESCRIPTOR : LightProjectDescriptor from class com.intellij.testFramework.LightProjectDescriptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter project : Project in method public createMainModule(project Project) : Module from class com.intellij.testFramework.LightProjectDescriptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter moduleType : ModuleType in method protected createMainModule(moduleType ModuleType) : Module from class com.intellij.testFramework.LightPlatformTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Type Declaration Kind",
    "description" : "Change Type Declaration Kind interface to class in type com.intellij.testFramework.LightProjectDescriptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Collapse Hierarchy",
    "description" : "Collapse Hierarchy com.intellij.testFramework.LightProjectDescriptor.Empty to com.intellij.testFramework.LightProjectDescriptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 15903
}, {
  "id" : 1143517,
  "repository" : "https://github.com/BuildCraft/BuildCraft.git",
  "sha1" : "a5cdd8c4b10a738cb44819d7cc2fee5f5965d4a0",
  "url" : "https://github.com/BuildCraft/BuildCraft/commit/a5cdd8c4b10a738cb44819d7cc2fee5f5965d4a0",
  "author" : "Hea3veN",
  "time" : "7/17/15 8:32 AM",
  "refactorings" : [ {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute public index : BlockIndex from class buildcraft.api.robots.ResourceId to public index : BlockIndex from class buildcraft.api.robots.ResourceIdBlock",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute public side : ForgeDirection from class buildcraft.api.robots.ResourceId to public side : ForgeDirection from class buildcraft.api.robots.ResourceIdBlock",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getAvailableRequests(station DockingStation) : Collection<StackRequest> extracted from private getOrderFromRequestingStation(station DockingStation, take boolean) : StackRequest in class buildcraft.robotics.ai.AIRobotSearchStackRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Lots of added statements"
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute public index : BlockIndex from class buildcraft.api.robots.ResourceId to private index : BlockIndex from class buildcraft.api.robots.ResourceIdRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceId to public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceIdBlock",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceId to public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceIdRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute public side : ForgeDirection from class buildcraft.api.robots.ResourceId to private side : ForgeDirection from class buildcraft.api.robots.ResourceIdRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private releaseCurrentRequest() : void extracted from public delegateAIEnded(ai AIRobot) : void in class buildcraft.robotics.boards.BoardRobotDelivery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Lots of added statements"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public provideItemsForRequest(i int, stack ItemStack) : ItemStack renamed to public offerItem(i int, stack ItemStack) : ItemStack in class buildcraft.robotics.TileRequester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public provideItemsForRequest(i int, stack ItemStack) : ItemStack renamed to public offerItem(slot int, stack ItemStack) : ItemStack in class buildcraft.builders.TileBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumberOfRequests() : int renamed to public getRequestsCount() : int in class buildcraft.builders.TileBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumberOfRequests() : int renamed to public getRequestsCount() : int in class buildcraft.robotics.TileRequester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAvailableRequest(i int) : StackRequest renamed to public getRequest(slot int) : ItemStack in class buildcraft.builders.TileBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setStation(station DockingStation) : void extracted from private getOrderFromRequestingStation(station DockingStation, take boolean) : StackRequest in class buildcraft.robotics.ai.AIRobotSearchStackRequest & moved to class buildcraft.robotics.StackRequest",
    "comment" : "<p>Extract and Move to the inner class</p><p>This is extract to other class indeed</p><p>There is one statement (setting&nbsp;<span class='blob-code-inner'>station) which is now being extracted as a setter. The setter does other stuff as well.</span></p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public station : DockingStation from class buildcraft.api.robots.StackRequest to public station : DockingStation from class buildcraft.robotics.ai.AIRobotSearchStackRequest",
    "comment" : "<p>new</p><p>DockingStation still exists, it has been moved apparently. It still has statation</p>",
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter i : int to slot : int in method public offerItem(slot int, stack ItemStack) : ItemStack from class buildcraft.builders.TileBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable request : StackRequest to requestStack : ItemStack in method public getRequest(slot int) : ItemStack from class buildcraft.builders.TileBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method protected readFromNBT(nbt NBTTagCompound) : void from class buildcraft.api.robots.ResourceId to protected readFromNBT(nbt NBTTagCompound) : void from class buildcraft.api.robots.ResourceIdBlock",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter i : int to slot : int in method public getRequest(slot int) : ItemStack from class buildcraft.api.robots.IRequestProvider",
    "comment" : "<p>Interface method</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter i : int to slot : int in method public offerItem(slot int, stack ItemStack) : ItemStack from class buildcraft.api.robots.IRequestProvider",
    "comment" : "<p>Interface method</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter i : int to slot : int in method public getRequest(slot int) : ItemStack from class buildcraft.builders.TileBuilder",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>public</span> <span class='pl-smi x x-first'>StackRequest</span> <span class='pl-en x x-last'>getAvailableRequest</span>(<span class='pl-k'>int</span> <span class='pl-v x x-first x-last'>i</span>)</span> renamed to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>public</span> <span class='pl-smi x x-first'>ItemStack</span> <span class='pl-en x x-last'>getRequest</span>(<span class='pl-k'>int</span> <span class='pl-v x x-first x-last'>slot</span>)</span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAvailableRequest(i int) : StackRequest renamed to public getRequest(slot int) : ItemStack in class buildcraft.api.robots.IRequestProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public provideItemsForRequest(i int, stack ItemStack) : ItemStack renamed to public offerItem(slot int, stack ItemStack) : ItemStack in class buildcraft.api.robots.IRequestProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumberOfRequests() : int renamed to public getRequestsCount() : int in class buildcraft.api.robots.IRequestProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getRequest(index int) : ItemStack renamed to public getRequestTemplate(index int) : ItemStack in class buildcraft.robotics.TileRequester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type StackRequest to ItemStack in method public getRequest(slot int) : ItemStack from class buildcraft.builders.TileBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type StackRequest to ItemStack in method public getRequest(slot int) : ItemStack from class buildcraft.api.robots.IRequestProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type request : StackRequest to requestStack : ItemStack in method public getRequest(slot int) : ItemStack from class buildcraft.builders.TileBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type StackRequest to ItemStack in method public getRequest(i int) : ItemStack in class buildcraft.robotics.TileRequester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type r : StackRequest to request : ItemStack in method public getRequest(i int) : ItemStack from class buildcraft.robotics.TileRequester",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public hashCode() : int from class buildcraft.api.robots.ResourceId to public hashCode() : int from class buildcraft.api.robots.ResourceIdRequest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getStack() : ItemStack extracted from private getOrderFromRequestingStation(station DockingStation, take boolean) : StackRequest in class buildcraft.robotics.ai.AIRobotSearchStackRequest & moved to class buildcraft.robotics.StackRequest",
    "comment" : "<p>Field access replaced with getter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public hashCode() : int from class buildcraft.api.robots.ResourceId to public hashCode() : int from class buildcraft.api.robots.ResourceIdBlock",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getStack() : ItemStack extracted from public delegateAIEnded(ai AIRobot) : void in class buildcraft.robotics.ai.AIRobotDeliverRequested & moved to class buildcraft.robotics.StackRequest",
    "comment" : "<p>I think this is more replace field with getter and not extract method.</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package getNumberOfRequests() : int renamed to package getRequestsCount() : int in class buildcraft.api.robots.IRequestProvider",
    "comment" : "<p>abstract method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getStack() : ItemStack extracted from public delegateAIEnded(ai AIRobot) : void in class buildcraft.robotics.boards.BoardRobotDelivery & moved to class buildcraft.robotics.StackRequest",
    "comment" : "<p>Field Access replaced with getter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAvailableRequest(i int) : StackRequest renamed to public getRequest(i int) : ItemStack in class buildcraft.robotics.TileRequester",
    "comment" : "<p><a href='https://github.com/BuildCraft/BuildCraft/commit/a5cdd8c4b10a738cb44819d7cc2fee5f5965d4a0?diff=split#diff-f52cf58b7470704577d547843dcf561aL171'>https://github.com/BuildCraft/BuildCraft/commit/a5cdd8c4b10a738cb44819d7cc2fee5f5965d4a0?diff=split#diff-f52cf58b7470704577d547843dcf561aL171</a></p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected readFromNBT(nbt NBTTagCompound) : void from class buildcraft.api.robots.ResourceIdBlock",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private index : BlockIndex from class buildcraft.api.robots.ResourceIdRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private side : ForgeDirection from class buildcraft.api.robots.ResourceIdRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type compareId : ResourceId to compareId : ResourceIdRequest in method public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceIdRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type compareId : ResourceId to compareId : ResourceIdBlock in method public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceIdBlock",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2449
}, {
  "id" : 1145105,
  "repository" : "https://github.com/MovingBlocks/Terasology.git",
  "sha1" : "543a9808a85619dbe5acc2373cb4fe5344442de7",
  "url" : "https://github.com/MovingBlocks/Terasology/commit/543a9808a85619dbe5acc2373cb4fe5344442de7",
  "author" : "Immortius",
  "time" : "7/17/15 3:07 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.terasology.engine.subsystem.ThreadManagerSubsystem moved to org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private initTimer(context Context) : void inlined to public preInitialise(context Context) : void in class org.terasology.engine.subsystem.lwjgl.LwjglTimer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private time : EngineTime from class org.terasology.engine.TerasologyEngine to private time : EngineTime from class org.terasology.engine.subsystem.lwjgl.LwjglTimer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private time : EngineTime from class org.terasology.engine.TerasologyEngine to private time : EngineTime from class org.terasology.engine.subsystem.headless.HeadlessTimer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.terasology.engine.subsystem.ThreadManager moved to org.terasology.engine.subsystem.common.ThreadManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private initOpenAL(context Context) : void inlined to public initialise(rootContext Context) : void in class org.terasology.engine.subsystem.lwjgl.LwjglAudio",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename Parameter on top of the Inline Method"
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.terasology.engine.subsystem.lwjgl.LwjglCustomViewPort renamed to org.terasology.engine.subsystem.lwjgl.LwjglPortlet",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.headless.HeadlessAudio",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglAudio",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglInput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shutdown(config Config) : void renamed to public preShutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : "<p>preShutdown() is a new method added to interface <span class='blob-code-inner'><span class='pl-en'>EngineSubsystem</span>. Parameter config was removed from <span class='pl-en'>shutdown</span>(<span class='pl-smi'>Config</span> <span class='pl-v'>config</span>);<br />However, the bodies of the methods are almost identical.<br /></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private createSubsystemList() : Collection<EngineSubsystem> renamed to private populateSubsystems(builder TerasologyEngineBuilder) : void in class org.terasology.engine.Terasology",
    "comment" : "<p>Seems TP</p><p>Nikos: The call inside main() has been renamed too.<br />Before: <span class='blob-code-inner'><span class='pl-smi'>TerasologyEngine</span> engine <span class='pl-k'>=</span> <span class='pl-k'>new</span> <span class='pl-smi'>TerasologyEngine</span>(createSubsystemList());<br /></span><span class='blob-code-inner'>After: <span class='pl-smi'>TerasologyEngineBuilder</span> builder <span class='pl-k'>=</span> <span class='pl-k'>new</span> <span class='pl-smi'>TerasologyEngineBuilder</span>();&nbsp;&nbsp; populateSubsystems(builder);<br /></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public shutdown(config Config) : void from class org.terasology.engine.subsystem.headless.HeadlessAudio to package shutdown() : void from class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public shutdown(config Config) : void from class org.terasology.engine.subsystem.headless.HeadlessInput to package shutdown() : void from class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private validateServerIdentity() : boolean from class org.terasology.engine.TerasologyEngine to private validateServerIdentity() : boolean from class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
    "comment" : "<p>Matin: TP</p><p>Nikos: After the move <span class='blob-code-inner'><span class='pl-k'>import</span> <span class='pl-smi'>org.terasology.engine.subsystem.common.ConfigurationSubsystem</span></span> is added to org.terasology.engine.TerasologyEngine</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private restartThreads() : void from class org.terasology.engine.subsystem.ThreadManagerSubsystem to private restartThreads() : void from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : "move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private stopThreads() : void from class org.terasology.engine.subsystem.ThreadManagerSubsystem to private stopThreads() : void from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : "move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public submitTask(name String, task Runnable) : void from class org.terasology.engine.subsystem.ThreadManagerSubsystem to public submitTask(name String, task Runnable) : void from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : "move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public isFullscreen() : boolean from class org.terasology.engine.TerasologyEngine to public isFullscreen() : boolean from class org.terasology.engine.subsystem.lwjgl.LwjglDisplayDevice",
    "comment" : "<p>Method isFullScreen() was added to interface DisplayDevice, and all subclasses had to implement this method. There is no actual move.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public build() : TerasologyEngine extracted from public run() : void in class org.terasology.editor.TeraEd & moved to class org.terasology.engine.TerasologyEngineBuilder",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private commonThreadPool : TaskMaster<Task> from class org.terasology.engine.subsystem.ThreadManagerSubsystem to private commonThreadPool : TaskMaster<Task> from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : "move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.terasology.engine.subsystem.ThreadManagerSubsystem to private logger : Logger from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : "move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private config : Config from class org.terasology.engine.TerasologyEngine to private config : Config from class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
    "comment" : "<p>The moved attribute config is used by the moved methods <span class='blob-code-inner'><span class='pl-en'>checkServerIdentity</span>()</span>, <span class='blob-code-inner'><span class='pl-en'>validateServerIdentity</span>(), <span class='pl-en'>preInitialise</span>(), <span class='pl-en'>shutdown</span>()<br /></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable lwjglCustomViewPort : LwjglCustomViewPort to lwjglPortlet : LwjglPortlet in method public run() : void from class org.terasology.editor.TeraEd",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable te : TerasologyEngine to display : DisplayDevice in method public fullscreen() : String from class org.terasology.logic.console.commands.CoreCommands",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter newContext : Context to rootContext : Context in method public initialise(rootContext Context) : void from class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : Context to rootContext : Context in method public postInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.lwjgl.LwjglInput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute subsystems : Deque<EngineSubsystem> to allSubsystems : Deque<EngineSubsystem> in class org.terasology.engine.TerasologyEngine",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute context : Context to config : RenderingConfig in class org.terasology.engine.subsystem.lwjgl.LwjglDisplayDevice",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute context : Context to rootContext : Context in class org.terasology.engine.TerasologyEngine",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : Context to rootContext : Context in method public initialise(rootContext Context) : void from class org.terasology.engine.subsystem.lwjgl.LwjglAudio",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : Context to rootContext : Context in method public initialise(rootContext Context) : void from class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : Context to rootContext : Context in method public preInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter newContext : Context to rootContext : Context in method public postInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shutdown(config Config) : void renamed to public preShutdown() : void in class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type lwjglCustomViewPort : LwjglCustomViewPort to lwjglPortlet : LwjglPortlet in method public run() : void from class org.terasology.editor.TeraEd",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type context : Context to config : RenderingConfig in class org.terasology.engine.subsystem.lwjgl.LwjglDisplayDevice",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type te : TerasologyEngine to display : DisplayDevice in method public fullscreen() : String from class org.terasology.logic.console.commands.CoreCommands",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute time : EngineTime to timeSubsystem : TimeSubsystem in class org.terasology.engine.TerasologyEngine",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'>context<span class='pl-k'>.</span>put(<span class='pl-smi'>Game</span><span class='pl-k'>.</span>class, <span class='pl-k'>new</span> <span class='pl-smi'>Game</span>(<span class='pl-c1'>this</span>, time));</span> -&gt; <span class='blob-code-inner blob-code-marker' data-code-marker=' '>rootContext<span class='pl-k'>.</span>put(<span class='pl-smi'>Game</span><span class='pl-k'>.</span>class, <span class='pl-k'>new</span> <span class='pl-smi'>Game</span>(<span class='pl-c1'>this</span>, timeSubsystem<span class='pl-k'>.</span>getEngineTime()));<br /></span>TimeSubSystem contains EngineTime</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : Context to rootContext : Context in method preInitialise(rootContext Context) : void in class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : "<p>interface methods</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : Context to rootContext : Context in method initialise(rootContext Context) : void in class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : "<p>interface methods</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type time : EngineTime to timeSubsystem : TimeSubsystem in class org.terasology.engine.TerasologyEngine",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type engine : TerasologyEngine to builder : TerasologyEngineBuilder in method public main(args String[]) : void in class org.terasology.engine.Terasology",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>variable still exists in child commit<br />TerasologyEngine</span> engine <span class='pl-k'>=</span> builder<span class='pl-k'>.</span>build();</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private initConfig() : void from class org.terasology.engine.TerasologyEngine to public preInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private checkServerIdentity() : void extracted from private initConfig() : void in class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public postUpdate(currentState GameState, delta float) : void renamed to public preUpdate(currentState GameState, delta float) : void in class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public preUpdate(currentState GameState, delta float) : void renamed to public postUpdate(currentState GameState, delta float) : void in class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public postInitialise(context Context) : void renamed to public preInitialise(context Context) : void in class org.terasology.engine.subsystem.lwjgl.LwjglTimer",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private initTimer(context Context) : void renamed to public getEngineTime() : EngineTime in class org.terasology.engine.subsystem.lwjgl.LwjglTimer",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.headless.HeadlessGraphics",
    "comment" : "<p>Method <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>public</span> <span class='pl-k'>void</span> shutdown(<span class='pl-smi x x-first'>Config</span><span class='x x-last'> config</span>)</span> exists in parent commit. Parmeter Config is removed.</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public initialise(newContext Context) : void renamed to public getName() : String in class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public preUpdate(currentState GameState, delta float) : void renamed to public initialise(rootContext Context) : void in class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private initOpenAL(context Context) : void renamed to public initialise(rootContext Context) : void in class org.terasology.engine.subsystem.lwjgl.LwjglAudio",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public preInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
    "comment" : "<p>due to Move And Rename Method private initConfig() : void from class org.terasology.engine.TerasologyEngine to public preInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.common.ConfigurationSubsystem</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter rootContext : Context in method public preInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter config : Config in method public shutdown(config Config) : void from class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter config : Config in method private initDisplay(config Config, lwjglDisplay LwjglDisplayDevice) : void from class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter config : Config in method public shutdown(config Config) : void from class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public shutdown(config Config) : void from class org.terasology.engine.subsystem.headless.HeadlessAudio",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public shutdown(config Config) : void from class org.terasology.engine.subsystem.headless.HeadlessInput",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public postUpdate(currentState GameState, delta float) : void from class org.terasology.engine.subsystem.headless.HeadlessTimer",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public shutdown(config Config) : void from class org.terasology.engine.subsystem.lwjgl.LwjglAudio",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public shutdown(config Config) : void from class org.terasology.engine.subsystem.lwjgl.LwjglInput",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public registerCoreAssetTypes(assetTypeManager ModuleAwareAssetTypeManager) : void from class org.terasology.engine.subsystem.lwjgl.LwjglTimer",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public preInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : Context to rootContext : Context in method public preInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable rc : RenderingConfig in method private initDisplay(config Config, lwjglDisplay LwjglDisplayDevice) : void from class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable t : RuntimeException to e : RuntimeException in method private cleanup() : void from class org.terasology.engine.TerasologyEngine",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter config : Config in method public shutdown(config Config) : void from class org.terasology.engine.subsystem.headless.HeadlessGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2583
}, {
  "id" : 1146882,
  "repository" : "https://github.com/querydsl/querydsl.git",
  "sha1" : "e1aa31cff985e2a0c2babf4da96dc0a538d5e514",
  "url" : "https://github.com/querydsl/querydsl/commit/e1aa31cff985e2a0c2babf4da96dc0a538d5e514",
  "author" : "Timo Westkämper",
  "time" : "7/22/15 5:03 PM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method private escapeLiteral(str String) : String from class com.querydsl.jpa.JPQLSerializer to private escapeLiteral(str String) : String from class com.querydsl.jpa.JPQLTemplates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public asLiteral(constant Object) : String extracted from public visitLiteral(constant Object) : void in class com.querydsl.jpa.JPQLSerializer & moved to class com.querydsl.jpa.JPQLTemplates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : " Severe changes",
      "mappingState" : 3,
      "validationComment" : "All the mappings and replacements are justifiable except for the Line 202 in the child commit, which is new added and non-justifiable."
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1147651,
  "repository" : "https://github.com/google/guava.git",
  "sha1" : "31fc19200207ccadc45328037d8a2a62b617c029",
  "url" : "https://github.com/google/guava/commit/31fc19200207ccadc45328037d8a2a62b617c029",
  "author" : "bul",
  "time" : "7/24/15 2:38 PM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method private digit(c char) : int from class com.google.common.primitives.Ints to private digit(c char) : int from class com.google.common.primitives.Longs",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public tryParse(string String, radix int) : Long extracted from public tryParse(string String) : Long in class com.google.common.primitives.Longs",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "if condition has been added - the Extract and Move refactoring from class Ints may be pure"
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private asciiDigits : byte[] from class com.google.common.primitives.Ints to private asciiDigits : byte[] from class com.google.common.primitives.Longs",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public tryParse(string String, radix int) : Long extracted from package tryParse(string String, radix int) : Integer in class com.google.common.primitives.Ints & moved to class com.google.common.primitives.Longs",
    "comment" : "<p>Extract and Move to the inner class</p><p>The method delegates to the other method which has been extracted within the same commit.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics \nTolerable Changes in the body \n Severe changes",
      "mappingState" : 3,
      "validationComment" : "type replacements, which are justifiable"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testHashCode() : void from class com.google.common.primitives.LongsTest to public testHashCode() : void from class com.google.common.primitives.LongsTest",
    "comment" : "<p>same src and targe method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testLexicographicalComparatorSerializable() : void from class com.google.common.primitives.IntsTest to public testLexicographicalComparatorSerializable() : void from class com.google.common.primitives.IntsTest",
    "comment" : "<p>same src and trgt methods</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testNulls() : void from class com.google.common.primitives.LongsTest to public testNulls() : void from class com.google.common.primitives.LongsTest",
    "comment" : "<p>same src and trget methods</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testStringConverter_nullPointerTester() : void from class com.google.common.primitives.LongsTest to public testStringConverter_nullPointerTester() : void from class com.google.common.primitives.LongsTest",
    "comment" : "<p>same src and target methods</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testToByteArray() : void from class com.google.common.primitives.IntsTest to public testToByteArray() : void from class com.google.common.primitives.IntsTest",
    "comment" : "<p>sam src and target methods</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toByteArray(value int) : byte[] from class com.google.common.primitives.Ints to public toByteArray(value int) : byte[] from class com.google.common.primitives.Ints",
    "comment" : "<p>same src and target methods</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testFromByteArrayFails() : void from class com.google.common.primitives.IntsTest to public testFromByteArrayFails() : void from class com.google.common.primitives.IntsTest",
    "comment" : "<p>same src and target method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testByteArrayRoundTrips() : void from class com.google.common.primitives.IntsTest to public testByteArrayRoundTrips() : void from class com.google.common.primitives.IntsTest",
    "comment" : "<p>same src and target method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testLexicographicalComparatorSerializable() : void from class com.google.common.primitives.LongsTest to public testLexicographicalComparatorSerializable() : void from class com.google.common.primitives.LongsTest",
    "comment" : "<p>same src and target method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public fromBytes(b1 byte, b2 byte, b3 byte, b4 byte) : int from class com.google.common.primitives.Ints to public fromBytes(b1 byte, b2 byte, b3 byte, b4 byte) : int from class com.google.common.primitives.Ints",
    "comment" : "<p>same src and target method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testNulls() : void from class com.google.common.primitives.IntsTest to public testNulls() : void from class com.google.common.primitives.IntsTest",
    "comment" : "<p>same src and target method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testStringConverterSerialization() : void from class com.google.common.primitives.IntsTest to public testStringConverterSerialization() : void from class com.google.common.primitives.IntsTest",
    "comment" : "<p>same src and target method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testStringConverter_nullPointerTester() : void from class com.google.common.primitives.IntsTest to public testStringConverter_nullPointerTester() : void from class com.google.common.primitives.IntsTest",
    "comment" : "<p>same src and target method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testFromByteArray() : void from class com.google.common.primitives.IntsTest to public testFromByteArray() : void from class com.google.common.primitives.IntsTest",
    "comment" : "<p>same src and target method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public fromByteArray(bytes byte[]) : int from class com.google.common.primitives.Ints to public fromByteArray(bytes byte[]) : int from class com.google.common.primitives.Ints",
    "comment" : "<p>same src and target method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testFromBytes() : void from class com.google.common.primitives.IntsTest to public testFromBytes() : void from class com.google.common.primitives.IntsTest",
    "comment" : "<p>src and trgt methods are the same</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testStringConverterSerialization() : void from class com.google.common.primitives.LongsTest to public testStringConverterSerialization() : void from class com.google.common.primitives.LongsTest",
    "comment" : "<p>src and target methods are same</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Beta in method public tryParse(string String, radix int) : Integer from class com.google.common.primitives.Ints",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public tryParse(string String, radix int) : Integer from class com.google.common.primitives.Ints",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1248
}, {
  "id" : 1149802,
  "repository" : "https://github.com/neo4j/neo4j.git",
  "sha1" : "4712de476aabe69cd762233c9641dd3cf9f8361b",
  "url" : "https://github.com/neo4j/neo4j/commit/4712de476aabe69cd762233c9641dd3cf9f8361b",
  "author" : "Anton Persson",
  "time" : "7/23/15 10:19 AM",
  "refactorings" : [ {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected runInternalArnoldi(iterations int) : int renamed to protected runInternalIteration() : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public runIterations(maxNrIterations int) : int renamed to public runInternalIteration() : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower",
    "comment" : "<p>This method is pulled up to EigenvectorCentralityBase</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, GumTreeDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected changeSignBasedOnFirstNoneZeroValue() : void extracted from public runIterations(maxNrIterations int) : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : "<p>Extract and Move to the inner class</p><p>Note also the pull-up method. The extracted method have some additional statements as well.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "non-mapped leaves change the behavior of the program and are not justifiable"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected incrementTotalIterations() : void extracted from public runIterations(maxNrIterations int) : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower & moved to class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : "<p>Extract and Move to the inner class</p><p>Extract and pull up actually</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected incrementTotalIterations() : void extracted from protected runInternalArnoldi(iterations int) : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi & moved to class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : "<p>Extract and Move to the inner class</p><p>Extract and pull up actually</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected normalize(vector Map<Node,Double>) : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to protected normalize(vector Map<Node,Double>) : double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public setMaxIterations(maxIterations int) : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to public setMaxIterations(maxIterations int) : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getCentrality(node Node) : Double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to public getCentrality(node Node) : Double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getMaxIterations() : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to public getMaxIterations() : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public reset() : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to public reset() : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected processRelationship(newValues Map<Node,Double>, relationship Relationship, backwards boolean) : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to protected processRelationship(newValues Map<Node,Double>, relationship Relationship, backwards boolean) : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public calculate() : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to public calculate() : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getMaxIterations() : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to public getMaxIterations() : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public reset() : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to public reset() : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public runIterations(maxNrIterations int) : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to public runIterations(maxNrIterations int) : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getTotalIterations() : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to public getTotalIterations() : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public setMaxIterations(maxIterations int) : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to public setMaxIterations(maxIterations int) : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public runIterations(maxNrIterations int) : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to public runIterations(maxNrIterations int) : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private timeToStop(oldValues Map<Node,Double>, newValues Map<Node,Double>) : boolean from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to private timeToStop(oldValues Map<Node,Double>, newValues Map<Node,Double>) : boolean from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getTotalIterations() : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to public getTotalIterations() : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getCentrality(node Node) : Double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to public getCentrality(node Node) : Double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public calculate() : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to public calculate() : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private timeToStop(oldValues Map<Node,Double>, newValues Map<Node,Double>) : boolean from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to private timeToStop(oldValues Map<Node,Double>, newValues Map<Node,Double>) : boolean from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected processRelationship(newValues Map<Node,Double>, relationship Relationship, backwards boolean) : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to protected processRelationship(newValues Map<Node,Double>, relationship Relationship, backwards boolean) : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected normalize(vector Map<Node,Double>) : double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to protected normalize(vector Map<Node,Double>) : double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected relationDirection : Direction from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to protected relationDirection : Direction from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected relationshipSet : Set<Relationship> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to protected relationshipSet : Set<Relationship> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected nodeSet : Set<Node> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to protected nodeSet : Set<Node> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected values : Map<Node,Double> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to protected values : Map<Node,Double> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected nodeSet : Set<Node> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to protected nodeSet : Set<Node> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected relationshipSet : Set<Relationship> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to protected relationshipSet : Set<Relationship> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected doneCalculation : boolean from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to protected doneCalculation : boolean from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected totalIterations : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to protected totalIterations : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected costEvaluator : CostEvaluator<Double> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to protected costEvaluator : CostEvaluator<Double> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected precision : double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to protected precision : double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected relationDirection : Direction from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to protected relationDirection : Direction from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected totalIterations : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to protected totalIterations : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected costEvaluator : CostEvaluator<Double> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to protected costEvaluator : CostEvaluator<Double> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private maxIterations : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to protected maxIterations : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private maxIterations : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to protected maxIterations : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected values : Map<Node,Double> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi to protected values : Map<Node,Double> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected precision : double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to protected precision : double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected doneCalculation : boolean from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower to protected doneCalculation : boolean from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to double in method protected normalize(vector Map<Node,Double>) : double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nodeId : String to relationship : Relationship in method public getCost(relationship Relationship, direction Direction) : Double in class org.neo4j.graphalgo.centrality.EigenvectorCentralityTest.shouldHandleTargetNodeBeingOrphan.eigenvectorCentrality.getEigenvectorCentrality",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>shouldHandleTargetNodeBeingOrphan</span>()</span> is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter value : Double to direction : Direction in method public getCost(relationship Relationship, direction Direction) : Double in class org.neo4j.graphalgo.centrality.EigenvectorCentralityTest.shouldHandleTargetNodeBeingOrphan.eigenvectorCentrality.getEigenvectorCentrality",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>shouldHandleTargetNodeBeingOrphan</span>()</span> is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type nodeId : String to relationship : Relationship in method public getCost(relationship Relationship, direction Direction) : Double in class org.neo4j.graphalgo.centrality.EigenvectorCentralityTest.shouldHandleTargetNodeBeingOrphan.eigenvectorCentrality.getEigenvectorCentrality",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type value : Double to direction : Direction in method public getCost(relationship Relationship, direction Direction) : Double in class org.neo4j.graphalgo.centrality.EigenvectorCentralityTest.shouldHandleTargetNodeBeingOrphan.eigenvectorCentrality.getEigenvectorCentrality",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected changeSignBasedOnFirstNoneZeroValue() : void extracted from public runIterations(maxNrIterations int) : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi & moved to class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : "<p>runIterations was first pulled up to a common super class and then the method was extracted</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected assertCentrality(eigenvectorCentralityPower EigenvectorCentralityPower, nodeId String, value Double) : void renamed to public shouldHandleTargetNodeBeingOrphan() : void in class org.neo4j.graphalgo.centrality.EigenvectorCentralityTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected runInternalIteration() : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getCentrality(node Node) : Double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public reset() : void from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter iterations : int to iterations : int in method protected runInternalIteration() : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type d : double to d : Double in method protected normalize(vector Map<Node,Double>) : double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute protected relationDirection : Direction from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute protected costEvaluator : CostEvaluator<Double> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute protected relationshipSet : Set<Relationship> from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute protected precision : double from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected maxIterations : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 11263
}, {
  "id" : 1151028,
  "repository" : "https://github.com/apache/giraph.git",
  "sha1" : "03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
  "url" : "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
  "author" : "Hassan Eslami",
  "time" : "7/27/15 4:20 PM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private edgeStore : EdgeStore<I,V,E> from class org.apache.giraph.comm.ServerData to private edgeStore : EdgeStore<I,V,E> from class org.apache.giraph.partition.SimplePartitionStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private edgeStore : EdgeStore<I,V,E> from class org.apache.giraph.comm.ServerData to private edgeStore : EdgeStore<I,V,E> from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "<p>Matin: FP</p><p>Davood: I'd mark this as FP. The attribute is deleted from&nbsp;ServerData but it appears now in two classes,&nbsp;org.apache.giraph.partition.SimplePartitionStore and org.apache.giraph.ooc.DiskBackedPartitionStore with similar uses, none of which is used in&nbsp;ServerData</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public deletePartitionFiles(id Integer) : void from class org.apache.giraph.partition.DiskBackedPartitionStore to public deletePartitionFiles(id Integer) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getEdgesPath(partitionId Integer) : String from class org.apache.giraph.partition.DiskBackedPartitionStore to private getEdgesPath(partitionId Integer) : String from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getNumPartitions() : int from class org.apache.giraph.partition.DiskBackedPartitionStore to public getNumPartitions() : int from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getPartitionIds() : Iterable<Integer> from class org.apache.giraph.partition.DiskBackedPartitionStore to public getPartitionIds() : Iterable<Integer> from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getPartitionPath(partitionId Integer) : String from class org.apache.giraph.partition.DiskBackedPartitionStore to private getPartitionPath(partitionId Integer) : String from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getVerticesPath(partitionId Integer) : String from class org.apache.giraph.partition.DiskBackedPartitionStore to private getVerticesPath(partitionId Integer) : String from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public hasPartition(id Integer) : boolean from class org.apache.giraph.partition.DiskBackedPartitionStore to public hasPartition(id Integer) : boolean from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private readOutEdges(in DataInput, partition Partition<I,V,E>) : void from class org.apache.giraph.partition.DiskBackedPartitionStore to private readOutEdges(in DataInput, partition Partition<I,V,E>) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private readVertexData(in DataInput, vertex Vertex<I,V,E>) : void from class org.apache.giraph.partition.DiskBackedPartitionStore to private readVertexData(in DataInput, vertex Vertex<I,V,E>) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class org.apache.giraph.partition.DiskBackedPartitionStore to public toString() : String from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private writeOutEdges(output DataOutput, vertex Vertex<I,V,E>) : void from class org.apache.giraph.partition.DiskBackedPartitionStore to private writeOutEdges(output DataOutput, vertex Vertex<I,V,E>) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private writeVertexData(output DataOutput, vertex Vertex<I,V,E>) : void from class org.apache.giraph.partition.DiskBackedPartitionStore to private writeVertexData(output DataOutput, vertex Vertex<I,V,E>) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getEdgeCount() : long from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public getEdgeCount() : long from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getId() : int from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public getId() : int from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getPartition() : Partition<I,V,E> from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public getPartition() : Partition<I,V,E> from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getPrevVertexCount() : long from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public getPrevVertexCount() : long from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getState() : State from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public getState() : State from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getVertexCount() : long from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public getVertexCount() : long from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setPartition(partition Partition<I,V,E>) : void from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public setPartition(partition Partition<I,V,E>) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setPrevVertexCount(vertexCount long) : void from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public setPrevVertexCount(vertexCount long) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setState(state State) : void from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public setState(state State) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setActive(partition Partition<I,V,E>) : void from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public setActive(partition Partition<I,V,E>) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setOnDisk(partition Partition<I,V,E>) : void from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public setOnDisk() : void from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public toString() : String from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getPartitionEdgeCount(partitionId int) : long from class org.apache.giraph.partition.DiskBackedPartitionStore to public getPartitionEdgeCount(partitionId Integer) : long from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getPartitionVertexCount(partitionId int) : long from class org.apache.giraph.partition.DiskBackedPartitionStore to public getPartitionVertexCount(partitionId Integer) : long from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private offloadPartition(meta MetaPartition) : void from class org.apache.giraph.partition.DiskBackedPartitionStore to private offloadPartition(meta MetaPartition) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private putPartition(meta MetaPartition) : void from class org.apache.giraph.partition.DiskBackedPartitionStore to public putPartition(partition Partition<I,V,E>) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getPartition(partitionStore PartitionStore<IntWritable,IntWritable,NullWritable>, partitionId int) : Partition<IntWritable,IntWritable,NullWritable> extracted from public testReadWrite(partitionStore PartitionStore<IntWritable,IntWritable,NullWritable>, conf ImmutableClassesGiraphConfiguration<IntWritable,IntWritable,NullWritable>) : void in class org.apache.giraph.partition.TestPartitionStores",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private basePaths : String[] from class org.apache.giraph.partition.DiskBackedPartitionStore to private basePaths : String[] from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private hasher : HashFunction from class org.apache.giraph.partition.DiskBackedPartitionStore to private hasher : HashFunction from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private edgeCount : long from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to private edgeCount : long from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private id : int from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to private id : int from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private state : State from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to private state : State from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private partition : Partition<I,V,E> from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to private partition : Partition<I,V,E> from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private prevVertexCount : long from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to private prevVertexCount : long from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private vertexCount : long from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to private vertexCount : long from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private conf : ImmutableClassesGiraphConfiguration<I,V,E> from class org.apache.giraph.partition.DiskBackedPartitionStore to private conf : ImmutableClassesGiraphConfiguration<I,V,E> from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private context : Context from class org.apache.giraph.partition.DiskBackedPartitionStore to private context : Context from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "it is a Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addPartitionVertices(partitionId Integer, extendedDataOutput ExtendedDataOutput) : void extracted from public doRequest(serverData ServerData<I,V,E>) : void in class org.apache.giraph.comm.requests.SendWorkerVerticesRequest & moved to class org.apache.giraph.partition.SimplePartitionStore",
    "comment" : "<p>added</p><p>&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics \nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n- Encapsulate Opposite- Severe changes",
      "mappingState" : 2,
      "validationComment" : "getter method got replaced with direct field access - impossible to catch"
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.giraph.partition.DiskBackedPartitionStore moved to org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "<p>Outer class DiskBackedPartitionStore has been moved</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private putPartition(meta MetaPartition) : void inlined to public putPartition(partition Partition<I,V,E>) : void in class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes are not justifiable."
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable e : MetaPartition to meta : MetaPartition in method public shutdown() : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Integer to partitionId : Integer in method public removePartition(partitionId Integer) : Partition<I,V,E> from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter partitionId : int to partitionIds : List<Integer> in method public Worker(vertexCounter AtomicInteger, partitionStore PartitionStore<IntWritable,IntWritable,NullWritable>, partitionIds List<Integer>, conf ImmutableClassesGiraphConfiguration<IntWritable,IntWritable,NullWritable>) from class org.apache.giraph.partition.TestPartitionStores.Worker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable partitionId : int to partitionIds : List<Integer> in method private testMultiThreaded() : void from class org.apache.giraph.partition.TestPartitionStores",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable partitionId : int in method private offloadPartition(meta MetaPartition) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable numVertices : long to partitionId : int in method private getPartition(meta MetaPartition) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable numInputThreads : int to userMaxNumPartitions : int in method public DiskBackedPartitionStore(conf ImmutableClassesGiraphConfiguration<I,V,E>, context Mapper<?,?,?,?>.Context, serviceWorker CentralizedServiceWorker<I,V,E>) from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute NUM_OF_VERTEXES_PER_THREAD : int to NUM_OF_VERTEXES_PER_PARTITION : int in class org.apache.giraph.partition.TestPartitionStores",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute isSticky : boolean to isProcessed : boolean in class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public moveEdgesToVertices() : void extracted from public setup() : FinishedSuperstepStats in class org.apache.giraph.worker.BspServiceWorker & moved to class org.apache.giraph.partition.SimplePartitionStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n- Encapsulate Opposite-",
      "mappingState" : 1,
      "validationComment" : "getter method got replaced with direct field access - impossible to catch"
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute partitionId : int to partitionIds : List<Integer> in class org.apache.giraph.partition.TestPartitionStores.Worker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type partitionId : int to partitionId : Integer in method public getPartitionVertexCount(partitionId Integer) : long from class org.apache.giraph.partition.SimplePartitionStore",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type partitionId : int to partitionId : Integer in method public getPartitionEdgeCount(partitionId Integer) : long from class org.apache.giraph.partition.SimplePartitionStore",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type partitionId : int to partitionIds : List<Integer> in method public Worker(vertexCounter AtomicInteger, partitionStore PartitionStore<IntWritable,IntWritable,NullWritable>, partitionIds List<Integer>, conf ImmutableClassesGiraphConfiguration<IntWritable,IntWritable,NullWritable>) from class org.apache.giraph.partition.TestPartitionStores.Worker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type partitionId : int to partitionId : Integer in method public abstract getPartitionVertexCount(partitionId Integer) : long from class org.apache.giraph.partition.PartitionStore",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type partitionId : int to partitionId : Integer in method public abstract getPartitionEdgeCount(partitionId Integer) : long from class org.apache.giraph.partition.PartitionStore",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public abstract addPartition(partition Partition<I,V,E>) : boolean from class org.apache.giraph.partition.PartitionStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public addPartition(partition Partition<I,V,E>) : boolean from class org.apache.giraph.partition.SimplePartitionStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable partitionId : Integer to partition : Partition<I,V,E> in method public call() : Collection<PartitionStats> in class org.apache.giraph.graph.ComputeCallable",
    "comment" : "<p>The iterations performed look very similar, but there is a statement creating the parition, which is deleted<br />Partition&lt;I, V, E&gt; partition = serviceWorker.getPartitionStore().getOrCreatePartition(partitionId);<br />https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2#diff-3646f3af47fee54e69bc629bfb0b2a9cR151</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable partitionId : Integer to partition : Partition<I,V,E> in method public call() : Void in class org.apache.giraph.worker.BspServiceWorker.saveEdges.callableFactory.newCallable",
    "comment" : "<p>The iterations performed look very similar, but there is a statement creating the parition, which is deleted<br />Partition&lt;I, V, E&gt; partition = getPartitionStore().getOrCreatePartition(partitionId);<br />https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2#diff-0450a3c6146d06f9fd3ff745d7d31f25R1253</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable partitionId : Integer to partition : Partition<I,V,E> in method public call() : Void in class org.apache.giraph.worker.BspServiceWorker.storeCheckpointVertices.callableFactory.newCallable",
    "comment" : "<p>The iterations performed look very similar, but there is a statement creating the parition, which is deleted<br />Partition&lt;I, V, E&gt; partition = getPartitionStore().getOrCreatePartition(partitionId);<br />https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2#diff-0450a3c6146d06f9fd3ff745d7d31f25R1253</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type partitionId : int to partitionIds : List<Integer> in method private testMultiThreaded() : void from class org.apache.giraph.partition.TestPartitionStores",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type partitionId : int to partitionIds : List<Integer> in class org.apache.giraph.partition.TestPartitionStores.Worker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type numVertices : long to partitionId : int in method private getPartition(meta MetaPartition) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type partition : Partition<LongWritable,?,?> to partition : Partition in method private populateMap() : void from class org.apache.giraph.comm.messages.primitives.long_id.LongAbstractListMessageStore",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type maxPartitionsInMem : int to maxPartitionsInMem : AtomicInteger in class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type partitionId : int to partitionId : Integer in method public getPartitionVertexCount(partitionId Integer) : long from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type partitionId : int to partitionId : Integer in method public getPartitionEdgeCount(partitionId Integer) : long from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public addPartition(partition Partition<I,V,E>) : boolean from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type long to void in method public abstract addPartitionVertices(partitionId Integer, extendedDataOutput ExtendedDataOutput) : void in class org.apache.giraph.partition.PartitionStore",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type long to void in method public abstract addPartitionEdges(partitionId Integer, edges VertexIdEdges<I,E>) : void in class org.apache.giraph.partition.PartitionStore",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition moved to org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "<p>Outer class is moved</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.giraph.partition.DiskBackedPartitionStore.State moved to org.apache.giraph.ooc.DiskBackedPartitionStore.State",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable vertexId : LongWritable in method private populateMap() : void from class org.apache.giraph.comm.messages.primitives.long_id.LongAbstractListMessageStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public abstract getOrCreatePartition(partitionId Integer) : Partition<I,V,E> renamed to public abstract startIteration() : void in class org.apache.giraph.partition.PartitionStore",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public abstract putPartition(partition Partition<I,V,E>) : void renamed to public abstract getNextPartition() : Partition<I,V,E> in class org.apache.giraph.partition.PartitionStore",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public abstract deletePartition(partitionId Integer) : void renamed to public abstract putPartition(partition Partition<I,V,E>) : void in class org.apache.giraph.partition.PartitionStore",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public abstract getPartitionVertexCount(partitionId int) : long renamed to public abstract addPartitionVertices(partitionId Integer, extendedDataOutput ExtendedDataOutput) : void in class org.apache.giraph.partition.PartitionStore",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public abstract getPartitionEdgeCount(partitionId int) : long renamed to public abstract addPartitionEdges(partitionId Integer, edges VertexIdEdges<I,E>) : void in class org.apache.giraph.partition.PartitionStore",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shutdown() : void renamed to public abstract moveEdgesToVertices() : void in class org.apache.giraph.partition.PartitionStore",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method private loadPartition(id int, numVertices long) : Partition<I,V,E> from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public getOrCreatePartition(partitionId Integer) : Partition<I,V,E> from class org.apache.giraph.partition.SimplePartitionStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"TLW_TWO_LOCK_WAIT\", justification = \"The two locks held do not produce a deadlock\") in method private getPartition(meta MetaPartition) : void from class org.apache.giraph.partition.DiskBackedPartitionStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serviceWorker : CentralizedServiceWorker<I,V,E> in method public SimplePartitionStore(conf ImmutableClassesGiraphConfiguration<I,V,E>, context Mapper<?,?,?,?>.Context, serviceWorker CentralizedServiceWorker<I,V,E>) from class org.apache.giraph.partition.SimplePartitionStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter partitionIdQueue : BlockingQueue<Integer> in method public ComputeCallable(context Mapper<?,?,?,?>.Context, graphState GraphState, messageStore MessageStore<I,M1>, partitionIdQueue BlockingQueue<Integer>, configuration ImmutableClassesGiraphConfiguration<I,V,E>, serviceWorker CentralizedServiceWorker<I,V,E>) from class org.apache.giraph.graph.ComputeCallable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter numPartitions : int in method private processGraphPartitions(context Mapper<?,?,?,?>.Context, partitionStatsList List<PartitionStats>, graphState GraphState, messageStore MessageStore<I,Writable>, numPartitions int, numThreads int) : void from class org.apache.giraph.graph.GraphTaskManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter partition : Partition<I,V,E> in method public setOnDisk(partition Partition<I,V,E>) : void from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public addPartitionEdges(partitionId Integer, edges VertexIdEdges<I,E>) : void from class org.apache.giraph.partition.SimplePartitionStore",
    "comment" : "<p>addPartitionEdges(partitionId Integer, edges VertexIdEdges&lt;I,E&gt;) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public testDiskBackedPartitionStoreComputation() : void from class org.apache.giraph.partition.TestPartitionStores",
    "comment" : "<p>testDiskBackedPartitionStoreComputation() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute ONDISK : State to ON_DISK : State in class org.apache.giraph.ooc.DiskBackedPartitionStore.State",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private getOrCreatePartition(partitionId Integer) : Partition<I,V,E> from class org.apache.giraph.partition.SimplePartitionStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private isProcessed : boolean from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
    "comment" : "<p>setProcessed() and isProcessed()<br />are called in file<br />giraph-core/src/main/java/org/apache/giraph/ooc/DiskBackedPartitionStore.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private numPartitionsInMem : AtomicInteger from class org.apache.giraph.ooc.DiskBackedPartitionStore",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type vertex : Vertex<LongWritable,?,?> to vertex : Vertex in method private populateMap() : void from class org.apache.giraph.comm.messages.primitives.long_id.LongAbstractListMessageStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable partitionStore : PartitionStore<I,V,E> in method public call() : Collection<PartitionStats> from class org.apache.giraph.graph.ComputeCallable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2713
}, {
  "id" : 1151667,
  "repository" : "https://github.com/hazelcast/hazelcast.git",
  "sha1" : "204bf49cba03fe5d581a35ff82dd22587a681f46",
  "url" : "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
  "author" : "Mehmet Dogan",
  "time" : "7/28/15 4:32 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private createConfig() : Config extracted from private testWaitNotifyService_whenNodeSplitFromCluster(action SplitAction) : void in class com.hazelcast.spi.impl.operationservice.impl.InvocationNetworkSplitTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "config.setProperty() has been added to the extract method, which modifies the logic and behavior of the extracted method."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createConfig() : Config extracted from private testWaitingInvocations_whenNodeSplitFromCluster(splitAction SplitAction) : void in class com.hazelcast.spi.impl.operationservice.impl.InvocationNetworkSplitTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "config.setProperty() has been added to the extract method, which modifies the logic and behavior of the extracted method."
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private sendHearBeatIfRequired(now long, member MemberImpl) : void inlined to private heartBeaterSlave(now long, clockJump long) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the if condition hasn't been inlined. But it contains one of the removed attributes. So, I considered this refactoring as pure."
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private sendHearBeatIfRequired(now long, member MemberImpl) : void inlined to private heartBeaterMaster(now long, clockJump long) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the if condition hasn't been inlined. But it contains one of the removed attributes. So, I considered this refactoring as pure."
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testTcpIp__ClusterMerge() : void renamed to public testTcpIp_ClusterMerge() : void in class com.hazelcast.cluster.SplitBrainHandlerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private isJoinRequestFromAnExistingMember(joinRequest JoinRequest, connection Connection) : boolean renamed to private checkIfJoinRequestFromAnExistingMember(joinMessage JoinMessage, connection Connection) : boolean in class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package sendSplitBrainJoinMessage(target Address) : JoinMessage extracted from public searchForOtherClusters() : void in class com.hazelcast.cluster.impl.TcpIpJoiner & moved to class com.hazelcast.cluster.impl.AbstractJoiner",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n- Rename Variable- Severe changes",
      "mappingState" : 3,
      "validationComment" : "non-mapped leaves change the behavior of the program and are not justifiable"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getMemberAddresses() : Collection<Address> extracted from public searchForOtherClusters() : void in class com.hazelcast.cluster.impl.TcpIpJoiner & moved to class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : "<p>Extract and Move to the inner class</p><p>This would be Extract and Move. The called method is not doing the same thing as the original code though</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public onHeartbeat(member MemberImpl) : void extracted from public connectionAdded(connection Connection) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Davood, Nikos",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "one added statement which is not unjustifiable - heartbeatTimes.put()"
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public createJoinRequest() : JoinRequest moved from class com.hazelcast.instance.Node to class com.hazelcast.cluster.impl.MulticastJoiner & inlined to public searchForOtherClusters() : void",
    "comment" : "<p>1) The inlined method is in another class</p><p>2) It has not been deleted from the original class</p><p>3) The method is still calling the method being reported as inlined, with one extra param</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter joinRequest : JoinMessage to joinMessage : JoinMessage in method package shouldMerge(joinMessage JoinMessage) : boolean from class com.hazelcast.cluster.impl.AbstractJoiner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter memberCount : int to memberAddresses : Collection<Address> in method public JoinMessage(packetVersion byte, buildNumber int, address Address, uuid String, configCheck ConfigCheck, memberAddresses Collection<Address>) from class com.hazelcast.cluster.impl.JoinMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter joinRequest : JoinRequest to joinMessage : JoinMessage in method private checkIfJoinRequestFromAnExistingMember(joinMessage JoinMessage, connection Connection) : boolean from class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter joinRequest : JoinRequest to request : JoinMessage in method public JoinCheckOperation(request JoinMessage) from class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable possibleAddress : Address to address : Address in method public searchForOtherClusters() : void from class com.hazelcast.cluster.impl.TcpIpJoiner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable colPossibleAddresses : Collection<Address> to possibleAddresses : Collection<Address> in method public searchForOtherClusters() : void from class com.hazelcast.cluster.impl.TcpIpJoiner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable member : Member to address : Address in method package shouldMerge(joinMessage JoinMessage) : boolean from class com.hazelcast.cluster.impl.AbstractJoiner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable now : long in method private resetMemberMasterConfirmations() : void from class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable clusterService : ClusterServiceImpl in method package shouldMerge(joinMessage JoinMessage) : boolean from class com.hazelcast.cluster.impl.AbstractJoiner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute joinRequest : JoinRequest to request : JoinMessage in class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute memberCount : int to memberAddresses : Collection<Address> in class com.hazelcast.cluster.impl.JoinMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type joinRequest : JoinRequest to joinMessage : JoinMessage in method private checkIfJoinRequestFromAnExistingMember(joinMessage JoinMessage, connection Connection) : boolean from class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type joinRequest : JoinRequest to request : JoinMessage in method public JoinCheckOperation(request JoinMessage) from class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type member : Member to address : Address in method package shouldMerge(joinMessage JoinMessage) : boolean from class com.hazelcast.cluster.impl.AbstractJoiner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type memberCount : int to memberAddresses : Collection<Address> in method public JoinMessage(packetVersion byte, buildNumber int, address Address, uuid String, configCheck ConfigCheck, memberAddresses Collection<Address>) from class com.hazelcast.cluster.impl.JoinMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type memberCount : int to memberAddresses : Collection<Address> in class com.hazelcast.cluster.impl.JoinMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type joinRequest : JoinRequest to request : JoinMessage in class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type response : JoinRequest to response : JoinMessage in class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type partitionService : InternalPartitionService to partitionService : InternalPartitionServiceImpl in class com.hazelcast.instance.Node",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute PING_INTERVAL : int to pingIntervalMillis : long in class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>if</span> ((now <span class='pl-k'>-</span> member<span class='pl-k'>.</span>getLastRead()) <span class='pl-k'>&gt;=</span> <span class='pl-c1'>PING_INTERVAL</span> <span class='pl-k'>&amp;&amp;</span> (now <span class='pl-k'>-</span> member<span class='pl-k'>.</span>getLastPing()) <span class='pl-k'>&gt;=</span> <span class='pl-c1'>PING_INTERVAL</span>) {<br /></span>becomes<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>long</span> heartbeatTime <span class='pl-k'>=</span> getHeartbeatTime(member);<br /><span class='pl-k'>if</span> ((now <span class='pl-k'>-</span> heartbeatTime) <span class='pl-k'>&gt;=</span> pingIntervalMillis) {<br /></span></p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type HEARTBEAT_INTERVAL : int to heartbeatIntervalMillis : long in class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type PING_INTERVAL : int to pingIntervalMillis : long in class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type response : JoinRequest to response : JoinMessage in method public searchForOtherClusters() : void from class com.hazelcast.cluster.impl.TcpIpJoiner",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package handlePacket(packet Packet) : void from class com.hazelcast.client.test.TestClientRegistry.MockedClientConnection to package handlePacket(packet Packet) : void from class com.hazelcast.client.test.TestClientRegistry.MockedClientConnection",
    "comment" : "<p>Identical classes in two different source folders hazelcast-client/ and hazelcast-client-new/</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private readFromPacket(packet ClientMessage) : ClientMessage from class com.hazelcast.client.test.TestClientRegistry.MockedNodeConnection to private readFromPacket(packet ClientMessage) : ClientMessage from class com.hazelcast.client.test.TestClientRegistry.MockedNodeConnection",
    "comment" : "<p>Identical classes in two different source folders hazelcast-client/ and hazelcast-client-new/</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private readFromPacket(packet Packet) : Packet from class com.hazelcast.client.test.TestClientRegistry.MockedNodeConnection to private readFromPacket(packet Packet) : Packet from class com.hazelcast.client.test.TestClientRegistry.MockedNodeConnection",
    "comment" : "<p>Identical classes in two different source folders hazelcast-client/ and hazelcast-client-new/</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package handleClientMessage(clientMessage ClientMessage) : void from class com.hazelcast.client.test.TestClientRegistry.MockedClientConnection to package handleClientMessage(clientMessage ClientMessage) : void from class com.hazelcast.client.test.TestClientRegistry.MockedClientConnection",
    "comment" : "<p>Identical classes in two different source folders hazelcast-client/ and hazelcast-client-new/</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private readFromPacket(packet Packet) : Packet from class com.hazelcast.client.test.TestClientRegistry.MockedClientConnection to private readFromPacket(packet Packet) : Packet from class com.hazelcast.client.test.TestClientRegistry.MockedClientConnection",
    "comment" : "<p>Identical classes in two different source folders hazelcast-client/ and hazelcast-client-new/</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private readFromPacket(packet ClientMessage) : ClientMessage from class com.hazelcast.client.test.TestClientRegistry.MockedClientConnection to private readFromPacket(packet ClientMessage) : ClientMessage from class com.hazelcast.client.test.TestClientRegistry.MockedClientConnection",
    "comment" : "<p>Identical classes in two different source folders hazelcast-client/ and hazelcast-client-new/</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private sendHearBeatIfRequired(now long, member MemberImpl) : void renamed to private pingMemberIfRequired(now long, member MemberImpl) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private pingMemberIfRequired(now long, member MemberImpl) : void renamed to private resetMemberMasterConfirmations() : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private resetMemberMasterConfirmations() : void renamed to public connectionAdded(connection Connection) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public connectionAdded(connection Connection) : void renamed to public onHeartbeat(member MemberImpl) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter connection : Connection in method public answerMasterQuestion(joinMessage JoinMessage, connection Connection) : void from class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter memberCount : int in method public JoinRequest(packetVersion byte, buildNumber int, address Address, uuid String, config ConfigCheck, credentials Credentials, memberCount int, tryCount int, attributes Map<String,Object>) from class com.hazelcast.cluster.impl.JoinRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter tryCount : int in method public JoinRequest(packetVersion byte, buildNumber int, address Address, uuid String, config ConfigCheck, credentials Credentials, memberCount int, tryCount int, attributes Map<String,Object>) from class com.hazelcast.cluster.impl.JoinRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public sendMasterConfirmation() : void from class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter newTargetAddress : Address in method public merge(newTargetAddress Address) : void from class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable memberList : Collection<MemberImpl> in method private resetMemberMasterConfirmations() : void from class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter joinRequest : JoinRequest in method public JoinCheckOperation(joinRequest JoinRequest) from class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable service : ClusterServiceImpl in method public run() : void from class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable nodeEngine : NodeEngineImpl in method public run() : void from class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable node : Node in method public run() : void from class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable response : JoinRequest in method public searchForOtherClusters() : void from class com.hazelcast.cluster.impl.TcpIpJoiner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3496
}, {
  "id" : 1152033,
  "repository" : "https://github.com/bitcoinj/bitcoinj.git",
  "sha1" : "12602650ce99f34cb530fc24266c23e39733b0bb",
  "url" : "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
  "author" : "Ross Nicoll",
  "time" : "7/28/15 7:20 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public makeInventoryMessage(payloadBytes byte[], length int) : InventoryMessage extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Merge variable on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public makeAddressMessage(payloadBytes byte[], length int) : AddressMessage extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Merge variable on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected parseTransactions(transactionsOffset int) : void extracted from protected parseTransactions() : void in class org.bitcoinj.core.Block",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "parseRetain has been modified to serializer.isParseRetainMode(). This method returns the parseRetain, but I am not provided with this information. So, I cannot catch the purity of this method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public makeTransaction(payloadBytes byte[], offset int, length int, hash byte[]) : Transaction extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The called constructor has been changed. In the child version, the -offset- argument hadn't been passed, so it was set to zero (according to the constructor). But in the child version, the offset has been passed and the value would be different from the previous version."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public makeBlock(payloadBytes byte[], length int) : Block extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Merge variable on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public makeBloomFilter(payloadBytes byte[]) : Message extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public makeAlertMessage(payloadBytes byte[]) : Message extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[], length int) : Block extracted from public getBlocksToTest(runBarelyExpensiveTests boolean, runExpensiveTests boolean, blockStorageFile File) : RuleList in class org.bitcoinj.core.FullBlockTestGenerator & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>Extract and Move to the inner class</p><p>Why didn't&nbsp;RefactoringMiner find this one?</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "Merge Variable on top"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[], length int) : Block extracted from package parse() : void in class org.bitcoinj.core.HeadersMessage & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>Extract and Move to the inner class</p><p>Why didn't RefactoringMiner detect this case?</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nTolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "Merge Variable on top"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public makeFilteredBlock(payloadBytes byte[]) : FilteredBlock extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getSerializer(parseLazy boolean, parseRetain boolean) : BitcoinSerializer extracted from public testLazyParsing() : void in class org.bitcoinj.core.BitcoinSerializerTest & moved to class org.bitcoinj.params.AbstractBitcoinNetParams",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getSerializer(parseLazy boolean, parseRetain boolean) : BitcoinSerializer extracted from private testCachedParsing(lazy boolean) : void in class org.bitcoinj.core.BitcoinSerializerTest & moved to class org.bitcoinj.params.AbstractBitcoinNetParams",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testHeaderParse() : void in class org.bitcoinj.core.BlockTest & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>added</p><p>Similar to 4564</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "a different constructor for the Block object has been used"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public getBlocksToTest(runBarelyExpensiveTests boolean, runExpensiveTests boolean, blockStorageFile File) : RuleList in class org.bitcoinj.core.FullBlockTestGenerator & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>added</p><p>Similar to 4564</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "a different constructor for the Block object has been used"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public deserializeCompact(params NetworkParameters, buffer ByteBuffer) : StoredBlock in class org.bitcoinj.core.StoredBlock & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>added</p><p>Similar to 4564</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "a different constructor for the Block object has been used"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testBitcoinSerialization() : void in class org.bitcoinj.core.BlockTest & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>added</p><p>There is only one statement (a class instance creation) which is being extracted, I'd mark it as TP</p><p>&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "a different constructor for the Block object has been used"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testDate() : void in class org.bitcoinj.core.BlockTest & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>added</p><p>Similar to 4564</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "a different constructor for the Block object has been used"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getSerializer(parseLazy boolean, parseRetain boolean) : BitcoinSerializer extracted from public testTransaction(params NetworkParameters, txBytes byte[], isChild boolean, lazy boolean, retain boolean) : void in class org.bitcoinj.core.LazyParseByteCacheTest & moved to class org.bitcoinj.params.AbstractBitcoinNetParams",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testLastBlockSeenHash() : void in class org.bitcoinj.store.WalletProtobufSerializerTest & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>added</p><p>Similar to 4564</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "a different constructor for the Block object has been used"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from package parse() : void in class org.bitcoinj.core.FilteredBlock & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>added</p><p>Similar to 4564</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "a different constructor for the Block object has been used"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testBadTransactions() : void in class org.bitcoinj.core.BlockTest & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>added</p><p>Similar to 4564</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "a different constructor for the Block object has been used"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testBlockVerification() : void in class org.bitcoinj.core.BlockTest & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>added</p><p>Similar to 4564</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "a different constructor for the Block object has been used"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getSerializer(parseLazy boolean, parseRetain boolean) : BitcoinSerializer extracted from public testBlock(blockBytes byte[], isChild boolean, lazy boolean, retain boolean) : void in class org.bitcoinj.core.LazyParseByteCacheTest & moved to class org.bitcoinj.params.AbstractBitcoinNetParams",
    "comment" : "<p>added</p><p>Similar to 4565</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testProofOfWork() : void in class org.bitcoinj.core.BlockTest & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>added</p><p>Similar to 4564</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "a different constructor for the Block object has been used"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public get(hash Sha256Hash, wasUndoableOnly boolean) : StoredBlock in class org.bitcoinj.store.DatabaseFullPrunedBlockStore & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>added</p><p>Similar to 4564</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "a different constructor for the Block object has been used"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from private loadNextBlock() : void in class org.bitcoinj.utils.BlockFileLoader & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>added</p><p>Similar to 4564</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testReceiveCoinbaseTransaction() : void in class org.bitcoinj.core.CoinbaseBlockTest & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>added</p><p>Similar to 4564</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "a different constructor for the Block object has been used"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from private roundtrip(b2 Block) : Block in class org.bitcoinj.core.ChainSplitTest & moved to class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 1,
      "validationComment" : "a different constructor for the Block object has been used"
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method package Message(params NetworkParameters, payload byte[], offset int, protocolVersion int, serializer MessageSerializer, length int) from class org.bitcoinj.core.Message",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method package AddressMessage(params NetworkParameters, payload byte[], serializer MessageSerializer, length int) from class org.bitcoinj.core.AddressMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public TransactionOutPoint(params NetworkParameters, payload byte[], offset int, parent Message, serializer MessageSerializer) from class org.bitcoinj.core.TransactionOutPoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public TransactionOutput(params NetworkParameters, parent Transaction, payload byte[], offset int, serializer MessageSerializer) from class org.bitcoinj.core.TransactionOutput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public TransactionInput(params NetworkParameters, parentTransaction Transaction, payload byte[], offset int, serializer MessageSerializer) from class org.bitcoinj.core.TransactionInput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public GetDataMessage(params NetworkParameters, payload byte[], serializer MessageSerializer, length int) from class org.bitcoinj.core.GetDataMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method package Message(params NetworkParameters, payload byte[], offset int, serializer MessageSerializer, length int) from class org.bitcoinj.core.Message",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public InventoryMessage(params NetworkParameters, payload byte[], serializer MessageSerializer, length int) from class org.bitcoinj.core.InventoryMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public Block(params NetworkParameters, payloadBytes byte[], serializer MessageSerializer, length int) from class org.bitcoinj.core.Block",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public PeerAddress(params NetworkParameters, payload byte[], offset int, protocolVersion int, parent Message, serializer MessageSerializer) from class org.bitcoinj.core.PeerAddress",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to setSerializer : MessageSerializer in method package AddressMessage(params NetworkParameters, payload byte[], offset int, setSerializer MessageSerializer, length int) from class org.bitcoinj.core.AddressMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to setSerializer : MessageSerializer in method public Transaction(params NetworkParameters, payload byte[], parent Message, setSerializer MessageSerializer, length int) from class org.bitcoinj.core.Transaction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to setSerializer : MessageSerializer in method public ChildMessage(params NetworkParameters, payload byte[], offset int, protocolVersion int, parent Message, setSerializer MessageSerializer, length int) from class org.bitcoinj.core.ChildMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public ListMessage(params NetworkParameters, payload byte[], serializer MessageSerializer, length int) from class org.bitcoinj.core.ListMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to setSerializer : MessageSerializer in method public ChildMessage(params NetworkParameters, payload byte[], offset int, parent Message, setSerializer MessageSerializer, length int) from class org.bitcoinj.core.ChildMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to setSerializer : MessageSerializer in method public Transaction(params NetworkParameters, payload byte[], offset int, parent Message, setSerializer MessageSerializer, length int) from class org.bitcoinj.core.Transaction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Attribute",
    "description" : "Merge Attribute [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in class org.bitcoinj.core.Message",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type bs : BitcoinSerializer to bs : MessageSerializer in method private serDeser(bs MessageSerializer, message Message, sourceBytes byte[], containedBytes byte[], containingBytes byte[]) : void from class org.bitcoinj.core.LazyParseByteCacheTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type serializer : BitcoinSerializer to serializer : MessageSerializer in class org.bitcoinj.core.PeerSocketHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter params : NetworkParameters to payloadBytes : byte[] in method public makeBloomFilter(payloadBytes byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter parseLazy : boolean to offset : int in method public Block(params NetworkParameters, payloadBytes byte[], offset int, parent Message, serializer MessageSerializer, length int) : ProtocolException in class org.bitcoinj.core.Block",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter parseRetain : boolean to length : int in method public Block(params NetworkParameters, payloadBytes byte[], offset int, parent Message, serializer MessageSerializer, length int) : ProtocolException in class org.bitcoinj.core.Block",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute parseLazy : boolean to serializer : MessageSerializer in class org.bitcoinj.core.Message",
    "comment" : "<p>Merge Attribute [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in class org.bitcoinj.core.Message</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type parseLazy : boolean to offset : int in method public Block(params NetworkParameters, payloadBytes byte[], offset int, parent Message, serializer MessageSerializer, length int) : ProtocolException in class org.bitcoinj.core.Block",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type parseRetain : boolean to length : int in method public Block(params NetworkParameters, payloadBytes byte[], offset int, parent Message, serializer MessageSerializer, length int) : ProtocolException in class org.bitcoinj.core.Block",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method public roundTripTransaction(params NetworkParameters, tx Transaction) : Transaction from class org.bitcoinj.testing.FakeTxBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method public testAddr() : void from class org.bitcoinj.core.BitcoinSerializerTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method public testLazyParsing() : void from class org.bitcoinj.core.BitcoinSerializerTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method private testCachedParsing(lazy boolean) : void from class org.bitcoinj.core.BitcoinSerializerTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method public testHeaders1() : void from class org.bitcoinj.core.BitcoinSerializerTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method public testHeaders2() : void from class org.bitcoinj.core.BitcoinSerializerTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method public testSerializeUnknownMessage() : void from class org.bitcoinj.core.BitcoinSerializerTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method public setUp() : void from class org.bitcoinj.core.LazyParseByteCacheTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type bsRef : BitcoinSerializer to bsRef : MessageSerializer in method public testBlock(blockBytes byte[], isChild boolean, lazy boolean, retain boolean) : void from class org.bitcoinj.core.LazyParseByteCacheTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type bsRef : BitcoinSerializer to bsRef : MessageSerializer in method public testTransaction(params NetworkParameters, txBytes byte[], isChild boolean, lazy boolean, retain boolean) : void from class org.bitcoinj.core.LazyParseByteCacheTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type serializer : BitcoinSerializer to serializer : MessageSerializer in method public badMessage() : void from class org.bitcoinj.core.PeerTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface org.bitcoinj.core.MessageSerializer from class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public BitcoinSerializer(params NetworkParameters) renamed to public makeBloomFilter(payloadBytes byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public serialize(name String, message byte[], out OutputStream) : void from class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public serialize(message Message, out OutputStream) : void from class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deserialize(in ByteBuffer) : Message from class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deserializeHeader(in ByteBuffer) : BitcoinPacketHeader from class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deserializePayload(header BitcoinPacketHeader, in ByteBuffer) : Message from class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public seekPastMagicBytes(in ByteBuffer) : void from class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public isParseLazyMode() : boolean from class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public isParseRetainMode() : boolean from class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public Block(params NetworkParameters, payloadBytes byte[]) from class org.bitcoinj.core.Block",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method protected ChildMessage() from class org.bitcoinj.core.ChildMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected headerParsed : boolean from class org.bitcoinj.core.Block",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected transactionsParsed : boolean from class org.bitcoinj.core.Block",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected headerBytesValid : boolean from class org.bitcoinj.core.Block",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected transactionBytesValid : boolean from class org.bitcoinj.core.Block",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected optimalEncodingMessageSize : int from class org.bitcoinj.core.Block",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private params : NetworkParameters from class org.bitcoinj.core.BitcoinSerializer",
    "comment" : "<p>public NetworkParameters getParameters() is not called</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private params : NetworkParameters from class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private parseLazy : boolean from class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private parseRetain : boolean from class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private names : Map<Class<? extends Message>,String> from class org.bitcoinj.core.BitcoinSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3030
}, {
  "id" : 1152344,
  "repository" : "https://github.com/eclipse/vert.x.git",
  "sha1" : "0ef66582ffaba9a8df1cad846880df2074d34505",
  "url" : "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
  "author" : "Julien Viet",
  "time" : "7/27/15 10:38 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private init() : void extracted from public ClientOptionsBase(json JsonObject) in class io.vertx.core.net.ClientOptionsBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "method invocation has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private init() : void extracted from public TCPSSLOptions(json JsonObject) in class io.vertx.core.net.TCPSSLOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "method invocation has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private init() : void extracted from public NetClientOptions(json JsonObject) in class io.vertx.core.net.NetClientOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "method invocation has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private init() : void extracted from public NetClientOptions() in class io.vertx.core.net.NetClientOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private init() : void extracted from public NetServerOptions(json JsonObject) in class io.vertx.core.net.NetServerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "method invocation has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private init() : void extracted from public NetServerOptions() in class io.vertx.core.net.NetServerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private init() : void extracted from public HttpClientOptions(json JsonObject) in class io.vertx.core.http.HttpClientOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "method invocation has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private init() : void extracted from public HttpClientOptions() in class io.vertx.core.http.HttpClientOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private init() : void extracted from public HttpServerOptions(json JsonObject) in class io.vertx.core.http.HttpServerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "method invocation has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private init() : void extracted from public HttpServerOptions() in class io.vertx.core.http.HttpServerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private init() : void extracted from public TCPSSLOptions() in class io.vertx.core.net.TCPSSLOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private init() : void extracted from public ClientOptionsBase() in class io.vertx.core.net.ClientOptionsBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setDSync(dsync boolean) : OpenOptions renamed to public setDsync(dsync boolean) : OpenOptions in class io.vertx.core.file.OpenOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setWebsocketSubProtocol(subProtocols String) : HttpServerOptions renamed to public setWebsocketSubProtocols(subProtocols String) : HttpServerOptions in class io.vertx.core.http.HttpServerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isDSync() : boolean renamed to public isDsync() : boolean in class io.vertx.core.file.OpenOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj DatagramSocketOptions) : void extracted from public DatagramSocketOptions(json JsonObject) in class io.vertx.core.datagram.DatagramSocketOptions & moved to class io.vertx.core.datagram.DatagramSocketOptionsHelper",
    "comment" : "<p>added</p><p>Davood: extract and move method</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj HttpClientOptions) : void extracted from public HttpClientOptions(json JsonObject) in class io.vertx.core.http.HttpClientOptions & moved to class io.vertx.core.http.HttpClientOptionsHelper",
    "comment" : "<p>added</p><p>The init() method is also reported, which seems to be correct</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj HttpServerOptions) : void extracted from public HttpServerOptions(json JsonObject) in class io.vertx.core.http.HttpServerOptions & moved to class io.vertx.core.http.HttpServerOptionsHelper",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj ClientOptionsBase) : void extracted from public ClientOptionsBase(json JsonObject) in class io.vertx.core.net.ClientOptionsBase & moved to class io.vertx.core.net.ClientOptionsBaseHelper",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj TCPSSLOptions) : void extracted from public TCPSSLOptions(json JsonObject) in class io.vertx.core.net.TCPSSLOptions & moved to class io.vertx.core.net.TCPSSLOptionsHelper",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj PemKeyCertOptions) : void extracted from public PemKeyCertOptions(json JsonObject) in class io.vertx.core.net.PemKeyCertOptions & moved to class io.vertx.core.net.PemKeyCertOptionsHelper",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj NetServerOptions) : void extracted from public NetServerOptions(json JsonObject) in class io.vertx.core.net.NetServerOptions & moved to class io.vertx.core.net.NetServerOptionsHelper",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj JksOptions) : void extracted from public JksOptions(json JsonObject) in class io.vertx.core.net.JksOptions & moved to class io.vertx.core.net.JksOptionsHelper",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj PemTrustOptions) : void extracted from public PemTrustOptions(json JsonObject) in class io.vertx.core.net.PemTrustOptions & moved to class io.vertx.core.net.PemTrustOptionsHelper",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj VertxOptions) : void extracted from public VertxOptions(json JsonObject) in class io.vertx.core.VertxOptions & moved to class io.vertx.core.VertxOptionsHelper",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj NetworkOptions) : void extracted from public NetworkOptions(json JsonObject) in class io.vertx.core.net.NetworkOptions & moved to class io.vertx.core.net.NetworkOptionsHelper",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj NetClientOptions) : void extracted from public NetClientOptions(json JsonObject) in class io.vertx.core.net.NetClientOptions & moved to class io.vertx.core.net.NetClientOptionsHelper",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj OpenOptions) : void extracted from public OpenOptions(json JsonObject) in class io.vertx.core.file.OpenOptions & moved to class io.vertx.core.file.OpenOptionsHelper",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj MetricsOptions) : void extracted from public MetricsOptions(json JsonObject) in class io.vertx.core.metrics.MetricsOptions & moved to class io.vertx.core.metrics.MetricsOptionsHelper",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public fromJson(json JsonObject, obj PfxOptions) : void extracted from public PfxOptions(json JsonObject) in class io.vertx.core.net.PfxOptions & moved to class io.vertx.core.net.PfxOptionsHelper",
    "comment" : "<p>added</p><p>Davood: extract and move</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public ClientOptionsBase() renamed to private init() : void in class io.vertx.core.net.ClientOptionsBase",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public HttpServerOptions() renamed to private init() : void in class io.vertx.core.http.HttpServerOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setWebsocketSubProtocol(subProtocols String...) : HttpServerOptions renamed to public setWebsocketSubProtocols(subProtocols String...) : HttpServerOptions in class io.vertx.core.http.HttpServerOptions",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public HttpClientOptions() renamed to private init() : void in class io.vertx.core.http.HttpClientOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public NetClientOptions() renamed to private init() : void in class io.vertx.core.net.NetClientOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public NetServerOptions() renamed to private init() : void in class io.vertx.core.net.NetServerOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public TCPSSLOptions() renamed to private init() : void in class io.vertx.core.net.TCPSSLOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @DataObject in class io.vertx.core.net.ClientOptionsBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @DataObject in class io.vertx.core.net.NetworkOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @DataObject in class io.vertx.core.net.TCPSSLOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1153579,
  "repository" : "https://github.com/cwensel/cascading.git",
  "sha1" : "f9d3171f5020da5c359cdda28ef05172e858c464",
  "url" : "https://github.com/cwensel/cascading/commit/f9d3171f5020da5c359cdda28ef05172e858c464",
  "author" : "Chris K Wensel",
  "time" : "7/29/15 7:47 PM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method protected logInfo(message String, arguments Object...) : void from class cascading.stats.tez.TezNodeStats to protected logInfo(message String, arguments Object...) : void from class cascading.stats.CascadingStats",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected logWarn(message String, arguments Object...) : void from class cascading.stats.tez.TezNodeStats to protected logWarn(message String, arguments Object...) : void from class cascading.stats.CascadingStats",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private prefixID : String from class cascading.stats.tez.TezNodeStats to private prefixID : String from class cascading.stats.CascadingStats",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected logDebug(message String, arguments Object...) : void from class cascading.stats.tez.TezNodeStats to protected logDebug(message String, arguments Object...) : void from class cascading.stats.CascadingStats",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getPrefix() : String from class cascading.stats.tez.TezNodeStats to private getPrefix() : String from class cascading.stats.CascadingStats",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected logDebug(message String, arguments Object...) : void from class cascading.stats.tez.TezNodeStats to protected logDebug(message String, arguments Object...) : void from class cascading.stats.CascadingStats",
    "comment" : "<p>It is a move but couldnt find a hierarchy</p><p>Nikos: TezNodeStats extends BaseHadoopNodeStats extends FlowNodeStats extends CascadingStats<br />but FlowNodeStats does not change in this commit</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected logInfo(message String, arguments Object...) : void from class cascading.stats.tez.TezNodeStats to protected logInfo(message String, arguments Object...) : void from class cascading.stats.CascadingStats",
    "comment" : "<p>It is a move but couldnt find a hierarchy</p><p>Nikos: TezNodeStats extends BaseHadoopNodeStats extends FlowNodeStats extends CascadingStats<br />but FlowNodeStats does not change in this commit</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected logWarn(message String, arguments Object...) : void from class cascading.stats.tez.TezNodeStats to protected logWarn(message String, arguments Object...) : void from class cascading.stats.CascadingStats",
    "comment" : "<p>It is a move but couldnt find a hierarchy</p><p>Nikos: TezNodeStats extends BaseHadoopNodeStats extends FlowNodeStats extends CascadingStats<br />but FlowNodeStats does not change in this commit</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private getPrefix() : String from class cascading.stats.tez.TezNodeStats to private getPrefix() : String from class cascading.stats.CascadingStats",
    "comment" : "<p>It is a move but couldnt find a hierarchy</p><p>Nikos: TezNodeStats extends BaseHadoopNodeStats extends FlowNodeStats extends CascadingStats<br />but FlowNodeStats does not change in this commit</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected logError(message String, throwable Throwable) : void extracted from public recordChildStats() : void in class cascading.stats.hadoop.BaseHadoopNodeStats & moved to class cascading.stats.CascadingStats",
    "comment" : "<p>Extract and Move to the parent class</p><p>Moved to the class <span class='pl-en'>CascadingStats (which is parent of&nbsp; FlowNodeStats)</span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private prefixID : String from class cascading.stats.tez.TezNodeStats to private prefixID : String from class cascading.stats.CascadingStats",
    "comment" : "<p>It is a move but couldnt find a hierarchy</p><p>Nikos: TezNodeStats extends BaseHadoopNodeStats extends FlowNodeStats extends CascadingStats<br />but FlowNodeStats does not change in this commit</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected logWarn(message String, arguments Object...) : void extracted from protected fireListeners(fromStatus CascadingStats.Status, toStatus CascadingStats.Status) : void in class cascading.stats.CascadingStats",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Davood, Nikos",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Attribute",
    "description" : "Move And Rename Attribute private allTasksAreFinished : boolean renamed to protected allChildrenFinished : boolean and moved from class cascading.stats.tez.TezNodeStats to class cascading.stats.hadoop.BaseHadoopNodeStats",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable sliceStats : HadoopSliceStats in method protected addTaskStats(taskReports TaskReport[], skipLast boolean) : void from class cascading.stats.hadoop.HadoopNodeStats",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected logError(message String, arguments Object...) : void extracted from public recordChildStats() : void in class cascading.stats.hadoop.BaseHadoopNodeStats & moved to class cascading.stats.CascadingStats",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics",
      "mappingState" : 1,
      "validationComment" : "parameter to argument change, which is part of Extract Method mechanic and justifiable"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected logWarn(message String, arguments Object...) : void extracted from protected captureChildDetailInternal() : boolean in class cascading.stats.hadoop.HadoopNodeStats & moved to class cascading.stats.CascadingStats",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "parameter to argument change, which is part of Extract Method mechanic and justifiable"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected logWarn(message String, arguments Object...) : void extracted from protected addTaskStats(taskReports TaskReport[], skipLast boolean) : void in class cascading.stats.hadoop.HadoopNodeStats & moved to class cascading.stats.CascadingStats",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "parameter to argument change, which is part of Extract Method mechanic and justifiable"
    }
  } ],
  "refDiffExecutionTime" : 1441
}, {
  "id" : 1156434,
  "repository" : "https://github.com/apache/cassandra.git",
  "sha1" : "e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
  "url" : "https://github.com/apache/cassandra/commit/e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
  "author" : "Robert Stupp",
  "time" : "8/3/15 7:05 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public assertUdfsEnabled(language String) : void extracted from public create(name FunctionName, argNames List<ColumnIdentifier>, argTypes List<AbstractType<?>>, returnType AbstractType<?>, calledOnNullInput boolean, language String, body String) : UDFunction in class org.apache.cassandra.cql3.functions.UDFunction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "one if statement has been added"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public assertUdfsEnabled(language String) : void extracted from public validate(state ClientState) : void in class org.apache.cassandra.cql3.statements.CreateFunctionStatement & moved to class org.apache.cassandra.cql3.functions.UDFunction",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and move to UDFunction</p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n Severe changes",
      "mappingState" : 3,
      "validationComment" : "one if statement has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public assertUdfsEnabled(language String) : void extracted from public execute(protocolVersion int, parameters List<ByteBuffer>) : ByteBuffer in class org.apache.cassandra.cql3.functions.UDFunction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "one if statement has been added"
    }
  } ],
  "refDiffExecutionTime" : 3338
}, {
  "id" : 1158180,
  "repository" : "https://github.com/wildfly/wildfly.git",
  "sha1" : "bf35b533f067b51d4c373c5e5124d88525db99f3",
  "url" : "https://github.com/wildfly/wildfly/commit/bf35b533f067b51d4c373c5e5124d88525db99f3",
  "author" : "James Perkins",
  "time" : "8/5/15 7:32 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.wildfly.extension.batch.jberet.deployment.BatchEnvironmentProcessor.JobXmlFilter moved to org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver.JobXmlFilter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.wildfly.extension.batch.jberet.deployment.JobXmlResolverService renamed to org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.wildfly.extension.batch.deployment.BatchEnvironmentProcessor.JobXmlFilter moved to org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver.JobXmlFilter",
    "comment" : "<p>Move Class org.wildfly.extension.batch.jberet.deployment.BatchEnvironmentProcessor.JobXmlFilter moved to org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver.JobXmlFilter</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public start(context StartContext) : void renamed to private init() : void in class org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public of(classLoader ClassLoader, deploymentUnit DeploymentUnit) : WildFlyJobXmlResolver extracted from public deploy(phaseContext DeploymentPhaseContext) : void in class org.wildfly.extension.batch.jberet.deployment.BatchEnvironmentProcessor & moved to class org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Davood, Automatic",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics \nTolerable Changes in the body \nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n- Rename Variable- Severe changes",
      "mappingState" : 2,
      "validationComment" : "non-mapped leaves change the behavior of the program and are not justifiable"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable jobXmlResolverService : JobXmlResolverService to jobXmlResolver : WildFlyJobXmlResolver in method public deploy(phaseContext DeploymentPhaseContext) : void from class org.wildfly.extension.batch.jberet.deployment.BatchDeploymentResourceProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute cachedJobInfo : Map<String,String> to resolvedJobs : Map<String,String> in class org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type jobXmlResolverService : JobXmlResolverService to jobXmlResolver : WildFlyJobXmlResolver in method public deploy(phaseContext DeploymentPhaseContext) : void from class org.wildfly.extension.batch.jberet.deployment.BatchDeploymentResourceProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type jobXmlFiles : Collection<VirtualFile> to jobXmlFiles : Map<String,VirtualFile> in method private WildFlyJobXmlResolver(classLoader ClassLoader, jobXmlFiles Map<String,VirtualFile>) from class org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public of(classLoader ClassLoader, deploymentUnit DeploymentUnit) : WildFlyJobXmlResolver extracted from public deploy(phaseContext DeploymentPhaseContext) : void in class org.wildfly.extension.batch.deployment.BatchEnvironmentProcessor & moved to class org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Changes are within the Extract Method refactoring mechanics \nTolerable Changes in the body \nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n- Rename Variable- Severe changes",
      "mappingState" : 2,
      "validationComment" : "non-mapped leaves change the behavior of the program and are not justifiable"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter jobXmlResolver : JobXmlResolver in method public BatchEnvironmentService(classLoader ClassLoader, jobXmlResolver JobXmlResolver, deploymentName String) from class org.wildfly.jberet.services.BatchEnvironmentService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private WildFlyJobXmlResolver() from class org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private WildFlyJobXmlResolver(classLoader ClassLoader, jobXmlFiles Map<String,VirtualFile>) from class org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public getJobXmlNames(classLoader ClassLoader) : Collection<String> from class org.wildfly.extension.batch.jberet.deployment.JobXmlResolverService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public resolveJobName(jobXml String, classLoader ClassLoader) : String from class org.wildfly.extension.batch.jberet.deployment.JobXmlResolverService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Anonymous With Lambda",
    "description" : "Replace Anonymous With Lambda org.wildfly.extension.batch.jberet.deployment.JobXmlResolverService.resolveJobXml.doPrivileged.new PrivilegedAction<InputStream> with () -> {tryreturn file.openStream(); in method public resolveJobXml(jobXml String, classLoader ClassLoader) : InputStream from class org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4054
}, {
  "id" : 1158913,
  "repository" : "https://github.com/geoserver/geoserver.git",
  "sha1" : "e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
  "url" : "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
  "author" : "Stefano Costa",
  "time" : "8/5/15 7:22 PM",
  "refactorings" : [ {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.geoserver.ogr.core.AbstractToolWrapper from class org.geoserver.wfs.response.OGRWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.geoserver.ogr.core.Format from class org.geoserver.wfs.response.OgrFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.geoserver.ogr.core.ToolConfiguration from class org.geoserver.wfs.response.OgrConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.geoserver.ogr.core.AbstractToolConfigurator from class org.geoserver.wfs.response.Ogr2OgrConfigurator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOgrExecutable() : String renamed to public getExecutable() : String in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOgrExecutable(ogrExecutable String) : void renamed to public setExecutable(ogrExecutable String) : void in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getGdalData() : String renamed to public getEnvironment() : Map<String,String> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public onApplicationEvent(event ContextClosedEvent) : void from class org.geoserver.wfs.response.Ogr2OgrConfigurator to public onApplicationEvent(event ContextClosedEvent) : void from class org.geoserver.ogr.core.AbstractToolConfigurator",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public loadConfiguration() : void from class org.geoserver.wfs.response.Ogr2OgrConfigurator to public loadConfiguration() : void from class org.geoserver.ogr.core.AbstractToolConfigurator",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private LOGGER : Logger from class org.geoserver.wfs.response.Ogr2OgrConfigurator to private LOGGER : Logger from class org.geoserver.ogr.core.AbstractToolConfigurator",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public singleFile : boolean from class org.geoserver.wfs.response.OgrFormat to private singleFile : boolean from class org.geoserver.ogr.core.Format",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private listener : ResourceListener from class org.geoserver.wfs.response.Ogr2OgrConfigurator to protected listener : ResourceListener from class org.geoserver.ogr.core.AbstractToolConfigurator",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute package configFile : Resource from class org.geoserver.wfs.response.Ogr2OgrConfigurator to protected configFile : Resource from class org.geoserver.ogr.core.AbstractToolConfigurator",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.geoserver.wfs.response.OgrType moved and renamed to org.geoserver.ogr.core.OutputType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method package run(cmd List<String>, sb StringBuilder) : int from class org.geoserver.wfs.response.OGRWrapper to protected run(cmd List<String>, sb StringBuilder) : int from class org.geoserver.ogr.core.AbstractToolWrapper",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public convert(inputData File, outputDirectory File, typeName String, format OgrFormat, crs CoordinateReferenceSystem) : File from class org.geoserver.wfs.response.OGRWrapper to public convert(inputData File, outputDirectory File, typeName String, format Format, crs CoordinateReferenceSystem) : File from class org.geoserver.ogr.core.AbstractToolWrapper",
    "comment" : "<p>http://refactoring.encs.concordia.ca/oracle/refactoring-details/1158913/4182</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected setInputOutput(cmd List<String>, inputData File, outputDirectory File, typeName String, format Format) : String extracted from public convert(inputData File, outputDirectory File, typeName String, format OgrFormat, crs CoordinateReferenceSystem) : File in class org.geoserver.wfs.response.OGRWrapper & moved to class org.geoserver.ogr.core.AbstractToolWrapper",
    "comment" : "<p>Extract and Move to other class</p><p>The actual scenario is:</p><p>1- we have an Extrract superclass org.geoserver.ogr.core.AbstractToolWrapper from class org.geoserver.wfs.response.OGRWrapper</p><p>see(http://refactoring.encs.concordia.ca/oracle/refactoring-details/1158913/4182)</p><p>2- then&nbsp; method public convert(inputData File, outputDirectory File, typeName String, format OgrFormat, crs CoordinateReferenceSystem) : File from class org.geoserver.wfs.response.OGRWrapper is pull up to public convert(inputData File, outputDirectory File, typeName String, format Format, crs CoordinateReferenceSystem) : File from class org.geoserver.ogr.core.AbstractToolWrapper</p><p>3- then in the after pull up refactoring we have the current extartc method refactoing. We consider it as CTP</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public isSingleFile() : boolean extracted from protected write(featureCollection FeatureCollectionResponse, output OutputStream, getFeature Operation) : void in class org.geoserver.wfs.response.Ogr2OgrOutputFormat & moved to class org.geoserver.ogr.core.Format",
    "comment" : "<p>Extract and Move to other class </p><p>Extract and Move to class Format</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public isSingleFile() : boolean extracted from public getMimeType(value Object, operation Operation) : String in class org.geoserver.wfs.response.Ogr2OgrOutputFormat & moved to class org.geoserver.ogr.core.Format",
    "comment" : "<p>Extract and Move to other&nbsp; class</p><p>Extract and Move to class Format</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public isSingleFile() : boolean extracted from public getAttachmentFileName(value Object, operation Operation) : String in class org.geoserver.wfs.response.Ogr2OgrOutputFormat & moved to class org.geoserver.ogr.core.Format",
    "comment" : "<p>Extract and Move to other class</p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'>Extract and Move to class Format</span></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ogrFormat : String to toolFormat : String in method public OgrFormat(toolFormat String, formatName String, fileExtension String, singleFile boolean, mimeType String, options String...) from class org.geoserver.wfs.response.OgrFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute gdalData : String to environment : Map<String,String> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public fileExtension : String from class org.geoserver.wfs.response.OgrFormat to private fileExtension : String from class org.geoserver.ogr.core.Format",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public options : List<String> from class org.geoserver.wfs.response.OgrFormat to private options : List<String> from class org.geoserver.ogr.core.Format",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public mimeType : String from class org.geoserver.wfs.response.OgrFormat to private mimeType : String from class org.geoserver.ogr.core.Format",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter notify : ResourceNotification to wrapperFactory : ToolWrapperFactory in method public Ogr2OgrConfigurator(format Ogr2OgrOutputFormat, wrapperFactory ToolWrapperFactory) in class org.geoserver.wfs.response.Ogr2OgrConfigurator",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter gdalData : String to environment : Map<String,String> in method public OGRWrapper(ogrExecutable String, environment Map<String,String>) in class org.geoserver.wfs.response.OGRWrapper",
    "comment" : "<p>Attribute initialization inside the constructor is replaced with super() call.</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter sb : StringBuilder to format : Format in method public onBeforeRun(cmd List<String>, inputData File, outputDirectory File, typeName String, format Format, crs CoordinateReferenceSystem) : void in class org.geoserver.wfs.response.OGRWrapper",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<OgrFormat> to List<Format> in method public getFormats() : List<Format> from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to Map<String,String> in method public getEnvironment() : Map<String,String> from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type gdalData : String to environment : Map<String,String> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type formats : Map<String,OgrFormat> to formats : Map<String,Format> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type format : OgrFormat to format : Format in method public getMimeType(value Object, operation Operation) : String from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type format : OgrFormat to format : Format in method public getAttachmentFileName(value Object, operation Operation) : String from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type format : OgrFormat to format : Format in method protected write(featureCollection FeatureCollectionResponse, output OutputStream, getFeature Operation) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type parameters : OgrFormat to parameters : Format in method public addFormat(parameters Format) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type sb : StringBuilder to format : Format in method public onBeforeRun(cmd List<String>, inputData File, outputDirectory File, typeName String, format Format, crs CoordinateReferenceSystem) : void in class org.geoserver.wfs.response.OGRWrapper",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type notify : ResourceNotification to wrapperFactory : ToolWrapperFactory in method public Ogr2OgrConfigurator(format Ogr2OgrOutputFormat, wrapperFactory ToolWrapperFactory) in class org.geoserver.wfs.response.Ogr2OgrConfigurator",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type type : OgrType to type : OutputType in method public OgrFormat(ogrFormat String, formatName String, fileExtension String, singleFile boolean, mimeType String, type OutputType, options String...) from class org.geoserver.wfs.response.OgrFormat",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type f : OgrFormat to f : Format in method public testDescribeProcess() : void from class org.geoserver.wps.ogr.WPSOgrTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type f : OgrFormat to f : Format in method public testConfigurationLoad() : void from class org.geoserver.wps.ogr.WPSOgrTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type of : OgrFormat to of : Format in method public getProcessParameterIO() : List<ProcessParameterIO> from class org.geoserver.wps.ogr.Ogr2OgrPPIOFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to void in method public onBeforeRun(cmd List<String>, inputData File, outputDirectory File, typeName String, format Format, crs CoordinateReferenceSystem) : void in class org.geoserver.wfs.response.OGRWrapper",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>int</span> <span class='pl-en'>run</span>(<span class='pl-k'>List&lt;<span class='pl-smi'>String</span>&gt;</span> <span class='pl-v'>cmd</span>, <span class='pl-smi'>StringBuilder</span> <span class='pl-v'>sb</span>)</span> split to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>public</span> <span class='pl-k'>void</span> <span class='pl-en'>onBeforeRun</span>(<span class='pl-k'>List&lt;<span class='pl-smi'>String</span>&gt;</span> <span class='pl-v'>cmd</span>, <span class='pl-smi'>File</span> <span class='pl-v'>inputData</span>, <span class='pl-smi'>File</span> <span class='pl-v'>outputDirectory</span>, <span class='pl-smi'>String</span> <span class='pl-v'>typeName</span>, <span class='pl-smi'>Format</span> <span class='pl-v'>format</span>, <span class='pl-smi'>CoordinateReferenceSystem</span> <span class='pl-v'>crs</span>) and <span class='pl-k'>public</span> <span class='pl-k'>void</span> <span class='pl-en'>onAfterRun</span>(<span class='pl-k'>int</span> <span class='pl-v'>exitCode</span>)<br /></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type formats : Map<String,OgrFormat> to environment : Map<String,String> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : "<p>Attribute formats still exists in child commit</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type wrapper : OGRWrapper to wrapper : ToolWrapper in method protected write(featureCollection FeatureCollectionResponse, output OutputStream, getFeature Operation) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type format : OgrFormat to format : Format in method public convert(inputData File, outputDirectory File, typeName String, format Format, crs CoordinateReferenceSystem) : File from class org.geoserver.ogr.core.AbstractToolWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getFileExtension() : String extracted from public getProcessParameterIO() : List<ProcessParameterIO> in class org.geoserver.wps.ogr.Ogr2OgrPPIOFactory & moved to class org.geoserver.ogr.core.Format",
    "comment" : "<p>Field access replaced with getter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getType() : OutputType extracted from public getProcessParameterIO() : List<ProcessParameterIO> in class org.geoserver.wps.ogr.Ogr2OgrPPIOFactory & moved to class org.geoserver.ogr.core.Format",
    "comment" : "<p>Field access replaced with getter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getFormats() : Format[] extracted from public testDescribeProcess() : void in class org.geoserver.wps.ogr.WPSOgrTest & moved to class org.geoserver.ogr.core.ToolConfiguration",
    "comment" : "<p>Field access replaced with getter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setType(type OutputType) : void extracted from public OgrFormat(ogrFormat String, formatName String, fileExtension String, singleFile boolean, mimeType String, type OgrType, options String...) in class org.geoserver.wfs.response.OgrFormat & moved to class org.geoserver.ogr.core.Format",
    "comment" : "<p>Field assignment replaced with setter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface org.geoserver.ogr.core.FormatConverter from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getMimeType() : String extracted from public getMimeType(value Object, operation Operation) : String in class org.geoserver.wfs.response.Ogr2OgrOutputFormat & moved to class org.geoserver.ogr.core.Format",
    "comment" : "<p>Field access replaced with getter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getMimeType() : String extracted from public testDescribeProcess() : void in class org.geoserver.wps.ogr.WPSOgrTest & moved to class org.geoserver.ogr.core.Format",
    "comment" : "<p>Field access replaced with getter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setSingleFile(singleFile boolean) : void extracted from public OgrFormat(ogrFormat String, formatName String, fileExtension String, singleFile boolean, mimeType String, type OgrType, options String...) in class org.geoserver.wfs.response.OgrFormat & moved to class org.geoserver.ogr.core.Format",
    "comment" : "<p>Field assignment replaced with setter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setMimeType(mimeType String) : void extracted from public OgrFormat(ogrFormat String, formatName String, fileExtension String, singleFile boolean, mimeType String, type OgrType, options String...) in class org.geoserver.wfs.response.OgrFormat & moved to class org.geoserver.ogr.core.Format",
    "comment" : "<p>Field assignment replaced with setter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setFileExtension(fileExtension String) : void extracted from public OgrFormat(ogrFormat String, formatName String, fileExtension String, singleFile boolean, mimeType String, type OgrType, options String...) in class org.geoserver.wfs.response.OgrFormat & moved to class org.geoserver.ogr.core.Format",
    "comment" : "<p>Field assignment replaced with setter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setOptions(options List<String>) : void extracted from public OgrFormat(ogrFormat String, formatName String, fileExtension String, singleFile boolean, mimeType String, type OgrType, options String...) in class org.geoserver.wfs.response.OgrFormat & moved to class org.geoserver.ogr.core.Format",
    "comment" : "<p>Field assignment replaced with setter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public Ogr2OgrConfigurator(format Ogr2OgrOutputFormat) renamed to protected getConfigurationFile() : String in class org.geoserver.wfs.response.Ogr2OgrConfigurator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setGdalData(gdalData String) : void renamed to public setEnvironment(environment Map<String,String>) : void in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : "<p>The references are updated in the same way<br />https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3?diff=split#diff-5d6c0cad5492115979d4e8ddcce841a5R81</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package run(cmd List<String>, sb StringBuilder) : int renamed to public onBeforeRun(cmd List<String>, inputData File, outputDirectory File, typeName String, format Format, crs CoordinateReferenceSystem) : void in class org.geoserver.wfs.response.OGRWrapper",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected buildXStream() : XStream from class org.geoserver.wfs.response.Ogr2OgrConfigurator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public clearFormats() : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getFormats() : List<Format> from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getExecutable() : String from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public setExecutable(ogrExecutable String) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getEnvironment() : Map<String,String> from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public addFormat(parameters Format) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public convert(inputData File, outputDirectory File, typeName String, format Format, crs CoordinateReferenceSystem) : File from class org.geoserver.ogr.core.AbstractToolWrapper",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected getConfigurationFile() : String from class org.geoserver.wfs.response.Ogr2OgrConfigurator",
    "comment" : "<p>getConfigurationFile() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected getDefaultConfiguration() : ToolConfiguration from class org.geoserver.wfs.response.Ogr2OgrConfigurator",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>getDefaultConfiguration</span>()</span> is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public setEnvironment(environment Map<String,String>) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to protected in method protected buildXStream() : XStream from class org.geoserver.wfs.response.Ogr2OgrConfigurator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to protected in method protected run(cmd List<String>, sb StringBuilder) : int from class org.geoserver.ogr.core.AbstractToolWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private ogrFormat : String from class org.geoserver.wfs.response.OgrFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private formatName : String from class org.geoserver.wfs.response.OgrFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method package buildXStream() : XStream from class org.geoserver.wfs.response.Ogr2OgrConfigurator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected setInputOutput(cmd List<String>, inputData File, outputDirectory File, typeName String, format Format) : String extracted from public convert(inputData File, outputDirectory File, typeName String, format OgrFormat, crs CoordinateReferenceSystem) : File in class org.geoserver.ogr.core.AbstractToolWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes cannot be justified"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter wrapperFactory : ToolWrapperFactory in method public Ogr2OgrOutputFormat(gs GeoServer, wrapperFactory ToolWrapperFactory) from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to protected in attribute protected configFile : Resource from class org.geoserver.ogr.core.AbstractToolConfigurator",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected listener : ResourceListener from class org.geoserver.ogr.core.AbstractToolConfigurator",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private fileExtension : String from class org.geoserver.ogr.core.Format",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private options : List<String> from class org.geoserver.ogr.core.Format",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private singleFile : boolean from class org.geoserver.ogr.core.Format",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private mimeType : String from class org.geoserver.ogr.core.Format",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type wrapper : OGRWrapper to wrapper : ToolWrapper in method public loadConfiguration() : void from class org.geoserver.ogr.core.AbstractToolConfigurator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type format : OgrFormat to format : Format in method public loadConfiguration() : void from class org.geoserver.ogr.core.AbstractToolConfigurator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type configuration : OgrConfiguration to configuration : ToolConfiguration in method public loadConfiguration() : void from class org.geoserver.ogr.core.AbstractToolConfigurator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public OGRWrapper(ogrExecutable String, gdalData String) from class org.geoserver.wfs.response.OGRWrapper to public AbstractToolWrapper(executable String, environment Map<String,String>) from class org.geoserver.ogr.core.AbstractToolWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ogrExecutable : String to executable : String in method public AbstractToolWrapper(executable String, environment Map<String,String>) from class org.geoserver.ogr.core.AbstractToolWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter gdalData : String to environment : Map<String,String> in method public setEnvironment(environment Map<String,String>) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type gdalData : String to environment : Map<String,String> in method public setEnvironment(environment Map<String,String>) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3729
}, {
  "id" : 1159151,
  "repository" : "https://github.com/neo4j/neo4j.git",
  "sha1" : "e0072aac53b3b88de787e7ca653c7e17f9499018",
  "url" : "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
  "author" : "Nigel Small",
  "time" : "8/5/15 12:32 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private unpackBytesHeader() : int extracted from public unpackBytes() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the method invocation -unpackBytes- has been removed."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private unpackRawBytesInto(buffer byte[], offset int, size int) : void extracted from private unpackBytes(size int) : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "added statements"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public unpackString() : String renamed to public unpackText() : String in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private unpackBytes(size int) : byte[] renamed to private unpackRawBytes(size int) : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.neo4j.packstream.PackStream.PackstreamException renamed to org.neo4j.packstream.PackStream.PackStreamException",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public unpackUtf8() : byte[] renamed to public unpackTextHeader() : int in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : "<p>Matin: the bodies are so similar but there is a method with the same name in the target revision. Also wherever&nbsp;it has been called is calling the method with the same name. FP</p><p>Davood: It seems that unpackTextHeader&nbsp;is extracted from unpackUTF8 rather than being renamed, because&nbsp;unpackUTF8 exists before and after</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private packRawMap(map Map<String,Object>) : void from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer to public packRawMap(map Map<String,Object>) : void from class org.neo4j.ndp.messaging.v1.Neo4jPack.Packer",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private unpackRawMap() : Map<String,Object> from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader to public unpackRawMap() : Map<String,Object> from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private unpackProperties() : Map<String,Object> from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader to public unpackProperties() : Map<String,Object> from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
    "comment" : "<p>Move to new class</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public NODE : byte from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1 to public NODE : byte from class org.neo4j.ndp.messaging.v1.Neo4jPack",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public RELATIONSHIP : byte from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1 to public RELATIONSHIP : byte from class org.neo4j.ndp.messaging.v1.Neo4jPack",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public PATH : byte from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1 to public PATH : byte from class org.neo4j.ndp.messaging.v1.Neo4jPack",
    "comment" : "new",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter input : PackStream.Unpacker to unpacker : Neo4jPack.Unpacker in method public Reader(unpacker Neo4jPack.Unpacker) from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable size : long to longSize : long in method private unpackBytesHeader() : int from class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable heapBuffer : byte[] to buffer : byte[] in method private unpackRawBytesInto(buffer byte[], offset int, size int) : void from class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldSerializePath() : void renamed to public shouldSerializePaths() : void in class org.neo4j.ndp.messaging.v1.MessageFormatTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.neo4j.ndp.messaging.v1.Neo4jPack.Packer from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.neo4j.ndp.messaging.v1.Neo4jPack from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type packer : PackStream.Packer to packer : Neo4jPack.Packer in method public Writer(packer Neo4jPack.Packer, onMessageComplete MessageBoundaryHook) from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type input : PackStream.Unpacker to unpacker : Neo4jPack.Unpacker in method public Reader(unpacker Neo4jPack.Unpacker) from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type labels : List<Label> to labels : Collection<Label> in method public ValueNode(id long, labels Collection<Label>, props Map<String,Object>) from class org.neo4j.ndp.messaging.v1.infrastructure.ValueNode",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type packer : PackStream.Packer to packer : Neo4jPack.Packer in method public pack(value String, packer Neo4jPack.Packer, writer PackStreamMessageFormatV1.Writer) : void from class org.neo4j.ndp.docs.v1.DocSerialization",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type packer : PackStream.Packer to packer : Neo4jPack.Packer in class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type unpacker : PackStream.Unpacker to unpacker : Neo4jPack.Unpacker in class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type labels : List<Label> to labels : Collection<Label> in class org.neo4j.ndp.messaging.v1.infrastructure.ValueNode",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type entities : PropertyContainer[] to entities : List<PropertyContainer> in class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type packer : PackStream.Packer to packer : Neo4jPack.Packer in method public pack(value String) : byte[] from class org.neo4j.ndp.docs.v1.DocSerialization",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute entities : PropertyContainer[] to nodes : List<Node> in class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
    "comment" : "<p>It seems like PropertyContainer[] entities is split to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>List&lt;<span class='pl-smi'>Node</span>&gt;</span> nodes</span> and <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>List&lt;<span class='pl-smi'>Relationship</span>&gt;</span> relationships</span>, but there are not many statement mappings to confirm that.</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter entities : PropertyContainer to sequence : List<Integer> in method public ValuePath(nodes List<Node>, relationships List<Relationship>, sequence List<Integer>) in class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute idx : int to i : int in class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath.iterator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable size : long to longSize : long in method public unpackTextHeader() : int from class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : "<p>If the method pair<br />public byte[] unpackUtf8() throws IOException<br />public int unpackTextHeader() throws IOException<br />is matched, then<br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>long</span> size <span class='pl-k'>=</span> unpackUINT32(); becomes <span class='pl-k'>long</span> longSize <span class='pl-k'>=</span> unpackUINT32();<br /></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public unpackTextHeader() : int extracted from public unpackUtf8() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the method invocation -unpackBytes- has been removed."
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public unpackUtf8() : byte[] renamed to public unpackUTF8() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.neo4j.packstream.PackStream.PackStreamException from class org.neo4j.packstream.PackStream.Overflow",
    "comment" : "<p>Rename Class org.neo4j.packstream.PackStream.PackstreamException renamed to org.neo4j.packstream.PackStream.PackStreamException</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.neo4j.packstream.PackStream.PackStreamException from class org.neo4j.packstream.PackStream.EndOfStream",
    "comment" : "<p>Rename Class org.neo4j.packstream.PackStream.PackstreamException renamed to org.neo4j.packstream.PackStream.PackStreamException</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public pack(packer Neo4jPack.Packer, rel Relationship) : void extracted from private packValue(obj Object) : void in class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer & moved to class org.neo4j.ndp.messaging.v1.infrastructure.ValueRelationship",
    "comment" : "<p>ValueRelationship.pack( this, (Relationship) obj );</p>",
    "validation" : "CTP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public pack(packer Neo4jPack.Packer, node Node) : void extracted from private packValue(obj Object) : void in class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer & moved to class org.neo4j.ndp.messaging.v1.infrastructure.ValueNode",
    "comment" : "<p>ValueNode.pack( this, (Node) obj );</p>",
    "validation" : "CTP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private packValue(obj Object) : void from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer to public pack(obj Object) : void from class org.neo4j.ndp.messaging.v1.Neo4jPack.Packer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public unpackBytes() : byte[] renamed to private unpackBytesHeader() : int in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public unpackUtf8() : byte[] renamed to public unpackBytes() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter exampleValue : String in method public Field(typeSignature String, name String, exampleValue String) from class org.neo4j.ndp.docs.v1.DocStruct.Field",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public startNode() : Node from class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public endNode() : Node from class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public lastRelationship() : Relationship from class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public isPackstreamType(packStreamType String) : Matcher<? super byte[]> from class org.neo4j.ndp.docs.v1.NDPValueDocTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public packRawMap(map Map<String,Object>) : void from class org.neo4j.ndp.messaging.v1.Neo4jPack.Packer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public unpackRawMap() : Map<String,Object> from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public unpackProperties() : Map<String,Object> from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to public in attribute public UTF_8 : Charset from class org.neo4j.packstream.PackStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private name : String from class org.neo4j.ndp.docs.v1.DocStruct.Field",
    "comment" : "<p>is called in method<br />private void packValueOf( DocStruct.Field field, Neo4jPack.Packer packer ) throws IOException<br />community/ndp/v1-docs/src/test/java/org/neo4j/ndp/docs/v1/NDPValueStructsDocTest.java<br />String name = field.name().toLowerCase();</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method public isPackstreamType(packStreamType String) : Matcher<? super byte[]> from class org.neo4j.ndp.docs.v1.NDPValueDocTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private entities : PropertyContainer[] from class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : PackStream.PackstreamException to e : PackStream.PackStreamException in method public read(output MessageHandler<E>) : void from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private unpackValue() : Object from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader to public unpack() : Object from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public unpack() : Object from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3709
} ]
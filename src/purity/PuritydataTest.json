[{
  "id" : 1123966,
  "repository" : "https://github.com/spring-projects/spring-data-neo4j.git",
  "sha1" : "071588a418dbc743e0f7dbfe218cd8a6c0f97421",
  "url" : "https://github.com/spring-projects/spring-data-neo4j/commit/071588a418dbc743e0f7dbfe218cd8a6c0f97421",
  "author" : "Vince Bickers",
  "time" : "6/24/15 2:10 PM",
  "refactorings" : [ {
    "type" : "Move Package",
    "description" : "Move Package org.springframework.data.neo4j.integration.helloworld to org.springframework.data.neo4j.examples.galaxy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.transactions.ApplicationConfig moved to org.springframework.data.neo4j.transactions.ApplicationConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.repositories.ProgrammaticRepositoryTest moved to org.springframework.data.neo4j.repositories.ProgrammaticRepositoryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.extensions.UserRepository moved to org.springframework.data.neo4j.extensions.UserRepository",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.template.ExceptionTranslationTest moved to org.springframework.data.neo4j.template.ExceptionTranslationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.repositories.repo.MovieRepository moved to org.springframework.data.neo4j.repositories.repo.MovieRepository",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.transactions.TransactionBoundaryTest moved to org.springframework.data.neo4j.transactions.TransactionBoundaryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.web.domain.Cinema moved to org.springframework.data.neo4j.web.domain.Cinema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.repositories.RepoScanningTest moved to org.springframework.data.neo4j.repositories.RepoScanningTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.repositories.RepositoryDefinitionTest moved to org.springframework.data.neo4j.repositories.RepositoryDefinitionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.TransactionIntegrationTest moved to org.springframework.data.neo4j.transactions.TransactionIntegrationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.web.WebIntegrationTest moved to org.springframework.data.neo4j.web.WebIntegrationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.extensions.CustomGraphRepositoryTest moved to org.springframework.data.neo4j.extensions.CustomGraphRepositoryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.repository.support.GraphRepositoryFactoryTest moved to org.springframework.data.neo4j.repositories.support.GraphRepositoryFactoryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.repositories.repo.UserRepository moved to org.springframework.data.neo4j.repositories.repo.UserRepository",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.template.TemplateApplicationEventTest moved to org.springframework.data.neo4j.template.TemplateApplicationEventTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.template.context.DataManipulationEventConfiguration moved to org.springframework.data.neo4j.template.context.DataManipulationEventConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.transactions.service.WrapperService moved to org.springframework.data.neo4j.transactions.service.WrapperService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.extensions.CustomPersistenceContext moved to org.springframework.data.neo4j.extensions.CustomPersistenceContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.web.repo.UserRepository moved to org.springframework.data.neo4j.web.repo.UserRepository",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.extensions.CustomGraphRepository moved to org.springframework.data.neo4j.extensions.CustomGraphRepository",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.web.context.WebAppContext moved to org.springframework.data.neo4j.web.context.WebAppContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.repositories.domain.Movie moved to org.springframework.data.neo4j.repositories.domain.Movie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.web.service.UserService moved to org.springframework.data.neo4j.web.service.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.extensions.domain.User moved to org.springframework.data.neo4j.extensions.domain.User",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.extensions.CustomGraphRepositoryImpl moved to org.springframework.data.neo4j.extensions.CustomGraphRepositoryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.web.service.UserServiceImpl moved to org.springframework.data.neo4j.web.service.UserServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.transactions.service.BusinessService moved to org.springframework.data.neo4j.transactions.service.BusinessService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.web.repo.GenreRepository moved to org.springframework.data.neo4j.web.repo.GenreRepository",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.repositories.domain.User moved to org.springframework.data.neo4j.repositories.domain.User",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.web.domain.User moved to org.springframework.data.neo4j.web.domain.User",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.template.Neo4jTemplateTest moved to org.springframework.data.neo4j.template.Neo4jTemplateTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.web.context.WebPersistenceContext moved to org.springframework.data.neo4j.web.context.WebPersistenceContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.web.controller.UserController moved to org.springframework.data.neo4j.web.controller.UserController",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.template.TestNeo4jEventListener moved to org.springframework.data.neo4j.template.TestNeo4jEventListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.repositories.repo.PersistenceContextInTheSamePackage moved to org.springframework.data.neo4j.repositories.repo.PersistenceContextInTheSamePackage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.springframework.data.neo4j.integration.repositories.context.PersistenceContext moved and renamed to org.springframework.data.neo4j.repositories.context.RepositoriesTestContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.springframework.data.neo4j.integration.movies.context.PersistenceContext moved and renamed to org.springframework.data.neo4j.examples.movies.context.MoviesContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.springframework.data.neo4j.integration.helloworld.context.HelloWorldContext moved and renamed to org.springframework.data.neo4j.examples.galaxy.context.GalaxyContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.springframework.data.neo4j.integration.movies.End2EndIntegrationTest moved and renamed to org.springframework.data.neo4j.examples.movies.MoviesIntegrationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.springframework.data.neo4j.integration.jsr303.PersistenceConfiguration moved and renamed to org.springframework.data.neo4j.examples.jsr303.JSR303Context",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.repo.CinemaRepository moved to org.springframework.data.neo4j.examples.movies.repo.CinemaRepository",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getId() : Long from class org.springframework.data.neo4j.integration.helloworld.domain.World to public getId() : Long from class org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.TempMovie moved to org.springframework.data.neo4j.examples.movies.domain.TempMovie",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.DerivedQueryTest moved to org.springframework.data.neo4j.queries.DerivedQueryTest",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.Cinema moved to org.springframework.data.neo4j.examples.movies.domain.Cinema",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.repo.TempMovieRepository moved to org.springframework.data.neo4j.examples.movies.repo.TempMovieRepository",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class org.springframework.data.neo4j.integration.helloworld.domain.World to public getName() : String from class org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.repo.UnmanagedUserPojo moved to org.springframework.data.neo4j.examples.movies.repo.UnmanagedUserPojo",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public equals(obj Object) : boolean from class org.springframework.data.neo4j.integration.helloworld.domain.World to public equals(obj Object) : boolean from class org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.Person moved to org.springframework.data.neo4j.examples.movies.domain.Person",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public canBeReachedFrom(otherWorld World) : boolean from class org.springframework.data.neo4j.integration.helloworld.domain.World to public canBeReachedFrom(otherWorld World) : boolean from class org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private reachableByRocket : Set<World> from class org.springframework.data.neo4j.integration.helloworld.domain.World to private reachableByRocket : Set<World> from class org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public validator() : LocalValidatorFactoryBean from class org.springframework.data.neo4j.integration.jsr303.WebConfiguration to public validator() : LocalValidatorFactoryBean from class org.springframework.data.neo4j.examples.jsr303.WebConfiguration",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.repo.RatingRepository moved to org.springframework.data.neo4j.examples.movies.repo.RatingRepository",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.jsr303.service.AdultService moved to org.springframework.data.neo4j.examples.jsr303.service.AdultService",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.Movie moved to org.springframework.data.neo4j.examples.movies.domain.Movie",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.User moved to org.springframework.data.neo4j.examples.movies.domain.User",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.ReleasedMovie moved to org.springframework.data.neo4j.examples.movies.domain.ReleasedMovie",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.service.UserService moved to org.springframework.data.neo4j.examples.movies.service.UserService",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.repo.UserRepository moved to org.springframework.data.neo4j.examples.movies.repo.UserRepository",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getSession() : Session from class org.springframework.data.neo4j.integration.web.context.WebPersistenceContext to public getSession() : Session from class org.springframework.data.neo4j.web.context.WebPersistenceContext",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public neo4jServer() : Neo4jServer from class org.springframework.data.neo4j.integration.web.context.WebPersistenceContext to public neo4jServer() : Neo4jServer from class org.springframework.data.neo4j.transactions.ApplicationConfig",
    "comment" : "<p>No method removed from&nbsp;WebPersistenceContext!</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.helloworld.GalaxyServiceTest moved to org.springframework.data.neo4j.examples.galaxy.GalaxyServiceTest",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public neo4jServer() : Neo4jServer from class org.springframework.data.neo4j.integration.transactions.ApplicationConfig to public neo4jServer() : Neo4jServer from class org.springframework.data.neo4j.transactions.ApplicationConfig",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.helloworld.service.GalaxyService moved to org.springframework.data.neo4j.examples.galaxy.service.GalaxyService",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.AbstractEntity moved to org.springframework.data.neo4j.examples.movies.domain.AbstractEntity",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.web.domain.Genre moved to org.springframework.data.neo4j.web.domain.Genre",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.QueryIntegrationTest moved to org.springframework.data.neo4j.queries.QueryIntegrationTest",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.repo.AbstractEntityRepository moved to org.springframework.data.neo4j.examples.movies.repo.AbstractEntityRepository",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.RichUserQueryResult moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.RichUserQueryResult",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.repo.GenreRepository moved to org.springframework.data.neo4j.examples.movies.repo.GenreRepository",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.Gender moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.Gender",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.jsr303.domain.Adult moved to org.springframework.data.neo4j.examples.jsr303.domain.Adult",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.service.UserServiceImpl moved to org.springframework.data.neo4j.examples.movies.service.UserServiceImpl",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.AbstractAnnotatedEntity moved to org.springframework.data.neo4j.examples.movies.domain.AbstractAnnotatedEntity",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setReachableByRocket(reachableByRocket Set<World>) : void from class org.springframework.data.neo4j.integration.helloworld.domain.World to public setReachableByRocket(reachableByRocket Set<World>) : void from class org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.repo.ActorRepository moved to org.springframework.data.neo4j.examples.movies.repo.ActorRepository",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.jsr303.controller.AdultController moved to org.springframework.data.neo4j.examples.jsr303.controller.AdultController",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private id : Long from class org.springframework.data.neo4j.integration.helloworld.domain.World to private id : Long from class org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public hashCode() : int from class org.springframework.data.neo4j.integration.helloworld.domain.World to public hashCode() : int from class org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.EntityWrappingQueryResult moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.EntityWrappingQueryResult",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.jsr303.JSR303Test moved to org.springframework.data.neo4j.examples.jsr303.JSR303Test",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.UserQueryResultInterface moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.UserQueryResultInterface",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.Rating moved to org.springframework.data.neo4j.examples.movies.domain.Rating",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private name : String from class org.springframework.data.neo4j.integration.helloworld.domain.World to private name : String from class org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private moons : int from class org.springframework.data.neo4j.integration.helloworld.domain.World to private moons : int from class org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.Genre moved to org.springframework.data.neo4j.examples.movies.domain.Genre",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class org.springframework.data.neo4j.integration.helloworld.domain.World to public toString() : String from class org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getReachableByRocket() : Set<World> from class org.springframework.data.neo4j.integration.helloworld.domain.World to public getReachableByRocket() : Set<World> from class org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.repo.AbstractAnnotatedEntityRepository moved to org.springframework.data.neo4j.examples.movies.repo.AbstractAnnotatedEntityRepository",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addRocketRouteTo(otherWorld World) : void from class org.springframework.data.neo4j.integration.helloworld.domain.World to public addRocketRouteTo(otherWorld World) : void from class org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.UserQueryResult moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.UserQueryResult",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getMoons() : int from class org.springframework.data.neo4j.integration.helloworld.domain.World to public getMoons() : int from class org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.Actor moved to org.springframework.data.neo4j.examples.movies.domain.Actor",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.jsr303.repo.AdultRepository moved to org.springframework.data.neo4j.examples.jsr303.repo.AdultRepository",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.jsr303.WebConfiguration moved to org.springframework.data.neo4j.examples.jsr303.WebConfiguration",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.helloworld.domain.World moved to org.springframework.data.neo4j.examples.galaxy.domain.World",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Package",
    "description" : "Rename Package org.springframework.data.neo4j.integration to org.springframework.data.neo4j.examples",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.springframework.data.neo4j.integration.extensions.CustomPersistenceContext moved and renamed to org.springframework.data.neo4j.repositories.repo.PersistenceContextInTheSamePackage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.springframework.data.neo4j.integration.repositories.repo.PersistenceContextInTheSamePackage moved and renamed to org.springframework.data.neo4j.extensions.CustomPersistenceContext",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.web.domain.Genre moved to org.springframework.data.neo4j.examples.movies.domain.Genre",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.helloworld.repo.WorldRepository moved to org.springframework.data.neo4j.examples.galaxy.repo.WorldRepository",
    "comment" : "<p>The interface initially has no methods, and then is has 3 methods</p>",
    "validation" : "CTP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.neo4j.integration.movies.domain.Genre moved to org.springframework.data.neo4j.web.domain.Genre",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @ContextConfiguration(classes = {HelloWorldContext.class}) to @ContextConfiguration(classes = {GalaxyContext.class}) in class org.springframework.data.neo4j.examples.galaxy.GalaxyServiceTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @ContextConfiguration(classes = {WebConfiguration.class,PersistenceConfiguration.class}) to @ContextConfiguration(classes = {WebConfiguration.class,JSR303Context.class}) in class org.springframework.data.neo4j.examples.jsr303.JSR303Test",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @ComponentScan({\"org.springframework.data.neo4j.integration.jsr303.controller\"}) to @ComponentScan({\"org.springframework.data.neo4j.examples.jsr303.controller\"}) in class org.springframework.data.neo4j.examples.jsr303.WebConfiguration",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @ContextConfiguration(classes = {PersistenceContext.class}) to @ContextConfiguration(classes = {MoviesContext.class}) in class org.springframework.data.neo4j.queries.DerivedQueryTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @ContextConfiguration(classes = {PersistenceContext.class}) to @ContextConfiguration(classes = {MoviesContext.class}) in class org.springframework.data.neo4j.queries.QueryIntegrationTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @ContextConfiguration(classes = {PersistenceContext.class}) to @ContextConfiguration(classes = {MoviesContext.class}) in class org.springframework.data.neo4j.transactions.TransactionIntegrationTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @ContextConfiguration(classes = {PersistenceContext.class}) to @ContextConfiguration(classes = {RepositoriesTestContext.class}) in class org.springframework.data.neo4j.repositories.RepositoryDefinitionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @ComponentScan({\"org.springframework.data.neo4j.integration.transactions\"}) to @ComponentScan({\"org.springframework.data.neo4j.transactions\"}) in class org.springframework.data.neo4j.transactions.ApplicationConfig",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @ComponentScan({\"org.springframework.data.neo4j.integration.web.controller\"}) to @ComponentScan({\"org.springframework.data.neo4j.web.controller\"}) in class org.springframework.data.neo4j.web.context.WebAppContext",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @ComponentScan({\"org.springframework.data.neo4j.integration.web\"}) to @ComponentScan({\"org.springframework.data.neo4j.web\"}) in class org.springframework.data.neo4j.web.context.WebPersistenceContext",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @EnableNeo4jRepositories(\"org.springframework.data.neo4j.integration.web.repo\") to @EnableNeo4jRepositories(\"org.springframework.data.neo4j.web.repo\") in class org.springframework.data.neo4j.web.context.WebPersistenceContext",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @ComponentScan({\"org.springframework.data.neo4j.integration.helloworld.*\"}) to @ComponentScan({\"org.springframework.data.neo4j.examples.galaxy.*\"}) in class org.springframework.data.neo4j.examples.galaxy.context.GalaxyContext",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @EnableNeo4jRepositories(\"org.springframework.data.neo4j.integration.helloworld.repo\") to @EnableNeo4jRepositories(\"org.springframework.data.neo4j.examples.galaxy.repo\") in class org.springframework.data.neo4j.examples.galaxy.context.GalaxyContext",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @EnableNeo4jRepositories(\"org.springframework.data.neo4j.integration.jsr303.repo\") to @EnableNeo4jRepositories(\"org.springframework.data.neo4j.examples.jsr303.repo\") in class org.springframework.data.neo4j.examples.jsr303.JSR303Context",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @ContextConfiguration(classes = {PersistenceContext.class}) to @ContextConfiguration(classes = {MoviesContext.class}) in class org.springframework.data.neo4j.examples.movies.MoviesIntegrationTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @ComponentScan({\"org.springframework.data.neo4j.integration.movies\"}) to @ComponentScan({\"org.springframework.data.neo4j.examples.movies\"}) in class org.springframework.data.neo4j.examples.movies.context.MoviesContext",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @EnableNeo4jRepositories(\"org.springframework.data.neo4j.integration.movies.repo\") to @EnableNeo4jRepositories(\"org.springframework.data.neo4j.examples.movies.repo\") in class org.springframework.data.neo4j.examples.movies.context.MoviesContext",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @ComponentScan({\"org.springframework.data.neo4j.integration.repositories\"}) to @ComponentScan({\"org.springframework.data.neo4j.repositories\"}) in class org.springframework.data.neo4j.repositories.context.RepositoriesTestContext",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @EnableNeo4jRepositories(\"org.springframework.data.neo4j.integration.repositories\") to @EnableNeo4jRepositories(\"org.springframework.data.neo4j.repositories.repo\") in class org.springframework.data.neo4j.repositories.context.RepositoriesTestContext",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Package",
    "description" : "Split Package org.springframework.data.neo4j.integration.movies to [org.springframework.data.neo4j.queries, org.springframework.data.neo4j.transactions]",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Package",
    "description" : "Rename Package org.springframework.data.neo4j.repository to org.springframework.data.neo4j.repositories",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1124301,
  "repository" : "https://github.com/mockito/mockito.git",
  "sha1" : "7f20e63a7252f33c888085134d16ee8bf45f183f",
  "url" : "https://github.com/mockito/mockito/commit/7f20e63a7252f33c888085134d16ee8bf45f183f",
  "author" : "Szczepan Faber",
  "time" : "6/25/15 11:28 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.mockito.internal.matchers.MatchersPrinter moved to org.mockito.internal.matchers.text.MatchersPrinter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.LocalizedMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.NotNull",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Contains",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.EndsWith",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.InstanceOf",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.StartsWith",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Matches",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Find",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.CompareTo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Any",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Equals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.apachecommons.ReflectionEquals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.EqualsWithDelta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Null",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.VarargCapturingMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.CapturingMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.ArrayEquals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.mockito.internal.util.text.ArrayIterator moved to org.mockito.internal.matchers.text.ArrayIterator",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.mockito.internal.util.text.HamcrestPrinter moved to org.mockito.internal.matchers.text.HamcrestPrinter",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Or",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.And",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Not",
    "comment" : "Doing the same thing",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.LocalizedMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getArgumentsBlock(matchers List<Matcher>, printSettings PrintSettings) : String from class org.mockito.internal.matchers.MatchersPrinter to public getArgumentsBlock(matchers List<MockitoMatcher>, printSettings PrintSettings) : String from class org.mockito.internal.matchers.text.MatchersPrinter",
    "comment" : "Its a move class. In this method there is a singature change too",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getArgumentsLine(matchers List<Matcher>, printSettings PrintSettings) : String from class org.mockito.internal.matchers.MatchersPrinter to public getArgumentsLine(matchers List<MockitoMatcher>, printSettings PrintSettings) : String from class org.mockito.internal.matchers.text.MatchersPrinter",
    "comment" : "Its a move class. In this method there is a singature change too",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected append(str String) : void from class org.mockito.internal.util.text.ValuePrinter to protected append(str String) : void from class org.mockito.internal.matchers.text.ValuePrinter",
    "comment" : "Its a move class.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public appendList(start String, separator String, end String, i Iterator) : ValuePrinter from class org.mockito.internal.util.text.ValuePrinter to public appendList(start String, separator String, end String, i Iterator) : ValuePrinter from class org.mockito.internal.matchers.text.ValuePrinter",
    "comment" : "Its a move class.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public appendText(text String) : ValuePrinter from class org.mockito.internal.util.text.ValuePrinter to public appendText(text String) : ValuePrinter from class org.mockito.internal.matchers.text.ValuePrinter",
    "comment" : "Its a move class.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private descriptionOf(value Object) : String from class org.mockito.internal.util.text.ValuePrinter to private descriptionOf(value Object) : String from class org.mockito.internal.matchers.text.ValuePrinter",
    "comment" : "Its a move class.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private toJavaSyntax(unformatted String) : void from class org.mockito.internal.util.text.ValuePrinter to private toJavaSyntax(unformatted String) : void from class org.mockito.internal.matchers.text.ValuePrinter",
    "comment" : "Move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class org.mockito.internal.util.text.ValuePrinter to public toString() : String from class org.mockito.internal.matchers.text.ValuePrinter",
    "comment" : "Move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private applyPrintSettings(matchers List<Matcher>, printSettings PrintSettings) : Iterator from class org.mockito.internal.matchers.MatchersPrinter to private applyPrintSettings(matchers List<MockitoMatcher>, printSettings PrintSettings) : Iterator from class org.mockito.internal.matchers.text.MatchersPrinter",
    "comment" : "Its a move class.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public appendValue(value Object) : ValuePrinter from class org.mockito.internal.util.text.ValuePrinter to public appendValue(value Object) : ValuePrinter from class org.mockito.internal.matchers.text.ValuePrinter",
    "comment" : "Its a move class.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public describe() : String extracted from private applyPrintSettings(matchers List<Matcher>, printSettings PrintSettings) : Iterator in class org.mockito.internal.matchers.MatchersPrinter & moved to class org.mockito.MockitoMatcher",
    "comment" : "<p>RefDiff detetcedit as Extartc Method but if it was TP it should have been under Extratc and move since method describe() is added in class <span class='blob-code-inner'><span class='pl-en'>MockitoMatcher.</span></span></p><p><span class='blob-code-inner'><span class='pl-en'>Davood: This is FP not because it is moved to another class, but because the functionality in the extracted method does not have anything to do with the original code. Basically, nothing can be extracted:</span></span></p><p><span class='blob-code-inner'><span class='pl-en'><code>out<span class='pl-k'>.</span>add(matcher)</code> =&gt;&nbsp;<code>out<span class='pl-k'>.</span>add(<span class='pl-k x x-first'>new</span> <span class='pl-smi x'>FormattedText</span><span class='x x-last'>(</span>matcher<span class='pl-k x x-first'>.</span><span class='x x-last'>describe())</span>);</code></span></span></p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private content : StringBuilder from class org.mockito.internal.util.text.ValuePrinter to private content : StringBuilder from class org.mockito.internal.matchers.text.ValuePrinter",
    "comment" : "Its a move class.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Not",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.EqualsWithDelta",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Same",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockitousage.matchers.CustomMatchersTest.IsSorZ",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Equals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockitousage.matchers.CustomMatchersTest.IsAnyBoolean",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.And",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.apachecommons.ReflectionEquals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Or",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockitousage.matchers.CustomMatchersTest.ContainsFoo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockitousage.matchers.CustomMatchersTest.IsZeroOrOne",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockitousage.matchers.CustomMatchersTest.StringThatContainsXxx",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.VarargCapturingMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.AnyVararg",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Any",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.CompareTo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.EndsWith",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Null",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.StartsWith",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Matches",
    "comment" : "<p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.CapturingMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Contains",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.NotNull",
    "comment" : "<p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.InstanceOf",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.mockito.internal.util.text.ValuePrinter moved to org.mockito.internal.matchers.text.ValuePrinter",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Find",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter actual : Object to object : Object in method public matches(object Object) : boolean from class org.mockito.internal.matchers.EqualsWithDelta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ArgumentMatcher<?> to matcher : MockitoMatcher<?> in method private reportMatcher(matcher MockitoMatcher<?>) : HandyReturnValues from class org.mockito.AdditionalMatchers",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : Matcher<T> to matcher : MockitoMatcher<T> in method public argThat(matcher MockitoMatcher<T>) : T from class org.mockito.Matchers",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : Matcher<Character> to matcher : MockitoMatcher<Character> in method public charThat(matcher MockitoMatcher<Character>) : char from class org.mockito.Matchers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : Matcher<Boolean> to matcher : MockitoMatcher<Boolean> in method public booleanThat(matcher MockitoMatcher<Boolean>) : boolean from class org.mockito.Matchers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : Matcher<Byte> to matcher : MockitoMatcher<Byte> in method public byteThat(matcher MockitoMatcher<Byte>) : byte from class org.mockito.Matchers",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : Matcher<Short> to matcher : MockitoMatcher<Short> in method public shortThat(matcher MockitoMatcher<Short>) : short from class org.mockito.Matchers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : Matcher<Integer> to matcher : MockitoMatcher<Integer> in method public intThat(matcher MockitoMatcher<Integer>) : int from class org.mockito.Matchers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : Matcher<Long> to matcher : MockitoMatcher<Long> in method public longThat(matcher MockitoMatcher<Long>) : long from class org.mockito.Matchers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : Matcher<Float> to matcher : MockitoMatcher<Float> in method public floatThat(matcher MockitoMatcher<Float>) : float from class org.mockito.Matchers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : Matcher<Double> to matcher : MockitoMatcher<Double> in method public doubleThat(matcher MockitoMatcher<Double>) : double from class org.mockito.Matchers",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : Matcher<?> to matcher : MockitoMatcher<?> in method private reportMatcher(matcher MockitoMatcher<?>) : HandyReturnValues from class org.mockito.Matchers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method public InvocationMatcher(invocation Invocation, matchers List<MockitoMatcher>) from class org.mockito.internal.invocation.InvocationMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method public And(matchers List<MockitoMatcher>) from class org.mockito.internal.matchers.And",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type actualMatcher : Matcher to actualMatcher : MockitoMatcher in method public LocalizedMatcher(actualMatcher MockitoMatcher) from class org.mockito.internal.matchers.LocalizedMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type first : Matcher to first : MockitoMatcher in method public Not(first MockitoMatcher) from class org.mockito.internal.matchers.Not",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method public Or(matchers List<MockitoMatcher>) from class org.mockito.internal.matchers.Or",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : Matcher to matcher : MockitoMatcher in method public reportMatcher(matcher MockitoMatcher) : HandyReturnValues from class org.mockito.internal.progress.ArgumentMatcherStorageImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method public print(matchers List<MockitoMatcher>, invocation Invocation) : String from class org.mockito.internal.reporting.PrintSettings",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method public getSuspiciouslyNotMatchingArgsIndexes(matchers List<MockitoMatcher>, arguments Object[]) : Integer[] from class org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type m : Matcher to m : MockitoMatcher in method private safelyMatches(m MockitoMatcher, arg Object) : boolean from class org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type m : Matcher to m : MockitoMatcher in method private toStringEquals(m MockitoMatcher, arg Object) : boolean from class org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : Matcher to matcher : MockitoMatcher in method public reportMatcher(matcher MockitoMatcher) : HandyReturnValues from class org.mockito.internal.progress.ArgumentMatcherStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Matcher> to List<MockitoMatcher> in method public argumentsToMatchers(arguments Object[]) : List<MockitoMatcher> from class org.mockito.internal.invocation.ArgumentsProcessor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Matcher> to List<MockitoMatcher> in method public getMatchers() : List<MockitoMatcher> from class org.mockito.internal.invocation.InvocationMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Set<Matcher> to Set<MockitoMatcher> in method private uniqueMatcherSet(indexOfVararg int) : Set<MockitoMatcher> from class org.mockito.internal.invocation.InvocationMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.Any",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.ArrayEquals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.CapturingMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.CompareTo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.Contains",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.EndsWith",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.Equals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.EqualsWithDelta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.Find",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.InstanceOf",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Matcher to MockitoMatcher in method public getActualMatcher() : MockitoMatcher from class org.mockito.internal.matchers.LocalizedMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.LocalizedMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Matcher to MockitoMatcher in method public getActualMatcher() : MockitoMatcher from class org.mockito.internal.matchers.MatcherDecorator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.Matches",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.NotNull",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.Null",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.StartsWith",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.VarargCapturingMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.apachecommons.ReflectionEquals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Matcher> to List<MockitoMatcher> in method private popLastArgumentMatchers(count int) : List<MockitoMatcher> from class org.mockito.internal.progress.ArgumentMatcherStorageImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Matcher<Number> to MockitoMatcher<Number> in method public equalsWithDelta(expected Double) : MockitoMatcher<Number> from class org.mockitousage.bugs.EqualsWithDeltaTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ArgumentMatcher<String> to MockitoMatcher<String> in method private isStringWithTextFoo() : MockitoMatcher<String> from class org.mockitousage.matchers.CustomMatcherDoesYieldCCETest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method private varArgsMatch(invocationMatcher InvocationMatcher, actual Invocation) : boolean from class org.mockito.internal.invocation.ArgumentsComparator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type m : Matcher to m : MockitoMatcher in method private varArgsMatch(invocationMatcher InvocationMatcher, actual Invocation) : boolean from class org.mockito.internal.invocation.ArgumentsComparator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method public argumentsToMatchers(arguments Object[]) : List<MockitoMatcher> from class org.mockito.internal.invocation.ArgumentsProcessor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in class org.mockito.internal.invocation.InvocationMatcher",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type m : Matcher to m : MockitoMatcher in method private captureRegularArguments(invocation Invocation) : void from class org.mockito.internal.invocation.InvocationMatcher",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type set : HashSet<Matcher> to set : HashSet<MockitoMatcher> in method private uniqueMatcherSet(indexOfVararg int) : Set<MockitoMatcher> from class org.mockito.internal.invocation.InvocationMatcher",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matcher : Matcher to matcher : MockitoMatcher in method private uniqueMatcherSet(indexOfVararg int) : Set<MockitoMatcher> from class org.mockito.internal.invocation.InvocationMatcher",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in class org.mockito.internal.matchers.And",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type ANY_VARARG : Matcher to ANY_VARARG : MockitoMatcher in class org.mockito.internal.matchers.AnyVararg",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type actualMatcher : Matcher to actualMatcher : MockitoMatcher in class org.mockito.internal.matchers.LocalizedMatcher",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type first : Matcher to first : MockitoMatcher in class org.mockito.internal.matchers.Not",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in class org.mockito.internal.matchers.Or",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type result : List<Matcher> to result : List<MockitoMatcher> in method private popLastArgumentMatchers(count int) : List<MockitoMatcher> from class org.mockito.internal.progress.ArgumentMatcherStorageImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type m : Matcher to m : MockitoMatcher in method public should_to_string_with_matchers() : void from class org.mockito.internal.invocation.InvocationMatcherTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type mTwo : Matcher to mTwo : MockitoMatcher in method public should_to_string_with_matchers() : void from class org.mockito.internal.invocation.InvocationMatcherTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method public orToString() : void from class org.mockito.internal.matchers.MatchersToStringTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method public andToString() : void from class org.mockito.internal.matchers.MatchersToStringTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method public shouldNotFindAnySuspiciousMatchersWhenNumberOfArgumentsDoesntMatch() : void from class org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method public shouldNotFindAnySuspiciousMatchersWhenArgumentsMatch() : void from class org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method public shouldFindSuspiciousMatchers() : void from class org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method public shouldUseMatchersSafely() : void from class org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matcher : Matcher<Number> to matcher : MockitoMatcher<Number> in method public testEqualsWithDelta_NullExpected() : void from class org.mockitousage.bugs.EqualsWithDeltaTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matcher : Matcher<Number> to matcher : MockitoMatcher<Number> in method public testEqualsWithDelta_NullActual() : void from class org.mockitousage.bugs.EqualsWithDeltaTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matcher : Matcher<Number> to matcher : MockitoMatcher<Number> in method public testEqualsWithDelta_NullActualAndExpected() : void from class org.mockitousage.bugs.EqualsWithDeltaTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matcher : Matcher<Number> to matcher : MockitoMatcher<Number> in method public testEqualsWithDelta_WhenActualAndExpectedAreTheSameObject() : void from class org.mockitousage.bugs.EqualsWithDeltaTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type m : Matcher to m : MockitoMatcher in method private captureVarargsPart(invocation Invocation) : void from class org.mockito.internal.invocation.InvocationMatcher",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matcher : Matcher to matcher : MockitoMatcher in method public matches(actual Object) : boolean from class org.mockito.internal.matchers.And",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matcher : Matcher to matcher : MockitoMatcher in method public matches(actual Object) : boolean from class org.mockito.internal.matchers.Or",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type m : Matcher to m : MockitoMatcher in method public getSuspiciouslyNotMatchingArgsIndexes(matchers List<MockitoMatcher>, arguments Object[]) : Integer[] from class org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type actualMatcher : Matcher to actualMatcher : MockitoMatcher in method private varArgsMatch(invocationMatcher InvocationMatcher, actual Invocation) : boolean from class org.mockito.internal.invocation.ArgumentsComparator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type matcher : Matcher to matcher : MockitoMatcher in method private applyPrintSettings(matchers List<MockitoMatcher>, printSettings PrintSettings) : Iterator from class org.mockito.internal.matchers.text.MatchersPrinter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method public getArgumentsLine(matchers List<MockitoMatcher>, printSettings PrintSettings) : String from class org.mockito.internal.matchers.text.MatchersPrinter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method public getArgumentsBlock(matchers List<MockitoMatcher>, printSettings PrintSettings) : String from class org.mockito.internal.matchers.text.MatchersPrinter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matchers : List<Matcher> to matchers : List<MockitoMatcher> in method private applyPrintSettings(matchers List<MockitoMatcher>, printSettings PrintSettings) : Iterator from class org.mockito.internal.matchers.text.MatchersPrinter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type it : Iterator<Matcher> to it : Iterator<MockitoMatcher> in method public describe() : String from class org.mockito.internal.matchers.And",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type it : Iterator<Matcher> to it : Iterator<MockitoMatcher> in method public describe() : String from class org.mockito.internal.matchers.Or",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected append(c char) : void from class org.mockito.internal.util.text.ValuePrinter to protected append(c char) : void from class org.mockito.internal.matchers.text.ValuePrinter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private toJavaSyntax(ch char) : void from class org.mockito.internal.util.text.ValuePrinter to private toJavaSyntax(ch char) : void from class org.mockito.internal.matchers.text.ValuePrinter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockitousage.matchers.CustomMatcherDoesYieldCCETest$1",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockitousage.matchers.CustomMatchersTest$1",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.ArrayEquals",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>ArrayEquals</span> <span class='pl-k'>extends</span> <span class='pl-e'>Equals</span></span></p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Same",
    "comment" : "<p>The change is huge, but it is consistent with other similar renames in other files.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.Any",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.ArrayEquals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.CapturingMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.CompareTo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.Contains",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.EndsWith",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.Equals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.EqualsWithDelta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.Find",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.InstanceOf",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.LocalizedMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.Matches",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.NotNull",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.Null",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.StartsWith",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.VarargCapturingMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.apachecommons.ReflectionEquals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method private appendArray(array Object[], description Description) : void from class org.mockito.internal.matchers.ArrayEquals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method private appendArray(array Object[]) : String from class org.mockito.internal.matchers.ArrayEquals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.And",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.Or",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.Not",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter description : Description in method public describeTo(description Description) : void from class org.mockito.internal.matchers.Same",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.Or",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.Same",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.And",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method public describe() : String from class org.mockito.internal.matchers.Not",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier public to package in class org.mockito.internal.matchers.text.HamcrestPrinter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable actualNumber : Number to actual : Number in method public matches(object Object) : boolean from class org.mockito.internal.matchers.EqualsWithDelta",
    "comment" : "<p>This is related to Rename Parameter http://refactoring.encs.concordia.ca/oracle/refactoring-details/1124301/6311</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1564
}, {
  "id" : 1124354,
  "repository" : "https://github.com/apache/drill.git",
  "sha1" : "3f0d9221d3f96c20db10e868cc33c2e972318ba6",
  "url" : "https://github.com/apache/drill/commit/3f0d9221d3f96c20db10e868cc33c2e972318ba6",
  "author" : "adeneche",
  "time" : "6/24/15 8:54 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public createNewWrapperCurrent(batchRecordCount int) : SelectionVector4 extracted from public createNewWrapperCurrent() : SelectionVector4 in class org.apache.drill.exec.record.selection.SelectionVector4",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute MSORT_BATCH_MAXSIZE : int to desiredRecordBatchCount : int in method public setup(context FragmentContext, allocator BufferAllocator, vector4 SelectionVector4, hyperBatch VectorContainer) : void from class org.apache.drill.exec.physical.impl.xsort.MSortTemplate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Attribute",
    "description" : "Parameterize Attribute length : int to batchRecordCount : int in method public createNewWrapperCurrent(batchRecordCount int) : SelectionVector4 from class org.apache.drill.exec.record.selection.SelectionVector4",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 952
}, {
  "id" : 1124355,
  "repository" : "https://github.com/apache/drill.git",
  "sha1" : "00aa01fb90f3210d1e3027d7f759fb1085b814bd",
  "url" : "https://github.com/apache/drill/commit/00aa01fb90f3210d1e3027d7f759fb1085b814bd",
  "author" : "Sudheesh Katkam",
  "time" : "6/24/15 8:24 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public setSessionOption(drillClient DrillClient, option String, value String) : void extracted from public setControls(drillClient DrillClient, controls String) : void in class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "All the replacements can be justified."
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private assertCancelled(controls String, testQuery String, listener WaitUntilCompleteListener) : void inlined to private assertCancelledWithoutException(controls String, listener WaitUntilCompleteListener, query String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private assertCompleteState(result Pair<QueryState,Exception>, expectedState QueryState) : void renamed to private assertStateCompleted(result Pair<QueryState,Exception>, expectedState QueryState) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public resumeFragment(outcomeListener RpcOutcomeListener<Ack>, handle FragmentHandle) : void renamed to public unpauseFragment(outcomeListener RpcOutcomeListener<Ack>, handle FragmentHandle) : void in class org.apache.drill.exec.rpc.control.ControlTunnel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelBeforeAnyResultsArrive() : void renamed to public cancelWhenQueryIdArrives() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingPartitionerThreadFragment() : void renamed to public interruptingPartitionerThreadFragment() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingAfterMSorterSetup() : void renamed to public failsAfterMSorterSetup() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingAfterMSorterSorting() : void renamed to public failsAfterMSorterSorting() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private testInterruptingBlockedFragmentsWaitingForData(control String) : void renamed to private interruptingBlockedFragmentsWaitingForData(control String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private assertExceptionInjected(throwable Throwable, exceptionClass Class<? extends Throwable>, desc String) : void renamed to private assertExceptionMessage(throwable Throwable, exceptionClass Class<? extends Throwable>, desc String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public settingNoopInjectionsAndQuery() : void renamed to public settingNoOpInjectionsAndQuery() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void renamed to public interruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingBlockedMergingRecordBatch() : void renamed to public interruptingBlockedMergingRecordBatch() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingBlockedUnorderedReceiverBatch() : void renamed to public interruptingBlockedUnorderedReceiverBatch() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createExceptionOnBit(endpoint DrillbitEndpoint, desc String, nSkip int, nFire int, exceptionClass String) : String from class org.apache.drill.exec.testing.TestExceptionInjection to public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createException(desc String, nSkip int, nFire int, exceptionClass String) : String from class org.apache.drill.exec.testing.TestExceptionInjection to public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public newBuilder() : Builder extracted from private testForeman(desc String) : void in class org.apache.drill.exec.server.TestDrillbitResilience & moved to class org.apache.drill.exec.testing.Controls",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addException(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, nSkip int, nFire int) : Builder extracted from public checkedInjection() : void in class org.apache.drill.exec.testing.TestExceptionInjection & moved to class org.apache.drill.exec.testing.Controls.Builder",
    "comment" : "<p>Extract and Move to other&nbsp; class</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it as an added class)</span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addException(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, nSkip int, nFire int) : Builder extracted from public skipAndLimit() : void in class org.apache.drill.exec.testing.TestExceptionInjection & moved to class org.apache.drill.exec.testing.Controls.Builder",
    "comment" : "<p>Extract and Move to other&nbsp; class</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it as an added class)</span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addExceptionOnBit(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint, nSkip int, nFire int) : Builder extracted from public injectionOnSpecificBit() : void in class org.apache.drill.exec.testing.TestExceptionInjection & moved to class org.apache.drill.exec.testing.Controls.Builder",
    "comment" : "<p>Extract and Move to other class.</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it is an added class)</span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setSessionOption(drillClient DrillClient, option String, value String) : void extracted from private setSessionOption(option String, value String) : void in class org.apache.drill.exec.server.TestDrillbitResilience & moved to class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "<p>Detected&nbsp; as Extract and Move to other class.&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public validateControlsString(jsonString String) : void extracted from private validateControlsString(controls String) : void in class org.apache.drill.exec.testing.ControlsInjectionUtil & moved to class org.apache.drill.exec.testing.ExecutionControls",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public validateControlsString(jsonString String) : void extracted from public validate(v OptionValue) : void in class org.apache.drill.exec.testing.ExecutionControls.ControlsOptionValidator & moved to class org.apache.drill.exec.testing.ExecutionControls",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable jsonString : String to controls : String in method public pauseOnSpecificBit() : void from class org.apache.drill.exec.testing.TestPauseInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable jsonString : String to controls : String in method public pauseInjected() : void from class org.apache.drill.exec.testing.TestPauseInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable jsonString : String to controls : String in method public latchInjected() : void from class org.apache.drill.exec.testing.TestCountDownLatchInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter bitName : String to name : String in method private getEndpoint(name String) : DrillbitEndpoint in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable query : String in method public memoryLeaksWhenCancelled() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable query : String in method public memoryLeaksWhenFailed() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type logger : Logger to REPEAT_RULE : TestRule in class org.apache.drill.test.DrillTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private createSingleException(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.server.TestDrillbitResilience to public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private createSingleExceptionOnBit(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, bitName String) : String from class org.apache.drill.exec.server.TestDrillbitResilience to public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private createPauseInjection(siteClass Class, siteDesc String, nSkip int) : String from class org.apache.drill.exec.server.TestDrillbitResilience to public createPause(siteClass Class, desc String, nSkip int) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter siteDesc : String to desc : String in method public createPause(siteClass Class, desc String, nSkip int) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setControls(drillClient DrillClient, controls String...) : void renamed to public setSessionOption(drillClient DrillClient, option String, value String) : void in class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private createSingleExceptionOnBit(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, bitName String) : String renamed to private getEndpoint(name String) : DrillbitEndpoint in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public settingNoopInjectionsAndQuery() : void renamed to private setSessionOption(option String, value String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private testForeman(desc String) : void renamed to public settingNoOpInjectionsAndQuery() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private setSessionOption(option String, value String) : void renamed to private testForeman(desc String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public close() : void from class org.apache.drill.exec.physical.impl.ScanBatch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public foreman_runTryBeginning() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Ignore in method public foreman_runTryEnd() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public cancelInMiddleOfFetchingResults() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public cancelAfterAllResultsProduced() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public cancelAfterEverythingIsCompleted() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public memoryLeaksWhenCancelled() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Ignore in method public memoryLeaksWhenFailed() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public interruptingBlockedMergingRecordBatch() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public interruptingBlockedUnorderedReceiverBatch() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public interruptingPartitionerThreadFragment() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Ignore in method public interruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Ignore in method public cancelAfterEverythingIsCompleted() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @Ignore in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nSkip : int in method public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nFire : int in method public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Rule in attribute public REPEAT_RULE : TestRule from class org.apache.drill.test.DrillTest",
    "comment" : "<p>new field</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public testInterruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public validateControlsString(controls String) : void from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public createPause(siteClass Class, desc String, nSkip int) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private countAllocatedMemory() : long from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier volatile in attribute private cancelRequested : boolean from class org.apache.drill.exec.server.TestDrillbitResilience.memoryLeaksWhenCancelled.listener.new WaitUntilCompleteListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : InterruptedException in method private countAllocatedMemory() : long from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable name : String in method private countAllocatedMemory() : long from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : RpcException in method public setSessionOption(drillClient DrillClient, option String, value String) : void from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : Exception in method public setControls(session UserSession, controls String) : void from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : Exception in method public validateControlsString(controls String) : void from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nSkip : int in method public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nFire : int in method public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter bitName : String in method private createSingleExceptionOnBit(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, bitName String) : String from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier public to private in class org.apache.drill.exec.testing.ExecutionControls.Controls",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type exceptionClass : String to exceptionClass : Class<? extends Throwable> in method public skipAndLimit() : void from class org.apache.drill.exec.testing.TestExceptionInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type exceptionClass : String to exceptionClass : Class<? extends Throwable> in method public injectionOnSpecificBit() : void from class org.apache.drill.exec.testing.TestExceptionInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable endpoint : DrillbitEndpoint to endpoint : DrillbitEndpoint in method public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2963
}, {
  "id" : 1124370,
  "repository" : "https://github.com/aws/aws-sdk-java.git",
  "sha1" : "4baf0a4de8d03022df48d696d210cc8b3117d38a",
  "url" : "https://github.com/aws/aws-sdk-java/commit/4baf0a4de8d03022df48d696d210cc8b3117d38a",
  "author" : "AWS",
  "time" : "6/24/15 8:54 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private pause(delay long) : void extracted from private pauseExponentially(retries int) : void in class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "if statement has been added"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private callUntilCompletion(batch Map<String,List<WriteRequest>>) : FailedBatch renamed to private doBatchWriteItemWithRetry(batch Map<String,List<WriteRequest>>, batchWriteRetryStrategy BatchWriteRetryStrategy) : FailedBatch in class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private server : ServerSocket from class com.amazonaws.util.EC2MetadataUtilsTest to private server : ServerSocket from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private outputInstanceInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputInstanceInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private outputIamCredList(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputIamCredList(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private handleConnection(input BufferedReader, output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private handleConnection(input BufferedReader, output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private outputIamCred(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputIamCred(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private outputIamInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputIamInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private ignoreRequest(input BufferedReader) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private ignoreRequest(input BufferedReader) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable pendingItems : Map<String,List<WriteRequest>> in method private doBatchWriteItemWithRetry(batch Map<String,List<WriteRequest>>, batchWriteRetryStrategy BatchWriteRetryStrategy) : FailedBatch from class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Tag to ele : Tag in method public withTags(tags Tag...) : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withSecurityGroups(securityGroups String...) : ModifyMountTargetSecurityGroupsRequest from class com.amazonaws.services.elasticfilesystem.model.ModifyMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Artifact to ele : Artifact in method public withArtifactList(artifactList Artifact...) : UpdateJobResult from class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withTagKeys(tagKeys String...) : DeleteTagsRequest from class com.amazonaws.services.elasticfilesystem.model.DeleteTagsRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Artifact to ele : Artifact in method public withArtifactList(artifactList Artifact...) : CreateJobResult from class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : FileSystemDescription to ele : FileSystemDescription in method public withFileSystems(fileSystems FileSystemDescription...) : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Artifact to ele : Artifact in method public withArtifactList(artifactList Artifact...) : GetStatusResult from class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withSecurityGroups(securityGroups String...) : CreateMountTargetRequest from class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withSecurityGroups(securityGroups String...) : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Tag to ele : Tag in method public withTags(tags Tag...) : CreateTagsRequest from class com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withJobIds(jobIds String...) : GetShippingLabelRequest from class com.amazonaws.services.importexport.model.GetShippingLabelRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : MountTargetDescription to ele : MountTargetDescription in method public withMountTargets(mountTargets MountTargetDescription...) : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Job to ele : Job in method public withJobs(jobs Job...) : ListJobsResult from class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to maxItems : String in method public marshall(describeMountTargetsRequest DescribeMountTargetsRequest) : Request<DescribeMountTargetsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to maxItems : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to fileSystemId : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to fileSystemId : String in method public marshall(describeMountTargetsRequest DescribeMountTargetsRequest) : Request<DescribeMountTargetsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to marker : String in method public marshall(describeTagsRequest DescribeTagsRequest) : Request<DescribeTagsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to marker : String in method public marshall(describeMountTargetsRequest DescribeMountTargetsRequest) : Request<DescribeMountTargetsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to creationToken : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to marker : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to maxItems : String in method public marshall(describeTagsRequest DescribeTagsRequest) : Request<DescribeTagsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute server : ServerSocket to SERVER : EC2MetadataUtilsServer in class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class com.amazonaws.util.EC2MetadataUtilsServer from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected constructInstanceInfo() : String extracted from private outputInstanceInfo(output PrintWriter) : void in class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter executorService : ExecutorService to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "<p>Reordered constructors</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter clientConfiguration : ClientConfiguration to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "<p>Reordered constructors</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter responseHandler : HttpResponseHandler<AmazonWebServiceResponse<X>> to unmarshaller : Unmarshaller<X,JsonUnmarshallerContext> in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : "<p>responseHandler is instantiated inside invoke() and wraps the unmarshaller<br />JsonResponseHandler&lt;X&gt; responseHandler = new JsonResponseHandler&lt;X&gt;(unmarshaller);</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable target : String to uriResourcePath : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable target : String to uriResourcePath : String in method public marshall(describeMountTargetsRequest DescribeMountTargetsRequest) : Request<DescribeMountTargetsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable target : String to uriResourcePath : String in method public marshall(describeTagsRequest DescribeTagsRequest) : Request<DescribeTagsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter executorService : ExecutorService to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p>Reordered constructors</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter clientConfiguration : ClientConfiguration to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p>Reordered constructors</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "<p>from non-qualified to qualified</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p>from non-qualified to qualified</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type server : ServerSocket to SERVER : EC2MetadataUtilsServer in class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type jsonErrorUnmarshallers : List<JsonErrorUnmarshaller> to jsonErrorUnmarshallers : List<JsonErrorUnmarshallerV2> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type errorResponseHandler : JsonErrorResponseHandler to errorResponseHandler : JsonErrorResponseHandlerV2 in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type securityGroups : ListWithAutoConstructFlag<String> to securityGroups : SdkInternalList<String> in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type tags : ListWithAutoConstructFlag<Tag> to tags : SdkInternalList<Tag> in class com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type tagKeys : ListWithAutoConstructFlag<String> to tagKeys : SdkInternalList<String> in class com.amazonaws.services.elasticfilesystem.model.DeleteTagsRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type fileSystems : ListWithAutoConstructFlag<FileSystemDescription> to fileSystems : SdkInternalList<FileSystemDescription> in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type securityGroups : ListWithAutoConstructFlag<String> to securityGroups : SdkInternalList<String> in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type mountTargets : ListWithAutoConstructFlag<MountTargetDescription> to mountTargets : SdkInternalList<MountTargetDescription> in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type tags : ListWithAutoConstructFlag<Tag> to tags : SdkInternalList<Tag> in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type securityGroups : ListWithAutoConstructFlag<String> to securityGroups : SdkInternalList<String> in class com.amazonaws.services.elasticfilesystem.model.ModifyMountTargetSecurityGroupsRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type artifactList : ListWithAutoConstructFlag<Artifact> to artifactList : SdkInternalList<Artifact> in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type jobIds : ListWithAutoConstructFlag<String> to jobIds : SdkInternalList<String> in class com.amazonaws.services.importexport.model.GetShippingLabelRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type artifactList : ListWithAutoConstructFlag<Artifact> to artifactList : SdkInternalList<Artifact> in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type jobs : ListWithAutoConstructFlag<Job> to jobs : SdkInternalList<Job> in class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type artifactList : ListWithAutoConstructFlag<Artifact> to artifactList : SdkInternalList<Artifact> in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateTagsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteFileSystemRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteMountTargetRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteTagsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeTagsRequest,DescribeTagsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateTagsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteFileSystemRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteMountTargetRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteTagsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeTagsRequest,DescribeTagsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CancelJobRequest,CancelJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateJobRequest,CreateJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<GetStatusRequest,GetStatusResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult>) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ListJobsRequest,ListJobsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult> in method public listJobsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "<p>The two methods have a different number of parameters, although the type has been qualified in the overloaded methods</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<UpdateJobRequest,UpdateJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult>) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CancelJobRequest,CancelJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateJobRequest,CreateJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<GetStatusRequest,GetStatusResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult>) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ListJobsRequest,ListJobsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult> in method public listJobsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p>The two methods have a different number of parameters, although the type has been qualified in the overloaded methods</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<UpdateJobRequest,UpdateJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult>) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ListJobsRequest,ListJobsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ListJobsRequest,ListJobsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetSecurityGroupsResult> to java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetSecurityGroupsResult> to java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeTagsResult> to java.util.concurrent.Future<DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeTagsResult> to java.util.concurrent.Future<DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ExecutorService to java.util.concurrent.ExecutorService in method public getExecutorService() : java.util.concurrent.ExecutorService from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetSecurityGroupsResult> to java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetSecurityGroupsResult> to java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeTagsResult> to java.util.concurrent.Future<DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeTagsResult> to java.util.concurrent.Future<DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetStatusResult> to java.util.concurrent.Future<GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetStatusResult> to java.util.concurrent.Future<GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult>) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult>) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ExecutorService to java.util.concurrent.ExecutorService in method public getExecutorService() : java.util.concurrent.ExecutorService from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetStatusResult> to java.util.concurrent.Future<GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetStatusResult> to java.util.concurrent.Future<GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult>) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult>) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type jobIdsList : List<String> to jobIdsList : SdkInternalList<String> in method public marshall(getShippingLabelRequest GetShippingLabelRequest) : Request<GetShippingLabelRequest> from class com.amazonaws.services.importexport.model.transform.GetShippingLabelRequestMarshaller",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteTagsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteFileSystemAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteMountTargetAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.modifyMountTargetSecurityGroupsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createTagsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : java.util.concurrent.Future<CreateMountTargetResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync() : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : java.util.concurrent.Future<DescribeMountTargetsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync() : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>listJobsAsync</span>()</span> with 0 parameters is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync() : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>listJobsAsync</span>()</span> with 0 parameters is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type securityGroupsList : ListWithAutoConstructFlag<String> to securityGroupsList : SdkInternalList<String> in method public marshall(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Request<ModifyMountTargetSecurityGroupsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.ModifyMountTargetSecurityGroupsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tagsList : ListWithAutoConstructFlag<Tag> to tagsList : SdkInternalList<Tag> in method public marshall(createTagsRequest CreateTagsRequest) : Request<CreateTagsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type securityGroupsList : ListWithAutoConstructFlag<String> to securityGroupsList : SdkInternalList<String> in method public marshall(createMountTargetRequest CreateMountTargetRequest) : Request<CreateMountTargetRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateMountTargetRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tagKeysList : ListWithAutoConstructFlag<String> to tagKeysList : SdkInternalList<String> in method public marshall(deleteTagsRequest DeleteTagsRequest) : Request<DeleteTagsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteTagsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.IncorrectFileSystemLifeCycleStateExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.InternalServerErrorExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.IncorrectMountTargetStateExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.NoFreeAddressesInSubnetExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.IpAddressInUseExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemAlreadyExistsExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.SecurityGroupNotFoundExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.SecurityGroupLimitExceededExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.SubnetNotFoundExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.UnsupportedAvailabilityZoneExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.MountTargetNotFoundExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.BadRequestExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.MountTargetConflictExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemInUseExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemNotFoundExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemLimitExceededExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.NetworkInterfaceLimitExceededExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.DependencyTimeoutExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller to private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteFileSystemRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.RemoveTagsFromVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.ListTagsForVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.ListTagsForVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetSecurityGroupsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetSecurityGroupsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.RemoveTagsFromVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateMountTargetRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.ModifyMountTargetSecurityGroupsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteFileSystemRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.ModifyMountTargetSecurityGroupsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteMountTargetRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.RemoveTagsFromVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteTagsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteTagsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteMountTargetRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateMountTargetRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.ListTagsForVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public start() : void extracted from public setUp() : void in class com.amazonaws.util.EC2MetadataUtilsTest & moved to class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>setup() now calls SERVER.start()</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected constructInstanceInfo() : String extracted from private outputInstanceInfo(output PrintWriter) : void in class com.amazonaws.util.EC2MetadataUtilsTest & moved to class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>Extract Class com.amazonaws.util.EC2MetadataUtilsServer from class com.amazonaws.util.EC2MetadataUtilsTest</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getInstance() : TagJsonMarshaller extracted from public marshall(createTagsRequest CreateTagsRequest) : Request<CreateTagsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller & moved to class com.amazonaws.services.elasticfilesystem.model.transform.TagJsonMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public marshall(tag Tag, jsonWriter JSONWriter) : void extracted from public marshall(createTagsRequest CreateTagsRequest) : Request<CreateTagsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller & moved to class com.amazonaws.services.elasticfilesystem.model.transform.TagJsonMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private runServer() : void from class com.amazonaws.util.EC2MetadataUtilsTest to private startServer() : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private killServer() : void from class com.amazonaws.util.EC2MetadataUtilsTest to public stop() : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getLocalPort() : int extracted from public setUp() : void in class com.amazonaws.util.EC2MetadataUtilsTest & moved to class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.SecurityGroupNotFoundExceptionUnmarshaller moved and renamed to com.amazonaws.services.config.model.transform.InvalidRecordingGroupExceptionUnmarshaller",
    "comment" : "<p>for some reason nikos had validated as ukn</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemNotFoundExceptionUnmarshaller moved and renamed to com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.BadRequestExceptionUnmarshaller moved and renamed to com.amazonaws.services.cognitosync.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.NoFreeAddressesInSubnetExceptionUnmarshaller moved and renamed to com.amazonaws.services.config.model.transform.InvalidRecordingGroupExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.InternalServerErrorExceptionUnmarshaller moved and renamed to com.amazonaws.services.cognitosync.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemNotFoundExceptionUnmarshaller moved and renamed to com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDescription() : String renamed to public setDescription(description String) : void in class com.amazonaws.services.importexport.model.Artifact",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setDescription(description String) : void renamed to public getDescription() : String in class com.amazonaws.services.importexport.model.Artifact",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getURL() : String renamed to public setURL(uRL String) : void in class com.amazonaws.services.importexport.model.Artifact",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setURL(uRL String) : void renamed to public getURL() : String in class com.amazonaws.services.importexport.model.Artifact",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMaxItems() : Integer renamed to public setMaxItems(maxItems Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxItems(maxItems Integer...) : void renamed to public getMaxItems() : Integer in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.ModifyMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.ModifyMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNextMarker() : String renamed to public setNextMarker(nextMarker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNextMarker(nextMarker String) : void renamed to public getNextMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DeleteFileSystemRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DeleteFileSystemRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.GetStatusRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.GetStatusRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.GetStatusRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.GetStatusRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOwnerId() : String renamed to public setOwnerId(ownerId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOwnerId(ownerId String) : void renamed to public getOwnerId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSubnetId() : String renamed to public setSubnetId(subnetId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSubnetId(subnetId String) : void renamed to public getSubnetId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLifeCycleState() : String renamed to public setLifeCycleState(lifeCycleState String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLifeCycleState(lifeCycleState String) : void renamed to public getLifeCycleState() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIpAddress() : String renamed to public setIpAddress(ipAddress String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIpAddress(ipAddress String) : void renamed to public getIpAddress() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNetworkInterfaceId() : String renamed to public setNetworkInterfaceId(networkInterfaceId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNetworkInterfaceId(networkInterfaceId String) : void renamed to public getNetworkInterfaceId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult renamed to public createJob(createJobRequest CreateJobRequest) : CreateJobResult in class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelJob(cancelJobRequest CancelJobRequest) : CancelJobResult renamed to public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult in class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public listJobs() : ListJobsResult renamed to public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult in class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSuccess(success Boolean) : void renamed to public getSuccess() : Boolean in class com.amazonaws.services.importexport.model.CancelJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSuccess() : Boolean renamed to public isSuccess() : Boolean in class com.amazonaws.services.importexport.model.CancelJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.CancelJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.CancelJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.CancelJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.CancelJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicy(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest) : void renamed to public deleteVaultNotifications(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : void in class com.amazonaws.services.glacier.AmazonGlacier",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotifications(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : void renamed to public removeTagsFromVault(removeTagsFromVaultRequest RemoveTagsFromVaultRequest) : void in class com.amazonaws.services.glacier.AmazonGlacier",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSubnetId() : String renamed to public setSubnetId(subnetId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSubnetId(subnetId String) : void renamed to public getSubnetId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIpAddress() : String renamed to public setIpAddress(ipAddress String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIpAddress(ipAddress String) : void renamed to public getIpAddress() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLocationCode() : String renamed to public setLocationCode(locationCode String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLocationCode(locationCode String) : void renamed to public getLocationCode() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLocationMessage() : String renamed to public setLocationMessage(locationMessage String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLocationMessage(locationMessage String) : void renamed to public getLocationMessage() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getProgressCode() : String renamed to public setProgressCode(progressCode String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setProgressCode(progressCode String) : void renamed to public getProgressCode() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getProgressMessage() : String renamed to public setProgressMessage(progressMessage String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setProgressMessage(progressMessage String) : void renamed to public getProgressMessage() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCarrier() : String renamed to public setCarrier(carrier String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCarrier(carrier String) : void renamed to public getCarrier() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getTrackingNumber() : String renamed to public setTrackingNumber(trackingNumber String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setTrackingNumber(trackingNumber String) : void renamed to public getTrackingNumber() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLogBucket() : String renamed to public setLogBucket(logBucket String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLogBucket(logBucket String) : void renamed to public getLogBucket() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLogKey() : String renamed to public setLogKey(logKey String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLogKey(logKey String) : void renamed to public getLogKey() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getErrorCount() : Integer renamed to public setErrorCount(errorCount Integer) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setErrorCount(errorCount Integer) : void renamed to public getErrorCount() : Integer in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSignature() : String renamed to public setSignature(signature String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSignature(signature String) : void renamed to public getSignature() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSignatureFileContents() : String renamed to public setSignatureFileContents(signatureFileContents String...) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSignatureFileContents(signatureFileContents String...) : void renamed to public getSignatureFileContents() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCurrentManifest() : String renamed to public setCurrentManifest(currentManifest String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCurrentManifest(currentManifest String) : void renamed to public getCurrentManifest() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationDate() : java.util.Date renamed to public setCreationDate(creationDate java.util.Date) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : "<p>get-set investigate&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationDate(creationDate java.util.Date) : void renamed to public getCreationDate() : java.util.Date in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSignature() : String renamed to public setSignature(signature String) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSignature(signature String) : void renamed to public getSignature() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSignatureFileContents() : String renamed to public setSignatureFileContents(signatureFileContents String...) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSignatureFileContents(signatureFileContents String...) : void renamed to public getSignatureFileContents() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getWarningMessage() : String renamed to public setWarningMessage(warningMessage String) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setWarningMessage(warningMessage String) : void renamed to public getWarningMessage() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOwnerId() : String renamed to public setOwnerId(ownerId String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOwnerId(ownerId String) : void renamed to public getOwnerId() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationToken() : String renamed to public setCreationToken(creationToken String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationToken(creationToken String) : void renamed to public getCreationToken() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationTime() : java.util.Date renamed to public setCreationTime(creationTime java.util.Date) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationTime(creationTime java.util.Date) : void renamed to public getCreationTime() : java.util.Date in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLifeCycleState() : String renamed to public setLifeCycleState(lifeCycleState String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLifeCycleState(lifeCycleState String) : void renamed to public getLifeCycleState() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getName() : String renamed to public setName(name String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setName(name String) : void renamed to public getName() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumberOfMountTargets() : Integer renamed to public setNumberOfMountTargets(numberOfMountTargets Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNumberOfMountTargets(numberOfMountTargets Integer...) : void renamed to public getNumberOfMountTargets() : Integer in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSizeInBytes() : FileSystemSize renamed to public setSizeInBytes(sizeInBytes FileSystemSize...) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSizeInBytes(sizeInBytes FileSystemSize...) : void renamed to public getSizeInBytes() : FileSystemSize in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMaxItems() : Integer renamed to public setMaxItems(maxItems Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxItems(maxItems Integer...) : void renamed to public getMaxItems() : Integer in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationToken() : String renamed to public setCreationToken(creationToken String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationToken(creationToken String) : void renamed to public getCreationToken() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMaxItems() : Integer renamed to public setMaxItems(maxItems Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxItems(maxItems Integer...) : void renamed to public getMaxItems() : Integer in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getManifest() : String renamed to public setManifest(manifest String) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setManifest(manifest String) : void renamed to public getManifest() : String in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isValidateOnly() : Boolean renamed to public setValidateOnly(validateOnly Boolean) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setValidateOnly(validateOnly Boolean) : void renamed to public getValidateOnly() : Boolean in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getValidateOnly() : Boolean renamed to public isValidateOnly() : Boolean in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public listJobs() : ListJobsResult renamed to public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult in class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getValue() : Long renamed to public setValue(value Long) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemSize",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setValue(value Long) : void renamed to public getValue() : Long in class com.amazonaws.services.elasticfilesystem.model.FileSystemSize",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getTimestamp() : java.util.Date renamed to public setTimestamp(timestamp java.util.Date) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemSize",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setTimestamp(timestamp java.util.Date) : void renamed to public getTimestamp() : java.util.Date in class com.amazonaws.services.elasticfilesystem.model.FileSystemSize",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNextMarker() : String renamed to public setNextMarker(nextMarker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNextMarker(nextMarker String) : void renamed to public getNextMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getManifest() : String renamed to public setManifest(manifest String) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setManifest(manifest String) : void renamed to public getManifest() : String in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getManifestAddendum() : String renamed to public setManifestAddendum(manifestAddendum String) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setManifestAddendum(manifestAddendum String) : void renamed to public getManifestAddendum() : String in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isValidateOnly() : Boolean renamed to public setValidateOnly(validateOnly Boolean) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setValidateOnly(validateOnly Boolean) : void renamed to public getValidateOnly() : Boolean in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getValidateOnly() : Boolean renamed to public isValidateOnly() : Boolean in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationToken() : String renamed to public setCreationToken(creationToken String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationToken(creationToken String) : void renamed to public getCreationToken() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getKey() : String renamed to public setKey(key String) : void in class com.amazonaws.services.elasticfilesystem.model.Tag",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setKey(key String) : void renamed to public getKey() : String in class com.amazonaws.services.elasticfilesystem.model.Tag",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getValue() : String renamed to public setValue(value String) : void in class com.amazonaws.services.elasticfilesystem.model.Tag",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setValue(value String) : void renamed to public getValue() : String in class com.amazonaws.services.elasticfilesystem.model.Tag",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.DeleteMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.DeleteMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DeleteTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DeleteTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOwnerId() : String renamed to public setOwnerId(ownerId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOwnerId(ownerId String) : void renamed to public getOwnerId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSubnetId() : String renamed to public setSubnetId(subnetId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSubnetId(subnetId String) : void renamed to public getSubnetId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLifeCycleState() : String renamed to public setLifeCycleState(lifeCycleState String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLifeCycleState(lifeCycleState String) : void renamed to public getLifeCycleState() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIpAddress() : String renamed to public setIpAddress(ipAddress String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIpAddress(ipAddress String) : void renamed to public getIpAddress() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNetworkInterfaceId() : String renamed to public setNetworkInterfaceId(networkInterfaceId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNetworkInterfaceId(networkInterfaceId String) : void renamed to public getNetworkInterfaceId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationDate() : java.util.Date renamed to public setCreationDate(creationDate java.util.Date) : void in class com.amazonaws.services.importexport.model.Job",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationDate(creationDate java.util.Date) : void renamed to public getCreationDate() : java.util.Date in class com.amazonaws.services.importexport.model.Job",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isCanceled() : Boolean renamed to public setIsCanceled(isCanceled Boolean) : void in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIsCanceled(isCanceled Boolean) : void renamed to public getIsCanceled() : Boolean in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIsCanceled() : Boolean renamed to public isCanceled() : Boolean in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOwnerId() : String renamed to public setOwnerId(ownerId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOwnerId(ownerId String) : void renamed to public getOwnerId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationToken() : String renamed to public setCreationToken(creationToken String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationToken(creationToken String) : void renamed to public getCreationToken() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationTime() : java.util.Date renamed to public setCreationTime(creationTime java.util.Date) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationTime(creationTime java.util.Date) : void renamed to public getCreationTime() : java.util.Date in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLifeCycleState() : String renamed to public setLifeCycleState(lifeCycleState String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLifeCycleState(lifeCycleState String) : void renamed to public getLifeCycleState() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getName() : String renamed to public setName(name String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setName(name String) : void renamed to public getName() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumberOfMountTargets() : Integer renamed to public setNumberOfMountTargets(numberOfMountTargets Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNumberOfMountTargets(numberOfMountTargets Integer...) : void renamed to public getNumberOfMountTargets() : Integer in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSizeInBytes() : FileSystemSize renamed to public setSizeInBytes(sizeInBytes FileSystemSize...) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSizeInBytes(sizeInBytes FileSystemSize...) : void renamed to public getSizeInBytes() : FileSystemSize in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMaxJobs() : Integer renamed to public setMaxJobs(maxJobs Integer...) : void in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxJobs(maxJobs Integer...) : void renamed to public getMaxJobs() : Integer in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicyAsync(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest) : Future<Void> renamed to public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicyAsync(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest, asyncHandler AsyncHandler<DeleteVaultAccessPolicyRequest,Void>) : Future<Void> renamed to public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest, asyncHandler AsyncHandler<DeleteVaultNotificationsRequest,Void>) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : Future<Void> renamed to public listTagsForVaultAsync(listTagsForVaultRequest ListTagsForVaultRequest, asyncHandler AsyncHandler<ListTagsForVaultRequest,ListTagsForVaultResult>) : Future<ListTagsForVaultResult> in class com.amazonaws.services.glacier.AmazonGlacierAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest, asyncHandler AsyncHandler<DeleteVaultNotificationsRequest,Void>) : Future<Void> renamed to public removeTagsFromVaultAsync(removeTagsFromVaultRequest RemoveTagsFromVaultRequest, asyncHandler AsyncHandler<RemoveTagsFromVaultRequest,Void>) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> renamed to public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> renamed to public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> renamed to public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> renamed to public listJobsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> renamed to public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> renamed to public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> renamed to public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> renamed to public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> renamed to public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> renamed to public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSuccess(success Boolean) : void renamed to public getSuccess() : Boolean in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSuccess() : Boolean renamed to public isSuccess() : Boolean in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getWarningMessage() : String renamed to public setWarningMessage(warningMessage String) : void in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setWarningMessage(warningMessage String) : void renamed to public getWarningMessage() : String in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void renamed to public describeMountTargets(describeMountTargetsRequest DescribeMountTargetsRequest) : DescribeMountTargetsResult in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeFileSystems() : DescribeFileSystemsResult renamed to public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setErrorCode(errorCode String) : void renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemAlreadyExistsException",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNextMarker() : String renamed to public setNextMarker(nextMarker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNextMarker(nextMarker String) : void renamed to public getNextMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> renamed to public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : java.util.concurrent.Future<CreateMountTargetResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> renamed to public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> renamed to public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> renamed to public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> renamed to public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> renamed to public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> renamed to public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> renamed to public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> renamed to public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> renamed to public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> renamed to public describeFileSystemsAsync() : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> renamed to public describeFileSystemsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> renamed to public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : java.util.concurrent.Future<DescribeMountTargetsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> renamed to public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> renamed to public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> renamed to public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicyAsync(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest) : Future<Void> renamed to public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicyAsync(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest, asyncHandler AsyncHandler<DeleteVaultAccessPolicyRequest,Void>) : Future<Void> renamed to public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest, asyncHandler AsyncHandler<DeleteVaultNotificationsRequest,Void>) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : Future<Void> renamed to public listTagsForVaultAsync(listTagsForVaultRequest ListTagsForVaultRequest, asyncHandler AsyncHandler<ListTagsForVaultRequest,ListTagsForVaultResult>) : Future<ListTagsForVaultResult> in class com.amazonaws.services.glacier.AmazonGlacierAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest, asyncHandler AsyncHandler<DeleteVaultNotificationsRequest,Void>) : Future<Void> renamed to public removeTagsFromVaultAsync(removeTagsFromVaultRequest RemoveTagsFromVaultRequest, asyncHandler AsyncHandler<RemoveTagsFromVaultRequest,Void>) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isTruncated() : Boolean renamed to public setIsTruncated(isTruncated Boolean) : void in class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIsTruncated(isTruncated Boolean) : void renamed to public getIsTruncated() : Boolean in class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIsTruncated() : Boolean renamed to public isTruncated() : Boolean in class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createFileSystem(createFileSystemRequest CreateFileSystemRequest) : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystems(describeFileSystemsRequest DescribeFileSystemsRequest) : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargets(describeMountTargetsRequest DescribeMountTargetsRequest) : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createMountTarget(createMountTargetRequest CreateMountTargetRequest) : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetSecurityGroups(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeTags(describeTagsRequest DescribeTagsRequest) : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createJob(createJobRequest CreateJobRequest) : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public cancelJob(cancelJobRequest CancelJobRequest) : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getStatus(getStatusRequest GetStatusRequest) : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public listJobs(listJobsRequest ListJobsRequest) : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.BucketPermissionExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.CanceledJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.CreateJobQuotaExceededExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.ExpiredJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidAccessKeyIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidAddressExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidCustomsExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidFileSystemExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidManifestFieldExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidParameterExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidVersionExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MalformedManifestExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MissingCustomsExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MissingManifestFieldExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MissingParameterExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MultipleRegionsExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.NoSuchBucketExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.UnableToCancelJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.UnableToUpdateJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter batchWriteRetryStrategy : BatchWriteRetryStrategy in method private writeOneBatch(batch Map<String,List<WriteRequest>>, batchWriteRetryStrategy BatchWriteRetryStrategy) : List<FailedBatch> from class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter batchWriteRetryStrategy : BatchWriteRetryStrategy in method private doBatchWriteItemWithRetry(batch Map<String,List<WriteRequest>>, batchWriteRetryStrategy BatchWriteRetryStrategy) : FailedBatch from class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter batchWriteRetryStrategy : BatchWriteRetryStrategy in method private DynamoDBMapperConfig(saveBehavior SaveBehavior, consistentReads ConsistentReads, tableNameOverride TableNameOverride, tableNameResolver TableNameResolver, objectTableNameResolver ObjectTableNameResolver, paginationLoadingStrategy PaginationLoadingStrategy, requestMetricCollector RequestMetricCollector, conversionSchema ConversionSchema, batchWriteRetryStrategy BatchWriteRetryStrategy) from class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystemsAsync() : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createFileSystemAsync.submit.new java.util.concurrent.Callable<CreateFileSystemResult>",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createMountTargetAsync.submit.new java.util.concurrent.Callable<CreateMountTargetResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createTagsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteFileSystemAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteMountTargetAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteTagsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeFileSystemsAsync.submit.new java.util.concurrent.Callable<DescribeFileSystemsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeMountTargetSecurityGroupsAsync.submit.new java.util.concurrent.Callable<DescribeMountTargetSecurityGroupsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeMountTargetsAsync.submit.new java.util.concurrent.Callable<DescribeMountTargetsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeTagsAsync.submit.new java.util.concurrent.Callable<DescribeTagsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.modifyMountTargetSecurityGroupsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.cancelJobAsync.submit.new java.util.concurrent.Callable<CancelJobResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.createJobAsync.submit.new java.util.concurrent.Callable<CreateJobResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.getShippingLabelAsync.submit.new java.util.concurrent.Callable<GetShippingLabelResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.getStatusAsync.submit.new java.util.concurrent.Callable<GetStatusResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.listJobsAsync.submit.new java.util.concurrent.Callable<ListJobsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.updateJobAsync.submit.new java.util.concurrent.Callable<UpdateJobResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IllegalArgumentException in method public setEndpoint(endpoint String) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IllegalArgumentException in method public setRegion(region Region) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystem(createFileSystemRequest CreateFileSystemRequest) : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystem(createFileSystemRequest CreateFileSystemRequest) : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystems(describeFileSystemsRequest DescribeFileSystemsRequest) : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystems(describeFileSystemsRequest DescribeFileSystemsRequest) : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargets(describeMountTargetsRequest DescribeMountTargetsRequest) : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargets(describeMountTargetsRequest DescribeMountTargetsRequest) : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTarget(createMountTargetRequest CreateMountTargetRequest) : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTarget(createMountTargetRequest CreateMountTargetRequest) : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroups(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroups(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTags(describeTagsRequest DescribeTagsRequest) : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTags(describeTagsRequest DescribeTagsRequest) : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createFileSystemAsync.submit.new Callable<CreateFileSystemResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteMountTargetAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeFileSystemsAsync.submit.new Callable<DescribeFileSystemsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createTagsAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteFileSystemAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeMountTargetsAsync.submit.new Callable<DescribeMountTargetsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createMountTargetAsync.submit.new Callable<CreateMountTargetResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeMountTargetSecurityGroupsAsync.submit.new Callable<DescribeMountTargetSecurityGroupsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.modifyMountTargetSecurityGroupsAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeTagsAsync.submit.new Callable<DescribeTagsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteTagsAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IllegalArgumentException in method public setEndpoint(endpoint String) : void from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IllegalArgumentException in method public setRegion(region Region) : void from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJob(createJobRequest CreateJobRequest) : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJob(createJobRequest CreateJobRequest) : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJob(cancelJobRequest CancelJobRequest) : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJob(cancelJobRequest CancelJobRequest) : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatus(getStatusRequest GetStatusRequest) : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatus(getStatusRequest GetStatusRequest) : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobs(listJobsRequest ListJobsRequest) : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobs(listJobsRequest ListJobsRequest) : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.createJobAsync.submit.new Callable<CreateJobResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.getShippingLabelAsync.submit.new Callable<GetShippingLabelResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.cancelJobAsync.submit.new Callable<CancelJobResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.getStatusAsync.submit.new Callable<GetStatusResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.listJobsAsync.submit.new Callable<ListJobsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.updateJobAsync.submit.new Callable<UpdateJobResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public stop() : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private handleConnection(input BufferedReader, output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private ignoreRequest(input BufferedReader) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private outputIamInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private outputIamCredList(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private outputIamCred(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private outputInstanceInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private runServer() : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private killServer() : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private executorService : ExecutorService from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private executorService : ExecutorService from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type responseHandler : HttpResponseHandler<AmazonWebServiceResponse<X>> to responseHandler : JsonResponseHandler<X> in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter responseHandler : HttpResponseHandler<AmazonWebServiceResponse<X>> to responseHandler : JsonResponseHandler<X> in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unmarshaller : Unmarshaller<X,JsonUnmarshallerContext> in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private server : ServerSocket from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1124507,
  "repository" : "https://github.com/gwtproject/gwt.git",
  "sha1" : "22fb2c9c6974bd1fe0f6ff684f52e6cfbed1a387",
  "url" : "https://github.com/gwtproject/gwt/commit/22fb2c9c6974bd1fe0f6ff684f52e6cfbed1a387",
  "author" : "Goktug Gokdogan",
  "time" : "6/24/15 6:41 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private rescueMembersAndInstantiateSuperInterfaces(type JDeclaredType) : void extracted from public visit(type JInterfaceType, ctx Context) : boolean in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private rescueMembersAndInstantiateSuperInterfaces(type JDeclaredType) : void extracted from public visit(type JClassType, ctx Context) : boolean in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "-true- has been passed as an argument of -rescue- function. So, it cannot be justified y the removeParameter refactoring."
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public _disabled_testJsType3DimArray_castedFromNativeWithACall() : void renamed to public __disabled__testJsType3DimArray_castedFromNativeWithACall() : void in class com.google.gwt.core.client.interop.JsTypeArrayTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private rescueMembersIfInstantiable(type JDeclaredType) : void renamed to private rescueMembers(type JDeclaredType) : void in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public _disabled_testJsTypeArray_returnFromNativeWithACall() : void renamed to public testJsTypeArray_returnFromNativeWithACall() : void in class com.google.gwt.core.client.interop.JsTypeArrayTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public _disabled_testJsTypeArray_asAField() : void renamed to public __disabled__testJsTypeArray_asAField() : void in class com.google.gwt.core.client.interop.JsTypeArrayTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private rescueAndInstantiate(type JClassType) : void inlined to public visit(x JNewInstance, ctx Context) : boolean in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private rescueAndInstantiate(type JClassType) : void inlined to public visit(x JsniMethodRef, ctx Context) : boolean in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public _disabled_testString3DimArray_castedFromNative() : void renamed to public __disabled__testObjectArray_castedFromNative() : void in class com.google.gwt.core.client.interop.JsTypeArrayTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, GumTreeDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable dtype : JDeclaredType to declaredType : JDeclaredType in method private rescue(type JReferenceType, isInstantiated boolean) : void from class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable enclosingType : JDeclaredType in method private rescue(method JMethod) : void from class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type type : JType to type : JDeclaredType in method private isTypeInstantiatedOrJso(type JDeclaredType) : boolean from class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method private rescueArgumentsIfParametersCanBeRead(call JMethodCall) : void from class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type type : JClassType to type : JDeclaredType in method private rescueMembersAndInstantiateSuperInterfaces(type JDeclaredType) : void in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type intfType : JInterfaceType to ctx : Context in method public visit(arrayLength JArrayLength, ctx Context) : boolean in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type array : String[][][] to array : Object[] in method public __disabled__testObjectArray_castedFromNative() : void in class com.google.gwt.core.client.interop.JsTypeArrayTest",
    "comment" : "<p>different test methods</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private returnString3DimFromNative() : Object renamed to private returnObjectArrayFromNative() : Object in class com.google.gwt.core.client.interop.JsTypeArrayTest",
    "comment" : "<p>The call exists in method <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>__disabled__testObjectArray_castedFromNative</span>()</span> which is renamed from <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-en'>_disabled_testString3DimArray_castedFromNative</span>()</span><br />https://github.com/gwtproject/gwt/commit/22fb2c9c6974bd1fe0f6ff684f52e6cfbed1a387?diff=split#diff-6dd157699a1b4355dda514c148813fefR127</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private rescueAndInstantiate(type JClassType) : void renamed to private rescueMembersAndInstantiateSuperInterfaces(type JDeclaredType) : void in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter isReferenced : boolean in method private rescue(type JReferenceType, isReferenced boolean, isInstantiated boolean) : void from class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public canBeInstantiatedInJavascript(type JType) : boolean moved from class com.google.gwt.dev.jjs.ast.JTypeOracle to class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor & inlined to private canBeInstantiatedInJavaScript(type JType) : boolean",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter method : JMethod to method : JMethod in method private rescueArgumentsIfParametersCanBeRead(call JMethodCall) : void from class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6656
}, {
  "id" : 1124509,
  "repository" : "https://github.com/libgdx/libgdx.git",
  "sha1" : "2bd1557bc293cb8c2348374771aad832befbe26f",
  "url" : "https://github.com/libgdx/libgdx/commit/2bd1557bc293cb8c2348374771aad832befbe26f",
  "author" : "NathanSweet",
  "time" : "6/25/15 11:30 AM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method public setCheckBoxRight(right boolean) : void inlined to public CheckBox(text String, style CheckBoxStyle) in class com.badlogic.gdx.scenes.scene2d.ui.CheckBox",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable label : Label in method public CheckBox(text String, style CheckBoxStyle) from class com.badlogic.gdx.scenes.scene2d.ui.CheckBox",
    "comment" : "<p>Although the variable declaration <span class='blob-code-inner blob-code-marker-context'><span class='pl-smi'>Label</span> label <span class='pl-k'>=</span> <strong>getLabel()</strong>;<br />appears in the inline method <span class='blob-code-inner blob-code-marker-deletion'><span class='pl-en'>setCheckBoxRight</span></span>()<br />this is considered a true positive because statement<br /><span class='blob-code-inner blob-code-marker-deletion'>getLabel()<span class='pl-k'>.</span>setAlignment(<span class='pl-smi'>Align</span><span class='pl-k'>.</span>left);</span><br />changed to<br /><span class='blob-code-inner blob-code-marker-addition'>label<span class='pl-k'>.</span>setAlignment(<span class='pl-smi'>Align</span><span class='pl-k'>.</span>left);</span><br />in the constructor<br /></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2425
}, {
  "id" : 1124816,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "0d9fcaa4415ee996e423a97cfe0d965586ca59a5",
  "url" : "https://github.com/SonarSource/sonarqube/commit/0d9fcaa4415ee996e423a97cfe0d965586ca59a5",
  "author" : "Julien HENRY",
  "time" : "6/25/15 11:49 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private doStop(swallowException boolean) : void extracted from public stop() : void in class org.sonar.batch.bootstrapper.Batch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3281
}, {
  "id" : 1124846,
  "repository" : "https://github.com/neo4j/neo4j.git",
  "sha1" : "d3533c1a0716ca114d294b3ea183504c9725698f",
  "url" : "https://github.com/neo4j/neo4j/commit/d3533c1a0716ca114d294b3ea183504c9725698f",
  "author" : "Jacob Hansson",
  "time" : "6/23/15 2:17 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private createNewThread(group Group, job Runnable, metadata Map<String,String>) : Thread extracted from public schedule(group Group, job Runnable, metadata Map<String,String>) : JobHandle in class org.neo4j.kernel.impl.util.Neo4jJobScheduler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.neo4j.ndp.transport.socket.client.WebSocketConnection renamed to org.neo4j.ndp.transport.socket.client.SecureWebSocketConnection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private serverResponds(host String, port int) : boolean inlined to private assertEventuallyServerResponds(host String, port int) : void in class org.neo4j.server.Neo4jDataProtocolIT",
    "comment" : "<p><span class='blob-code-inner'>The statements in method serverRespondsare(..) are actually move to two methods&nbsp; <span class='pl-en'>SocketConnection</span>.<span class='pl-en'>connect(..) and SocketConnection.send(..).</span></span></p><p><span class='blob-code-inner'><span class='pl-en'>Thus it is not an inline refacatroing. It could be that the statements were first inlined to assertEventuallyServerResponds(..) and then extracted into two above mentioned methods.<br /></span></span></p><p>&nbsp;</p><p><span class='blob-code-inner'><span class='pl-en'>So for me it is a FP but needs Matin and Davoods opinion. </span></span></p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter keyStorePath : String to keyStore : KeyStore in method public KeyStoreInformation(keyStore KeyStore, keyStorePassword char[], keyPassword char[]) from class org.neo4j.server.security.ssl.KeyStoreInformation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter config : KeyStoreInformation to ksInfo : KeyStoreInformation in method private createSslConnectionFactory(ksInfo KeyStoreInformation) : SslConnectionFactory from class org.neo4j.server.security.ssl.SslSocketConnectorFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable scheduler : JobScheduler in method public newKernelExtension(dependencies Dependencies) : Lifecycle from class org.neo4j.ext.NDPKernelExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute workerGroup : EventLoopGroup to selectorGroup : EventLoopGroup in class org.neo4j.ndp.transport.socket.NettyServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute sslCertificateFactory : SslCertificateFactory to certFactory : Certificates in class org.neo4j.server.security.ssl.KeyStoreFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute server : Jetty9WebServer to webServer : Jetty9WebServer in method public shouldBeAbleToRestart() : void from class org.neo4j.server.web.TestJetty9WebServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute testBootstrapper : WrappingNeoServerBootstrapper to server : CommunityNeoServer in method public shouldDisallowDirectoryListings() : void from class org.neo4j.server.web.TestJetty9WebServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable socket : Socket to conn : SecureSocketConnection in method private serverResponds(host String, port int) : boolean from class org.neo4j.ext.NDPExtensionIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute keyStorePath : String to keyStore : KeyStore in class org.neo4j.server.security.ssl.KeyStoreInformation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type keyStorePath : String to keyStore : KeyStore in method public KeyStoreInformation(keyStore KeyStore, keyStorePassword char[], keyPassword char[]) from class org.neo4j.server.security.ssl.KeyStoreInformation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type socket : Socket to conn : SecureSocketConnection in method private serverResponds(host String, port int) : boolean from class org.neo4j.ext.NDPExtensionIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type sslCertificateFactory : SslCertificateFactory to certFactory : Certificates in class org.neo4j.server.security.ssl.KeyStoreFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type keyStorePath : String to keyStore : KeyStore in class org.neo4j.server.security.ssl.KeyStoreInformation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type testBootstrapper : WrappingNeoServerBootstrapper to server : CommunityNeoServer in method public shouldDisallowDirectoryListings() : void from class org.neo4j.server.web.TestJetty9WebServer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type certFactory : SslCertificateFactory to certFactory : Certificates in method protected initHttpsKeyStore() : KeyStoreInformation from class org.neo4j.server.AbstractNeoServer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type sslFactory : SslCertificateFactory to sslFactory : Certificates in method public shouldCreateASelfSignedCertificate() : void from class org.neo4j.server.security.ssl.TestSslCertificateFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable socket : Socket to conn : SecureSocketConnection in method private assertEventuallyServerResponds(host String, port int) : void in class org.neo4j.server.Neo4jDataProtocolIT",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to KeyStore in method public getKeyStore() : KeyStore in class org.neo4j.server.security.ssl.KeyStoreInformation",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.neo4j.server.security.ssl.SslCertificateFactory renamed to org.neo4j.server.security.ssl.Certificates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute KEY_ENCRYPTION : String to DEFAULT_ENCRYPTION : String in class org.neo4j.server.security.ssl.Certificates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private ensureFolderExists(path File) : void inlined to public createSelfSignedCertificate(certificatePath File, privateKeyPath File, hostName String) : void in class org.neo4j.server.security.ssl.Certificates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getKeyStore() : KeyStore extracted from public shouldImportSingleCertificateWhenNotInAChain() : void in class org.neo4j.server.security.ssl.KeyStoreFactoryTest & moved to class org.neo4j.server.security.ssl.KeyStoreInformation",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getKeyStore() : KeyStore extracted from public shouldImportAllCertificatesInAChain() : void in class org.neo4j.server.security.ssl.KeyStoreFactoryTest & moved to class org.neo4j.server.security.ssl.KeyStoreInformation",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getKeyStorePath() : String renamed to public getKeyStore() : KeyStore in class org.neo4j.server.security.ssl.KeyStoreInformation",
    "comment" : "<p><a href='https://github.com/neo4j/neo4j/commit/d3533c1a0716ca114d294b3ea183504c9725698f?diff=split#diff-bb76947c6f3105c6eb168f1657ea7672L34'>https://github.com/neo4j/neo4j/commit/d3533c1a0716ca114d294b3ea183504c9725698f?diff=split#diff-bb76947c6f3105c6eb168f1657ea7672L34</a></p><p>Proof:&nbsp;</p><p><strong><a href='https://github.com/neo4j/neo4j/commit/d3533c1a0716ca114d294b3ea183504c9725698f?diff=split#diff-1b4497ec48851f2813439c0a9f91a52eL69'>https://github.com/neo4j/neo4j/commit/d3533c1a0716ca114d294b3ea183504c9725698f?diff=split#diff-1b4497ec48851f2813439c0a9f91a52eL69</a></strong></p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private waitUntilAvailable(recieved byte[], timeout long, left int) : void renamed to public SocketConnection() in class org.neo4j.ndp.transport.socket.client.SocketConnection",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createFiles() : void renamed to public shouldLoadBinaryCertificates() : void in class org.neo4j.server.security.ssl.TestSslCertificateFactory",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteFiles() : void renamed to public shouldLoadBinaryPrivateKey() : void in class org.neo4j.server.security.ssl.TestSslCertificateFactory",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in attribute public webserver_https_cert_path : Setting<File> from class org.neo4j.server.configuration.ServerSettings",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in attribute public webserver_https_key_path : Setting<File> from class org.neo4j.server.configuration.ServerSettings",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter tf : ThreadFactory in method public NettyServer(tf ThreadFactory, bootstrappers Collection<BiConsumer<EventLoopGroup,EventLoopGroup>>) from class org.neo4j.ndp.transport.socket.NettyServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sslCtx : SslContext in method public SocketTransport(address HostnamePort, sslCtx SslContext, logging LogProvider, protocolVersions PrimitiveLongObjectMap<Function<Channel,SocketProtocol>>) from class org.neo4j.ndp.transport.socket.SocketTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter logging : LogProvider in method public SocketTransport(address HostnamePort, sslCtx SslContext, logging LogProvider, protocolVersions PrimitiveLongObjectMap<Function<Channel,SocketProtocol>>) from class org.neo4j.ndp.transport.socket.SocketTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter logging : LogProvider in method public SocketTransportHandler(protocolChooser ProtocolChooser, logging LogProvider) from class org.neo4j.ndp.transport.socket.SocketTransportHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sslCtx : SslContext in method public WebSocketTransport(address HostnamePort, sslCtx SslContext, logging LogProvider, protocolVersions PrimitiveLongObjectMap<Function<Channel,SocketProtocol>>) from class org.neo4j.ndp.transport.socket.WebSocketTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter logging : LogProvider in method public WebSocketTransport(address HostnamePort, sslCtx SslContext, logging LogProvider, protocolVersions PrimitiveLongObjectMap<Function<Channel,SocketProtocol>>) from class org.neo4j.ndp.transport.socket.WebSocketTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter keyStorePath : File in method public createKeyStore(keyStorePath File, privateKeyPath File, certificatePath File) : KeyStoreInformation from class org.neo4j.server.security.ssl.KeyStoreFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Rule in attribute public tmpDir : TemporaryFolder from class org.neo4j.server.security.ssl.TestSslCertificateFactory",
    "comment" : "<p>new field</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type [IOException, InterruptedException] to Exception in method private assertEventuallyServerResponds(host String, port int) : void from class org.neo4j.ext.NDPExtensionIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type [IOException, InterruptedException] to Exception in method private serverResponds(host String, port int) : boolean from class org.neo4j.ext.NDPExtensionIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type IOException to Exception in method public connect(address HostnamePort) : Connection from class org.neo4j.ndp.transport.socket.client.SocketConnection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type Exception in method private configureWebServer() : void from class org.neo4j.server.AbstractNeoServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type Exception in method protected initHttpsKeyStore() : KeyStoreInformation from class org.neo4j.server.AbstractNeoServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type Exception in method public createKeyStore(privateKeyPath File, certificatePath File) : KeyStoreInformation from class org.neo4j.server.security.ssl.KeyStoreFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type [IOException, InterruptedException] to Exception in method private assertEventuallyServerResponds(host String, port int) : void from class org.neo4j.server.Neo4jDataProtocolIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type NoSuchAlgorithmException in method public createSelfSignedCertificate(certificatePath File, privateKeyPath File, hostName String) : void from class org.neo4j.server.security.ssl.Certificates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type CertificateException in method public createSelfSignedCertificate(certificatePath File, privateKeyPath File, hostName String) : void from class org.neo4j.server.security.ssl.Certificates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type NoSuchProviderException in method public createSelfSignedCertificate(certificatePath File, privateKeyPath File, hostName String) : void from class org.neo4j.server.security.ssl.Certificates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type InvalidKeyException in method public createSelfSignedCertificate(certificatePath File, privateKeyPath File, hostName String) : void from class org.neo4j.server.security.ssl.Certificates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type SignatureException in method public createSelfSignedCertificate(certificatePath File, privateKeyPath File, hostName String) : void from class org.neo4j.server.security.ssl.Certificates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type IOException in method public createSelfSignedCertificate(certificatePath File, privateKeyPath File, hostName String) : void from class org.neo4j.server.security.ssl.Certificates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type FileNotFoundException to IOException in method public loadCertificates(certFile File) : Certificate[] from class org.neo4j.server.security.ssl.Certificates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to public in attribute public NO_OP_MONITOR : Monitor from class org.neo4j.helpers.NamedThreadFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to KeyStore in method private createKeyStore(keyStorePassword char[], keyPassword char[], privateKeyFile File, certFile File) : KeyStore from class org.neo4j.server.security.ssl.KeyStoreFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter keyStorePath : File in method private createKeyStore(keyStorePath File, keyStorePassword char[], keyPassword char[], privateKeyFile File, certFile File) : void from class org.neo4j.server.security.ssl.KeyStoreFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type certificates : Collection<? extends Certificate> to certificates : Collection<Certificate> in method public loadCertificates(certFile File) : Certificate[] from class org.neo4j.server.security.ssl.Certificates",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable fis : FileInputStream in method public loadPrivateKey(privateKeyFile File) : PrivateKey from class org.neo4j.server.security.ssl.SslCertificateFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 7200
}, {
  "id" : 1124975,
  "repository" : "https://github.com/facebook/buck.git",
  "sha1" : "be292763b8c4cb09988023d6081b0a2d57b4c778",
  "url" : "https://github.com/facebook/buck/commit/be292763b8c4cb09988023d6081b0a2d57b4c778",
  "author" : "Simon Stewart",
  "time" : "6/25/15 3:55 PM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private PATH_TO_URL : Function<Path,URL> from class com.facebook.buck.util.ClassLoaderCache to private PATH_TO_URL : Function<Path,URL> from class com.facebook.buck.java.JarBackedJavac",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private PATH_TO_URL : Function<Path,URL> from class com.facebook.buck.util.ClassLoaderCacheTest to class com.facebook.buck.java.JarBackedJavac",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type classPath : ImmutableList<Path> to classPath : ImmutableList<URL> in method public getClassLoaderForClassPath(parentClassLoader ClassLoader, classPath ImmutableList<URL>) : ClassLoader from class com.facebook.buck.util.ClassLoaderCache",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type classPath : ImmutableList<Path> to classPath : ImmutableList<URL> in method public injectClassLoader(parentClassLoader ClassLoader, classPath ImmutableList<URL>, injectedClassLoader ClassLoader) : void from class com.facebook.buck.util.ClassLoaderCache",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Map<ImmutableList<Path>,ClassLoader> to Map<ImmutableList<URL>,ClassLoader> in method private getCacheForParent(parentClassLoader ClassLoader) : Map<ImmutableList<URL>,ClassLoader> from class com.facebook.buck.util.ClassLoaderCache",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type cache : Map<ClassLoader,Map<ImmutableList<Path>,ClassLoader>> to cache : Map<ClassLoader,Map<ImmutableList<URL>,ClassLoader>> in class com.facebook.buck.util.ClassLoaderCache",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cacheForParent : Map<ImmutableList<Path>,ClassLoader> to cacheForParent : Map<ImmutableList<URL>,ClassLoader> in method private getCacheForParent(parentClassLoader ClassLoader) : Map<ImmutableList<URL>,ClassLoader> from class com.facebook.buck.util.ClassLoaderCache",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cacheForParent : Map<ImmutableList<Path>,ClassLoader> to cacheForParent : Map<ImmutableList<URL>,ClassLoader> in method public getClassLoaderForClassPath(parentClassLoader ClassLoader, classPath ImmutableList<URL>) : ClassLoader from class com.facebook.buck.util.ClassLoaderCache",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cacheForParent : Map<ImmutableList<Path>,ClassLoader> to cacheForParent : Map<ImmutableList<URL>,ClassLoader> in method public injectClassLoader(parentClassLoader ClassLoader, classPath ImmutableList<URL>, injectedClassLoader ClassLoader) : void from class com.facebook.buck.util.ClassLoaderCache",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cacheForParent : Map<ImmutableList<Path>,ClassLoader> to cacheForParent : Map<ImmutableList<URL>,ClassLoader> in method public close() : void from class com.facebook.buck.util.ClassLoaderCache",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type dummyClassPath : ImmutableList<Path> to dummyClassPath : ImmutableList<URL> in method public cacheLoaderReturnsSameClassLoader() : void from class com.facebook.buck.util.ClassLoaderCacheTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2467
}, {
  "id" : 1125062,
  "repository" : "https://github.com/fabric8io/fabric8.git",
  "sha1" : "e068eb7f484f24dee285d29b8a910d9019592020",
  "url" : "https://github.com/fabric8io/fabric8/commit/e068eb7f484f24dee285d29b8a910d9019592020",
  "author" : "Jimmi Dyson",
  "time" : "6/25/15 4:54 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getHTTPGetAction(prefix String, properties Properties) : HTTPGetAction extracted from protected getProbe(prefix String) : Probe in class io.fabric8.maven.JsonMojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getExecAction(prefix String, properties Properties) : ExecAction extracted from protected getProbe(prefix String) : Probe in class io.fabric8.maven.JsonMojo",
    "comment" : "<p>This is newly added code.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getTCPSocketAction(prefix String, properties Properties) : TCPSocketAction extracted from protected getProbe(prefix String) : Probe in class io.fabric8.maven.JsonMojo",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable httpGet : HTTPGetAction to action : HTTPGetAction in method private getHTTPGetAction(prefix String, properties Properties) : HTTPGetAction from class io.fabric8.maven.JsonMojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable answer : Probe to probe : Probe in method protected getProbe(prefix String) : Probe from class io.fabric8.maven.JsonMojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable httpGet : HTTPGetAction to httpGetAction : HTTPGetAction in method protected getProbe(prefix String) : Probe from class io.fabric8.maven.JsonMojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1151
}, {
  "id" : 1125095,
  "repository" : "https://github.com/apache/drill.git",
  "sha1" : "c1b847acdc8cb90a1498b236b3bb5c81ca75c044",
  "url" : "https://github.com/apache/drill/commit/c1b847acdc8cb90a1498b236b3bb5c81ca75c044",
  "author" : "vkorukanti",
  "time" : "6/25/15 11:53 AM",
  "refactorings" : [ {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private org2Groups : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected org2Groups : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoaderLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoaderLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createTestData() : void extracted from public addMiniDfsBasedStorageAndGenerateTestData() : void in class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private org1Groups : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected org1Groups : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableNameLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableNameLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private org1Users : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected org1Users : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.DatabaseLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.DatabaseLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private org2Users : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected org2Users : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public createFileSystem(proxyUserName String, fsConf Configuration, stats OperatorStats) : DrillFileSystem inlined to public createFileSystem(proxyUserName String, fsConf Configuration) : DrillFileSystem in class org.apache.drill.exec.util.ImpersonationUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public addMiniDfsBasedStorageAndGenerateTestData() : void from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.store.hive.HiveTestDataGenerator to public executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.hive.HiveTestUtilities",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getTempDir(dirName String) : String extracted from public getInstance() : HiveTestDataGenerator in class org.apache.drill.exec.store.hive.HiveTestDataGenerator & moved to class org.apache.drill.BaseTestQuery",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to BaseTestQuery</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getTempDir(dirName String) : String extracted from private generateTestData() : void in class org.apache.drill.exec.store.hive.HiveTestDataGenerator & moved to class org.apache.drill.BaseTestQuery",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to BaseTestQuery</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public createNonCloseableClientWithCaching(hiveConf HiveConf, hiveConfigOverride Map<String,String>) : DrillHiveMetaStoreClient extracted from public HiveSchemaFactory(plugin HiveStoragePlugin, name String, hiveConfigOverride Map<String,String>) in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory & moved to class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private tableLoaders : LoadingCache<String,LoadingCache<String,HiveReadEntry>> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory to private tableLoaders : LoadingCache<String,LoadingCache<String,HiveReadEntry>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private tableNameLoader : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory to private tableNameLoader : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private databases : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory to private databases : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable value : String in method public HiveSchemaFactory(plugin HiveStoragePlugin, name String, hiveConfigOverride Map<String,String>) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable property : String in method public HiveSchemaFactory(plugin HiveStoragePlugin, name String, hiveConfigOverride Map<String,String>) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute conf : Configuration to dfsConf : Configuration in class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute tableNameLoader : LoadingCache<String,List<String>> to isHS2DoAsSet : boolean in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter fs : FileSystem to workspaces : Map<String,WorkspaceConfig> in method protected createAndAddWorkspace(name String, path String, permissions short, owner String, group String, workspaces Map<String,WorkspaceConfig>) : void in class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to Map<String,WorkspaceConfig> in method private createTestWorkspaces() : Map<String,WorkspaceConfig> from class org.apache.drill.exec.impersonation.TestImpersonationMetadata",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to Map<String,WorkspaceConfig> in method private createTestWorkspaces() : Map<String,WorkspaceConfig> from class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getSplitsWithUGI() : void extracted from public HiveScan(userName String, hiveReadEntry HiveReadEntry, storagePluginName String, columns List<SchemaPath>, pluginRegistry StoragePluginRegistry) in class org.apache.drill.exec.store.hive.HiveScan",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getSplitsWithUGI() : void extracted from public HiveScan(userName String, hiveReadEntry HiveReadEntry, storagePlugin HiveStoragePlugin, columns List<SchemaPath>) in class org.apache.drill.exec.store.hive.HiveScan",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type name : String to schemaConfig : SchemaConfig in method public HiveSchema(schemaConfig SchemaConfig, mClient DrillHiveMetaStoreClient, name String) in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "<p>parameter names still exists in the constructor</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type DATABASES : String to globalMetastoreClient : DrillHiveMetaStoreClient in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private getSchemaFile(resource String) : String from class org.apache.drill.exec.store.hive.HiveTestDataGenerator to public getPhysicalFileFromResource(resource String) : String from class org.apache.drill.BaseTestQuery",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public load(key String) : HiveReadEntry from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoader to protected getHiveReadEntryHelper(mClient IMetaStoreClient, dbName String, tableName String, hiveConfigOverride Map<String,String>) : HiveReadEntry from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public addMiniDfsBasedStorageAndGenerateTestData() : void renamed to private createTestData() : void in class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public addMiniDfsBasedStorage() : void renamed to public setup() : void in class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS",
    "comment" : "<p>Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected addMiniDfsBasedStorage(workspaces Map&lt;String,WorkspaceConfig&gt;) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public addMiniDfsBasedStorage() : void renamed to public setup() : void in class org.apache.drill.exec.impersonation.TestImpersonationMetadata",
    "comment" : "<p>Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to protected addMiniDfsBasedStorage(workspaces Map&lt;String,WorkspaceConfig&gt;) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package getTableNames(dbName String) : List<String> renamed to package getDrillTable(dbName String, t String) : DrillTable in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @BeforeClass in method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @BeforeClass in method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationMetadata",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @BeforeClass in method public addMiniDfsBasedStorageAndGenerateTestData() : void from class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter userName : String in method public DrillHiveTable(storageEngineName String, plugin HiveStoragePlugin, userName String, readEntry HiveReadEntry) from class org.apache.drill.exec.store.hive.schema.DrillHiveTable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter userName : String in method public DrillHiveViewTable(storageEngineName String, plugin HiveStoragePlugin, userName String, readEntry HiveReadEntry) from class org.apache.drill.exec.store.hive.schema.DrillHiveViewTable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter schemaConfig : SchemaConfig in method public HiveSchema(schemaConfig SchemaConfig, mClient DrillHiveMetaStoreClient, name String) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter mClient : DrillHiveMetaStoreClient in method public HiveSchema(schemaConfig SchemaConfig, mClient DrillHiveMetaStoreClient, name String) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter fs : FileSystem in method protected createAndAddWorkspace(fs FileSystem, name String, path String, permissions short, owner String, group String, workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public load(key String) : LoadingCache<String,HiveReadEntry> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoaderLoader",
    "comment" : "<p>deleted method from deleted class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type Exception to IOException in method public getPhysicalFileFromResource(resource String) : String from class org.apache.drill.BaseTestQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public getPhysicalFileFromResource(resource String) : String from class org.apache.drill.BaseTestQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.hive.HiveTestUtilities",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected org1Users : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected org1Groups : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected org2Users : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected org2Groups : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method public getPhysicalFileFromResource(resource String) : String from class org.apache.drill.BaseTestQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method public executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.hive.HiveTestUtilities",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private plugin : HiveStoragePlugin from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : ExecutionException to e : TException in method package getSelectionBaseOnName(dbName String, t String) : HiveReadEntry from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : ExecutionException to e : TException in method public getSubSchemaNames() : Set<String> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : ExecutionException to e : TException in method public getSubSchema(name String) : AbstractSchema from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter name : String in method public HiveSchema(schemaConfig SchemaConfig, mClient DrillHiveMetaStoreClient, name String) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : TException in method public getSubSchema(name String) : AbstractSchema from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : TException in method public getSubSchemaNames() : Set<String> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : TException in method package getSelectionBaseOnName(dbName String, t String) : HiveReadEntry from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter userName : String in method public getRootSchema(userName String) : SchemaPlus from class org.apache.drill.exec.ops.QueryContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter workspaces : Map<String,WorkspaceConfig> in method protected createAndAddWorkspace(name String, path String, permissions short, owner String, group String, workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter dbName : String in method public TableLoader(dbName String) from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter workspaces : Map<String,WorkspaceConfig> to workspaces : Map<String,WorkspaceConfig> in method private createTestWorkspaces() : Map<String,WorkspaceConfig> from class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter workspaces : Map<String,WorkspaceConfig> to workspaces : Map<String,WorkspaceConfig> in method private createTestWorkspaces() : Map<String,WorkspaceConfig> from class org.apache.drill.exec.impersonation.TestImpersonationMetadata",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable workspaces : Map<String,WorkspaceConfig> to workspaces : Map<String,WorkspaceConfig> in method protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter workspaces : Map<String,WorkspaceConfig> in method protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private databases : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private tableNameLoader : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private tableLoaders : LoadingCache<String,LoadingCache<String,HiveReadEntry>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2022
}, {
  "id" : 1125111,
  "repository" : "https://github.com/BroadleafCommerce/BroadleafCommerce.git",
  "sha1" : "abba5d83602c7ae23901bd579ba9fbb7dc36adc0",
  "url" : "https://github.com/BroadleafCommerce/BroadleafCommerce/commit/abba5d83602c7ae23901bd579ba9fbb7dc36adc0",
  "author" : "Chris Kittrell",
  "time" : "6/24/15 6:52 PM",
  "refactorings" : [ {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.broadleafcommerce.openadmin.dto.override.MetadataOverride from class org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getName() : String from class org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride to public getName() : String from class org.broadleafcommerce.openadmin.dto.override.MetadataOverride",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getOrder() : Integer from class org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride to public getOrder() : Integer from class org.broadleafcommerce.openadmin.dto.override.MetadataOverride",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public setName(name String) : void from class org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride to public setName(name String) : void from class org.broadleafcommerce.openadmin.dto.override.MetadataOverride",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public setOrder(order Integer) : void from class org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride to public setOrder(order Integer) : void from class org.broadleafcommerce.openadmin.dto.override.MetadataOverride",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private order : Integer from class org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride to protected order : Integer from class org.broadleafcommerce.openadmin.dto.override.MetadataOverride",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private name : String from class org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride to protected name : String from class org.broadleafcommerce.openadmin.dto.override.MetadataOverride",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Map<String,FieldMetadataOverride> to Map<String,MetadataOverride> in method protected getTargetedOverride(configurationKey String, ceilingEntityFullyQualifiedClassname String) : Map<String,MetadataOverride> from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.AbstractFieldMetadataProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Map<String,FieldMetadataOverride> to Map<String,MetadataOverride> in method protected getTargetedOverride(dynamicEntityDao DynamicEntityDao, configurationKey String, ceilingEntityFullyQualifiedClassname String) : Map<String,MetadataOverride> from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.AbstractFieldMetadataProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type metadataOverrides : Map<String,Map<String,FieldMetadataOverride>> to metadataOverrides : Map<String,Map<String,MetadataOverride>> in class org.broadleafcommerce.openadmin.server.dao.provider.metadata.AbstractFieldMetadataProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type localMetadata : FieldMetadataOverride to localMetadata : MetadataOverride in method public overrideViaXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : MetadataProviderResponse from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.AdornedTargetCollectionFieldMetadataProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type localMetadata : FieldMetadataOverride to localMetadata : MetadataOverride in method public overrideViaXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : MetadataProviderResponse from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.BasicFieldMetadataProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type localMetadata : FieldMetadataOverride to localMetadata : MetadataOverride in method public overrideViaXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : MetadataProviderResponse from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.CollectionFieldMetadataProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type overrides : Map<String,FieldMetadataOverride> to overrides : Map<String,MetadataOverride> in method public overrideExclusionsFromXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : void from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.DefaultFieldMetadataProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type localMetadata : FieldMetadataOverride to localMetadata : MetadataOverride in method public overrideExclusionsFromXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : void from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.DefaultFieldMetadataProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type localMetadata : FieldMetadataOverride to localMetadata : MetadataOverride in method public overrideViaXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : MetadataProviderResponse from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.MapFieldMetadataProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type overrides : Map<String,FieldMetadataOverride> to overrides : Map<String,MetadataOverride> in class org.broadleafcommerce.openadmin.server.dao.provider.metadata.AdornedTargetCollectionFieldMetadataProvider.overrideViaXml",
    "comment" : "<p>variable declaration in parent commit is a field declared outside of the method!</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type overrides : Map<String,FieldMetadataOverride> to overrides : Map<String,MetadataOverride> in class org.broadleafcommerce.openadmin.server.dao.provider.metadata.BasicFieldMetadataProvider.overrideViaXml",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type overrides : Map<String,FieldMetadataOverride> to overrides : Map<String,MetadataOverride> in class org.broadleafcommerce.openadmin.server.dao.provider.metadata.CollectionFieldMetadataProvider.overrideViaXml",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type overrides : Map<String,FieldMetadataOverride> to overrides : Map<String,MetadataOverride> in class org.broadleafcommerce.openadmin.server.dao.provider.metadata.MapFieldMetadataProvider.overrideViaXml",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public overrideViaXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : MetadataProviderResponse from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.AdornedTargetCollectionFieldMetadataProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public overrideViaXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : MetadataProviderResponse from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.BasicFieldMetadataProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public overrideViaXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : MetadataProviderResponse from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.CollectionFieldMetadataProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public overrideViaXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : MetadataProviderResponse from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.MapFieldMetadataProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable localMetadata : FieldMetadataOverride in method public overrideViaXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : MetadataProviderResponse from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.AdornedTargetCollectionFieldMetadataProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable localMetadata : FieldMetadataOverride in method public overrideViaXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : MetadataProviderResponse from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.BasicFieldMetadataProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable localMetadata : FieldMetadataOverride in method public overrideViaXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : MetadataProviderResponse from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.CollectionFieldMetadataProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable localMetadata : FieldMetadataOverride in method public overrideExclusionsFromXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : void from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.DefaultFieldMetadataProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable localMetadata : FieldMetadataOverride in method public overrideViaXml(overrideViaXmlRequest OverrideViaXmlRequest, metadata Map<String,FieldMetadata>) : MetadataProviderResponse from class org.broadleafcommerce.openadmin.server.dao.provider.metadata.MapFieldMetadataProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected name : String from class org.broadleafcommerce.openadmin.dto.override.MetadataOverride",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected order : Integer from class org.broadleafcommerce.openadmin.dto.override.MetadataOverride",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1125117,
  "repository" : "https://github.com/redsolution/xabber-android.git",
  "sha1" : "faaf826e901f43d1b46105b18e655eb120f3ffef",
  "url" : "https://github.com/redsolution/xabber-android/commit/faaf826e901f43d1b46105b18e655eb120f3ffef",
  "author" : "Grigory Fedorov",
  "time" : "6/26/15 10:16 AM",
  "refactorings" : [ {
    "type" : "Extract Interface",
    "description" : "Extract Interface com.xabber.android.ui.ContactAdder from class com.xabber.android.ui.ContactAddFragment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public addContact() : void from class com.xabber.android.ui.ContactAddFragment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1125333,
  "repository" : "https://github.com/facebook/facebook-android-sdk.git",
  "sha1" : "e813a0be86c87366157a0201e6c61662cadee586",
  "url" : "https://github.com/facebook/facebook-android-sdk/commit/e813a0be86c87366157a0201e6c61662cadee586",
  "author" : "Sean Wiese",
  "time" : "6/25/15 3:56 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getAndroidIdViaReflection(context Context) : AttributionIdentifiers extracted from private getAndroidId(context Context) : AttributionIdentifiers in class com.facebook.internal.AttributionIdentifiers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.iconicus.GameBoard moved to com.example.iconicus.GameBoard",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.iconicus.GameController moved to com.example.iconicus.GameController",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.hellofacebook.HelloFacebookBroadcastReceiver moved to com.example.hellofacebook.HelloFacebookBroadcastReceiver",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.rps.CommonObjects moved to com.example.rps.CommonObjects",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.rps.ContentFragment moved to com.example.rps.ContentFragment",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.rps.MainActivity moved to com.example.rps.MainActivity",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.rps.OpenGraphConsts moved to com.example.rps.OpenGraphConsts",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.rps.RpsFragment moved to com.example.rps.RpsFragment",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.rps.RpsGameUtils moved to com.example.rps.RpsGameUtils",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.rps.usersettings.UserSettingsFragment moved to com.example.rps.usersettings.UserSettingsFragment",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.switchuser.ProfileFragment moved to com.example.switchuser.ProfileFragment",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.switchuser.Slot moved to com.example.switchuser.Slot",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.switchuser.UserInfo moved to com.example.switchuser.UserInfo",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.switchuser.UserInfoCache moved to com.example.switchuser.UserInfoCache",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.scrumptious.BaseListElement moved to com.example.scrumptious.BaseListElement",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.scrumptious.FullListView moved to com.example.scrumptious.FullListView",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.scrumptious.MainActivity moved to com.example.scrumptious.MainActivity",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.scrumptious.PickerActivity moved to com.example.scrumptious.PickerActivity",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.scrumptious.ScrumptiousApplication moved to com.example.scrumptious.ScrumptiousApplication",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.scrumptious.SelectionFragment moved to com.example.scrumptious.SelectionFragment",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.scrumptious.SplashFragment moved to com.example.scrumptious.SplashFragment",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.scrumptious.picker.GraphObjectAdapter moved to com.example.scrumptious.picker.GraphObjectAdapter",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.scrumptious.picker.GraphObjectCursor moved to com.example.scrumptious.picker.GraphObjectCursor",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.scrumptious.picker.GraphObjectPagingLoader moved to com.example.scrumptious.picker.GraphObjectPagingLoader",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.scrumptious.usersettings.UserSettingsFragment moved to com.example.scrumptious.usersettings.UserSettingsFragment",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.switchuser.SettingsFragment moved to com.example.switchuser.SettingsFragment",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.scrumptious.picker.PickerFragment moved to com.example.scrumptious.picker.PickerFragment",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.hellofacebook.HelloFacebookSampleActivity moved to com.example.hellofacebook.HelloFacebookSampleActivity",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.samples.switchuser.MainActivity moved to com.example.switchuser.MainActivity",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.scrumptious.picker.PlacePickerFragment moved to com.example.scrumptious.picker.PlacePickerFragment",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.scrumptious.picker.FriendPickerFragment moved to com.example.scrumptious.picker.FriendPickerFragment",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.iconicus.MainActivity moved to com.example.iconicus.MainActivity",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getAndroidIdViaService(context Context) : AttributionIdentifiers extracted from private getAndroidId(context Context) : AttributionIdentifiers in class com.facebook.internal.AttributionIdentifiers",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter uiName : String to contextName : String in method public AppEvent(contextName String, eventName String, valueToSum Double, parameters Bundle, isImplicitlyLogged boolean) from class com.facebook.appevents.AppEventsLogger.AppEvent",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute uiName : String to contextName : String in class com.facebook.appevents.AppEventsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getAndroidId(context Context) : AttributionIdentifiers renamed to private getAndroidIdViaReflection(context Context) : AttributionIdentifiers in class com.facebook.internal.AttributionIdentifiers",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public getParameters() : Bundle from class com.facebook.share.model.ShareMedia",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public setParameter(key String, value String) : B from class com.facebook.share.model.ShareMedia.Builder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public setParameters(parameters Bundle) : B from class com.facebook.share.model.ShareMedia.Builder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @Config(emulateSdk = 18, manifest = Config.NONE) to @Config(sdk = 18, manifest = Config.NONE) in class com.facebook.messenger.MessengerUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable logger : LoginLogger in method private getLoggerForContext(context Context) : LoginLogger from class com.facebook.login.LoginManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Attribute With Variable",
    "description" : "Replace Attribute With Variable loginLogger : LoginLogger to logger : LoginLogger in method private getLoggerForContext(context Context) : LoginLogger from class com.facebook.login.LoginManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Package",
    "description" : "Merge Package [com.facebook, com.facebook.samples] to com.example",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2914
}, {
  "id" : 1125334,
  "repository" : "https://github.com/killbill/killbill.git",
  "sha1" : "4b5b74b6467a28fb9b7712f8091e4aa61c2d64b6",
  "url" : "https://github.com/killbill/killbill/commit/4b5b74b6467a28fb9b7712f8091e4aa61c2d64b6",
  "author" : "Pierre-Alexandre Meyer",
  "time" : "6/26/15 8:14 AM",
  "refactorings" : [ {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute protected pluginControlledPaymentAutomatonRunner : PluginRoutingPaymentAutomatonRunner from class org.killbill.billing.payment.core.janitor.CompletionTaskBase to private pluginControlledPaymentAutomatonRunner : PluginRoutingPaymentAutomatonRunner from class org.killbill.billing.payment.core.janitor.IncompletePaymentAttemptTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public updatePaymentAndTransactionIfNeeded(payment PaymentModelDao, paymentTransaction PaymentTransactionModelDao, paymentTransactionInfoPlugin PaymentTransactionInfoPlugin, internalTenantContext InternalTenantContext) : boolean extracted from public doIteration(paymentTransaction PaymentTransactionModelDao) : void in class org.killbill.billing.payment.core.janitor.IncompletePaymentTransactionTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the nonMappeInner node cannot be justified. One if condition has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private findPaymentTransactionInfoPlugin(paymentTransactionModelDao PaymentTransactionModelDao, pluginTransactions Iterable<PaymentTransactionInfoPlugin>) : PaymentTransactionInfoPlugin extracted from private toPayment(curPaymentModelDao PaymentModelDao, transactionsModelDao Iterable<PaymentTransactionModelDao>, pluginTransactions Iterable<PaymentTransactionInfoPlugin>) : Payment in class org.killbill.billing.payment.core.PaymentProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute janitor : Janitor to isStopped : boolean in class org.killbill.billing.payment.core.janitor.CompletionTaskBase",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public updatePaymentAndTransactionIfNeeded(payment PaymentModelDao, paymentTransaction PaymentTransactionModelDao, paymentTransactionInfoPlugin PaymentTransactionInfoPlugin, internalTenantContext InternalTenantContext) : boolean in class org.killbill.billing.payment.core.janitor.IncompletePaymentTransactionTask",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Inject in method public IncompletePaymentAttemptTask(internalCallContextFactory InternalCallContextFactory, paymentConfig PaymentConfig, paymentDao PaymentDao, clock Clock, paymentStateMachineHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, accountInternalApi AccountInternalApi, pluginControlledPaymentAutomatonRunner PluginRoutingPaymentAutomatonRunner, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.IncompletePaymentAttemptTask",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Inject in method public IncompletePaymentTransactionTask(internalCallContextFactory InternalCallContextFactory, paymentConfig PaymentConfig, paymentDao PaymentDao, clock Clock, paymentStateMachineHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, accountInternalApi AccountInternalApi, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.IncompletePaymentTransactionTask",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter incompletePaymentTransactionTask : IncompletePaymentTransactionTask in method public PaymentProcessor(pluginRegistry OSGIServiceRegistration<PaymentPluginApi>, accountUserApi AccountInternalApi, invoiceApi InvoiceInternalApi, tagUserApi TagInternalApi, paymentDao PaymentDao, internalCallContextFactory InternalCallContextFactory, locker GlobalLocker, executor ExecutorService, paymentAutomatonRunner PaymentAutomatonRunner, incompletePaymentTransactionTask IncompletePaymentTransactionTask, clock Clock) from class org.killbill.billing.payment.core.PaymentProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter janitor : Janitor in method public CompletionTaskBase(janitor Janitor, internalCallContextFactory InternalCallContextFactory, paymentConfig PaymentConfig, paymentDao PaymentDao, clock Clock, paymentStateMachineHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, accountInternalApi AccountInternalApi, pluginControlledPaymentAutomatonRunner PluginRoutingPaymentAutomatonRunner, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.CompletionTaskBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pluginControlledPaymentAutomatonRunner : PluginRoutingPaymentAutomatonRunner in method public CompletionTaskBase(janitor Janitor, internalCallContextFactory InternalCallContextFactory, paymentConfig PaymentConfig, paymentDao PaymentDao, clock Clock, paymentStateMachineHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, accountInternalApi AccountInternalApi, pluginControlledPaymentAutomatonRunner PluginRoutingPaymentAutomatonRunner, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.CompletionTaskBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter janitor : Janitor in method public IncompletePaymentAttemptTask(janitor Janitor, internalCallContextFactory InternalCallContextFactory, paymentConfig PaymentConfig, paymentDao PaymentDao, clock Clock, paymentStateMachineHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, accountInternalApi AccountInternalApi, pluginControlledPaymentAutomatonRunner PluginRoutingPaymentAutomatonRunner, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.IncompletePaymentAttemptTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter janitor : Janitor in method public IncompletePaymentTransactionTask(janitor Janitor, internalCallContextFactory InternalCallContextFactory, paymentConfig PaymentConfig, paymentDao PaymentDao, clock Clock, paymentStateMachineHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, accountInternalApi AccountInternalApi, pluginControlledPaymentAutomatonRunner PluginRoutingPaymentAutomatonRunner, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.IncompletePaymentTransactionTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pluginControlledPaymentAutomatonRunner : PluginRoutingPaymentAutomatonRunner in method public IncompletePaymentTransactionTask(janitor Janitor, internalCallContextFactory InternalCallContextFactory, paymentConfig PaymentConfig, paymentDao PaymentDao, clock Clock, paymentStateMachineHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, accountInternalApi AccountInternalApi, pluginControlledPaymentAutomatonRunner PluginRoutingPaymentAutomatonRunner, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.IncompletePaymentTransactionTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private pluginControlledPaymentAutomatonRunner : PluginRoutingPaymentAutomatonRunner from class org.killbill.billing.payment.core.janitor.IncompletePaymentAttemptTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter internalTenantContext : InternalTenantContext in method private toPayment(curPaymentModelDao PaymentModelDao, curTransactionsModelDao Iterable<PaymentTransactionModelDao>, pluginTransactions Iterable<PaymentTransactionInfoPlugin>, internalTenantContext InternalTenantContext) : Payment from class org.killbill.billing.payment.core.PaymentProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter transactionsModelDao : Iterable<PaymentTransactionModelDao> to curTransactionsModelDao : Iterable<PaymentTransactionModelDao> in method private toPayment(curPaymentModelDao PaymentModelDao, curTransactionsModelDao Iterable<PaymentTransactionModelDao>, pluginTransactions Iterable<PaymentTransactionInfoPlugin>, internalTenantContext InternalTenantContext) : Payment from class org.killbill.billing.payment.core.PaymentProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter incompletePaymentAttemptTask : IncompletePaymentAttemptTask in method public Janitor(paymentConfig PaymentConfig, janitorExecutor ScheduledExecutorService, incompletePaymentAttemptTask IncompletePaymentAttemptTask, incompletePaymentTransactionTask IncompletePaymentTransactionTask) from class org.killbill.billing.payment.core.janitor.Janitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter incompletePaymentTransactionTask : IncompletePaymentTransactionTask in method public Janitor(paymentConfig PaymentConfig, janitorExecutor ScheduledExecutorService, incompletePaymentAttemptTask IncompletePaymentAttemptTask, incompletePaymentTransactionTask IncompletePaymentTransactionTask) from class org.killbill.billing.payment.core.janitor.Janitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter accountInternalApi : AccountInternalApi in method public Janitor(accountInternalApi AccountInternalApi, paymentDao PaymentDao, paymentConfig PaymentConfig, clock Clock, internalCallContextFactory InternalCallContextFactory, pluginControlledPaymentAutomatonRunner PluginRoutingPaymentAutomatonRunner, janitorExecutor ScheduledExecutorService, paymentSMHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.Janitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter paymentDao : PaymentDao in method public Janitor(accountInternalApi AccountInternalApi, paymentDao PaymentDao, paymentConfig PaymentConfig, clock Clock, internalCallContextFactory InternalCallContextFactory, pluginControlledPaymentAutomatonRunner PluginRoutingPaymentAutomatonRunner, janitorExecutor ScheduledExecutorService, paymentSMHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.Janitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter clock : Clock in method public Janitor(accountInternalApi AccountInternalApi, paymentDao PaymentDao, paymentConfig PaymentConfig, clock Clock, internalCallContextFactory InternalCallContextFactory, pluginControlledPaymentAutomatonRunner PluginRoutingPaymentAutomatonRunner, janitorExecutor ScheduledExecutorService, paymentSMHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.Janitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter internalCallContextFactory : InternalCallContextFactory in method public Janitor(accountInternalApi AccountInternalApi, paymentDao PaymentDao, paymentConfig PaymentConfig, clock Clock, internalCallContextFactory InternalCallContextFactory, pluginControlledPaymentAutomatonRunner PluginRoutingPaymentAutomatonRunner, janitorExecutor ScheduledExecutorService, paymentSMHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.Janitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pluginControlledPaymentAutomatonRunner : PluginRoutingPaymentAutomatonRunner in method public Janitor(accountInternalApi AccountInternalApi, paymentDao PaymentDao, paymentConfig PaymentConfig, clock Clock, internalCallContextFactory InternalCallContextFactory, pluginControlledPaymentAutomatonRunner PluginRoutingPaymentAutomatonRunner, janitorExecutor ScheduledExecutorService, paymentSMHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.Janitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter paymentSMHelper : PaymentStateMachineHelper in method public Janitor(accountInternalApi AccountInternalApi, paymentDao PaymentDao, paymentConfig PaymentConfig, clock Clock, internalCallContextFactory InternalCallContextFactory, pluginControlledPaymentAutomatonRunner PluginRoutingPaymentAutomatonRunner, janitorExecutor ScheduledExecutorService, paymentSMHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.Janitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter retrySMHelper : PaymentControlStateMachineHelper in method public Janitor(accountInternalApi AccountInternalApi, paymentDao PaymentDao, paymentConfig PaymentConfig, clock Clock, internalCallContextFactory InternalCallContextFactory, pluginControlledPaymentAutomatonRunner PluginRoutingPaymentAutomatonRunner, janitorExecutor ScheduledExecutorService, paymentSMHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.Janitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pluginRegistry : OSGIServiceRegistration<PaymentPluginApi> in method public Janitor(accountInternalApi AccountInternalApi, paymentDao PaymentDao, paymentConfig PaymentConfig, clock Clock, internalCallContextFactory InternalCallContextFactory, pluginControlledPaymentAutomatonRunner PluginRoutingPaymentAutomatonRunner, janitorExecutor ScheduledExecutorService, paymentSMHelper PaymentStateMachineHelper, retrySMHelper PaymentControlStateMachineHelper, pluginRegistry OSGIServiceRegistration<PaymentPluginApi>) from class org.killbill.billing.payment.core.janitor.Janitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.killbill.billing.payment.core.janitor.IncompletePaymentAttemptTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier final in class org.killbill.billing.payment.core.janitor.IncompletePaymentAttemptTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type transactions : Iterable<PaymentTransaction> to transactions : Collection<PaymentTransaction> in method private toPayment(curPaymentModelDao PaymentModelDao, curTransactionsModelDao Iterable<PaymentTransactionModelDao>, pluginTransactions Iterable<PaymentTransactionInfoPlugin>, internalTenantContext InternalTenantContext) : Payment from class org.killbill.billing.payment.core.PaymentProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1250
}, {
  "id" : 1125606,
  "repository" : "https://github.com/VoltDB/voltdb.git",
  "sha1" : "e58c9c3eef4c6e44b21a97cfbd2862bb2eb4627a",
  "url" : "https://github.com/VoltDB/voltdb/commit/e58c9c3eef4c6e44b21a97cfbd2862bb2eb4627a",
  "author" : "Bill White",
  "time" : "6/28/15 6:25 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public hasSize(size int) : SymbolTableAssert extracted from public isEmpty() : SymbolTableAssert in class org.voltdb.sqlparser.symtab.SymbolTableAssert",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the if condition has been changed"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public hasName(aTypeName String) : TypeAssert from class org.voltdb.sqlparser.matchers.TypeAssert to public hasName(aTypeName String) : TypeAssert from class org.voltdb.sqlparser.symtab.TypeAssert",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public hasNominalSize(aNominalSize int) : TypeAssert from class org.voltdb.sqlparser.matchers.TypeAssert to public hasNominalSize(aNominalSize int) : TypeAssert from class org.voltdb.sqlparser.symtab.TypeAssert",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public hasMaxSize(aMaxSize int) : TypeAssert from class org.voltdb.sqlparser.matchers.TypeAssert to public hasMaxSize(aMaxSize int) : TypeAssert from class org.voltdb.sqlparser.symtab.TypeAssert",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public definesType(aTypeName String) : TypeAssert from class org.voltdb.sqlparser.matchers.SymbolTableAssert to public definesType(aTypeName String) : TypeAssert from class org.voltdb.sqlparser.symtab.SymbolTableAssert",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter actual : Type to aActual : Type in method protected TypeAssert(aActual Type) from class org.voltdb.sqlparser.symtab.TypeAssert",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public assertThat(actual Type) : TypeAssert from class org.voltdb.sqlparser.symtab.TypeAssert to public assertThat(actual VoltXMLElement) : VoltXMLElementAssert from class org.hsqldb_voltpatches.VoltXMLElementAssert",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public TypeAssert(actual Type) renamed to public hasMaxSize(aMaxSize int) : TypeAssert in class org.voltdb.sqlparser.symtab.TypeAssert",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SafeVarargs in method public hasTableNamed(aTableName String, conditions Condition<Table>...) : CatalogAdapterAssert from class org.voltdb.sqlparser.symtab.CatalogAdapterAssert",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SafeVarargs in method public withColumnNamed(aColumnName String, conditions Condition<Column>...) : Condition<Table> from class org.voltdb.sqlparser.symtab.TableAssert",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected TypeAssert(aActual Type) from class org.voltdb.sqlparser.symtab.TypeAssert",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public hasTableNamed(aTableName String, conditions Condition<Table>...) : CatalogAdapterAssert from class org.voltdb.sqlparser.symtab.CatalogAdapterAssert",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public withColumnNamed(aColumnName String, conditions Condition<Column>...) : Condition<Table> from class org.voltdb.sqlparser.symtab.TableAssert",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1125661,
  "repository" : "https://github.com/datastax/java-driver.git",
  "sha1" : "9de5f0d408f861455716b8410fd53f62b360787d",
  "url" : "https://github.com/datastax/java-driver/commit/9de5f0d408f861455716b8410fd53f62b360787d",
  "author" : "Andrew Tolbert",
  "time" : "6/27/15 8:18 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method package sendRequest(reportNoMoreHosts boolean) : boolean extracted from package sendRequest() : void in class com.datastax.driver.core.RequestHandler.SpeculativeExecution",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected query(session Session) : ResultSet extracted from protected query() : ResultSet in class com.datastax.driver.core.policies.AbstractRetryPolicyIntegrationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private retry(retryCurrent boolean, newConsistencyLevel ConsistencyLevel, connection Connection, response Message.Response) : void extracted from private retry(retryCurrent boolean, newConsistencyLevel ConsistencyLevel) : void in class com.datastax.driver.core.RequestHandler.SpeculativeExecution",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method package sendRequest(reportNoMoreHosts boolean) : boolean in class com.datastax.driver.core.RequestHandler.SpeculativeExecution",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>void</span> <span class='pl-en'>sendRequest</span>()</span> still exists in child commit. boolean <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>sendRequest</span>(<span class='pl-k'>boolean</span> <span class='pl-v'>reportNoMoreHosts</span>) has been extracted from <span class='pl-en'>sendRequest</span>()</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1125721,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "8d7a26edd1fedb9505b4f2b4fe57b2d2958b4dd9",
  "url" : "https://github.com/JetBrains/intellij-community/commit/8d7a26edd1fedb9505b4f2b4fe57b2d2958b4dd9",
  "author" : "Kirill Likhodedov",
  "time" : "6/27/15 6:56 AM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private writeContentToFile(revision byte[]) : void inlined to private write(revision byte[]) : void in class com.intellij.openapi.vcs.history.FileHistoryPanelImpl.MyGetVersionAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable virtualFile : VirtualFile in method protected executeAction(e AnActionEvent) : void from class com.intellij.openapi.vcs.history.FileHistoryPanelImpl.MyGetVersionAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Nullable in method public getVirtualFile() : VirtualFile from class com.intellij.openapi.vcs.history.FileHistoryPanelImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 18389
}, {
  "id" : 1126206,
  "repository" : "https://github.com/QuantumBadger/RedReader.git",
  "sha1" : "51b8b0e1ad4be1b137d67774eab28dc0ef52cb0a",
  "url" : "https://github.com/QuantumBadger/RedReader/commit/51b8b0e1ad4be1b137d67774eab28dc0ef52cb0a",
  "author" : "QuantumBadger",
  "time" : "6/28/15 5:50 PM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public onSharedPreferenceChanged(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.MainActivity to protected onSharedPreferenceChangedInner(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.RefreshableActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.CommentListingActivity to protected onDestroy() : void from class org.quantumbadger.redreader.activities.BaseActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.MoreCommentsListingActivity to protected onDestroy() : void from class org.quantumbadger.redreader.activities.BaseActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.MainActivity to protected onDestroy() : void from class org.quantumbadger.redreader.activities.BaseActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.PostListingActivity to protected onDestroy() : void from class org.quantumbadger.redreader.activities.BaseActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type activity : Activity to activity : BaseActivity in method private addSubscriptionItem(activity BaseActivity, menu Menu, subredditSubscriptionState RedditSubredditSubscriptionManager.SubredditSubscriptionState) : void from class org.quantumbadger.redreader.activities.OptionsMenuUtility",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type activity : Activity to activity : BaseActivity in method private add(activity BaseActivity, menu Menu, option Option, longText boolean) : void from class org.quantumbadger.redreader.activities.OptionsMenuUtility",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public onSharedPreferenceChanged(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.PostListingActivity to public onSharedPreferenceChanged(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.BaseActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public onSharedPreferenceChanged(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.CommentListingActivity to public onSharedPreferenceChanged(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.BaseActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public onSharedPreferenceChanged(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.MoreCommentsListingActivity to public onSharedPreferenceChanged(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.BaseActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public onSharedPreferenceChanged(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.MainActivity to public onSharedPreferenceChanged(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.BaseActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.MainActivity to protected onDestroy() : void from class org.quantumbadger.redreader.settings.SettingsActivity",
    "comment" : "<p>Pull Up Method</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.CommentListingActivity to protected onDestroy() : void from class org.quantumbadger.redreader.settings.SettingsActivity",
    "comment" : "<p>Pull Up Method</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.PostListingActivity to protected onDestroy() : void from class org.quantumbadger.redreader.settings.SettingsActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.MoreCommentsListingActivity to protected onDestroy() : void from class org.quantumbadger.redreader.settings.SettingsActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected onResume() : void renamed to protected onDestroy() : void in class org.quantumbadger.redreader.settings.SettingsActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected onSharedPreferenceChangedInner(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.RefreshableActivity",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected onSharedPreferenceChangedInner(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.RefreshableActivity",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.quantumbadger.redreader.fragments.MainMenuFragment.MainMenuAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.quantumbadger.redreader.fragments.MainMenuFragment.MainMenuUserItems",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 995
}, {
  "id" : 1126248,
  "repository" : "https://github.com/cbeust/testng.git",
  "sha1" : "b5cf7a0252c8b0465c4dbd906717f7a12e26e6f8",
  "url" : "https://github.com/cbeust/testng/commit/b5cf7a0252c8b0465c4dbd906717f7a12e26e6f8",
  "author" : "Julien Herr",
  "time" : "6/27/15 6:02 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class test.testng234.ParentTest moved to test.inheritance.testng234.ParentTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class test.testng234.PolymorphicFailureTest moved to test.inheritance.testng234.PolymorphicFailureTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class test.testng234.ChildTest moved to test.inheritance.testng234.ChildTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1126375,
  "repository" : "https://github.com/spring-projects/spring-data-jpa.git",
  "sha1" : "c13f3469e1d64ec97b11f0509e45f9c3fa8ff88a",
  "url" : "https://github.com/spring-projects/spring-data-jpa/commit/c13f3469e1d64ec97b11f0509e45f9c3fa8ff88a",
  "author" : "Oliver Gierke",
  "time" : "6/29/15 7:28 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected getCountQuery(spec Specification<T>, mode QueryMode) : TypedQuery<Long> extracted from protected getCountQuery(spec Specification<T>) : TypedQuery<Long> in class org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type query : Query to query : Q in method private applyQueryHints(query Q) : Q from class org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type entityInformation : JpaEntityInformation<T,?> to entityInformation : JpaEntityInformation<T,ID> in method public CustomJpaRepository(entityInformation JpaEntityInformation<T,ID>, entityManager EntityManager) from class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryUnitTests.CustomJpaRepository",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to Q in method private applyQueryHints(query Q) : Q from class org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type repo : SimpleJpaRepository<User,Integer> to repo : SimpleJpaRepository<User,Long> in class org.springframework.data.jpa.repository.support.SimpleJpaRepositoryUnitTests",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type id : Integer to id : Long in method public shouldPropagateConfiguredEntityGraphToFindOne() : void from class org.springframework.data.jpa.repository.support.SimpleJpaRepositoryUnitTests",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable countQuery : String to typedQuery : TypedQuery<T> in method public findOne(id ID) : T in class org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public SimpleJpaRepository(domainClass Class<T>, em EntityManager) from class org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1126459,
  "repository" : "https://github.com/ratpack/ratpack.git",
  "sha1" : "2581441eda268c45306423dd4c515514d98a14a0",
  "url" : "https://github.com/ratpack/ratpack/commit/2581441eda268c45306423dd4c515514d98a14a0",
  "author" : "John Engelman",
  "time" : "6/28/15 12:21 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class ratpack.jackson.JacksonModule moved to ratpack.jackson.guice.JacksonModule",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1137
}, {
  "id" : 1126550,
  "repository" : "https://github.com/deeplearning4j/deeplearning4j.git",
  "sha1" : "d4992887291cc0a7eeda87ad547fa9e1e7fda41c",
  "url" : "https://github.com/deeplearning4j/deeplearning4j/commit/d4992887291cc0a7eeda87ad547fa9e1e7fda41c",
  "author" : "Adam Gibson",
  "time" : "6/27/15 2:38 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public output(x INDArray, test boolean) : INDArray extracted from public output(x INDArray) : INDArray in class org.deeplearning4j.nn.layers.OutputLayer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the code inside the extra if condition will be executed according to the arguments. So, this makes the refactoring impure."
    }
  } ],
  "refDiffExecutionTime" : 1408
}, {
  "id" : 1126576,
  "repository" : "https://github.com/apache/zookeeper.git",
  "sha1" : "3fd77b419673ce6ec41e06cdc27558b1d8f4ca06",
  "url" : "https://github.com/apache/zookeeper/commit/3fd77b419673ce6ec41e06cdc27558b1d8f4ca06",
  "author" : "Raúl Gutiérrez Segalés",
  "time" : "6/28/15 4:09 PM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.NIOServerCnxn to public cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.NettyServerCnxn to public cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.apache.zookeeper.server.command.FourLetterCommands from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected consCmd : int from class org.apache.zookeeper.server.ServerCnxn to public consCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected wchcCmd : int from class org.apache.zookeeper.server.ServerCnxn to public wchcCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected dumpCmd : int from class org.apache.zookeeper.server.ServerCnxn to public dumpCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected getTraceMaskCmd : int from class org.apache.zookeeper.server.ServerCnxn to public getTraceMaskCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected setTraceMaskCmd : int from class org.apache.zookeeper.server.ServerCnxn to public setTraceMaskCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected wchsCmd : int from class org.apache.zookeeper.server.ServerCnxn to public wchsCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected cmd2String : HashMap<Integer,String> from class org.apache.zookeeper.server.ServerCnxn to public cmd2String : HashMap<Integer,String> from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected srstCmd : int from class org.apache.zookeeper.server.ServerCnxn to public srstCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected enviCmd : int from class org.apache.zookeeper.server.ServerCnxn to public enviCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected ruokCmd : int from class org.apache.zookeeper.server.ServerCnxn to public ruokCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected wchpCmd : int from class org.apache.zookeeper.server.ServerCnxn to public wchpCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected srvrCmd : int from class org.apache.zookeeper.server.ServerCnxn to public srvrCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected confCmd : int from class org.apache.zookeeper.server.ServerCnxn to public confCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected statCmd : int from class org.apache.zookeeper.server.ServerCnxn to public statCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected mntrCmd : int from class org.apache.zookeeper.server.ServerCnxn to public mntrCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected isroCmd : int from class org.apache.zookeeper.server.ServerCnxn to public isroCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected crstCmd : int from class org.apache.zookeeper.server.ServerCnxn to public crstCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected telnetCloseCmd : int from class org.apache.zookeeper.server.ServerCnxn to public telnetCloseCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private ZK_NOT_SERVING : String from class org.apache.zookeeper.server.NIOServerCnxn to protected ZK_NOT_SERVING : String from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private ZK_NOT_SERVING : String from class org.apache.zookeeper.server.NettyServerCnxn to protected ZK_NOT_SERVING : String from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.ConsCommand moved to org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.StatResetCommand moved to org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.RuokCommand moved to org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.TraceMaskCommand moved to org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.ConfCommand moved to org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.DumpCommand moved to org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.IsroCommand moved to org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.CnxnStatResetCommand moved to org.apache.zookeeper.server.command.CnxnStatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.EnvCommand moved to org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.MonitorCommand moved to org.apache.zookeeper.server.command.MonitorCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cons : ConsCommand to commandExecutor : CommandExecutor in method private checkFourLetterWord(k SelectionKey, len int) : boolean in class org.apache.zookeeper.server.NIOServerCnxn",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cons : ConsCommand to commandExecutor : CommandExecutor in method private checkFourLetterWord(channel Channel, message ChannelBuffer, len int) : boolean in class org.apache.zookeeper.server.NettyServerCnxn",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.CnxnStatResetCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.StatResetCommand to public commandRun() : void from class org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.EnvCommand to public commandRun() : void from class org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.TraceMaskCommand to public commandRun() : void from class org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.StatCommand to public commandRun() : void from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.ConfCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.WatchCommand to public commandRun() : void from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.ConsCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.IsroCommand to public commandRun() : void from class org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.CnxnStatResetCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.RuokCommand to public commandRun() : void from class org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public run() : void from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to public run() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.DumpCommand to public commandRun() : void from class org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.SetTraceMaskCommand to public commandRun() : void from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public start() : void from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to public start() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.IsroCommand to public commandRun() : void from class org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.ConfCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.EnvCommand to public commandRun() : void from class org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.ConsCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public start() : void from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to public start() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.StatCommand to public commandRun() : void from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.WatchCommand to public commandRun() : void from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public run() : void from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to public run() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.SetTraceMaskCommand to public commandRun() : void from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.TraceMaskCommand to public commandRun() : void from class org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.RuokCommand to public commandRun() : void from class org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.DumpCommand to public commandRun() : void from class org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.StatResetCommand to public commandRun() : void from class org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package len : int from class org.apache.zookeeper.server.NIOServerCnxn.StatCommand to private len : int from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package trace : long from class org.apache.zookeeper.server.NIOServerCnxn.SetTraceMaskCommand to package trace : long from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package pw : PrintWriter from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to protected pw : PrintWriter from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package len : int from class org.apache.zookeeper.server.NIOServerCnxn.WatchCommand to package len : int from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package pw : PrintWriter from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to protected pw : PrintWriter from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package len : int from class org.apache.zookeeper.server.NettyServerCnxn.StatCommand to private len : int from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package len : int from class org.apache.zookeeper.server.NettyServerCnxn.WatchCommand to package len : int from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package trace : long from class org.apache.zookeeper.server.NettyServerCnxn.SetTraceMaskCommand to package trace : long from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public execute(serverCnxn ServerCnxn, pwriter PrintWriter, commandCode int, zkServer ZooKeeperServer, factory ServerCnxnFactory) : boolean extracted from private checkFourLetterWord(k SelectionKey, len int) : boolean in class org.apache.zookeeper.server.NIOServerCnxn & moved to class org.apache.zookeeper.server.command.CommandExecutor",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public execute(serverCnxn ServerCnxn, pwriter PrintWriter, commandCode int, zkServer ZooKeeperServer, factory ServerCnxnFactory) : boolean extracted from private checkFourLetterWord(channel Channel, message ChannelBuffer, len int) : boolean in class org.apache.zookeeper.server.NettyServerCnxn & moved to class org.apache.zookeeper.server.command.CommandExecutor",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.StatCommand moved to org.apache.zookeeper.server.command.StatCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.SetTraceMaskCommand moved to org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.WatchCommand moved to org.apache.zookeeper.server.command.WatchCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.zookeeper.server.NettyServerCnxn.CommandThread moved and renamed to org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.StatCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.ConsCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public RuokCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method package TraceMaskCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public SetTraceMaskCommand(pw PrintWriter, serverCnxn ServerCnxn, trace long) from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method package EnvCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method package ConfCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public StatResetCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public CnxnStatResetCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.CnxnStatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public DumpCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public StatCommand(pw PrintWriter, serverCnxn ServerCnxn, len int) from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public ConsCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public WatchCommand(pw PrintWriter, serverCnxn ServerCnxn, len int) from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method package MonitorCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.MonitorCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public IsroCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public AbstractFourLetterCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to public in method public dumpConnectionInfo(pwriter PrintWriter, brief boolean) : void from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public SetTraceMaskCommand(pw PrintWriter, serverCnxn ServerCnxn, trace long) from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public AbstractFourLetterCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to private in attribute private len : int from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to protected in attribute protected pw : PrintWriter from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.CnxnStatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.MonitorCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public confCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public consCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public crstCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public dumpCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public enviCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public getTraceMaskCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public ruokCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public setTraceMaskCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public srvrCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public srstCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public statCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public wchcCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public wchpCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public wchsCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public mntrCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public isroCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public telnetCloseCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public cmd2String : HashMap<Integer,String> from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Class",
    "description" : "Merge Class [org.apache.zookeeper.server.NIOServerCnxn.CommandThread, org.apache.zookeeper.server.NettyServerCnxn.CommandThread] merged to org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public abstract commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to public abstract commandRun() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public abstract commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to public abstract commandRun() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method package CommandThread(pw PrintWriter) from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to public AbstractFourLetterCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method package CommandThread(pw PrintWriter) from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to public AbstractFourLetterCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1126591,
  "repository" : "https://github.com/AntennaPod/AntennaPod.git",
  "sha1" : "c64217e2b485f3c6b997a55b1ef910c8b72779d3",
  "url" : "https://github.com/AntennaPod/AntennaPod/commit/c64217e2b485f3c6b997a55b1ef910c8b72779d3",
  "author" : "Martin Fietz",
  "time" : "6/27/15 1:01 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public addQueueItem(context Context, performAutoDownload boolean, itemIds long...) : Future<?> extracted from public addQueueItem(context Context, itemIds long...) : Future<?> in class de.danoeh.antennapod.core.storage.DBWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the code inside the if condition will be executed according to the arguments. So, this makes the refactoring impure."
    }
  } ],
  "refDiffExecutionTime" : 827
}, {
  "id" : 1126709,
  "repository" : "https://github.com/gradle/gradle.git",
  "sha1" : "79c66ceab11dae0b9fd1dade7bb4120028738705",
  "url" : "https://github.com/gradle/gradle/commit/79c66ceab11dae0b9fd1dade7bb4120028738705",
  "author" : "Lorant Pinter",
  "time" : "6/29/15 5:34 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public getInputs() : Set<LanguageSourceSet> extracted from public getAllSources() : Set<LanguageSourceSet> in class org.gradle.platform.base.binary.BaseBinarySpec",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAllSources() : Set<LanguageSourceSet> renamed to public getInputs() : Set<LanguageSourceSet> in class org.gradle.nativeplatform.test.internal.DefaultNativeTestSuiteBinarySpec",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAllSources() : Set<LanguageSourceSet> renamed to public getInputs() : Set<LanguageSourceSet> in class org.gradle.platform.base.binary.BaseBinarySpec",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public getAllSources() : Set<LanguageSourceSet> from class org.gradle.platform.base.internal.BinarySpecInternal",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1126720,
  "repository" : "https://github.com/gradle/gradle.git",
  "sha1" : "0e7345a9c10863dca9217ad902b825db50fed01f",
  "url" : "https://github.com/gradle/gradle/commit/0e7345a9c10863dca9217ad902b825db50fed01f",
  "author" : "Lari Hotari",
  "time" : "6/28/15 8:10 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getConfiguration() : Configuration extracted from package getFileCollection() : FileCollection in class org.gradle.play.plugins.PlayPluginConfigurations.PlayConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type files : Collection<File> to files : Iterable<File> in method public SimpleFileCollection(files Iterable<File>) from class org.gradle.api.internal.file.collections.SimpleFileCollection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type classpath : FileCollection to classpath : Iterable<File> in method public setClasspath(classpath Iterable<File>) : void from class org.gradle.play.internal.DefaultPlayApplicationBinarySpec",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type classpath : FileCollection to classpath : Iterable<File> in method public DefaultPlayRunSpec(classpath Iterable<File>, changingClasspath Iterable<File>, applicationJar File, assetsJar File, assetsDirs Iterable<File>, projectPath File, forkOptions BaseForkOptions, httpPort int) from class org.gradle.play.internal.run.DefaultPlayRunSpec",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type runtimeClasspath : FileCollection to runtimeClasspath : Iterable<File> in method public setRuntimeClasspath(runtimeClasspath Iterable<File>) : void from class org.gradle.play.tasks.PlayRun",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type applicationClasspath : FileCollection to applicationClasspath : Iterable<File> in method public setClasspath(applicationClasspath Iterable<File>) : void from class org.gradle.play.internal.PlayApplicationBinarySpecInternal",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type FileCollection to Iterable<File> in method public getClasspath() : Iterable<File> from class org.gradle.play.internal.DefaultPlayApplicationBinarySpec",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type FileCollection to Iterable<File> in method public getClasspath() : Iterable<File> from class org.gradle.play.internal.PlayApplicationBinarySpecInternal",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type classpath : FileCollection to classpath : Iterable<File> in class org.gradle.play.internal.DefaultPlayApplicationBinarySpec",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type runtimeClasspath : FileCollection to runtimeClasspath : Iterable<File> in class org.gradle.play.tasks.PlayRun",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type files : Collection<File> to files : Iterable<File> in method public ListBackedFileSet(files Iterable<File>) from class org.gradle.api.internal.file.collections.ListBackedFileSet",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter changingClasspath : Iterable<File> in method public DefaultPlayRunSpec(classpath Iterable<File>, changingClasspath Iterable<File>, applicationJar File, assetsJar File, assetsDirs Iterable<File>, projectPath File, forkOptions BaseForkOptions, httpPort int) from class org.gradle.play.internal.run.DefaultPlayRunSpec",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter changingClasspath : Iterable<File> in method public getBuildLink(classLoader ClassLoader, projectPath File, applicationJar File, changingClasspath Iterable<File>, assetsJar File, assetsDirs Iterable<File>) : Object from class org.gradle.play.internal.run.DefaultVersionedPlayRunAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter changingClasspath : Iterable<File> in method public getBuildLink(classLoader ClassLoader, projectPath File, applicationJar File, changingClasspath Iterable<File>, assetsJar File, assetsDirs Iterable<File>) : Object from class org.gradle.play.internal.run.VersionedPlayRunAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1127199,
  "repository" : "https://github.com/koush/AndroidAsync.git",
  "sha1" : "1bc7905b07821f840068089343e6b77a8686d1ab",
  "url" : "https://github.com/koush/AndroidAsync/commit/1bc7905b07821f840068089343e6b77a8686d1ab",
  "author" : "Koushik Dutta",
  "time" : "6/28/15 6:25 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private terminate() : void extracted from protected report(e Exception) : void in class com.koushikdutta.async.http.AsyncHttpResponseImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package spewInternal() : void renamed to package sendCachedDataOnNetworkThread() : void in class com.koushikdutta.async.http.cache.ResponseCacheMiddleware.CachedBodyEmitter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package spew() : void renamed to package sendCachedData() : void in class com.koushikdutta.async.http.cache.ResponseCacheMiddleware.CachedBodyEmitter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute spewRunnable : Runnable to sendCachedDataRunnable : Runnable in class com.koushikdutta.async.http.cache.ResponseCacheMiddleware.CachedBodyEmitter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 570
}, {
  "id" : 1127268,
  "repository" : "https://github.com/apache/hive.git",
  "sha1" : "102b23b16bf26cbf439009b4b95542490a082710",
  "url" : "https://github.com/apache/hive/commit/102b23b16bf26cbf439009b4b95542490a082710",
  "author" : "Ferdinand Xu",
  "time" : "6/28/15 9:42 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private executeInternal(sql String, call boolean) : boolean extracted from private execute(line String, call boolean, entireLineAsCommand boolean) : boolean in class org.apache.hive.beeline.Commands",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "null check has been added. So, it's an impure extract method"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getFirstCmd(cmd String, length int) : String from class org.apache.hive.beeline.BeeLine to private getFirstCmd(cmd String, length int) : String from class org.apache.hive.beeline.Commands",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public handleMultiLineCmd(line String) : String extracted from private execute(line String, call boolean, entireLineAsCommand boolean) : boolean in class org.apache.hive.beeline.Commands",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private sourceFile(cmd String) : boolean from class org.apache.hive.beeline.BeeLine to private sourceFile(cmd String) : boolean from class org.apache.hive.beeline.Commands",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private cliToBeelineCmd(cmd String) : String from class org.apache.hive.beeline.BeeLine to private cliToBeelineCmd(cmd String) : String from class org.apache.hive.beeline.Commands",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private isSourceCMD(cmd String) : boolean from class org.apache.hive.beeline.BeeLine to private isSourceCMD(cmd String) : boolean from class org.apache.hive.beeline.Commands",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.hadoop.hive.ql.parse.VariableSubstitution moved to org.apache.hadoop.hive.conf.VariableSubstitution",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public substitute(conf HiveConf, expr String) : String from class org.apache.hadoop.hive.ql.parse.VariableSubstitution to public substitute(conf HiveConf, expr String) : String from class org.apache.hadoop.hive.conf.VariableSubstitution",
    "comment" : "it is a rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected getSubstitute(conf Configuration, var String) : String from class org.apache.hadoop.hive.ql.parse.VariableSubstitution to protected getSubstitute(conf Configuration, var String) : String from class org.apache.hadoop.hive.conf.VariableSubstitution",
    "comment" : "it is a rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private tokenizeCmd(cmd String) : String[] extracted from private cliToBeelineCmd(cmd String) : String in class org.apache.hive.beeline.BeeLine & moved to class org.apache.hive.beeline.Commands",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private l4j : Log from class org.apache.hadoop.hive.ql.parse.VariableSubstitution to private l4j : Log from class org.apache.hadoop.hive.conf.VariableSubstitution",
    "comment" : "it is a rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public setBeeLine(isBeeLine boolean) : void in class org.apache.hive.beeline.BeeLine",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private isSourceCMD(cmd String) : boolean renamed to public isBeeLine() : boolean in class org.apache.hive.beeline.BeeLine",
    "comment" : "<p>Move Method private isSourceCMD(cmd String) : boolean from class org.apache.hive.beeline.BeeLine to private isSourceCMD(cmd String) : boolean from class org.apache.hive.beeline.Commands</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private sourceFile(cmd String) : boolean renamed to public setBeeLine(isBeeLine boolean) : void in class org.apache.hive.beeline.BeeLine",
    "comment" : "<p>Move Method private sourceFile(cmd String) : boolean from class org.apache.hive.beeline.BeeLine to private sourceFile(cmd String) : boolean from class org.apache.hive.beeline.Commands</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private execute(line String, call boolean, entireLineAsCommand boolean) : boolean renamed to private executeInternal(sql String, call boolean) : boolean in class org.apache.hive.beeline.Commands",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter isSourceCMD : boolean in method private executeFile(fileName String, isSourceCMD boolean) : int from class org.apache.hive.beeline.BeeLine",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private isBeeLine : boolean from class org.apache.hive.beeline.BeeLine",
    "comment" : "<p>public boolean isBeeLine()<br />called in method<br />private String substituteVariables(HiveConf conf, String line)<br />beeline/src/java/org/apache/hive/beeline/Commands.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : IOException to e : Throwable in method private executeCMD(args String[], input String, retCode int) : void from class org.apache.hive.beeline.cli.TestHiveCli",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 5292
}, {
  "id" : 1127274,
  "repository" : "https://github.com/apache/hive.git",
  "sha1" : "7eb3567e7880511b76b8b65e8eb7d373927f2fb6",
  "url" : "https://github.com/apache/hive/commit/7eb3567e7880511b76b8b65e8eb7d373927f2fb6",
  "author" : "Swarnim Kulkarni",
  "time" : "6/27/15 8:33 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private unionTester(ws Schema, rs Schema, record GenericData.Record) : ResultPair extracted from private unionTester(s Schema, record GenericData.Record) : ResultPair in class org.apache.hadoop.hive.serde2.avro.TestAvroDeserializer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename variable on top of the extracted method. Pure!"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter s : Schema to ws : Schema in method private unionTester(ws Schema, rs Schema, record GenericData.Record) : ResultPair from class org.apache.hadoop.hive.serde2.avro.TestAvroDeserializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter s : Schema to ws : Schema in method private unionTester(ws Schema, record GenericData.Record) : ResultPair from class org.apache.hadoop.hive.serde2.avro.TestAvroDeserializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable tag : int to rsTag : int in method private deserializeUnion(datum Object, fileSchema Schema, recordSchema Schema, columnType UnionTypeInfo) : Object from class org.apache.hadoop.hive.serde2.avro.AvroDeserializer",
    "comment" : "<p>tag is replaced with both <span class='blob-code-inner blob-code-marker' data-code-marker=' '>fsTag</span> and rsTag, but tag -&gt; rsTag is more common</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3223
}, {
  "id" : 1127383,
  "repository" : "https://github.com/spring-projects/spring-boot.git",
  "sha1" : "1e464da2480568014a87dd0bac6febe63a76c889",
  "url" : "https://github.com/spring-projects/spring-boot/commit/1e464da2480568014a87dd0bac6febe63a76c889",
  "author" : "Dave Syer",
  "time" : "6/30/15 5:42 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private CLASSPATH_RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to private CLASSPATH_RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setResourceLoader(resourceLoader ResourceLoader) : void from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration to public setResourceLoader(resourceLoader ResourceLoader) : void from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to private RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private addStaticIndexHtmlViewControllers(registry ViewControllerRegistry) : void inlined to public addViewControllers(registry ViewControllerRegistry) : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_INDEX_HTML_RESOURCES : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to private STATIC_INDEX_HTML_RESOURCES : String[] from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private resourceLoader : ResourceLoader from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration to private resourceLoader : ResourceLoader from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private SERVLET_RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to private SERVLET_RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getCorsConfiguration(properties EndpointCorsProperties) : CorsConfiguration from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to private getCorsConfiguration(properties EndpointCorsProperties) : CorsConfiguration from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public healthMvcEndpoint(delegate HealthEndpoint) : HealthMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public healthMvcEndpoint(delegate HealthEndpoint) : HealthMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public logfileMvcEndpoint() : LogFileMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public logfileMvcEndpoint() : LogFileMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public mvcEndpoints() : MvcEndpoints from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public mvcEndpoints() : MvcEndpoints from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public shutdownMvcEndpoint(delegate ShutdownEndpoint) : ShutdownMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public shutdownMvcEndpoint(delegate ShutdownEndpoint) : ShutdownMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public endpointHandlerMapping() : EndpointHandlerMapping from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public endpointHandlerMapping() : EndpointHandlerMapping from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getRequestMatcher() : RequestMatcher extracted from protected configure(http HttpSecurity) : void in class org.springframework.boot.actuate.autoconfigure.ManagementSecurityAutoConfiguration.ManagementWebSecurityConfigurerAdapter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private corsProperties : EndpointCorsProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to private corsProperties : EndpointCorsProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private healthMvcEndpointProperties : HealthMvcEndpointProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to private healthMvcEndpointProperties : HealthMvcEndpointProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private mappingCustomizers : List<EndpointHandlerMappingCustomizer> from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to private mappingCustomizers : List<EndpointHandlerMappingCustomizer> from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private mappingCustomizers : List<EndpointHandlerMappingCustomizer> from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.EndpointHandlerMappingConfiguration to private mappingCustomizers : List<EndpointHandlerMappingCustomizer> from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private managementServerProperties : ManagementServerProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to private managementServerProperties : ManagementServerProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter endpointPaths : String[] to permitAllMatcher : RequestMatcher in method private configureAuthorizeRequests(permitAllMatcher RequestMatcher, requests ExpressionUrlAuthorizationConfigurer<HttpSecurity>.ExpressionInterceptUrlRegistry) : void from class org.springframework.boot.actuate.autoconfigure.ManagementSecurityAutoConfiguration.ManagementWebSecurityConfigurerAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type endpointPaths : String[] to permitAllMatcher : RequestMatcher in method private configureAuthorizeRequests(permitAllMatcher RequestMatcher, requests ExpressionUrlAuthorizationConfigurer<HttpSecurity>.ExpressionInterceptUrlRegistry) : void from class org.springframework.boot.actuate.autoconfigure.ManagementSecurityAutoConfiguration.ManagementWebSecurityConfigurerAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter delegate : EnvironmentEndpoint to applicationContext : ApplicationContext in method public ManagementContextResolver(applicationContext ApplicationContext) in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration.ManagementContextResolver",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>ManagementContextResolver</span></span> is a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter delegate : MetricsEndpoint to applicationContext : ApplicationContext in method public setApplicationContext(applicationContext ApplicationContext) : void in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration.ManagementContextResolver",
    "comment" : "<p>ManagementContextResolver is a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter converters : HttpMessageConverters to request : HttpServletRequest in method public getHandler(request HttpServletRequest) : HandlerExecutionChain in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerMapping",
    "comment" : "<p>CompositeHandlerMapping is a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute mappingCustomizers : List<EndpointHandlerMappingCustomizer> to adapters : List<HandlerAdapter> in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerAdapter",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'>mappingCustomizers</span> attribute is deleted and the code using it is deleted too.</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable adapter : RequestMappingHandlerAdapter to list : List<HandlerMapping> in method private extractMappings() : List<HandlerMapping> in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerMapping",
    "comment" : "<p>CompositeHandlerMapping is a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable set : Set<MvcEndpoint> to list : List<HandlerAdapter> in method private extractAdapters() : List<HandlerAdapter> in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerAdapter",
    "comment" : "<p>CompositeHandlerAdapter is a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable customizer : EndpointHandlerMappingCustomizer to mapping : HandlerAdapter in method public handle(request HttpServletRequest, response HttpServletResponse, handler Object) : ModelAndView in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerAdapter",
    "comment" : "<p>CompositeHandlerAdapter is a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type delegate : EnvironmentEndpoint to applicationContext : ApplicationContext in method public ManagementContextResolver(applicationContext ApplicationContext) in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration.ManagementContextResolver",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type delegate : MetricsEndpoint to applicationContext : ApplicationContext in method public setApplicationContext(applicationContext ApplicationContext) : void in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration.ManagementContextResolver",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type converters : HttpMessageConverters to request : HttpServletRequest in method public getHandler(request HttpServletRequest) : HandlerExecutionChain in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerMapping",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type EndpointHandlerMapping to ManagementContextResolver in method public managementContextResolver() : ManagementContextResolver in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type mappingCustomizers : List<EndpointHandlerMappingCustomizer> to adapters : List<HandlerAdapter> in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerAdapter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type set : Set<MvcEndpoint> to list : List<HandlerAdapter> in method private extractAdapters() : List<HandlerAdapter> in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerAdapter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type customizer : EndpointHandlerMappingCustomizer to mapping : HandlerAdapter in method public handle(request HttpServletRequest, response HttpServletResponse, handler Object) : ModelAndView in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerAdapter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type resourceLoader : ResourceLoader to resourceProperties : ResourceProperties in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration",
    "comment" : "<p>The variables are not used in the same way in the code</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private getLocations() : List<Resource> from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration to public getFaviconLocations() : List<Resource> from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public mvcEndpoint() : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpointTests.TestConfiguration to public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public mvcEndpoint() : MetricsMvcEndpoint from class org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpointTests.TestConfiguration to public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private managementServerProperties : ManagementServerProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to private managementServerProperties : ManagementServerProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration",
    "comment" : "<p>The property is moved to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>org.springframework.boot.actuate.autoconfigure</span></span>.<span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>EndpointWebMvcConfiguration, which is extracted from org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration<br /></span></span></p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public endpointHandlerMapping() : EndpointHandlerMapping renamed to public managementContextResolver() : ManagementContextResolver in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @ConditionalOnBean(EnvironmentEndpoint.class) in method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "<p>due to&nbsp;Move And Rename Method public mvcEndpoint() : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpointTests.TestConfiguration to public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @ConditionalOnEnabledEndpoint(\"env\") in method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "<p>due to&nbsp;Move And Rename Method public mvcEndpoint() : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpointTests.TestConfiguration to public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @ConditionalOnBean(MetricsEndpoint.class) in method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "<p>due to&nbsp;Move And Rename Method public mvcEndpoint() : MetricsMvcEndpoint from class org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpointTests.TestConfiguration to public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @ConditionalOnEnabledEndpoint(\"metrics\") in method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "<p>due to&nbsp;Move And Rename Method public mvcEndpoint() : MetricsMvcEndpoint from class org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpointTests.TestConfiguration to public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Bean to @Bean(name = DispatcherServletAutoConfiguration.DEFAULT_DISPATCHER_SERVLET_BEAN_NAME) in method public dispatcherServlet() : DispatcherServlet from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Attribute Annotation",
    "description" : "Modify Attribute Annotation @Autowired to @Autowired(required = false) in attribute private server : ServerProperties from class org.springframework.boot.actuate.autoconfigure.ManagementSecurityAutoConfiguration.ManagementWebSecurityConfigurerAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @EnableConfigurationProperties({HealthMvcEndpointProperties.class,EndpointCorsProperties.class}) in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter delegate : EnvironmentEndpoint in method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter delegate : MetricsEndpoint in method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Bean(name = DispatcherServletAutoConfiguration.DEFAULT_DISPATCHER_SERVLET_BEAN_NAME) in method public dispatcherServlet() : DispatcherServlet from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @ConditionalOnBean(EnvironmentEndpoint) in method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @ConditionalOnEnabledEndpoint(\"env\") in method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @ConditionalOnBean(HealthEndpoint) in method public healthMvcEndpoint(delegate HealthEndpoint) : HealthMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @ConditionalOnEnabledEndpoint(\"health\") in method public healthMvcEndpoint(delegate HealthEndpoint) : HealthMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @ConditionalOnBean(MetricsEndpoint) in method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @ConditionalOnEnabledEndpoint(\"metrics\") in method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @ConditionalOnMissingBean in method public endpointHandlerMapping() : EndpointHandlerMapping from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Bean in method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Bean in method public healthMvcEndpoint(delegate HealthEndpoint) : HealthMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Bean in method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Bean in method public dispatcherServlet() : DispatcherServlet from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Autowired(required = false) in attribute private contextResolver : ManagementContextResolver from class org.springframework.boot.actuate.autoconfigure.ManagementSecurityAutoConfiguration.ManagementWebSecurityConfigurerAdapter",
    "comment" : "<p>new field</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Autowired in attribute private server : ServerProperties from class org.springframework.boot.actuate.autoconfigure.ManagementSecurityAutoConfiguration.ManagementWebSecurityConfigurerAdapter",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @Configuration(DispatcherServlet.HANDLER_ADAPTER_BEAN_NAME) in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerAdapter",
    "comment" : "<p>new inner class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public getFaviconLocations() : List<Resource> from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable managementContext : ApplicationContext in method public onDifferentPort() : void from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3535
}, {
  "id" : 1127493,
  "repository" : "https://github.com/rstudio/rstudio.git",
  "sha1" : "229d1b60c03a3f8375451c68a6911660a3993777",
  "url" : "https://github.com/rstudio/rstudio/commit/229d1b60c03a3f8375451c68a6911660a3993777",
  "author" : "Jonathan McPherson",
  "time" : "6/30/15 3:32 PM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method public checkForExistingApp(account RSConnectAccount, appName String, onValidated OperationWithInput<Boolean>) : void from class org.rstudio.studio.client.rsconnect.RSConnect to private checkForExistingApp(account RSConnectAccount, appName String, onValidated OperationWithInput<Boolean>) : void from class org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private fireValidatedRSconnectPublish(result RSConnectPublishResult, launchBrowser boolean) : void inlined to public fireRSConnectPublishEvent(result RSConnectPublishResult, launchBrowser boolean) : void in class org.rstudio.studio.client.rsconnect.RSConnect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private isUpdate() : boolean extracted from public getResult() : RSConnectPublishResult in class org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected validate(input T) : boolean renamed to protected validateAsync(input T, onValidated OperationWithInput<Boolean>) : void in class org.rstudio.core.client.widget.Wizard",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method protected validateAsync(input T, onValidated OperationWithInput<Boolean>) : void from class org.rstudio.core.client.widget.Wizard",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected validateAsync(input T, onValidated OperationWithInput<Boolean>) : void extracted from protected validate(input T) : boolean in class org.rstudio.core.client.widget.Wizard & moved to class org.rstudio.core.client.widget.WizardPage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method protected validateAsync(input RSConnectPublishResult, onValidated OperationWithInput<Boolean>) : void in class org.rstudio.studio.client.rsconnect.ui.PublishFilesPage",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public validateResult(onComplete OperationWithInput<Boolean>) : void in class org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isResultValid() : boolean renamed to public validateResult(onComplete OperationWithInput<Boolean>) : void in class org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy",
    "comment" : "<p>Only <span class='blob-code-inner blob-code-marker' data-code-marker='-'> appName_<span class='pl-k'>.</span>validateAppName()</span> is common between the methods. A lot of new functionality added.<br />All references are updated in the same way.<br />https://github.com/rstudio/rstudio/commit/229d1b60c03a3f8375451c68a6911660a3993777?diff=split#diff-517218cb2785a932f796f742f27b0305R108</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private fireValidatedRSconnectPublish(result RSConnectPublishResult, launchBrowser boolean) : void renamed to public fireRSConnectPublishEvent(result RSConnectPublishResult, launchBrowser boolean) : void in class org.rstudio.studio.client.rsconnect.RSConnect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected validate(input RSConnectPublishResult) : boolean renamed to protected validateAsync(input RSConnectPublishResult, onValidated OperationWithInput<Boolean>) : void in class org.rstudio.studio.client.rsconnect.ui.PublishFilesPage",
    "comment" : "<p>All references are updated in the same way<br />https://github.com/rstudio/rstudio/commit/229d1b60c03a3f8375451c68a6911660a3993777?diff=split#diff-abd8ea1b641bab4114d8b2f7ed9a335bR84</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter onValidated : OperationWithInput<Boolean> in method protected validateAsync(input T, onValidated OperationWithInput<Boolean>) : void from class org.rstudio.core.client.widget.Wizard",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public execute(input T) : void from class org.rstudio.core.client.widget.Wizard.Wizard.nextButton_.onClick.page",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private checkForExistingApp(account RSConnectAccount, appName String, onValidated OperationWithInput<Boolean>) : void from class org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter executeOnSuccess : Command in method protected validateAndGo(input T, executeOnSuccess Command) : void from class org.rstudio.core.client.widget.ModalDialog",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter result : RSConnectPublishResult in method public fireRSConnectPublishEvent(result RSConnectPublishResult, launchBrowser boolean) : void from class org.rstudio.studio.client.rsconnect.RSConnect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter launchBrowser : boolean in method public fireRSConnectPublishEvent(result RSConnectPublishResult, launchBrowser boolean) : void from class org.rstudio.studio.client.rsconnect.RSConnect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected validateAsync(input T, onValidated OperationWithInput<Boolean>) : void extracted from protected validateAndGo(input T, executeOnSuccess Command) : void in class org.rstudio.core.client.widget.ModalDialog",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter input : T in method public Wizard(caption String, okCaption String, initialData I, firstPage WizardPage<I,T>, operation ProgressOperationWithInput<T>) from class org.rstudio.core.client.widget.Wizard",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter input : T in method public onClick(arg0 ClickEvent) : void from class org.rstudio.core.client.widget.Wizard.Wizard.new ThemedButton.new ClickHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3785
}, {
  "id" : 1127907,
  "repository" : "https://github.com/facebook/presto.git",
  "sha1" : "364f50274d4b4b83d40930c0d2c4d0e57fb34589",
  "url" : "https://github.com/facebook/presto/commit/364f50274d4b4b83d40930c0d2c4d0e57fb34589",
  "author" : "Haozhun Jin",
  "time" : "6/30/15 12:08 AM",
  "refactorings" : [ {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass com.facebook.presto.PartitionedPagePartitionFunction from class com.facebook.presto.HashPagePartitionFunction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getPartitionHashBucket(partitionCount int, position int, page Page) : int renamed to public getPartitionBucket(partitionCount int, position int, page Page) : int in class com.facebook.presto.operator.HashGenerator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setHashPartitionedOutput(partitionKeys List<Symbol>, hash Optional<Symbol>) : FragmentProperties renamed to public setPartitionedOutput(partitionKeys Optional<List<Symbol>>, hash Optional<Symbol>) : FragmentProperties in class com.facebook.presto.sql.planner.PlanFragmenter.FragmentProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public createHashGenerator(hashChannel Optional<Integer>, partitioningChannels List<Integer>, types List<Type>) : HashGenerator from class com.facebook.presto.operator.HashGenerator to public createHashPartitionGenerator(hashChannel Optional<Integer>, partitioningChannels List<Integer>, types List<Type>) : PartitionGenerator from class com.facebook.presto.operator.PartitionGenerator",
    "comment" : "<p>Method createHashGenerator is pulled up to new super-interface PartitionGenerator extended by HashGenerator.<br />In addition, the method is renamed and the return type is changed to that of the super-interface PartitionGenerator.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable hashFunctions : List<HashPagePartitionFunction> to partitionFunctions : Collection<PagePartitionFunction> in method public PartitionFunction(sharedBuffer SharedBuffer, sourceTypes List<Type>, outputBuffers OutputBuffers) from class com.facebook.presto.operator.PartitionedOutputOperator.PartitionFunction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute hashGenerator : HashGenerator to partitionGenerator : PartitionGenerator in class com.facebook.presto.operator.PartitionedOutputOperator.PartitionFunction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getPartition() : int from class com.facebook.presto.HashPagePartitionFunction to public getPartition() : int from class com.facebook.presto.PartitionedPagePartitionFunction",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getPartitionCount() : int from class com.facebook.presto.HashPagePartitionFunction to public getPartitionCount() : int from class com.facebook.presto.PartitionedPagePartitionFunction",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private partitionCount : int from class com.facebook.presto.HashPagePartitionFunction to protected partitionCount : int from class com.facebook.presto.PartitionedPagePartitionFunction",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private partition : int from class com.facebook.presto.HashPagePartitionFunction to protected partition : int from class com.facebook.presto.PartitionedPagePartitionFunction",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type partitionBy : List<Symbol> to partitionBy : Optional<List<Symbol>> in method public PlanFragment(id PlanFragmentId, root PlanNode, symbols Map<Symbol,Type>, outputLayout List<Symbol>, distribution PlanDistribution, partitionedSource PlanNodeId, outputPartitioning OutputPartitioning, partitionBy Optional<List<Symbol>>, hash Optional<Symbol>) from class com.facebook.presto.sql.planner.PlanFragment",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type partitionKeys : List<Symbol> to partitionKeys : Optional<List<Symbol>> in method public setPartitionedOutput(partitionKeys Optional<List<Symbol>>, hash Optional<Symbol>) : FragmentProperties from class com.facebook.presto.sql.planner.PlanFragmenter.FragmentProperties",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type partitionKeys : List<Symbol> to partitionKeys : Optional<List<Symbol>> in method public ExchangeNode(id PlanNodeId, type Type, partitionKeys Optional<List<Symbol>>, hashSymbol Optional<Symbol>, sources List<PlanNode>, outputs List<Symbol>, inputs List<List<Symbol>>) from class com.facebook.presto.sql.planner.plan.ExchangeNode",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type partitionKeys : List<Symbol> to partitionKeys : Optional<List<Symbol>> in method public partitionedExchange(id PlanNodeId, child PlanNode, partitionKeys Optional<List<Symbol>>, hashSymbol Optional<Symbol>) : ExchangeNode from class com.facebook.presto.sql.planner.plan.ExchangeNode",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Integer> to Optional<List<Integer>> in method private getPartitioningChannels(fragment PlanFragment) : Optional<List<Integer>> from class com.facebook.presto.execution.SqlStageExecution",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Symbol> to Optional<List<Symbol>> in method public getPartitionBy() : Optional<List<Symbol>> from class com.facebook.presto.sql.planner.PlanFragment",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Symbol> to Optional<List<Symbol>> in method public getPartitionBy() : Optional<List<Symbol>> from class com.facebook.presto.sql.planner.PlanFragmenter.FragmentProperties",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Symbol> to Optional<List<Symbol>> in method public getPartitionKeys() : Optional<List<Symbol>> from class com.facebook.presto.sql.planner.plan.ExchangeNode",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type HashGenerator to PartitionGenerator in method public createHashPartitionGenerator(hashChannel Optional<Integer>, partitioningChannels List<Integer>, types List<Type>) : PartitionGenerator from class com.facebook.presto.operator.PartitionGenerator",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type hashFunctions : List<HashPagePartitionFunction> to partitionFunctions : Collection<PagePartitionFunction> in method public PartitionFunction(sharedBuffer SharedBuffer, sourceTypes List<Type>, outputBuffers OutputBuffers) from class com.facebook.presto.operator.PartitionedOutputOperator.PartitionFunction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type hashGenerator : HashGenerator to partitionGenerator : PartitionGenerator in class com.facebook.presto.operator.PartitionedOutputOperator.PartitionFunction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type partitionFunction : HashPagePartitionFunction to partitionFunction : PagePartitionFunction in method public PartitionFunction(sharedBuffer SharedBuffer, sourceTypes List<Type>, outputBuffers OutputBuffers) from class com.facebook.presto.operator.PartitionedOutputOperator.PartitionFunction",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type partitionBy : List<Symbol> to partitionBy : Optional<List<Symbol>> in class com.facebook.presto.sql.planner.PlanFragment",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type partitionBy : List<Symbol> to partitionBy : Optional<List<Symbol>> in class com.facebook.presto.sql.planner.PlanFragmenter.FragmentProperties",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type partitionKeys : List<Symbol> to partitionKeys : Optional<List<Symbol>> in class com.facebook.presto.sql.planner.plan.ExchangeNode",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package getPartitionHashBucket(partitionCount int, position int, page Page) : int renamed to package getPartitionBucket(partitionCount int, position int, page Page) : int in class com.facebook.presto.operator.HashGenerator",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method package createHashGenerator(hashChannel Optional<Integer>, partitioningChannels List<Integer>, types List<Type>) : HashGenerator from class com.facebook.presto.operator.HashGenerator to package createHashPartitionGenerator(hashChannel Optional<Integer>, partitioningChannels List<Integer>, types List<Type>) : PartitionGenerator from class com.facebook.presto.operator.PartitionGenerator",
    "comment" : "<p>is pull up</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getPartition() : int from class com.facebook.presto.PartitionedPagePartitionFunction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getPartitionCount() : int from class com.facebook.presto.PartitionedPagePartitionFunction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @JsonSubTypes({@JsonSubTypes.Type(value=UnpartitionedPagePartitionFunction.class,name=\"unpartitioned\"),@JsonSubTypes.Type(value=HashPagePartitionFunction.class,name=\"hash\")}) to @JsonSubTypes({@JsonSubTypes.Type(value=UnpartitionedPagePartitionFunction.class,name=\"unpartitioned\"),@JsonSubTypes.Type(value=PartitionedPagePartitionFunction.class,name=\"partitioned\"),@JsonSubTypes.Type(value=HashPagePartitionFunction.class,name=\"hash\")}) in class com.facebook.presto.PagePartitionFunction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable symbols : List<Symbol> in method public textDistributedPlan(plan SubPlan, metadata Metadata) : String from class com.facebook.presto.sql.planner.PlanPrinter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected partition : int from class com.facebook.presto.PartitionedPagePartitionFunction",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected partitionCount : int from class com.facebook.presto.PartitionedPagePartitionFunction",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3382
}, {
  "id" : 1129294,
  "repository" : "https://github.com/Activiti/Activiti.git",
  "sha1" : "53036cece662f9c796d2a187b0077059c3d9088a",
  "url" : "https://github.com/Activiti/Activiti/commit/53036cece662f9c796d2a187b0077059c3d9088a",
  "author" : "Tijs Rademakers",
  "time" : "6/30/15 9:29 AM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public isAsynchronous() : boolean from class org.activiti.bpmn.model.Activity to public isAsynchronous() : boolean from class org.activiti.bpmn.model.FlowNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public isAsynchronous() : boolean from class org.activiti.bpmn.model.Gateway to public isAsynchronous() : boolean from class org.activiti.bpmn.model.FlowNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public isNotExclusive() : boolean from class org.activiti.bpmn.model.Activity to public isNotExclusive() : boolean from class org.activiti.bpmn.model.FlowNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public isNotExclusive() : boolean from class org.activiti.bpmn.model.Gateway to public isNotExclusive() : boolean from class org.activiti.bpmn.model.FlowNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public setAsynchronous(asynchronous boolean) : void from class org.activiti.bpmn.model.Activity to public setAsynchronous(asynchronous boolean) : void from class org.activiti.bpmn.model.FlowNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public setAsynchronous(asynchronous boolean) : void from class org.activiti.bpmn.model.Gateway to public setAsynchronous(asynchronous boolean) : void from class org.activiti.bpmn.model.FlowNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected asynchronous : boolean from class org.activiti.bpmn.model.Activity to protected asynchronous : boolean from class org.activiti.bpmn.model.FlowNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected asynchronous : boolean from class org.activiti.bpmn.model.Gateway to protected asynchronous : boolean from class org.activiti.bpmn.model.FlowNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected notExclusive : boolean from class org.activiti.bpmn.model.Activity to protected notExclusive : boolean from class org.activiti.bpmn.model.FlowNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected notExclusive : boolean from class org.activiti.bpmn.model.Gateway to protected notExclusive : boolean from class org.activiti.bpmn.model.FlowNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public setNotExclusive(notExclusive boolean) : void from class org.activiti.bpmn.model.Activity to public setNotExclusive(notExclusive boolean) : void from class org.activiti.bpmn.model.FlowNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public setNotExclusive(notExclusive boolean) : void from class org.activiti.bpmn.model.Gateway to public setNotExclusive(notExclusive boolean) : void from class org.activiti.bpmn.model.FlowNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2715
}, {
  "id" : 1129493,
  "repository" : "https://github.com/FasterXML/jackson-databind.git",
  "sha1" : "cfe88fe3fbcc6b02ca55cee7b1f4ab13e249edea",
  "url" : "https://github.com/FasterXML/jackson-databind/commit/cfe88fe3fbcc6b02ca55cee7b1f4ab13e249edea",
  "author" : "lufe66",
  "time" : "6/30/15 10:35 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected classForName(name String) : Class<?> extracted from public findClass(className String) : Class<?> in class com.fasterxml.jackson.databind.type.TypeFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected classForName(name String, initialize boolean, loader ClassLoader) : Class<?> extracted from public findClass(className String) : Class<?> in class com.fasterxml.jackson.databind.type.TypeFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter className : String to name : String in method protected classForName(name String) : Class<?> from class com.fasterxml.jackson.databind.type.TypeFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter className : String to name : String in method protected classForName(name String, initialize boolean, loader ClassLoader) : Class<?> from class com.fasterxml.jackson.databind.type.TypeFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1039
}, {
  "id" : 1129517,
  "repository" : "https://github.com/droolsjbpm/jbpm.git",
  "sha1" : "83cfa21578e63956bca0715eefee2860c3b6d39a",
  "url" : "https://github.com/droolsjbpm/jbpm/commit/83cfa21578e63956bca0715eefee2860c3b6d39a",
  "author" : "Tibor Zimanyi",
  "time" : "6/30/15 7:05 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private prepareWorkItemWithTaskVariables(taskDescriptionParam String) : WorkItemImpl extracted from public testTaskWithVariables() : void in class org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the -Comment- parameter has been changed. Apart from that, we don't have access to the initilizer of the -taskDescriptionParam-"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private testTaskWithExpectedDescription(task Task, expectedDescription String) : void extracted from public testTaskWithVariables() : void in class org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Some method calls have been modified."
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable workItem : WorkItemImpl in method private prepareWorkItemWithTaskVariables(taskDescriptionParam String) : WorkItemImpl from class org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable manager : TestWorkItemManager in method public testTaskWithVariables() : void from class org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable tasks : List<TaskSummary> in method public testTaskWithVariables() : void from class org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable actualOwner : String in method public testTaskWithVariables() : void from class org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable task : Task in method public testTaskWithVariables() : void from class org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type task : TaskSummary to task : Task in method public testTaskWithVariables() : void from class org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable task : TaskSummary in method public testTaskWithVariables() : void from class org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest",
    "comment" : "<p>inlined to final Task task = taskService.getTaskById(tasks.get(0).getId());</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 821
}, {
  "id" : 1129518,
  "repository" : "https://github.com/droolsjbpm/jbpm.git",
  "sha1" : "a739d16d301f0e89ab0b9dfa56b4585bbad6b793",
  "url" : "https://github.com/droolsjbpm/jbpm/commit/a739d16d301f0e89ab0b9dfa56b4585bbad6b793",
  "author" : "Jan Hrcek",
  "time" : "6/30/15 6:06 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private createUser(id String) : User extracted from public testActivateFromIncorrectStatus() : void in class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "So far, it's impure because in the child version, an overloaded version of the newUser method has been used instead."
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private createUser(id String) : User extracted from public testForwardFromReserved() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
    "comment" : "<p>The method is extracted localy in LifeCycleBaseTest</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private createUser(id String) : User extracted from public testDelegateFromReserved() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
    "comment" : "<p>The method is extracted localy in LifeCycleBaseTest</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private createUser(id String) : User extracted from public testNominateOnOtherThanCreated() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
    "comment" : "<p>The method is extracted localy in LifeCycleBaseTest</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private createUser(id String) : User extracted from public testForwardFromReservedWithIncorrectUser() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
    "comment" : "<p>The method is extracted localy in LifeCycleBaseTest</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private createUser(id String) : User extracted from public testRemoveNotInRecipientList() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
    "comment" : "<p>The method is extracted localy in LifeCycleBaseTest</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private createUser(id String) : User extracted from public testNominateWithIncorrectUser() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
    "comment" : "<p>The method is extracted localy in LifeCycleBaseTest</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createUser(id String) : User extracted from public testNominateToUser() : void in class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private createUser(id String) : User extracted from public testDelegateFromReady() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
    "comment" : "<p>The method is extracted localy in LifeCycleBaseTest</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createUser(id String) : User extracted from public testCompleteWithComments() : void in class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private createUser(id String) : User extracted from public testDelegateFromReservedWithIncorrectUser() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
    "comment" : "<p>The method is extracted localy in LifeCycleBaseTest</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createUser(id String) : User extracted from public testForwardFromReserved() : void in class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createUser(id String) : User extracted from public testDelegateFromReserved() : void in class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createUser(id String) : User extracted from public testNominateOnOtherThanCreated() : void in class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createUser(id String) : User extracted from public testForwardFromReservedWithIncorrectUser() : void in class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createUser(id String) : User extracted from public testRemoveNotInRecipientList() : void in class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createUser(id String) : User extracted from public testNominateWithIncorrectUser() : void in class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createUser(id String) : User extracted from public testDelegateFromReady() : void in class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createUser(id String) : User extracted from public testDelegateFromReservedWithIncorrectUser() : void in class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter name : String to connectionRef : ConnectionRef in method public getConstraint(connectionRef ConnectionRef) : Constraint from class org.jbpm.workflow.core.node.StateNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable user : User to task : Task in method public testRemoveNotInRecipientList() : void in class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable user : User to task : Task in method public testNominateToUser() : void in class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable user : User to task : Task in method public testCompleteWithComments() : void in class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type name : String to connectionRef : ConnectionRef in method public getConstraint(connectionRef ConnectionRef) : Constraint from class org.jbpm.workflow.core.node.StateNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type sessionId : Integer to sessionId : Long in method public getTimerJobInstances(sessionId Long) : Collection<TimerJobInstance> from class org.jbpm.persistence.timer.GlobalJPATimerJobFactoryManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public testForwardFromReady() : void from class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public testSkipFromReady() : void from class org.jbpm.services.task.LifeCycleBaseTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1802
}, {
  "id" : 1129630,
  "repository" : "https://github.com/apache/cassandra.git",
  "sha1" : "35668435090eb47cf8c5e704243510b6cee35a7b",
  "url" : "https://github.com/apache/cassandra/commit/35668435090eb47cf8c5e704243510b6cee35a7b",
  "author" : "Aleksey Yeschenko",
  "time" : "6/30/15 9:04 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onCreateAggregate(ksName String, aggregateName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the two if statements which have been mapped, have changes that are not within the justifiable changes."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onCreateFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the two if statements which have been mapped, have changes that are not within the justifiable changes."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private onDropFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onDropAggregate(ksName String, aggregateName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private onDropFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onDropFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData extracted from public readSchemaFromSystemTables() : Collection<KSMetaData> in class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : "createKeyspaceFromSchemaPartitions exists in both revisions",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter udf : UDAggregate to uda : UDAggregate in method public updateAggregate(uda UDAggregate) : void from class org.apache.cassandra.config.Schema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter udf : UDAggregate to uda : UDAggregate in method public addAggregate(uda UDAggregate) : void from class org.apache.cassandra.config.Schema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter udf : UDAggregate to uda : UDAggregate in method public dropAggregate(uda UDAggregate) : void from class org.apache.cassandra.config.Schema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter aggregateName : String to functionName : String in method private onDropFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void from class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter aggregateName : String to functionName : String in method private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void from class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable references : List<Function> to referrers : Collection<UDAggregate> in method public announceMigration(isLocalOnly boolean) : boolean from class org.apache.cassandra.cql3.statements.DropFunctionStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type references : List<Function> to referrers : Collection<UDAggregate> in method public announceMigration(isLocalOnly boolean) : boolean from class org.apache.cassandra.cql3.statements.DropFunctionStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter fun : AbstractFunction to seriazliedAggregates : RowIterator in method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData in class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type fun : AbstractFunction to seriazliedAggregates : RowIterator in method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData in class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Collection<KSMetaData> to Collection<Function> in method public getFunctions(name FunctionName) : Collection<Function> in class org.apache.cassandra.config.Schema",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type olds : List<Function> to olds : Collection<Function> in method public announceMigration(isLocalOnly boolean) : boolean from class org.apache.cassandra.cql3.statements.DropAggregateStatement",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type olds : List<Function> to olds : Collection<Function> in method public validate(state ClientState) : void from class org.apache.cassandra.cql3.statements.DropFunctionStatement",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type olds : List<Function> to olds : Collection<Function> in method private findFunction() : Function from class org.apache.cassandra.cql3.statements.DropFunctionStatement",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type list : ListType<String> to udfs : Collection<UDFunction> in method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData in class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type strList : List<String> to udas : Collection<UDAggregate> in method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData in class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type functions : List<Function> to functions : Collection<Function> in method private functionResource(functionName String) : FunctionResource from class org.apache.cassandra.cql3.validation.entities.UFAuthTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private matchAguments(keyspace String, fun Function, providedArgs List<? extends AssignmentTestable>, receiverKs String, receiverCf String) : AssignmentTestable.TestResult from class org.apache.cassandra.cql3.functions.Functions to private matchAguments(keyspace String, fun Function, providedArgs List<? extends AssignmentTestable>, receiverKs String, receiverCf String) : AssignmentTestable.TestResult from class org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : "<p>Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public makeArgSpec(receiverKs String, receiverCf String, fun Function, i int) : ColumnSpecification from class org.apache.cassandra.cql3.functions.Functions to public makeArgSpec(receiverKs String, receiverCf String, fun Function, i int) : ColumnSpecification from class org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : "<p>Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public get(keyspace String, name FunctionName, providedArgs List<? extends AssignmentTestable>, receiverKs String, receiverCf String, receiverType AbstractType<?>) : Function from class org.apache.cassandra.cql3.functions.Functions to public get(keyspace String, name FunctionName, providedArgs List<? extends AssignmentTestable>, receiverKs String, receiverCf String, receiverType AbstractType<?>) : Function from class org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : "<p>Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private TOKEN_FUNCTION_NAME : FunctionName from class org.apache.cassandra.cql3.functions.Functions to private TOKEN_FUNCTION_NAME : FunctionName from class org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : "<p>Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private validateTypes(keyspace String, fun Function, providedArgs List<? extends AssignmentTestable>, receiverKs String, receiverCf String) : void from class org.apache.cassandra.cql3.functions.Functions to private validateTypes(keyspace String, fun Function, providedArgs List<? extends AssignmentTestable>, receiverKs String, receiverCf String) : void from class org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : "<p>Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public typeEquals(t1 AbstractType<?>, t2 AbstractType<?>) : boolean from class org.apache.cassandra.cql3.functions.Functions to public typesMatch(t1 AbstractType<?>, t2 AbstractType<?>) : boolean from class org.apache.cassandra.schema.Functions",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public typeEquals(t1 List<AbstractType<?>>, t2 List<AbstractType<?>>) : boolean from class org.apache.cassandra.cql3.functions.Functions to public typesMatch(t1 List<AbstractType<?>>, t2 List<AbstractType<?>>) : boolean from class org.apache.cassandra.schema.Functions",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.functions.Functions.FunctionsMigrationListener moved and renamed to org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : "<p>Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public onCreateAggregate(ksName String, aggregateName String, argTypes List<AbstractType<?>>) : void renamed to public onCreateFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public onCreateFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void renamed to private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getKeyspaceDefinitions() : Collection<KSMetaData> renamed to public getFunctions(name FunctionName) : Collection<Function> in class org.apache.cassandra.config.Schema",
    "comment" : "<p>getKeyspaceDefinitions() : Collection&lt;KSMetaData&gt; is deleted</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public updateFunction(udf UDFunction) : void renamed to public addFunction(udf UDFunction) : void in class org.apache.cassandra.config.Schema",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public addAggregate(udf UDAggregate) : void renamed to public updateAggregate(uda UDAggregate) : void in class org.apache.cassandra.config.Schema",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public updateAggregate(udf UDAggregate) : void renamed to private updateFunctionInternal(fun Function) : void in class org.apache.cassandra.config.Schema",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dropAggregate(udf UDAggregate) : void renamed to private dropFunctionInternal(fun Function) : void in class org.apache.cassandra.config.Schema",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter functions : Functions in method private KSMetaData(name String, strategyClass Class<? extends AbstractReplicationStrategy>, strategyOptions Map<String,String>, durableWrites boolean, cfDefs Iterable<CFMetaData>, userTypes UTMetaData, functions Functions) from class org.apache.cassandra.config.KSMetaData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter functions : Functions in method public cloneWith(tables Iterable<CFMetaData>, types UTMetaData, functions Functions) : KSMetaData from class org.apache.cassandra.config.KSMetaData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serializedFunctions : RowIterator in method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData from class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter seriazliedAggregates : RowIterator in method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData from class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type candidates : List<Function> to candidates : Collection<Function> in method public get(keyspace String, name FunctionName, providedArgs List<? extends AssignmentTestable>, receiverKs String, receiverCf String, receiverType AbstractType<?>) : Function from class org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public makeCreateKeyspaceMutation(keyspace KSMetaData, timestamp long, withTablesAndTypesAndFunctions boolean) : Mutation from class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier final in class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier abstract in class org.apache.cassandra.cql3.functions.Functions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier final in class org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type function : Function to function : Optional<Function> in method public applicablePermissions() : Set<Permission> from class org.apache.cassandra.auth.FunctionResource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Loop With Pipeline",
    "description" : "Replace Loop With Pipeline for(table: keyspace.cfMetaData().values()) with keyspace.cfMetaData().values().forEach(table -> addTableToSchemaMutation(table,timestamp,true,mutation)); in method public makeCreateKeyspaceMutation(keyspace KSMetaData, timestamp long, withTablesAndTypesAndFunctions boolean) : Mutation from class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Loop With Pipeline",
    "description" : "Replace Loop With Pipeline for(type: keyspace.userTypes.getAllTypes().values()) with keyspace.userTypes.getAllTypes().values().forEach(type -> addTypeToSchemaMutation(type,timestamp,mutation)); in method public makeCreateKeyspaceMutation(keyspace KSMetaData, timestamp long, withTablesAndTypesAndFunctions boolean) : Mutation from class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Loop With Pipeline",
    "description" : "Replace Loop With Pipeline for(cfm: cfMetaData.values()) with cfMetaData.values().forEach(CFMetaData::validate); in method public validate() : KSMetaData from class org.apache.cassandra.config.KSMetaData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Anonymous With Lambda",
    "description" : "Replace Anonymous With Lambda org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber.removeInvalidPreparedStatementsForFunction.removeIf.new Predicate<ParsedStatement.Prepared> with statement -> Iterables.any(statement.statement.getFunctions(),matchesFunction) in method private removeInvalidPreparedStatementsForFunction(statements Iterator<ParsedStatement.Prepared>, ksName String, functionName String) : void from class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Anonymous With Lambda",
    "description" : "Replace Anonymous With Lambda org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber.removeInvalidPreparedStatementsForFunction.matchesFunction.new Predicate<Function> with f -> ksName.equals(f.name().keyspace) && functionName.equals(f.name().name) in method private removeInvalidPreparedStatementsForFunction(statements Iterator<ParsedStatement.Prepared>, ksName String, functionName String) : void from class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable matchesFunction : Predicate<Function> in method private removeInvalidPreparedStatementsForFunction(statements Iterator<ParsedStatement.Prepared>, ksName String, functionName String) : void from class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable func : Function to fun : Optional<Function> in method private resolveScalar(aName FunctionName, fName FunctionName, argTypes List<AbstractType<?>>) : ScalarFunction from class org.apache.cassandra.cql3.functions.UDAggregate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type func : Function to fun : Optional<Function> in method private resolveScalar(aName FunctionName, fName FunctionName, argTypes List<AbstractType<?>>) : ScalarFunction from class org.apache.cassandra.cql3.functions.UDAggregate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 8203
}, {
  "id" : 1129713,
  "repository" : "https://github.com/gradle/gradle.git",
  "sha1" : "527ac38334000e105daacb2aca25cb345d77c01e",
  "url" : "https://github.com/gradle/gradle/commit/527ac38334000e105daacb2aca25cb345d77c01e",
  "author" : "Gary Hale",
  "time" : "6/30/15 9:10 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private stopped : AtomicBoolean from class org.gradle.play.internal.run.PlayApplicationDeploymentHandle to private stopped : AtomicBoolean from class org.gradle.play.internal.run.PlayApplicationRunnerToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public isRunning() : boolean extracted from public isRunning() : boolean in class org.gradle.play.internal.run.PlayApplicationDeploymentHandle & moved to class org.gradle.play.internal.run.PlayApplicationRunnerToken",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter runner : PlayApplicationRunner to runnerToken : PlayApplicationRunnerToken in method public PlayApplicationDeploymentHandle(id String, runnerToken PlayApplicationRunnerToken) from class org.gradle.play.internal.run.PlayApplicationDeploymentHandle",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute deploymentId : String to playToolProvider : PlayToolProvider in class org.gradle.play.tasks.PlayRun",
    "comment" : "<p>The only evidence of this rename is the replacement of setter method<br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>public</span> <span class='pl-k'>void</span> <span class='pl-en x x-first'>setDeploymentId</span><span class='x'>(</span><span class='pl-smi x'>String</span> <span class='pl-v x x-last'>deploymentId</span>) with <span class='pl-en x x-first'>setPlayToolProvider</span><span class='x'>(</span><span class='pl-smi x'>PlayToolProvider</span> <span class='pl-v x x-last'>playToolProvider</span>)<br />which seem to appear in the same location.<br /></span></p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type runner : PlayApplicationRunner to runnerToken : PlayApplicationRunnerToken in method public PlayApplicationDeploymentHandle(id String, runnerToken PlayApplicationRunnerToken) from class org.gradle.play.internal.run.PlayApplicationDeploymentHandle",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type deploymentId : String to playToolProvider : PlayToolProvider in class org.gradle.play.tasks.PlayRun",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public start(spec PlayRunSpec) : void renamed to public reload() : void in class org.gradle.play.internal.run.PlayApplicationDeploymentHandle",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setDeploymentId(deploymentId String) : void renamed to public setPlayToolProvider(playToolProvider PlayToolProvider) : void in class org.gradle.play.tasks.PlayRun",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter playToolChain : PlayToolChainInternal in method package createPlayRunTask(tasks ModelMap<Task>, binaryContainer BinaryContainer, serviceRegistry ServiceRegistry, configurations PlayPluginConfigurations, projectIdentifier ProjectIdentifier, playToolChain PlayToolChainInternal) : void from class org.gradle.play.plugins.PlayApplicationPlugin.Rules",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private runnerToken : PlayApplicationRunnerToken from class org.gradle.play.internal.run.PlayApplicationDeploymentHandle",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 5368
}, {
  "id" : 1130125,
  "repository" : "https://github.com/wordpress-mobile/WordPress-Android.git",
  "sha1" : "9dc3cbd59a20f03406f295a4a8f3b8676dbc939e",
  "url" : "https://github.com/wordpress-mobile/WordPress-Android/commit/9dc3cbd59a20f03406f295a4a8f3b8676dbc939e",
  "author" : "Dan Roundhill",
  "time" : "6/30/15 2:48 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.wordpress.android.ui.prefs.NotificationsPreference moved to org.wordpress.android.ui.prefs.notifications.NotificationsPreference",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.wordpress.android.ui.prefs.NotificationsSettingsActivity moved to org.wordpress.android.ui.prefs.notifications.NotificationsSettingsActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.wordpress.android.ui.prefs.NotificationsSettingsFragment moved to org.wordpress.android.ui.prefs.notifications.NotificationsSettingsFragment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 660
}, {
  "id" : 1130153,
  "repository" : "https://github.com/Graylog2/graylog2-server.git",
  "sha1" : "767171c90110c4c5781e8f6d19ece1fba0d492e9",
  "url" : "https://github.com/Graylog2/graylog2-server/commit/767171c90110c4c5781e8f6d19ece1fba0d492e9",
  "author" : "Jochen Schalanda",
  "time" : "6/30/15 8:46 AM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method public testTimestampStatsOfIndex() : void from class org.graylog2.indexer.searches.SearchesTest to public testTimestampStatsOfIndex() : void from class org.graylog2.indexer.ranges.EsIndexRangeServiceTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTimestampStatsOfIndexWithNonExistingIndex() : void from class org.graylog2.indexer.searches.SearchesTest to public testTimestampStatsOfIndexWithNonExistingIndex() : void from class org.graylog2.indexer.ranges.EsIndexRangeServiceTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public timestampStatsOfIndex(index String) : TimestampStats from class org.graylog2.indexer.searches.Searches to protected timestampStatsOfIndex(index String) : TimestampStats from class org.graylog2.indexer.ranges.EsIndexRangeService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTimestampStatsOfIndexWithEmptyIndex() : void from class org.graylog2.indexer.searches.SearchesTest to public testTimestampStatsOfIndexWithEmptyIndex() : void from class org.graylog2.indexer.ranges.EsIndexRangeServiceTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type indexRangeService : IndexRangeService to indexRangeService : EsIndexRangeService in class org.graylog2.indexer.ranges.EsIndexRangeServiceTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type INDEX_NAME : String to indexRangeService : EsIndexRangeService in class org.graylog2.indexer.ranges.EsIndexRangeServiceTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCalculateRangeWithNonExistingIndex() : void renamed to public testTimestampStatsOfIndexWithEmptyIndex() : void in class org.graylog2.indexer.ranges.EsIndexRangeServiceTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @UsingDataSet(locations = \"EsIndexRangeServiceTest.json\", loadStrategy = LoadStrategyEnum.CLEAN_INSERT) in method public calculateRangeReturnsIndexRange() : void from class org.graylog2.indexer.ranges.EsIndexRangeServiceTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @UsingDataSet(locations = \"EsIndexRangeServiceTest-EmptyIndex.json\", loadStrategy = LoadStrategyEnum.CLEAN_INSERT) in method public testCalculateRangeWithEmptyIndex() : void from class org.graylog2.indexer.ranges.EsIndexRangeServiceTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @UsingDataSet(loadStrategy = LoadStrategyEnum.DELETE_ALL) in method public testCalculateRangeWithNonExistingIndex() : void from class org.graylog2.indexer.ranges.EsIndexRangeServiceTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @VisibleForTesting in method protected timestampStatsOfIndex(index String) : TimestampStats from class org.graylog2.indexer.ranges.EsIndexRangeService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Nullable in method protected timestampStatsOfIndex(index String) : TimestampStats from class org.graylog2.indexer.ranges.EsIndexRangeService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @UsingDataSet(loadStrategy = LoadStrategyEnum.DELETE_ALL) in method public testTimestampStatsOfIndexWithNonExistingIndex() : void from class org.graylog2.indexer.ranges.EsIndexRangeServiceTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @UsingDataSet(locations = \"SearchesTest-EmptyIndex.json\", loadStrategy = LoadStrategyEnum.CLEAN_INSERT) to @UsingDataSet(locations = \"EsIndexRangeServiceTest-EmptyIndex.json\", loadStrategy = LoadStrategyEnum.CLEAN_INSERT) in method public testFindNewestMessageTimestampOfIndexWithEmptyIndex() : void from class org.graylog2.indexer.searches.SearchesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @UsingDataSet(locations = \"SearchesTest-EmptyIndex.json\", loadStrategy = LoadStrategyEnum.CLEAN_INSERT) to @UsingDataSet(locations = \"EsIndexRangeServiceTest-EmptyIndex.json\", loadStrategy = LoadStrategyEnum.CLEAN_INSERT) in method public testFindOldestMessageTimestampOfIndexWithEmptyIndex() : void from class org.graylog2.indexer.searches.SearchesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @UsingDataSet(locations = \"SearchesTest-EmptyIndex.json\", loadStrategy = LoadStrategyEnum.CLEAN_INSERT) to @UsingDataSet(locations = \"EsIndexRangeServiceTest-EmptyIndex.json\", loadStrategy = LoadStrategyEnum.CLEAN_INSERT) in method public testTimestampStatsOfIndexWithEmptyIndex() : void from class org.graylog2.indexer.ranges.EsIndexRangeServiceTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter searches : Searches in method public EsIndexRangeService(client Client, activityWriter ActivityWriter, searches Searches, objectMapper ObjectMapper) from class org.graylog2.indexer.ranges.EsIndexRangeService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected timestampStatsOfIndex(index String) : TimestampStats from class org.graylog2.indexer.ranges.EsIndexRangeService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 933
}, {
  "id" : 1130163,
  "repository" : "https://github.com/Graylog2/graylog2-server.git",
  "sha1" : "f05e86c4d31987ff2f30330745c3eb605de4c4dc",
  "url" : "https://github.com/Graylog2/graylog2-server/commit/f05e86c4d31987ff2f30330745c3eb605de4c4dc",
  "author" : "Jochen Schalanda",
  "time" : "6/30/15 8:11 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private COMPARATOR : Comparator<IndexRange> from class org.graylog2.indexer.ranges.MongoIndexRangeService to public COMPARATOR : Comparator<IndexRange> from class org.graylog2.indexer.ranges.IndexRange",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to public in attribute public COMPARATOR : Comparator<IndexRange> from class org.graylog2.indexer.ranges.IndexRange",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private COMPARATOR : Comparator<IndexRange> from class org.graylog2.indexer.ranges.MongoIndexRangeService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private COMPARATOR : Comparator<IndexRange> from class org.graylog2.indexer.ranges.MongoIndexRangeService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1095
}, {
  "id" : 1130197,
  "repository" : "https://github.com/apache/hive.git",
  "sha1" : "d69e5cb21c04d9eede314aaa9ad059fc603fb025",
  "url" : "https://github.com/apache/hive/commit/d69e5cb21c04d9eede314aaa9ad059fc603fb025",
  "author" : "Rui Li",
  "time" : "6/30/15 5:31 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private tag : byte from class org.apache.hadoop.hive.ql.exec.SparkHashTableSinkOperator to private tag : byte from class org.apache.hadoop.hive.ql.plan.SparkHashTableSinkDesc",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setTag(tag byte) : void from class org.apache.hadoop.hive.ql.exec.SparkHashTableSinkOperator to public setTag(tag byte) : void from class org.apache.hadoop.hive.ql.plan.SparkHashTableSinkDesc",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getCountQuery(spec Specification<T>, mode QueryMode) : TypedQuery<Long> extracted from protected getCountQuery(spec Specification<T>) : TypedQuery<Long> in class org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "It's been not reported by RMiner"
    }
  } ],
  "refDiffExecutionTime" : 5726
}, {
  "id" : 1130631,
  "repository" : "https://github.com/neo4j/neo4j.git",
  "sha1" : "d1a6ae2a16ba1d53b1de02eea8745d67c6a1a005",
  "url" : "https://github.com/neo4j/neo4j/commit/d1a6ae2a16ba1d53b1de02eea8745d67c6a1a005",
  "author" : "pgpv",
  "time" : "7/2/15 5:18 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private fileSelection() : File extracted from public actionPerformed(e ActionEvent) : void in class org.neo4j.desktop.ui.BrowseForDatabaseActionListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "The if statement has been reverted, but the functionlity has been preserved."
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable jFileChooser : JFileChooser to fileChooser : JFileChooser in method private fileSelection() : File from class org.neo4j.desktop.ui.BrowseForDatabaseActionListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable location : String in method public MainWindow(databaseActions DatabaseActions, model DesktopModel) from class org.neo4j.desktop.ui.MainWindow",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable error : UnsuitableDirectoryException to ude : UnsuitableDirectoryException in method public actionPerformed(e ActionEvent) : void from class org.neo4j.desktop.ui.BrowseForDatabaseActionListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter databaseActions : DatabaseActions in method public MainWindow(databaseActions DatabaseActions, model DesktopModel) from class org.neo4j.desktop.ui.MainWindow",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable result : int to choice : int in method public actionPerformed(e ActionEvent) : void from class org.neo4j.desktop.ui.BrowseForDatabaseActionListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2339
}, {
  "id" : 1130638,
  "repository" : "https://github.com/neo4j/neo4j.git",
  "sha1" : "8d9bedbf96b14beb027ebc1338bc6d5750e1feb5",
  "url" : "https://github.com/neo4j/neo4j/commit/8d9bedbf96b14beb027ebc1338bc6d5750e1feb5",
  "author" : "Tobias Lindaaker",
  "time" : "7/2/15 2:23 AM",
  "refactorings" : [ {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.neo4j.kernel.api.constraints.PropertyConstraint from class org.neo4j.kernel.api.constraints.UniquenessConstraint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldBeAbleToResolveConflictsAndRecreateConstraintAfterFailingToCreateConstraintDueToConflict() : void renamed to public shouldBeAbleToResolveConflictsAndRecreateConstraintAfterFailingToCreateUniquePropertyConstraintDueToConflict() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldNotLeaveAnyStateBehindAfterFailingToCreateConstraint() : void renamed to public shouldNotLeaveAnyStateBehindAfterFailingToCreateUniquePropertyConstraint() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldNotPersistUniquenessConstraintsCreatedInAbortedTransaction() : void renamed to public shouldNotPersistUniquePropertyConstraintsCreatedInAbortedTransaction() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldBeAbleToStoreAndRetrieveUniquenessConstraintRule() : void renamed to public shouldBeAbleToStoreAndRetrieveUniquePropertyConstraintRule() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldNotStoreUniquenessConstraintThatIsRemovedInTheSameTransaction() : void renamed to public shouldNotStoreUniquePropertyConstraintThatIsRemovedInTheSameTransaction() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldNotRemoveConstraintThatGetsReAdded() : void renamed to public shouldNotRemoveUniquePropertyConstraintThatGetsReAdded() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldNotCreateUniquenessConstraintThatAlreadyExists() : void renamed to public shouldNotCreateUniquePropertyConstraintThatAlreadyExists() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldCreateAnIndexToGoAlongWithAUniquenessConstraint() : void renamed to public shouldCreateAnIndexToGoAlongWithAUniquePropertyConstraint() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public uniquenessConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint renamed to public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visitAddedConstraint(element UniquenessConstraint) : void renamed to public visitAddedUniquePropertyConstraint(element UniquenessConstraint) : void in class org.neo4j.kernel.impl.api.KernelTransactionImplementation.TransactionToRecordStateVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visitRemovedConstraint(element UniquenessConstraint) : void renamed to public visitRemovedUniquePropertyConstraint(element UniquenessConstraint) : void in class org.neo4j.kernel.impl.api.KernelTransactionImplementation.TransactionToRecordStateVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public canListConstraints() : void renamed to public canListUniquePropertyConstraints() : void in class org.neo4j.shell.TestApps",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public canListConstraintsByLabel() : void renamed to public canListUniquePropertyConstraintsByLabel() : void in class org.neo4j.shell.TestApps",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public canListConstraintsByLabelAndProperty() : void renamed to public canListUniquePropertyConstraintsByLabelAndProperty() : void in class org.neo4j.shell.TestApps",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public uniquenessConstraintCreate(labelId int, propertyKeyId int) : UniquenessConstraint renamed to public uniquePropertyConstraintCreate(labelId int, propertyKeyId int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.OperationsFacade",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public uniquenessConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint renamed to public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.LockingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public uniquenessConstraintCreate(state KernelStatement, labelId int, propertyKey int) : UniquenessConstraint renamed to public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKey int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.neo4j.kernel.impl.store.UniquenessConstraintRule renamed to org.neo4j.kernel.impl.store.UniquePropertyConstraintRule",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.neo4j.kernel.impl.coreapi.schema.PropertyUniqueConstraintDefinition renamed to org.neo4j.kernel.impl.coreapi.schema.PropertyConstraintDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public uniquenessConstraint(labelId int, propertyKeyId int) : UniquenessConstraintRule renamed to private propertyConstraint(type Class<Rule>, labelId int, propertyKeyId int) : Rule in class org.neo4j.kernel.impl.store.SchemaStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public label() : int from class org.neo4j.kernel.api.constraints.UniquenessConstraint to public label() : int from class org.neo4j.kernel.api.constraints.PropertyConstraint",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public equals(obj Object) : boolean from class org.neo4j.kernel.api.constraints.UniquenessConstraint to public equals(obj Object) : boolean from class org.neo4j.kernel.api.constraints.PropertyConstraint",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public propertyKeyId() : int from class org.neo4j.kernel.api.constraints.UniquenessConstraint to public propertyKeyId() : int from class org.neo4j.kernel.api.constraints.PropertyConstraint",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public hashCode() : int from class org.neo4j.kernel.api.constraints.UniquenessConstraint to public hashCode() : int from class org.neo4j.kernel.api.constraints.PropertyConstraint",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public userDescription(tokenNameLookup TokenNameLookup) : String from class org.neo4j.kernel.api.constraints.UniquenessConstraint to public userDescription(tokenNameLookup TokenNameLookup) : String from class org.neo4j.kernel.api.constraints.PropertyConstraint",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private propertyKeyId : int from class org.neo4j.kernel.api.constraints.UniquenessConstraint to private propertyKeyId : int from class org.neo4j.kernel.api.constraints.PropertyConstraint",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private labelId : int from class org.neo4j.kernel.api.constraints.UniquenessConstraint to private labelId : int from class org.neo4j.kernel.api.constraints.PropertyConstraint",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visitAddedConstraint(element UniquenessConstraint) : void renamed to public visitAddedMandatoryPropertyConstraint(element MandatoryPropertyConstraint) : void in class org.neo4j.kernel.api.txstate.TxStateVisitor.Adapter",
    "comment" : "<p>Two methods<br />void visitAddedConstraint( UniquenessConstraint element );<br />void visitRemovedConstraint( UniquenessConstraint element );<br />replaced by four methods<br />void visitAddedUniquePropertyConstraint( UniquenessConstraint element );<br />void visitRemovedUniquePropertyConstraint( UniquenessConstraint element );<br /> void visitAddedMandatoryPropertyConstraint( MandatoryPropertyConstraint element );<br /> void visitRemovedMandatoryPropertyConstraint( MandatoryPropertyConstraint element );<br /><br /><br /></p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visitRemovedConstraint(element UniquenessConstraint) : void renamed to public visitAddedUniquePropertyConstraint(element UniquenessConstraint) : void in class org.neo4j.kernel.api.txstate.TxStateVisitor.Adapter",
    "comment" : "<p>Two methods<br />void visitAddedConstraint( UniquenessConstraint element );<br />void visitRemovedConstraint( UniquenessConstraint element );<br />replaced by four methods<br />void visitAddedUniquePropertyConstraint( UniquenessConstraint element );<br />void visitRemovedUniquePropertyConstraint( UniquenessConstraint element );<br /> void visitAddedMandatoryPropertyConstraint( MandatoryPropertyConstraint element );<br /> void visitRemovedMandatoryPropertyConstraint( MandatoryPropertyConstraint element );</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private propertyConstraint(type Class<Rule>, labelId int, propertyKeyId int) : Rule extracted from public uniquenessConstraint(labelId int, propertyKeyId int) : UniquenessConstraintRule in class org.neo4j.kernel.impl.store.SchemaStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the type change cannot be justified."
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.neo4j.kernel.impl.store.PropertyConstraintRule from class org.neo4j.kernel.impl.store.UniquenessConstraintRule",
    "comment" : "<p>org.neo4j.kernel.impl.store.PropertyConstraintRule<br />becomes intermediate abstract superclass between<br />org.neo4j.kernel.impl.store.UniquePropertyConstraintRule<br />and<br /><span class='blob-code-inner'><span class='pl-smi'>org.neo4j.kernel.impl.store.record.AbstractSchemaRule</span></span></p><p>PropertyConstraintRule introduces two abstract methods:<br /><span class='pl-k'>public</span> <span class='pl-k'>boolean</span> <span class='pl-en'>containsPropertyKeyId</span>( <span class='pl-k'>int</span> <span class='pl-v'>propertyKeyId</span> ) which is already overridden by UniquePropertyConstraintRule<br /><span class='blob-code-inner'><span class='pl-k'>public</span> <span class='pl-smi'>PropertyConstraint</span> <span class='pl-en'>toConstraint</span>() which is implemented by UniquePropertyConstraintRule as a new method<br /></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public equals(labelId int, propertyKeyId int) : boolean from class org.neo4j.kernel.api.constraints.UniquenessConstraint to public equals(type ConstraintType, labelId int, propertyKeyId int) : boolean from class org.neo4j.kernel.api.constraints.PropertyConstraint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable constraint : PropertyConstraint in method public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKey int) : UniquenessConstraint from class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute UNIQUENESS_CONSTRAINT_TO_RULE : Function<UniquenessConstraintRule,UniquenessConstraint> to RULE_TO_CONSTRAINT : Function<PropertyConstraintRule,PropertyConstraint> in class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public toString() : String from class org.neo4j.kernel.api.constraints.UniquenessConstraint to public toString() : String from class org.neo4j.kernel.api.constraints.PropertyConstraint",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visitAddedConstraint(element UniquenessConstraint) : void renamed to public visitAddedUniquePropertyConstraint(element UniquenessConstraint) : void in class org.neo4j.kernel.api.txstate.TxStateVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visitRemovedConstraint(element UniquenessConstraint) : void renamed to public visitRemovedUniquePropertyConstraint(element UniquenessConstraint) : void in class org.neo4j.kernel.api.txstate.TxStateVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public uniquenessConstraintCreate(labelId int, propertyKeyId int) : UniquenessConstraint renamed to public uniquePropertyConstraintCreate(labelId int, propertyKeyId int) : UniquenessConstraint in class org.neo4j.kernel.api.SchemaWrite",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public uniquenessConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint renamed to public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.operations.SchemaWriteOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method private checkUniquenessConstraintRule(rule UniquePropertyConstraintRule, engine CheckerEngine<DynamicRecord,ConsistencyReport.SchemaConsistencyReport>, record DynamicRecord, records RecordAccess) : void from class org.neo4j.consistency.checking.SchemaRecordCheck",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type lhs : UniquenessConstraintRule to lhs : UniquePropertyConstraintRule in method private uniquenessConstraintEquals(lhs UniquePropertyConstraintRule, rhs UniquePropertyConstraintRule) : boolean from class org.neo4j.consistency.checking.SchemaRuleContent",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type rhs : UniquenessConstraintRule to rhs : UniquePropertyConstraintRule in method private uniquenessConstraintEquals(lhs UniquePropertyConstraintRule, rhs UniquePropertyConstraintRule) : boolean from class org.neo4j.consistency.checking.SchemaRuleContent",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public AlreadyConstrainedException(constraint PropertyConstraint, context OperationContext) from class org.neo4j.kernel.api.exceptions.schema.AlreadyConstrainedException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method private constructUserMessage(context OperationContext, tokenNameLookup TokenNameLookup, constraint PropertyConstraint) : String from class org.neo4j.kernel.api.exceptions.schema.AlreadyConstrainedException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public ConstraintVerificationFailedKernelException(constraint PropertyConstraint, evidence Set<Evidence>) from class org.neo4j.kernel.api.exceptions.schema.ConstraintVerificationFailedKernelException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public ConstraintVerificationFailedKernelException(constraint PropertyConstraint, failure Throwable) from class org.neo4j.kernel.api.exceptions.schema.ConstraintVerificationFailedKernelException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public CreateConstraintFailureException(constraint PropertyConstraint, cause Throwable) from class org.neo4j.kernel.api.exceptions.schema.CreateConstraintFailureException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public DropConstraintFailureException(constraint PropertyConstraint, cause Throwable) from class org.neo4j.kernel.api.exceptions.schema.DropConstraintFailureException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public NoSuchConstraintException(constraint PropertyConstraint) from class org.neo4j.kernel.api.exceptions.schema.NoSuchConstraintException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDrop(state KernelStatement, constraint PropertyConstraint) : void from class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method private assertConstraintExists(constraint PropertyConstraint, constraints Iterator<PropertyConstraint>) : void from class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method private assertConstraintExists(constraint PropertyConstraint, constraints Iterator<PropertyConstraint>) : void from class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDrop(state KernelStatement, constraint PropertyConstraint) : void from class org.neo4j.kernel.impl.api.LockingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDrop(constraint PropertyConstraint) : void from class org.neo4j.kernel.impl.api.OperationsFacade",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method private applyConstraintsDiff(state KernelStatement, constraints Iterator<PropertyConstraint>, labelId int, propertyKeyId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method private applyConstraintsDiff(state KernelStatement, constraints Iterator<PropertyConstraint>, labelId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method private applyConstraintsDiff(state KernelStatement, constraints Iterator<PropertyConstraint>) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDrop(state KernelStatement, constraint PropertyConstraint) : void from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method private awaitIndexPopulation(constraint PropertyConstraint, indexId long) : void from class org.neo4j.kernel.impl.api.state.ConstraintIndexCreator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDoDrop(constraint PropertyConstraint) : void from class org.neo4j.kernel.impl.api.state.TxState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDoUnRemove(constraint PropertyConstraint) : boolean from class org.neo4j.kernel.impl.api.state.TxState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public visitUniqueConstraint(constraint PropertyConstraint, userDescription String) : void from class org.neo4j.kernel.impl.util.dbstructure.DbStructureCollector",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method private createConstraintRule(constraint PropertyConstraint) : void from class org.neo4j.unsafe.batchinsert.BatchInserterImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type descriptor : UniquenessConstraint to descriptor : PropertyConstraint in method private dropConstraint(descriptor PropertyConstraint) : void from class org.neo4j.kernel.impl.api.KernelSchemaStateFlushingTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDrop(constraint PropertyConstraint) : void from class org.neo4j.kernel.api.SchemaWrite",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDoDrop(constraint PropertyConstraint) : void from class org.neo4j.kernel.api.txstate.TransactionState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDoUnRemove(constraint PropertyConstraint) : boolean from class org.neo4j.kernel.api.txstate.TransactionState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDrop(state KernelStatement, constraint PropertyConstraint) : void from class org.neo4j.kernel.impl.api.operations.SchemaWriteOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public visitUniqueConstraint(constraint PropertyConstraint, userDescription String) : void from class org.neo4j.kernel.impl.util.dbstructure.DbStructureVisitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(labelId int, propertyKeyId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.api.SchemaRead",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(labelId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.api.SchemaRead",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll() : Iterator<PropertyConstraint> from class org.neo4j.kernel.api.SchemaRead",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type UniquenessConstraint to PropertyConstraint in method public constraint() : PropertyConstraint from class org.neo4j.kernel.api.exceptions.schema.CreateConstraintFailureException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type UniquenessConstraint to PropertyConstraint in method public constraint() : PropertyConstraint from class org.neo4j.kernel.api.exceptions.schema.DropConstraintFailureException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChanges() : ReadableDiffSets<PropertyConstraint> from class org.neo4j.kernel.api.txstate.ReadableTxState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChangesForLabel(labelId int) : ReadableDiffSets<PropertyConstraint> from class org.neo4j.kernel.api.txstate.ReadableTxState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChangesForLabelAndProperty(labelId int, propertyKey int) : ReadableDiffSets<PropertyConstraint> from class org.neo4j.kernel.api.txstate.ReadableTxState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(state KernelStatement, labelId int, propertyKeyId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.LockingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(state KernelStatement, labelId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.LockingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll(state KernelStatement) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.LockingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(labelId int, propertyKeyId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.OperationsFacade",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(labelId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.OperationsFacade",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll() : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.OperationsFacade",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(state KernelStatement, labelId int, propertyKeyId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(state KernelStatement, labelId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll(state KernelStatement) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method private applyConstraintsDiff(state KernelStatement, constraints Iterator<PropertyConstraint>, labelId int, propertyKeyId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method private applyConstraintsDiff(state KernelStatement, constraints Iterator<PropertyConstraint>, labelId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method private applyConstraintsDiff(state KernelStatement, constraints Iterator<PropertyConstraint>) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(state KernelStatement, labelId int, propertyKeyId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.operations.SchemaReadOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(state KernelStatement, labelId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.operations.SchemaReadOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll(state KernelStatement) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.operations.SchemaReadOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public abstract constraintsChanges() : ReadableDiffSets<PropertyConstraint> from class org.neo4j.kernel.impl.api.state.LabelState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChanges() : ReadableDiffSets<PropertyConstraint> from class org.neo4j.kernel.impl.api.state.LabelState.Mutable",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type DiffSets<UniquenessConstraint> to DiffSets<PropertyConstraint> in method public getOrCreateConstraintsChanges() : DiffSets<PropertyConstraint> from class org.neo4j.kernel.impl.api.state.LabelState.Mutable",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type DiffSetsVisitor<UniquenessConstraint> to DiffSetsVisitor<PropertyConstraint> in method private constraintsVisitor(visitor TxStateVisitor) : DiffSetsVisitor<PropertyConstraint> from class org.neo4j.kernel.impl.api.state.TxState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChangesForLabelAndProperty(labelId int, propertyKey int) : ReadableDiffSets<PropertyConstraint> from class org.neo4j.kernel.impl.api.state.TxState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChangesForLabel(labelId int) : ReadableDiffSets<PropertyConstraint> from class org.neo4j.kernel.impl.api.state.TxState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChanges() : ReadableDiffSets<PropertyConstraint> from class org.neo4j.kernel.impl.api.state.TxState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type DiffSets<UniquenessConstraint> to DiffSets<PropertyConstraint> in method private constraintsChangesDiffSets() : DiffSets<PropertyConstraint> from class org.neo4j.kernel.impl.api.state.TxState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(labelId int, propertyKeyId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.store.CacheLayer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(labelId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.store.CacheLayer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll() : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.store.CacheLayer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(labelId int, propertyKeyId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(labelId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll() : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraints() : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.store.SchemaCache",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsForLabel(label int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.store.SchemaCache",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsForLabelAndProperty(label int, property int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.store.SchemaCache",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(labelId int, propertyKeyId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.store.StoreReadLayer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(labelId int) : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.store.StoreReadLayer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll() : Iterator<PropertyConstraint> from class org.neo4j.kernel.impl.api.store.StoreReadLayer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type UniquenessConstraintRule to UniquePropertyConstraintRule in method public uniquenessConstraint(labelId int, propertyKeyId int) : UniquePropertyConstraintRule from class org.neo4j.kernel.impl.store.SchemaStorage",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>public</span> <span class='pl-smi x x-first'>UniquenessConstraintRule</span> <span class='pl-en x x-last'>uniquenessConstraint</span>( <span class='pl-k'>int</span> <span class='pl-v'>labelId</span>, <span class='pl-k'>final</span> <span class='pl-k'>int</span> <span class='pl-v'>propertyKeyId</span> )</span> is mapped to<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>public</span> <span class='pl-smi'>UniquePropertyConstraintRule</span> <span class='pl-en'>uniquenessConstraint</span>( <span class='pl-k'>int</span> <span class='pl-v'>labelId</span>, <span class='pl-k'>final</span> <span class='pl-k'>int</span> <span class='pl-v'>propertyKeyId</span> )</span><br />Both methods have the same name and parameter names types</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type UniquenessConstraint to PropertyConstraint in method private createConstraint() : PropertyConstraint from class org.neo4j.kernel.impl.api.KernelSchemaStateFlushingTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type UniquenessConstraint to PropertyConstraint in method private createUniqueConstraint(labelId int, pkId int) : PropertyConstraint from class org.neo4j.kernel.impl.util.dbstructure.GraphDbStructureGuideTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type UNIQUENESS_CONSTRAINT_TO_RULE : Function<UniquenessConstraintRule,UniquenessConstraint> to RULE_TO_CONSTRAINT : Function<PropertyConstraintRule,PropertyConstraint> in class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldReportInvalidPropertyReferenceFromUniquenessConstraintRule() : void from class org.neo4j.consistency.checking.SchemaRecordCheckTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule2 : UniquenessConstraintRule to rule2 : UniquePropertyConstraintRule in method public shouldReportUniquenessConstraintNotReferencingBack() : void from class org.neo4j.consistency.checking.SchemaRecordCheckTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule1 : UniquenessConstraintRule to rule1 : UniquePropertyConstraintRule in method public shouldReportTwoUniquenessConstraintsReferencingSameIndex() : void from class org.neo4j.consistency.checking.SchemaRecordCheckTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule2 : UniquenessConstraintRule to rule2 : UniquePropertyConstraintRule in method public shouldReportTwoUniquenessConstraintsReferencingSameIndex() : void from class org.neo4j.consistency.checking.SchemaRecordCheckTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldReportUnreferencedUniquenessConstraint() : void from class org.neo4j.consistency.checking.SchemaRecordCheckTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule2 : UniquenessConstraintRule to rule2 : UniquePropertyConstraintRule in method public shouldReportConstraintIndexNotReferencingBack() : void from class org.neo4j.consistency.checking.SchemaRecordCheckTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type constraint : UniquenessConstraint to constraint : PropertyConstraint in class org.neo4j.kernel.api.exceptions.schema.AlreadyConstrainedException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type constraint : UniquenessConstraint to constraint : PropertyConstraint in class org.neo4j.kernel.api.exceptions.schema.ConstraintVerificationFailedKernelException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type constraint : UniquenessConstraint to constraint : PropertyConstraint in class org.neo4j.kernel.api.exceptions.schema.CreateConstraintFailureException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type constraint : UniquenessConstraint to constraint : PropertyConstraint in class org.neo4j.kernel.api.exceptions.schema.DropConstraintFailureException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type constraint : UniquenessConstraint to constraint : PropertyConstraint in class org.neo4j.kernel.api.exceptions.schema.NoSuchConstraintException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public nodeAddLabel(state KernelStatement, nodeId long, labelId int) : boolean from class org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public nodeAddLabel(state KernelStatement, nodeId long, labelId int) : boolean from class org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraintIterator : Iterator<UniquenessConstraint> to constraintIterator : Iterator<PropertyConstraint> in method public nodeSetProperty(state KernelStatement, nodeId long, property DefinedProperty) : Property from class org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKey int) : UniquenessConstraint from class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public visitRemovedUniquePropertyConstraint(element UniquenessConstraint) : void from class org.neo4j.kernel.impl.api.KernelTransactionImplementation.TransactionToRecordStateVisitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type it : Iterator<UniquenessConstraint> to it : Iterator<PropertyConstraint> in method public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type constraintsChanges : DiffSets<UniquenessConstraint> to constraintsChanges : DiffSets<PropertyConstraint> in class org.neo4j.kernel.impl.api.state.LabelState.Mutable",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type constraintsChanges : DiffSets<UniquenessConstraint> to constraintsChanges : DiffSets<PropertyConstraint> in class org.neo4j.kernel.impl.api.state.TxState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type constraints : Collection<UniquenessConstraint> to constraints : Collection<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.SchemaCache",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public getConstraints() : Iterable<ConstraintDefinition> from class org.neo4j.kernel.impl.coreapi.schema.SchemaImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public getConstraints(label Label) : Iterable<ConstraintDefinition> from class org.neo4j.kernel.impl.coreapi.schema.SchemaImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rules : Iterator<UniquenessConstraintRule> to rules : Iterator<Rule> in method private propertyConstraint(type Class<Rule>, labelId int, propertyKeyId int) : Rule from class org.neo4j.kernel.impl.store.SchemaStorage",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule : UniquenessConstraintRule to rule : Rule in method private propertyConstraint(type Class<Rule>, labelId int, propertyKeyId int) : Rule from class org.neo4j.kernel.impl.store.SchemaStorage",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type uniquenessConstraint : Set<UniquenessConstraint> to uniquenessConstraint : Set<PropertyConstraint> in class org.neo4j.kernel.impl.util.dbstructure.DbStructureCollector",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method private showUniqueConstraints(visitor DbStructureVisitor, read ReadOperations, nameLookup TokenNameLookup) : void from class org.neo4j.kernel.impl.util.dbstructure.GraphDbStructureGuide",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method private showUniqueConstraints(visitor DbStructureVisitor, read ReadOperations, nameLookup TokenNameLookup) : void from class org.neo4j.kernel.impl.util.dbstructure.GraphDbStructureGuide",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraintRule : UniquenessConstraintRule to constraintRule : UniquePropertyConstraintRule in method private createConstraintRule(constraint PropertyConstraint) : void from class org.neo4j.unsafe.batchinsert.BatchInserterImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type descriptor : UniquenessConstraint to descriptor : PropertyConstraint in method public shouldInvalidateSchemaStateOnDropConstraint() : void from class org.neo4j.kernel.impl.api.KernelSchemaStateFlushingTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type descriptor : UniquenessConstraint to descriptor : PropertyConstraint in method private createConstraint() : PropertyConstraint from class org.neo4j.kernel.impl.api.KernelSchemaStateFlushingTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type result : UniquenessConstraint to result : PropertyConstraint in method public shouldAcquireSchemaWriteLockBeforeCreatingUniquenessConstraint() : void from class org.neo4j.kernel.impl.api.LockingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public shouldAcquireSchemaReadLockBeforeGettingConstraintsByLabelAndProperty() : void from class org.neo4j.kernel.impl.api.LockingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type result : Iterator<UniquenessConstraint> to result : Iterator<PropertyConstraint> in method public shouldAcquireSchemaReadLockBeforeGettingConstraintsByLabelAndProperty() : void from class org.neo4j.kernel.impl.api.LockingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public shouldAcquireSchemaReadLockBeforeGettingConstraintsByLabel() : void from class org.neo4j.kernel.impl.api.LockingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type result : Iterator<UniquenessConstraint> to result : Iterator<PropertyConstraint> in method public shouldAcquireSchemaReadLockBeforeGettingConstraintsByLabel() : void from class org.neo4j.kernel.impl.api.LockingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public shouldAcquireSchemaReadLockBeforeGettingAllConstraints() : void from class org.neo4j.kernel.impl.api.LockingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type result : Iterator<UniquenessConstraint> to result : Iterator<PropertyConstraint> in method public shouldAcquireSchemaReadLockBeforeGettingAllConstraints() : void from class org.neo4j.kernel.impl.api.LockingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldClearSchemaStateWhenConstraintIsDropped() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldDropCreatedConstraintIndexWhenRollingBackConstraintCreation() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldDropConstraintIndexWhenDroppingConstraint() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldDropConstraintIndexWhenDroppingConstraint() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldNotDropConstraintThatDoesNotExist() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraintRule : UniquenessConstraintRule to constraintRule : UniquePropertyConstraintRule in method public committedConstraintRuleShouldCrossReferenceTheCorrespondingIndexRule() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldBeAbleToStoreAndRetrieveUniquePropertyConstraintRule() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldBeAbleToStoreAndRetrieveUniquePropertyConstraintRule() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "<p>The code is aligned wrongly in the GitHub diff</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public shouldBeAbleToStoreAndRetrieveUniquePropertyConstraintRule() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldNotPersistUniquePropertyConstraintsCreatedInAbortedTransaction() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public shouldNotPersistUniquePropertyConstraintsCreatedInAbortedTransaction() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldNotStoreUniquePropertyConstraintThatIsRemovedInTheSameTransaction() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldNotStoreUniquePropertyConstraintThatIsRemovedInTheSameTransaction() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldNotRemoveUniquePropertyConstraintThatGetsReAdded() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldNotRemoveUniquePropertyConstraintThatGetsReAdded() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldCreateAnIndexToGoAlongWithAUniquePropertyConstraint() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type result : Set<UniquenessConstraint> to result : Set<PropertyConstraint> in method public shouldGetConstraintsByLabelAndProperty() : void from class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type result : Set<UniquenessConstraint> to result : Set<PropertyConstraint> in method public shouldGetConstraintsByLabel() : void from class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type result : Set<UniquenessConstraint> to result : Set<PropertyConstraint> in method public shouldGetAllConstraints() : void from class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type diff : ReadableDiffSets<UniquenessConstraint> to diff : ReadableDiffSets<PropertyConstraint> in method public shouldAddUniquenessConstraint() : void from class org.neo4j.kernel.impl.api.state.TxStateTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraints : Set<UniquenessConstraint> to constraints : Set<PropertyConstraint> in method public shouldLoadAllConstraintsFromCache() : void from class org.neo4j.kernel.impl.api.store.CacheLayerTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraints : Set<UniquenessConstraint> to constraints : Set<PropertyConstraint> in method public shouldLoadConstraintsByLabelFromCache() : void from class org.neo4j.kernel.impl.api.store.CacheLayerTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraints : Set<UniquenessConstraint> to constraints : Set<PropertyConstraint> in method public shouldLoadConstraintsByLabelAndPropertyFromCache() : void from class org.neo4j.kernel.impl.api.store.CacheLayerTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldApplyCreateUniquenessConstraintRuleSchemaRuleCommandToTheStore() : void from class org.neo4j.kernel.impl.transaction.command.NeoTransactionStoreApplierTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldApplyCreateUniquenessConstraintRuleSchemaRuleCommandToTheStoreInRecovery() : void from class org.neo4j.kernel.impl.transaction.command.NeoTransactionStoreApplierTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldApplyUpdateUniquenessConstraintRuleSchemaRuleCommandToTheStore() : void from class org.neo4j.kernel.impl.transaction.command.NeoTransactionStoreApplierTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldApplyUpdateUniquenessConstraintRuleSchemaRuleCommandToTheStoreInRecovery() : void from class org.neo4j.kernel.impl.transaction.command.NeoTransactionStoreApplierTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldApplyDeleteUniquenessConstraintRuleSchemaRuleCommandToTheStore() : void from class org.neo4j.kernel.impl.transaction.command.NeoTransactionStoreApplierTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldApplyDeleteUniquenessConstraintRuleSchemaRuleCommandToTheStoreInRecovery() : void from class org.neo4j.kernel.impl.transaction.command.NeoTransactionStoreApplierTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type record : UniquenessConstraintRule to record : UniquePropertyConstraintRule in method public shouldValidateUniquenessIndexes() : void from class org.neo4j.kernel.impl.transaction.state.IntegrityValidatorTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public visitsUniqueConstraintsAndIndices() : void from class org.neo4j.kernel.impl.util.dbstructure.GraphDbStructureGuideTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraintRule : UniquenessConstraintRule to constraintRule : UniquePropertyConstraintRule in method public shouldCreateConsistentUniquenessConstraint() : void from class org.neo4j.unsafe.batchinsert.BatchInsertTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : PropertyUniqueConstraintDefinition to constraint : PropertyConstraintDefinition in method public newSlaveJoiningClusterShouldNotAcceptOperationsUntilConstraintIsOnline() : void from class org.neo4j.kernel.api.UniqueConstraintHaIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type that : PropertyUniqueConstraintDefinition to that : PropertyConstraintDefinition in method public equals(o Object) : boolean from class org.neo4j.kernel.impl.coreapi.schema.PropertyConstraintDefinition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter obj : Object to visitor : ChangeVisitor in method public added(visitor ChangeVisitor) : void in class org.neo4j.kernel.api.constraints.UniquenessConstraint",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter element : UniquenessConstraint to constraint : MandatoryPropertyConstraint in method public visitRemovedMandatoryPropertyConstraint(constraint MandatoryPropertyConstraint) : void in class org.neo4j.kernel.impl.api.state.TxState.ConstraintDiffSetsVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type obj : Object to visitor : ChangeVisitor in method public added(visitor ChangeVisitor) : void in class org.neo4j.kernel.api.constraints.UniquenessConstraint",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type existing : UniquenessConstraint to existing : PropertyConstraint in method private assertConstraintExists(constraint PropertyConstraint, constraints Iterator<PropertyConstraint>) : void from class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type element : UniquenessConstraint to element : PropertyConstraint in method public visitAdded(element PropertyConstraint) : void in class org.neo4j.kernel.impl.api.state.TxState.ConstraintDiffSetsVisitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type item : UniquenessConstraint to item : PropertyConstraint in method public test(item PropertyConstraint) : boolean from class org.neo4j.kernel.impl.api.state.TxState.constraintsChangesForLabelAndProperty.filterAdded.new Predicate<PropertyConstraint>",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type element : UniquenessConstraint to constraint : MandatoryPropertyConstraint in method public visitRemovedMandatoryPropertyConstraint(constraint MandatoryPropertyConstraint) : void in class org.neo4j.kernel.impl.api.state.TxState.ConstraintDiffSetsVisitor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type rule : UniquenessConstraintRule to rule : PropertyConstraintRule in method public apply(rule PropertyConstraintRule) : PropertyConstraint in class org.neo4j.kernel.impl.api.store.DiskLayer.RULE_TO_CONSTRAINT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method private asConstraintDefinitions(readOperations ReadOperations, constraints Iterator<PropertyConstraint>) : Iterable<ConstraintDefinition> from class org.neo4j.kernel.impl.coreapi.schema.SchemaImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type item : UniquenessConstraintRule to item : Rule in method public test(item Rule) : boolean from class org.neo4j.kernel.impl.store.SchemaStorage.propertyConstraint.rules.schemaRules.new Predicate<Rule>",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type UniquenessConstraintRule to UniquePropertyConstraintRule in method public uniquenessConstraintRule(id long, labelId int, propertyKeyId int, ownedIndexRule long) : UniquePropertyConstraintRule from class org.neo4j.kernel.impl.store.UniquePropertyConstraintRule",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type UniquenessConstraintRule to UniquePropertyConstraintRule in method public readUniquenessConstraintRule(id long, labelId int, buffer ByteBuffer) : UniquePropertyConstraintRule from class org.neo4j.kernel.impl.store.UniquePropertyConstraintRule",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public added(visitor ChangeVisitor) : void in class org.neo4j.kernel.api.constraints.UniquenessConstraint",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public removed(visitor ChangeVisitor) : void in class org.neo4j.kernel.api.constraints.UniquenessConstraint",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChanges() : ReadableDiffSets<PropertyConstraint> in class org.neo4j.kernel.impl.api.state.LabelState.DEFAULT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type UniquenessConstraint to PropertyConstraint in method public apply(rule PropertyConstraintRule) : PropertyConstraint in class org.neo4j.kernel.impl.api.store.DiskLayer.RULE_TO_CONSTRAINT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public createUniquenessConstraintIndex(state KernelStatement, schema SchemaReadOperations, labelId int, propertyKeyId int) : long from class org.neo4j.kernel.impl.api.state.ConstraintIndexCreator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public dropPropertyUniquenessConstraint(label Label, propertyKey String) : void from class org.neo4j.kernel.impl.coreapi.schema.SchemaImpl.GDBSchemaActions",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public formatArgument(builder Appendable, arg Object) : void from class org.neo4j.kernel.impl.util.dbstructure.DbStructureArgumentFormatter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldAcquireSchemaWriteLockBeforeDroppingConstraint() : void from class org.neo4j.kernel.impl.api.LockingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public shouldCreateAndRetrieveMandatoryPropertyConstraint() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "<p>variables declared in different methods</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldNotAddConstraintAlreadyExistsInTheStore() : void from class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldGetConstraintsByLabelAndProperty() : void from class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint2 : UniquenessConstraint to constraint2 : PropertyConstraint in method public shouldGetConstraintsByLabel() : void from class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint1 : UniquenessConstraint to constraint1 : PropertyConstraint in method public shouldGetConstraintsByLabel() : void from class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint1 : UniquenessConstraint to constraint1 : PropertyConstraint in method public shouldGetAllConstraints() : void from class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type constraint2 : UniquenessConstraint to constraint2 : PropertyConstraint in method public shouldGetAllConstraints() : void from class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visitRemovedConstraint(element UniquenessConstraint) : void renamed to public visitRemovedUniquePropertyConstraint(element UniquenessConstraint) : void in class org.neo4j.kernel.api.txstate.TxStateVisitor.Adapter",
    "comment" : "<p>abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public equals(labelId int, propertyKeyId int) : boolean from class org.neo4j.kernel.api.constraints.UniquenessConstraint to public equals(type ConstraintType, labelId int, propertyKeyId int) : boolean from class org.neo4j.kernel.api.constraints.PropertyConstraint",
    "comment" : "<p>is Pull up</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visitAddedConstraint(element UniquenessConstraint) : void renamed to public visitAddedUniquePropertyConstraint(element UniquenessConstraint) : void in class org.neo4j.kernel.api.txstate.TxStateVisitor.Adapter",
    "comment" : "<p>abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public equals(obj Object) : boolean renamed to public added(visitor ChangeVisitor) : void in class org.neo4j.kernel.api.constraints.UniquenessConstraint",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter readOperations : ReadOperations in method public assertCleared(readOperations ReadOperations) : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT.SchemaStateCheck",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter readOperations : ReadOperations in method public assertNotCleared(readOperations ReadOperations) : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT.SchemaStateCheck",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter readOperations : ReadOperations in method private checkState(readOperations ReadOperations) : SchemaStateCheck from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT.SchemaStateCheck",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter type : ConstraintType in method public equals(type ConstraintType, labelId int, propertyKeyId int) : boolean from class org.neo4j.kernel.api.constraints.PropertyConstraint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter type : ConstraintType in method public PropertyConstraintDefinition(actions InternalSchemaActions, label Label, propertyKey String, type ConstraintType) from class org.neo4j.kernel.impl.coreapi.schema.PropertyConstraintDefinition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public added(visitor ChangeVisitor) : void from class org.neo4j.kernel.api.constraints.UniquenessConstraint",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public shouldClearSchemaStateWhenConstraintIsCreated() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public shouldCreateAnIndexToGoAlongWithAUniquePropertyConstraint() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public shouldDropCreatedConstraintIndexWhenRollingBackConstraintCreation() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public shouldDropConstraintIndexWhenDroppingConstraint() : void from class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChanges() : ReadableDiffSets<PropertyConstraint> from class org.neo4j.kernel.impl.api.state.LabelState.DEFAULT.new LabelState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private constraint : PropertyConstraint from class org.neo4j.kernel.api.exceptions.schema.AlreadyConstrainedException",
    "comment" : "<p>called is scala files<br />community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/spi/v2_3/TransactionBoundQueryContext.scala<br />community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/spi/v2_2/TransactionBoundQueryContext.scala</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier final in method private assertInUnterminatedTransaction() : void from class org.neo4j.kernel.impl.coreapi.schema.PropertyUniqueConstraintDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier public to package in class org.neo4j.graphdb.schema.Schema.IndexState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier public to package in class org.neo4j.kernel.impl.store.record.SchemaRule.Kind",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.neo4j.graphdb.schema.Schema.IndexState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.neo4j.kernel.impl.store.record.SchemaRule.Kind",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public apply(constraint PropertyConstraint) : ConstraintDefinition from class org.neo4j.kernel.impl.coreapi.schema.SchemaImpl.asConstraintDefinitions.definitions.map.new Function<PropertyConstraint,ConstraintDefinition>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type uniquenessConstraint : UniquenessConstraint to uniquenessConstraint : PropertyConstraint in method public apply(uniquenessConstraint PropertyConstraint) : Pair<String,String> from class org.neo4j.kernel.impl.util.dbstructure.DbStructureCollector.lookup.new DbStructureLookup.knownUniqueConstraints.map.new Function<PropertyConstraint,Pair<String,String>>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public apply(constraint PropertyConstraint) : IndexDescriptor from class org.neo4j.kernel.impl.api.state.TxState.constraintIndexesCreatedInTx.map.new Function<PropertyConstraint,IndexDescriptor>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type rule : UniquenessConstraintRule to rule : PropertyConstraintRule in method public test(rule PropertyConstraintRule) : boolean from class org.neo4j.kernel.impl.api.store.DiskLayer.constraintsGetForLabelAndPropertyKey.schemaRules.new Predicate<PropertyConstraintRule>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type item : UniquenessConstraint to item : PropertyConstraint in method public test(item PropertyConstraint) : boolean from class org.neo4j.kernel.impl.api.store.SchemaCache.constraintsForLabelAndProperty.filter.new Predicate<PropertyConstraint>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type item : UniquenessConstraint to item : PropertyConstraint in method public test(item PropertyConstraint) : boolean from class org.neo4j.kernel.impl.api.store.SchemaCache.constraintsForLabel.filter.new Predicate<PropertyConstraint>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rule2 : UniquenessConstraintRule to rule2 : UniquePropertyConstraintRule in method protected transactionData(tx GraphStoreFixture.TransactionDataBuilder, next GraphStoreFixture.IdGenerator) : void from class org.neo4j.consistency.checking.full.FullCheckIntegrationTest.shouldReportInvalidConstraintBackReferences.apply.new GraphStoreFixture.Transaction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type that : UniquenessConstraint to that : PropertyConstraint in method public equals(obj Object) : boolean from class org.neo4j.kernel.api.constraints.PropertyConstraint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 10145
}, {
  "id" : 1130859,
  "repository" : "https://github.com/katzer/cordova-plugin-local-notifications.git",
  "sha1" : "51f498a96b2fa1822e392027982c20e950535fd1",
  "url" : "https://github.com/katzer/cordova-plugin-local-notifications/commit/51f498a96b2fa1822e392027982c20e950535fd1",
  "author" : "PKnittel",
  "time" : "7/2/15 11:49 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public handleEndTag(xml XmlPullParser) : void extracted from public parse(xml XmlResourceParser) : void in class org.apache.cordova.ConfigXmlParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "remove parameter on top. It happenned inside the constructor."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public handleStartTag(xml XmlPullParser) : void extracted from public parse(xml XmlResourceParser) : void in class org.apache.cordova.ConfigXmlParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public postMessage(id String, data Object) : void inlined to public onCreateOptionsMenu(menu Menu) : boolean in class org.apache.cordova.CordovaActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public postMessage(id String, data Object) : void inlined to public onOptionsItemSelected(item MenuItem) : boolean in class org.apache.cordova.CordovaActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public postMessage(id String, data Object) : void inlined to public onPrepareOptionsMenu(menu Menu) : boolean in class org.apache.cordova.CordovaActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private cordova : CordovaInterface from class org.apache.cordova.CordovaWebView to private cordova : CordovaInterface from class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private cordova : CordovaInterface from class org.apache.cordova.NativeToJsMessageQueue to private cordova : CordovaInterface from class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public parse(xml XmlResourceParser) : void renamed to public handleStartTag(xml XmlPullParser) : void in class org.apache.cordova.ConfigXmlParser",
    "comment" : "It is an extract method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package onNativeToJsMessageAvailable() : void from class org.apache.cordova.NativeToJsMessageQueue.PollingBridgeMode to public onNativeToJsMessageAvailable(queue NativeToJsMessageQueue) : void from class org.apache.cordova.NativeToJsMessageQueue.NoOpBridgeMode",
    "comment" : "PollingBridgeMode is deleted",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public contains(name String) : boolean extracted from protected createViews() : void in class org.apache.cordova.CordovaActivity & moved to class org.apache.cordova.CordovaPreferences",
    "comment" : "<p>Extract and Move to other&nbsp; class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package cordova : CordovaInterface from class org.apache.cordova.CordovaWebViewClient to private cordova : CordovaInterface from class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
    "comment" : "The attribute moved to inner class from outer class",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected cordova : CordovaInterface from class org.apache.cordova.CordovaChromeClient to private cordova : CordovaInterface from class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
    "comment" : "The attribute moved to inner class from outer class",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private cordova : CordovaInterface from class org.apache.cordova.CordovaUriHelper to private cordova : CordovaInterface from class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
    "comment" : "The attribute moved to inner class from outer class",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public init(webView CordovaWebView, webViewClient CordovaWebViewClient, webChromeClient CordovaChromeClient) : void inlined to protected init() : void in class org.apache.cordova.CordovaActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute view : CordovaWebView to app : CordovaWebView in method public onReceivedHttpAuthRequest(view CordovaWebView, handler ICordovaHttpAuthHandler, host String, realm String) : boolean from class org.apache.cordova.PluginManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute view : CordovaWebView to app : CordovaWebView in method public onReceivedClientCertRequest(view CordovaWebView, request ICordovaClientCertRequest) : boolean from class org.apache.cordova.PluginManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute callback : CordovaPlugin to cordovaInterface : CordovaInterfaceImpl in method protected onActivityResult(requestCode int, resultCode int, intent Intent) : void from class org.apache.cordova.CordovaActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter url : String to newConfig : Configuration in method public onConfigurationChanged(newConfig Configuration) : void in class org.apache.cordova.CordovaActivity",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable p : CordovaPlugin to pm : PluginManager in method public onConfigurationChanged(newConfig Configuration) : void in class org.apache.cordova.CordovaActivity",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter statement : String to statememt : String in method public sendJavascript(statememt String) : void from class org.apache.cordova.CordovaWebView",
    "comment" : "<p>Method becomes abstract</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter result : PluginResult to cr : PluginResult in method public sendPluginResult(cr PluginResult, callbackId String) : void from class org.apache.cordova.CordovaWebView",
    "comment" : "<p>Method becomes abstract</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute sendMessageMethod : Method to delegate : OnlineEventsBridgeModeDelegate in class org.apache.cordova.NativeToJsMessageQueue.OnlineEventsBridgeMode",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter service : String to url : String in method public shouldAllowRequest(url String) : boolean in class org.apache.cordova.PluginManager",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable urlFilters : List<String> to plugin : CordovaPlugin in method public shouldAllowNavigation(url String) : boolean in class org.apache.cordova.PluginManager",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type action : Activity to action : Context in method public parse(action Context) : void from class org.apache.cordova.ConfigXmlParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type xml : XmlResourceParser to xml : XmlPullParser in method public parse(xml XmlPullParser) : void from class org.apache.cordova.ConfigXmlParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type pluginEntries : List<PluginEntry> to pluginEntries : Collection<PluginEntry> in method public setPluginEntries(pluginEntries Collection<PluginEntry>) : void from class org.apache.cordova.PluginManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter time : int to b : boolean in method public clearCache(b boolean) : void in class org.apache.cordova.CordovaWebView",
    "comment" : "<p>clearCache() becomes abstract method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter event : String to callback : CustomViewCallback in method public showCustomView(view View, callback CustomViewCallback) : void in class org.apache.cordova.CordovaWebView",
    "comment" : "<p>showCustomView() becomes abstract method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type callback : CordovaPlugin to cordovaInterface : CordovaInterfaceImpl in method protected onActivityResult(requestCode int, resultCode int, intent Intent) : void from class org.apache.cordova.CordovaActivity",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type pluginMap : HashMap<String,CordovaPlugin> to pluginMap : LinkedHashMap<String,CordovaPlugin> in class org.apache.cordova.PluginManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type entryMap : HashMap<String,PluginEntry> to entryMap : LinkedHashMap<String,PluginEntry> in class org.apache.cordova.PluginManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type url : String to newConfig : Configuration in method public onConfigurationChanged(newConfig Configuration) : void in class org.apache.cordova.CordovaActivity",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type time : int to b : boolean in method public clearCache(b boolean) : void in class org.apache.cordova.CordovaWebView",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type params : HashMap<String,Object> to params : Map<String,Object> in method public showWebPage(url String, openExternal boolean, clearHistory boolean, params Map<String,Object>) : void in class org.apache.cordova.CordovaWebView",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type event : String to callback : CustomViewCallback in method public showCustomView(view View, callback CustomViewCallback) : void in class org.apache.cordova.CordovaWebView",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type CordovaWebViewClient to CordovaWebViewEngine in method protected makeWebViewEngine() : CordovaWebViewEngine in class org.apache.cordova.CordovaActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public onCreateOptionsMenu(menu Menu) : boolean in class org.apache.cordova.CordovaActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to boolean in method public contains(name String) : boolean in class org.apache.cordova.CordovaPreferences",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type double to int in method public getInteger(name String, defaultValue int) : int in class org.apache.cordova.CordovaPreferences",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public isInitialized() : boolean in class org.apache.cordova.CordovaWebView",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public canGoBack() : boolean in class org.apache.cordova.CordovaWebView",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public backHistory() : boolean in class org.apache.cordova.CordovaWebView",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public shouldAllowRequest(url String) : boolean in class org.apache.cordova.PluginManager",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public shouldAllowNavigation(url String) : boolean in class org.apache.cordova.PluginManager",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type activityResultCallback : CordovaPlugin to cordovaInterface : CordovaInterfaceImpl in class org.apache.cordova.CordovaActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type p : CordovaPlugin to pm : PluginManager in method public onConfigurationChanged(newConfig Configuration) : void in class org.apache.cordova.CordovaActivity",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type httpClient : OkHttpClient to PLUGIN_URI_SCHEME : String in class org.apache.cordova.CordovaResourceApi",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type runnable : Runnable to engine : CordovaWebViewEngine in class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type sendMessageMethod : Method to delegate : OnlineEventsBridgeModeDelegate in class org.apache.cordova.NativeToJsMessageQueue.OnlineEventsBridgeMode",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type s : String to plugin : CordovaPlugin in method public onConfigurationChanged(newConfig Configuration) : void in class org.apache.cordova.PluginManager",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.apache.cordova.NativeToJsMessageQueue.PollingBridgeMode renamed to org.apache.cordova.NativeToJsMessageQueue.NoOpBridgeMode",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public showWebPage(url String, openExternal boolean, clearHistory boolean, params HashMap<String,Object>) : void from class org.apache.cordova.CordovaActivity to package showWebPage(url String, openExternal boolean, clearHistory boolean, params Map<String,Object>) : void from class org.apache.cordova.CordovaWebView",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDouble(name String, defaultValue double) : double renamed to public getInteger(name String, defaultValue int) : int in class org.apache.cordova.CordovaPreferences",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(name String, defaultValue String) : String renamed to public getDouble(name String, defaultValue double) : double in class org.apache.cordova.CordovaPreferences",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public NativeToJsMessageQueue(webView CordovaWebView, cordova CordovaInterface) renamed to public addBridgeMode(bridgeMode BridgeMode) : void in class org.apache.cordova.NativeToJsMessageQueue",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package PluginManager(cordovaWebView CordovaWebView, cordova CordovaInterface, pluginEntries List<PluginEntry>) renamed to public onReceivedClientCertRequest(view CordovaWebView, request ICordovaClientCertRequest) : boolean in class org.apache.cordova.PluginManager",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public loadPlugins() : void renamed to public onStart() : void in class org.apache.cordova.PluginManager",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public clearPluginObjects() : void renamed to public onStop() : void in class org.apache.cordova.PluginManager",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public exec(service String, action String, callbackId String, jsonArgs String, async boolean) : void renamed to public shouldAllowRequest(url String) : boolean in class org.apache.cordova.PluginManager",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public addService(entry PluginEntry) : void renamed to public shouldAllowNavigation(url String) : boolean in class org.apache.cordova.PluginManager",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public onReceivedHttpAuthRequest(view CordovaWebView, handler ICordovaHttpAuthHandler, host String, realm String) : boolean renamed to public shouldAllowBridgeAccess(url String) : boolean in class org.apache.cordova.PluginManager",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public loadUrl(url String, time int) : void renamed to public clearCache(b boolean) : void in class org.apache.cordova.CordovaWebView",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public loadUrlIntoView(url String) : void renamed to public clearHistory() : void in class org.apache.cordova.CordovaWebView",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public stopLoading() : void renamed to public handleStop() : void in class org.apache.cordova.CordovaWebView",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public onScrollChanged(l int, t int, oldl int, oldt int) : void renamed to public handleDestroy() : void in class org.apache.cordova.CordovaWebView",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private sendJavascriptEvent(event String) : void renamed to public showCustomView(view View, callback CustomViewCallback) : void in class org.apache.cordova.CordovaWebView",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public hideCustomView() : void renamed to public loadUrl(url String) : void in class org.apache.cordova.CordovaWebView",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected makeWebViewClient(webView CordovaWebView) : CordovaWebViewClient renamed to protected makeWebViewEngine() : CordovaWebViewEngine in class org.apache.cordova.CordovaActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected onPause() : void renamed to protected onStop() : void in class org.apache.cordova.CordovaActivity",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public postMessage(id String, data Object) : void renamed to protected onStart() : void in class org.apache.cordova.CordovaActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setActivityResultCallback(plugin CordovaPlugin) : void renamed to public onCreateOptionsMenu(menu Menu) : boolean in class org.apache.cordova.CordovaActivity",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public showWebPage(url String, openExternal boolean, clearHistory boolean, params HashMap<String,Object>...) : void renamed to public onConfigurationChanged(newConfig Configuration) : void in class org.apache.cordova.CordovaActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public hideCustomView() : void from class org.apache.cordova.CordovaWebView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public isCustomViewShowing() : boolean from class org.apache.cordova.CordovaWebView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public loadUrl(url String) : void from class org.apache.cordova.CordovaWebView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public stopLoading() : void from class org.apache.cordova.CordovaWebView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @JavascriptInterface in method public exec(bridgeSecret int, service String, action String, callbackId String, arguments String) : String from class org.apache.cordova.ExposedJsApi",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @JavascriptInterface in method public setNativeToJsBridgeMode(bridgeSecret int, value int) : void from class org.apache.cordova.ExposedJsApi",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @JavascriptInterface in method public retrieveJsMessages(bridgeSecret int, fromOnlineEvent boolean) : String from class org.apache.cordova.ExposedJsApi",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Deprecated in method public startupPlugins() : void from class org.apache.cordova.PluginManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @SuppressWarnings(\"deprecation\") to @SuppressWarnings({\"deprecation\",\"ResourceType\"}) in method protected createViews() : void from class org.apache.cordova.CordovaActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serviceName : String in method public privateInitialize(serviceName String, cordova CordovaInterface, webView CordovaWebView, preferences CordovaPreferences) : void from class org.apache.cordova.CordovaPlugin",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter queue : NativeToJsMessageQueue in method public onNativeToJsMessageAvailable(queue NativeToJsMessageQueue) : void from class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter queue : NativeToJsMessageQueue in method public notifyOfFlush(queue NativeToJsMessageQueue, fromOnlineEvent boolean) : void from class org.apache.cordova.NativeToJsMessageQueue.OnlineEventsBridgeMode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter queue : NativeToJsMessageQueue in method package abstract onNativeToJsMessageAvailable(queue NativeToJsMessageQueue) : void from class org.apache.cordova.NativeToJsMessageQueue.BridgeMode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter packageName : String in method public CordovaBridge(pluginManager PluginManager, jsMessageQueue NativeToJsMessageQueue, packageName String) from class org.apache.cordova.CordovaBridge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter loadedUrl : String in method public reset(loadedUrl String) : void from class org.apache.cordova.CordovaBridge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter urlFilters : List<String> in method private PluginEntry(service String, pluginClass String, onload boolean, plugin CordovaPlugin, urlFilters List<String>) from class org.apache.cordova.PluginEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Deprecated in method public setBooleanProperty(name String, value boolean) : void from class org.apache.cordova.CordovaActivity",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Deprecated in method public setStringProperty(name String, value String) : void from class org.apache.cordova.CordovaActivity",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Deprecated in method public getContext() : Context from class org.apache.cordova.CordovaActivity",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"deprecation\") in method private initIfNecessary() : void from class org.apache.cordova.CordovaWebView",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressLint(\"SetJavaScriptEnabled\") in method private initWebViewSettings() : void from class org.apache.cordova.CordovaWebView",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"deprecation\") in method private initWebViewSettings() : void from class org.apache.cordova.CordovaWebView",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @TargetApi(Build.VERSION_CODES.KITKAT) in method private enableRemoteDebugging() : void from class org.apache.cordova.CordovaWebView",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public setWebViewClient(client WebViewClient) : void from class org.apache.cordova.CordovaWebView",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public setWebChromeClient(client WebChromeClient) : void from class org.apache.cordova.CordovaWebView",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Deprecated in method public bindButton(override boolean) : void from class org.apache.cordova.CordovaWebView",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Deprecated in method public bindButton(button String, override boolean) : void from class org.apache.cordova.CordovaWebView",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Deprecated in method public isBackButtonBound() : boolean from class org.apache.cordova.CordovaWebView",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Deprecated in method public loadPlugins() : void from class org.apache.cordova.PluginManager",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Deprecated in method public clearPluginObjects() : void from class org.apache.cordova.PluginManager",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Deprecated in method public exec(service String, action String, callbackId String, jsonArgs String, async boolean) : void from class org.apache.cordova.PluginManager",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Deprecated in attribute public id : String from class org.apache.cordova.CordovaPlugin",
    "comment" : "<p>deleted field</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected init() : void from class org.apache.cordova.CordovaActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public OpenForReadResult(uri Uri, inputStream InputStream, mimeType String, length long, assetFd AssetFileDescriptor) from class org.apache.cordova.CordovaResourceApi.OpenForReadResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public popAndEncodeAsJs() : String from class org.apache.cordova.NativeToJsMessageQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public onNativeToJsMessageAvailable(queue NativeToJsMessageQueue) : void from class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public reset() : void from class org.apache.cordova.NativeToJsMessageQueue.OnlineEventsBridgeMode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public notifyOfFlush(queue NativeToJsMessageQueue, fromOnlineEvent boolean) : void from class org.apache.cordova.NativeToJsMessageQueue.OnlineEventsBridgeMode",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private startupPlugins() : void from class org.apache.cordova.PluginManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to public in attribute public jsThread : Thread from class org.apache.cordova.CordovaResourceApi",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute public service : String from class org.apache.cordova.PluginEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute public pluginClass : String from class org.apache.cordova.PluginEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute public plugin : CordovaPlugin from class org.apache.cordova.PluginEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute public onload : boolean from class org.apache.cordova.PluginEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter queue : NativeToJsMessageQueue in method public onNativeToJsMessageAvailable(queue NativeToJsMessageQueue) : void from class org.apache.cordova.NativeToJsMessageQueue.OnlineEventsBridgeMode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public onNativeToJsMessageAvailable(queue NativeToJsMessageQueue) : void from class org.apache.cordova.NativeToJsMessageQueue.OnlineEventsBridgeMode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter queue : NativeToJsMessageQueue in method package notifyOfFlush(queue NativeToJsMessageQueue, fromOnlineEvent boolean) : void from class org.apache.cordova.NativeToJsMessageQueue.BridgeMode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter url : String in method public loadUrlIntoView(url String, recreatePlugins boolean) : void from class org.apache.cordova.CordovaWebView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.apache.cordova.ExposedJsApi",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.cordova.NativeToJsMessageQueue.BridgeMode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.cordova.NativeToJsMessageQueue.OnlineEventsBridgeMode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class org.apache.cordova.NativeToJsMessageQueue.BridgeMode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class org.apache.cordova.NativeToJsMessageQueue.OnlineEventsBridgeMode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier final in class org.apache.cordova.PluginEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Type Declaration Kind",
    "description" : "Change Type Declaration Kind class to interface in type org.apache.cordova.CordovaWebView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Type Declaration Kind",
    "description" : "Change Type Declaration Kind class to interface in type org.apache.cordova.ExposedJsApi",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute registeredListeners : BridgeMode[] to bridgeModes : ArrayList<BridgeMode> in class org.apache.cordova.NativeToJsMessageQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type registeredListeners : BridgeMode[] to bridgeModes : ArrayList<BridgeMode> in class org.apache.cordova.NativeToJsMessageQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private registeredListeners : BridgeMode[] from class org.apache.cordova.NativeToJsMessageQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2163
}, {
  "id" : 1131658,
  "repository" : "https://github.com/realm/realm-java.git",
  "sha1" : "9b5b10a0c254017a48651771029f4dfc0a61bcfa",
  "url" : "https://github.com/realm/realm-java/commit/9b5b10a0c254017a48651771029f4dfc0a61bcfa",
  "author" : "Chen Mulong",
  "time" : "7/3/15 5:44 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private CASTING_TYPES : Map<String,String> from class io.realm.processor.RealmProxyClassGenerator to package CASTING_TYPES : Map<String,String> from class io.realm.processor.Constants",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private NULLABLE_JAVA_TYPES : Map<String,String> from class io.realm.processor.RealmProxyClassGenerator to package NULLABLE_JAVA_TYPES : Map<String,String> from class io.realm.processor.Constants",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private JAVA_TO_COLUMN_TYPES : Map<String,String> from class io.realm.processor.RealmProxyClassGenerator to package JAVA_TO_COLUMN_TYPES : Map<String,String> from class io.realm.processor.Constants",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private JAVA_TO_REALM_TYPES : Map<String,String> from class io.realm.processor.RealmProxyClassGenerator to package JAVA_TO_REALM_TYPES : Map<String,String> from class io.realm.processor.Constants",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package JAVA_TO_REALM_TYPES : Map<String,String> from class io.realm.processor.Constants",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package NULLABLE_JAVA_TYPES : Map<String,String> from class io.realm.processor.Constants",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package JAVA_TO_COLUMN_TYPES : Map<String,String> from class io.realm.processor.Constants",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package CASTING_TYPES : Map<String,String> from class io.realm.processor.Constants",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable e : IllegalArgumentException to ignored : IllegalArgumentException in method public testShouldThrowWhenSetIndexOnWrongColumnType() : void from class io.realm.internal.JNITableTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1247
}, {
  "id" : 1131681,
  "repository" : "https://github.com/CyanogenMod/android_frameworks_base.git",
  "sha1" : "3f2a0e7629d032712ab38ab1431cd0a9d91d4db6",
  "url" : "https://github.com/CyanogenMod/android_frameworks_base/commit/3f2a0e7629d032712ab38ab1431cd0a9d91d4db6",
  "author" : "d34d",
  "time" : "7/3/15 3:18 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private IDMAP_HASH_VERSION : byte from class com.android.server.pm.PackageManagerService to private IDMAP_HASH_VERSION : byte from class android.content.pm.ThemeUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 11201
}, {
  "id" : 1131689,
  "repository" : "https://github.com/orientechnologies/orientdb.git",
  "sha1" : "0a1ff849ec7709be8553383fe9c2c7301980dde0",
  "url" : "https://github.com/orientechnologies/orientdb/commit/0a1ff849ec7709be8553383fe9c2c7301980dde0",
  "author" : "Luigi Dell'Aquila",
  "time" : "7/3/15 5:48 AM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getDatabase() : ODatabaseDocumentInternal from class com.orientechnologies.orient.core.sql.parser.OStatement to public getDatabase() : ODatabaseDocumentInternal from class com.orientechnologies.orient.core.sql.parser.SimpleNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter left : Object to iLeft : Object in method public execute(iLeft Object, iRight Object) : boolean from class com.orientechnologies.orient.core.sql.parser.OEqualsCompareOperator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter right : Object to iLeft : Object in method public execute(iLeft Object, iRight Object) : boolean in class com.orientechnologies.orient.core.sql.parser.OEqualsCompareOperator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter left : Object to iRight : Object in method public execute(iLeft Object, iRight Object) : boolean in class com.orientechnologies.orient.core.sql.parser.OEqualsCompareOperator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter context : OCommandContext in method public execute(request OSQLAsynchQuery<ODocument>, context OCommandContext) : Object from class com.orientechnologies.orient.core.sql.parser.OMatchStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter iArgs : Map<Object,Object> in method public execute(iArgs Map<Object,Object>, request OSQLAsynchQuery<ODocument>) : Object from class com.orientechnologies.orient.core.sql.parser.OMatchStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable right : Object in method public execute(iLeft Object, iRight Object) : boolean from class com.orientechnologies.orient.core.sql.parser.OEqualsCompareOperator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter right : Object to right : Object in method public execute(iLeft Object, iRight Object) : boolean from class com.orientechnologies.orient.core.sql.parser.OEqualsCompareOperator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter iRight : Object in method public execute(iLeft Object, iRight Object) : boolean from class com.orientechnologies.orient.core.sql.parser.OEqualsCompareOperator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2618
}, {
  "id" : 1131927,
  "repository" : "https://github.com/square/wire.git",
  "sha1" : "85a690e3cdbbb8447342eefdf690e22ad1b33e02",
  "url" : "https://github.com/square/wire/commit/85a690e3cdbbb8447342eefdf690e22ad1b33e02",
  "author" : "jwilson",
  "time" : "7/3/15 1:18 AM",
  "refactorings" : [ {
    "type" : "Rename Class",
    "description" : "Rename Class com.squareup.wire.model.LinkerTest renamed to com.squareup.wire.model.OptionsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public optionMatches(options List<WireOption>, namePattern String, valuePattern String) : boolean from class com.squareup.wire.internal.Util to public optionMatches(namePattern String, valuePattern String) : boolean from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package resolveFieldPath(name String, fullyQualifiedNames Set<String>) : String[] from class com.squareup.wire.model.Linker to package resolveFieldPath(name String, fullyQualifiedNames Set<String>) : String[] from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public packageName() : String from class com.squareup.wire.model.WireOption to public packageName() : String from class com.squareup.wire.model.Options",
    "comment" : "<p>added</p><p>The class WireOption is deleted. Consistently, wherever we had&nbsp;List&lt;WireOption&gt; we now have Options</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type type : TypeName to type : ProtoTypeName in method private fieldInitializer(type ProtoTypeName, value Object) : CodeBlock from class com.squareup.wire.java.TypeWriter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type options : List<WireOption> to options : Options in method package WireEnum(protoTypeName ProtoTypeName, element EnumElement, constants List<WireEnumConstant>, options Options) from class com.squareup.wire.model.WireEnum",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type options : List<WireOption> to options : Options in method public WireMessage(protoTypeName ProtoTypeName, element MessageElement, fields List<WireField>, oneOfs List<WireOneOf>, nestedTypes List<WireType>, options Options) from class com.squareup.wire.model.WireMessage",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type options : List<WireOption> to options : Options in method private WireProtoFile(sourcePath String, protoFile ProtoFile, types List<WireType>, services List<WireService>, wireExtends List<WireExtend>, options Options) from class com.squareup.wire.model.WireProtoFile",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type options : List<WireOption> to options : Options in method private WireService(protoTypeName ProtoTypeName, element ServiceElement, rpcs List<WireRpc>, options Options) from class com.squareup.wire.model.WireService",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public options() : Options from class com.squareup.wire.model.WireEnum",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public options() : Options from class com.squareup.wire.model.WireEnumConstant",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public options() : Options from class com.squareup.wire.model.WireField",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type WireOption to Object in method public getDefault() : Object from class com.squareup.wire.model.WireField",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public options() : Options from class com.squareup.wire.model.WireMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public options() : Options from class com.squareup.wire.model.WireProtoFile",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public options() : Options from class com.squareup.wire.model.WireRpc",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public options() : Options from class com.squareup.wire.model.WireService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public abstract options() : Options from class com.squareup.wire.model.WireType",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable option : WireOption to type : WireType in method public link(wireProtoFiles Collection<WireProtoFile>) : void in class com.squareup.wire.model.Linker",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable option : WireOption to rpc : WireRpc in method package linkOptions(linker Linker) : void in class com.squareup.wire.model.WireService",
    "comment" : "<p>The method linkOptions() is not extracted from <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>link</span></span>() to consider there is a relationship between statements<br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>for</span> (<span class='pl-smi'>WireOption</span> option <span class='pl-k'>:</span> options)<br /><span class='pl-k'>for</span> (<span class='pl-smi'>WireRpc</span> rpc <span class='pl-k'>:</span> rpcs)</span><br /><br /></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type javaPackageOption : WireOption to javaPackageOption : Object in method private javaPackage(wireProtoFile WireProtoFile) : String from class com.squareup.wire.java.JavaGenerator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type options : List<WireOption> to options : Options in class com.squareup.wire.model.WireEnum",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type options : List<WireOption> to options : Options in class com.squareup.wire.model.WireEnumConstant",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type options : List<WireOption> to options : Options in class com.squareup.wire.model.WireField",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type options : List<WireOption> to options : Options in class com.squareup.wire.model.WireMessage",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type options : List<WireOption> to options : Options in class com.squareup.wire.model.WireProtoFile",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type options : List<WireOption> to options : Options in class com.squareup.wire.model.WireRpc",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type options : List<WireOption> to options : Options in class com.squareup.wire.model.WireService",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type defaultValue : WireEnumConstant to optionsFieldName : String in method private fieldOptionsField(field WireField) : FieldSpec in class com.squareup.wire.java.TypeWriter",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type fieldDefault : WireOption to defaultValue : Object in method private defaultValue(field WireField) : CodeBlock from class com.squareup.wire.java.TypeWriter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type javaType : TypeName to extensionRoot : WireField in method private fieldOptionsField(field WireField) : FieldSpec in class com.squareup.wire.java.TypeWriter",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type candidate : String to fullyQualifiedExtensionField : WireField in method package dereference(packageName String, self WireField, field String) : WireField in class com.squareup.wire.model.Linker",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type option : WireOption to type : WireType in method public link(wireProtoFiles Collection<WireProtoFile>) : void in class com.squareup.wire.model.Linker",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type option : WireOption to field : WireField in method private markOptions(options Options) : void from class com.squareup.wire.model.Pruner",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type option : WireOption to linker : Linker in method package linkOptions(linker Linker) : void in class com.squareup.wire.model.WireField",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type option : OptionElement to linker : Linker in method package linkOptions(linker Linker) : void in class com.squareup.wire.model.WireRpc",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type option : WireOption to rpc : WireRpc in method package linkOptions(linker Linker) : void in class com.squareup.wire.model.WireService",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public findOption(options List<WireOption>, name String) : WireOption from class com.squareup.wire.internal.Util to public get(name String) : Object from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method package fieldPath(packageName String, extensionType ProtoTypeName, fieldPath String) : List<WireField> from class com.squareup.wire.model.Linker to package canonicalizeOption(linker Linker, extensionType ProtoTypeName, option OptionElement) : Map<WireField,Object> from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type WireOption to Object in method public get(name String) : Object from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireField> to Map<WireField,Object> in method package canonicalizeOption(linker Linker, extensionType ProtoTypeName, option OptionElement) : Map<WireField,Object> from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package link(linker Linker) : void renamed to package linkOptions(linker Linker) : void in class com.squareup.wire.model.WireEnum",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package link(linker Linker) : void renamed to package linkOptions(linker Linker) : void in class com.squareup.wire.model.WireField",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter extensionFieldToFile : ImmutableMap<WireField,WireProtoFile> in method public JavaGenerator(wireToJava ImmutableMap<ProtoTypeName,TypeName>, wireToType ImmutableMap<ProtoTypeName,WireType>, extensionFieldToFile ImmutableMap<WireField,WireProtoFile>) from class com.squareup.wire.java.JavaGenerator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter options : List<WireOption> in method public findOption(options List<WireOption>, name String) : WireOption from class com.squareup.wire.internal.Util",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter options : List<WireOption> in method public optionMatches(options List<WireOption>, namePattern String, valuePattern String) : boolean from class com.squareup.wire.internal.Util",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method public findOption(options List<WireOption>, name String) : WireOption from class com.squareup.wire.internal.Util",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method public optionMatches(options List<WireOption>, namePattern String, valuePattern String) : boolean from class com.squareup.wire.internal.Util",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter linker : Linker in method package canonicalizeOption(linker Linker, extensionType ProtoTypeName, option OptionElement) : Map<WireField,Object> from class com.squareup.wire.model.Options",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter option : OptionElement in method package canonicalizeOption(linker Linker, extensionType ProtoTypeName, option OptionElement) : Map<WireField,Object> from class com.squareup.wire.model.Options",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter packageName : String in method package fieldPath(packageName String, extensionType ProtoTypeName, fieldPath String) : List<WireField> from class com.squareup.wire.model.Linker",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter fieldPath : String in method package fieldPath(packageName String, extensionType ProtoTypeName, fieldPath String) : List<WireField> from class com.squareup.wire.model.Linker",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type options : List<WireOption> to options : Options in method public get(protoTypeName ProtoTypeName, element ServiceElement) : WireService from class com.squareup.wire.model.WireService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type options : List<WireOption> to options : Options in method public get(sourcePath String, protoFile ProtoFile) : WireProtoFile from class com.squareup.wire.model.WireProtoFile",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type options : List<WireOption> to options : Options in method package get(protoTypeName ProtoTypeName, type TypeElement) : WireType from class com.squareup.wire.model.WireType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable javaType : TypeName in method private fieldInitializer(type ProtoTypeName, value Object) : CodeBlock from class com.squareup.wire.java.TypeWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type found : WireOption to found : OptionElement in method public get(name String) : Object from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type option : WireOption to option : OptionElement in method public get(name String) : Object from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type option : WireOption to option : OptionElement in method public optionMatches(namePattern String, valuePattern String) : boolean from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1132279,
  "repository" : "https://github.com/JetBrains/MPS.git",
  "sha1" : "fe6653db5fb9f1a25d5ee30e4d5d54ccdaba65fa",
  "url" : "https://github.com/JetBrains/MPS/commit/fe6653db5fb9f1a25d5ee30e4d5d54ccdaba65fa",
  "author" : "Simon Alperovich",
  "time" : "7/2/15 5:52 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private createManyCells() : EditorCell_Collection inlined to public createCell() : EditorCell in class jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private createSingleCell() : EditorCell inlined to public createCell() : EditorCell in class jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter cell : EditorCell to editorContext : EditorContext in method private needToComment(editorContext EditorContext) : boolean in class jetbrains.mps.editor.runtime.impl.cellActions.CellAction_Comment",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type cell : EditorCell to editorContext : EditorContext in method private needToComment(editorContext EditorContext) : boolean in class jetbrains.mps.editor.runtime.impl.cellActions.CellAction_Comment",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public canExecute(editorContext EditorContext) : boolean in class jetbrains.mps.editor.runtime.impl.cellActions.CellAction_Comment",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>execute</span>(<span class='pl-smi'>EditorContext</span> <span class='pl-v'>editorContext</span>)</span> still exists in child commit</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public canExecute(context EditorContext) : boolean in class jetbrains.mps.editor.runtime.impl.cellActions.Cell_Action_Uncomment",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en x'>execute</span><span class='x'>(</span><span class='pl-smi x'>EditorContext</span> <span class='pl-v x'>editorContext</span><span class='x x-last'>) still exists in child commit<br /></span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type containmentLink : SContainmentLink to selection : Selection in method public canExecute(editorContext EditorContext) : boolean in class jetbrains.mps.editor.runtime.impl.cellActions.CellAction_Comment",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type parentCell : EditorCell to selection : Selection in method public execute(editorContext EditorContext) : void in class jetbrains.mps.editor.runtime.impl.cellActions.CellAction_Comment",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable selection : Selection in method public doExecute(event AnActionEvent, _params Map<String,Object>) : void from class jetbrains.mps.ide.editor.actions.Comment_Action",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private createManyCells() : EditorCell_Collection renamed to public createCell() : EditorCell in class jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public execute(editorContext EditorContext) : void renamed to public canExecute(context EditorContext) : boolean in class jetbrains.mps.editor.runtime.impl.cellActions.Cell_Action_Uncomment",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public execute(editorContext EditorContext) : void renamed to public canExecute(editorContext EditorContext) : boolean in class jetbrains.mps.editor.runtime.impl.cellActions.CellAction_Comment",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 13014
}, {
  "id" : 1132496,
  "repository" : "https://github.com/jboss-developer/jboss-eap-quickstarts.git",
  "sha1" : "983e0e0e22ab5bd2c6ea44235518057ea45dcca9",
  "url" : "https://github.com/jboss-developer/jboss-eap-quickstarts/commit/983e0e0e22ab5bd2c6ea44235518057ea45dcca9",
  "author" : "Bruno Oliveira",
  "time" : "7/2/15 10:09 PM",
  "refactorings" : [ {
    "type" : "Rename Package",
    "description" : "Rename Package org.jboss.as.quickstarts.poh5helloworld to org.jboss.as.quickstarts.html5rest",
    "comment" : "<p>The package renaming is TP</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.quickstarts.poh5helloworld.HelloWorld moved to org.jboss.as.quickstarts.html5rest.HelloWorld",
    "comment" : "<p>Since RefDiff does not detect rename package we consider it as CTP</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.quickstarts.poh5helloworld.HelloService moved to org.jboss.as.quickstarts.html5rest.HelloService",
    "comment" : "<p>Since RefDiff does not detect rename package we consider it as CTP</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1132646,
  "repository" : "https://github.com/CyanogenMod/android_frameworks_base.git",
  "sha1" : "4587c32ab8a1c8e2169e4f93491a8c927216a6ab",
  "url" : "https://github.com/CyanogenMod/android_frameworks_base/commit/4587c32ab8a1c8e2169e4f93491a8c927216a6ab",
  "author" : "Charles Tsai",
  "time" : "7/6/15 3:49 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private startAsync() : void extracted from public start() : void in class com.android.systemui.usb.StorageNotification",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 5921
}, {
  "id" : 1132674,
  "repository" : "https://github.com/orientechnologies/orientdb.git",
  "sha1" : "f50f234b24e6ada29c82ce57830118508bf55d51",
  "url" : "https://github.com/orientechnologies/orientdb/commit/f50f234b24e6ada29c82ce57830118508bf55d51",
  "author" : "laa",
  "time" : "7/6/15 10:20 AM",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method public getAllocatedPages() : long renamed to public getExclusiveWriteCachePagesSize() : long in class com.orientechnologies.orient.core.storage.impl.memory.ODirectMemoryOnlyDiskCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Package",
    "description" : "Move Package com.orientechnologies.orient.core.index.hashindex.local.cache to com.orientechnologies.orient.core.storage.cache.local",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface com.orientechnologies.orient.core.storage.cache.local.OWOWCacheMXBean from class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : "<p>The methods of interface OWOWCacheMXBean<br />long getWriteCacheSize();<br />long getWriteCacheSizeInMB();<br />double getWriteCacheSizeInGB();<br />long getExclusiveWriteCacheSize();<br />long getExclusiveWriteCacheSizeInMB();<br />double getExclusiveWriteCacheSizeInGB();<br />Date getLastFuzzyCheckpointDate();<br />long getLastAmountOfFlushedPages();<br />long getDurationOfLastFlush();<br />did not exist in class OWOWCache before implementing OWOWCacheMXBean</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.HashLRUListTest moved to com.orientechnologies.orient.core.storage.cache.local.HashLRUListTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.LRUEntry moved to com.orientechnologies.orient.core.storage.cache.local.LRUEntry",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.LRUList moved to com.orientechnologies.orient.core.storage.cache.local.LRUList",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OBlockedPageException moved to com.orientechnologies.orient.core.storage.cache.OBlockedPageException",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OPageDataVerificationError moved to com.orientechnologies.orient.core.storage.cache.OPageDataVerificationError",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OReadCache moved to com.orientechnologies.orient.core.storage.cache.OReadCache",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.PageGroup moved to com.orientechnologies.orient.core.storage.cache.local.PageGroup",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.SynchronizedLRUList moved to com.orientechnologies.orient.core.storage.cache.local.SynchronizedLRUList",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OCachePointer moved to com.orientechnologies.orient.core.storage.cache.OCachePointer",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.ConcurrentLRUList moved to com.orientechnologies.orient.core.storage.cache.local.ConcurrentLRUList",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.ReadWriteDiskCacheTest moved to com.orientechnologies.orient.core.storage.cache.local.ReadWriteDiskCacheTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.HashLRUList moved to com.orientechnologies.orient.core.storage.cache.local.HashLRUList",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OWOWCache moved to com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache.PageKey moved to com.orientechnologies.orient.core.storage.cache.local.O2QCache.PageKey",
    "comment" : "<p>Outer class O2QCache is moved<br />http://refactoring.encs.concordia.ca/oracle/refactoring-details/1132674/4679</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache.PinnedPage moved to com.orientechnologies.orient.core.storage.cache.local.O2QCache.PinnedPage",
    "comment" : "<p>Outer class O2QCache is moved<br />http://refactoring.encs.concordia.ca/oracle/refactoring-details/1132674/4679</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache.UpdateCacheResult moved to com.orientechnologies.orient.core.storage.cache.local.O2QCache.UpdateCacheResult",
    "comment" : "<p>Outer class O2QCache is moved<br />http://refactoring.encs.concordia.ca/oracle/refactoring-details/1132674/4679</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAllocatedPages() : long renamed to public getWriteCacheSize() : long in class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addFile(fileName String, writeCache OWriteCache) : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public addFile(fileName String, writeCache OWriteCache) : long from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public clear() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public clear() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public closeFile(fileId long, flush boolean, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public closeFile(fileId long, flush boolean, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public closeStorage(writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public closeStorage(writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public deleteFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public deleteFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public deleteStorage(writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public deleteStorage(writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private get(fileId long, pageIndex long, useOutQueue boolean) : OCacheEntry from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private get(fileId long, pageIndex long, useOutQueue boolean) : OCacheEntry from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package getA1in() : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to package getA1in() : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package getA1out() : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to package getA1out() : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package getAm() : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to package getAm() : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package getMaxSize() : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to package getMaxSize() : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getUsedMemory() : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public getUsedMemory() : long from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private normalizeMemory(maxSize long, pageSize int) : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private normalizeMemory(maxSize long, pageSize int) : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public openFile(fileName String, writeCache OWriteCache) : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public openFile(fileName String, writeCache OWriteCache) : long from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private removeColdestPagesIfNeeded() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private removeColdestPagesIfNeeded() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public truncateFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public truncateFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public acquireExclusiveLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public acquireExclusiveLock() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public acquireSharedLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public acquireSharedLock() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public decrementUsages() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public decrementUsages() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getCachePointer() : OCachePointer from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public getCachePointer() : OCachePointer from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getFileId() : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public getFileId() : long from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getPageIndex() : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public getPageIndex() : long from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getUsagesCount() : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public getUsagesCount() : int from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public incrementUsages() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public incrementUsages() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public releaseExclusiveLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public releaseExclusiveLock() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public releaseSharedLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public releaseSharedLock() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public allocateNewPage(fileId long, writeCache OWriteCache) : OCacheEntry from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public allocateNewPage(fileId long, writeCache OWriteCache) : OCacheEntry from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public load(fileId long, pageIndex long, checkPinnedPages boolean, writeCache OWriteCache) : OCacheEntry from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public load(fileId long, pageIndex long, checkPinnedPages boolean, writeCache OWriteCache) : OCacheEntry from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public hashCode() : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public hashCode() : int from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private updateCache(fileId long, pageIndex long, addNewPages boolean, writeCache OWriteCache) : UpdateCacheResult from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private updateCache(fileId long, pageIndex long, addNewPages boolean, writeCache OWriteCache) : UpdateCacheResult from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public equals(o Object) : boolean from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public equals(o Object) : boolean from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private doLoad(fileId long, pageIndex long, checkPinnedPages boolean, addNewPages boolean, writeCache OWriteCache) : UpdateCacheResult from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private doLoad(fileId long, pageIndex long, checkPinnedPages boolean, addNewPages boolean, writeCache OWriteCache) : UpdateCacheResult from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private remove(fileId long, pageIndex long) : OCacheEntry from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private remove(fileId long, pageIndex long) : OCacheEntry from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private clearFile(fileId long) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private clearFile(fileId long) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private removeColdPagesWithoutCacheLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private removeColdPagesWithoutCacheLock() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public pinPage(cacheEntry OCacheEntry) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public pinPage(cacheEntry OCacheEntry) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private removeColdPagesWithCacheLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private removeColdPagesWithCacheLock() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public release(cacheEntry OCacheEntry, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public release(cacheEntry OCacheEntry, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public toString() : String from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private clearPinnedPages() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private clearPinnedPages() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private clearCacheContent() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private clearCacheContent() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public clearCachePointer() : void extracted from private clearCacheContent() : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache & moved to class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "<p>Extract and Move to the inner class</p><p><span class='pl-en'>Extract and Move to OCacheEntry</span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public clearCachePointer() : void extracted from private clearPinnedPages() : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache & moved to class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to <span class='pl-en'>OCacheEntry</span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public clearCachePointer() : void extracted from private clearFile(fileId long) : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache & moved to class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to class <span class='pl-smi'>OCacheEntry</span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public clearCachePointer() : void extracted from private removeColdPagesWithCacheLock() : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache & moved to class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to <span class='blob-code-inner'><span class='pl-smi'>OCacheEntry</span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public clearCachePointer() : void extracted from private removeColdPagesWithoutCacheLock() : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache & moved to class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to class OCacheEntry</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public clearDirty() : void extracted from public release(cacheEntry OCacheEntry, writeCache OWriteCache) : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache & moved to class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to class OCacheEntry</p><p>Field isDirty renamed to dirty (overlapping refactoring)</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private MAX_CACHE_OVERFLOW : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private MAX_CACHE_OVERFLOW : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public MIN_CACHE_SIZE : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public MIN_CACHE_SIZE : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private cacheLock : OReadersWriterSpinLock from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private cacheLock : OReadersWriterSpinLock from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private coldPagesRemovalInProgress : AtomicBoolean from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private coldPagesRemovalInProgress : AtomicBoolean from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private pageSize : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private pageSize : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private maxSize : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private maxSize : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private fileLockManager : ONewLockManager from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private fileLockManager : ONewLockManager from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private pageLockManager : ONewLockManager<PageKey> from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private pageLockManager : ONewLockManager<PageKey> from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private pinnedPages : ConcurrentMap<PinnedPage,OCacheEntry> from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private pinnedPages : ConcurrentMap<PinnedPage,OCacheEntry> from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private a1out : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private a1out : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private am : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private am : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private filePages : ConcurrentMap<Long,Set<Long>> from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private filePages : ConcurrentMap<Long,Set<Long>> from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private a1in : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private a1in : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private K_OUT : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private K_OUT : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private K_IN : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private K_IN : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "its a move package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry moved to com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache moved to com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setCachePointer(cachePointer OCachePointer) : void extracted from private updateCache(fileId long, pageIndex long, addNewPages boolean, writeCache OWriteCache) : UpdateCacheResult in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache & moved to class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute writePages : ConcurrentSkipListSet<PagedKey> to exclusiveWritePages : ConcurrentSkipListSet<PagedKey> in class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute isDirty : boolean to dirty : boolean in class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute writeCacheSize : ODistributedCounter to exclusiveWriteCacheSize : ODistributedCounter in class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute cachePages : ConcurrentSkipListMap<PagedKey,PageGroup> to writeCachePages : ConcurrentSkipListMap<PagedKey,PageGroup> in class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute cacheSize : ODistributedCounter to writeCacheSize : ODistributedCounter in class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAllocatedPages() : long renamed to public getExclusiveWriteCachePagesSize() : long in class com.orientechnologies.orient.core.storage.cache.OWriteCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type readCache : OReadCache to readCache : O2QCache in class com.orientechnologies.orient.core.engine.local.OEngineLocalPaginated",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addFile(fileName String, fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public addFile(fileName String, fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public openFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public openFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public openFile(fileName String, fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public openFile(fileName String, fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface com.orientechnologies.orient.core.storage.cache.local.O2QCacheMXBean from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache",
    "comment" : "<p>The methods of interface O2QCacheMXBean<br />int getA1InSize();<br />int getA1OutSize();<br />int getAmSize();<br />double getCacheHits();<br />void clearCacheStatistics();<br />long getUsedMemory();<br />long getUsedMemoryInMB();<br />double getUsedMemoryInGB();<br />did not exist in class O2QCache before implementing O2QCacheMXBean</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFlushedLSN() : OLogSequenceNumber renamed to public log(record OWALRecord) : OLogSequenceNumber in class com.orientechnologies.orient.core.storage.impl.local.paginated.wal.OMemoryWriteAheadLog",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getWriteCacheSize() : long from class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public getLastFlushedLsn() : OLogSequenceNumber from class com.orientechnologies.orient.core.storage.cache.OCachePointer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public setLastFlushedLsn(lastFlushedLsn OLogSequenceNumber) : void from class com.orientechnologies.orient.core.storage.cache.OCachePointer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute package dataPointer : OCachePointer from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute package dirty : boolean from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 5282
}, {
  "id" : 1132736,
  "repository" : "https://github.com/VoltDB/voltdb.git",
  "sha1" : "05bd8ecda456e0901ef7375b9ff7b120ae668eca",
  "url" : "https://github.com/VoltDB/voltdb/commit/05bd8ecda456e0901ef7375b9ff7b120ae668eca",
  "author" : "peter shaw",
  "time" : "7/6/15 4:02 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class exportbenchmark.SocketExporter moved to exportbenchmark2.exporter.exportbenchmark.SocketExporter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class exportbenchmark.Connect2Server moved to exportbenchmark2.client.exportbenchmark.Connect2Server",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class exportbenchmark.procedures.TruncateTables moved to exportbenchmark2.db.exportbenchmark.procedures.TruncateTables",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class exportbenchmark.procedures.InsertExport5 moved to exportbenchmark2.db.exportbenchmark.procedures.InsertExport5",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class exportbenchmark.procedures.InsertExport10 moved to exportbenchmark2.db.exportbenchmark.procedures.InsertExport10",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class exportbenchmark.procedures.InsertExport moved to exportbenchmark2.db.exportbenchmark.procedures.InsertExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class exportbenchmark.procedures.SampleRecord moved to exportbenchmark2.db.exportbenchmark.procedures.SampleRecord",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class exportbenchmark.procedures.InsertExport0 moved to exportbenchmark2.db.exportbenchmark.procedures.InsertExport0",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class exportbenchmark.procedures.InsertExport1 moved to exportbenchmark2.db.exportbenchmark.procedures.InsertExport1",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class exportbenchmark.NoOpExporter moved to exportbenchmark2.exporter.exportbenchmark.NoOpExporter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class exportbenchmark.ExportBenchmark moved to exportbenchmark2.client.exportbenchmark.ExportBenchmark",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public doInserts(client Client, ratio int) : void from class exportbenchmark.ExportBenchmark to public doInserts(client Client, ratio int) : void from class exportbenchmark2.client.exportbenchmark.ExportBenchmark",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class exportbenchmark.ExportBenchmark.ExportCallback moved to exportbenchmark2.client.exportbenchmark.ExportBenchmark.ExportCallback",
    "comment" : "<p>Move Class exportbenchmark.ExportBenchmark moved to exportbenchmark2.client.exportbenchmark.ExportBenchmark</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class exportbenchmark.ExportBenchmark.ExportBenchConfig moved to exportbenchmark2.client.exportbenchmark.ExportBenchmark.ExportBenchConfig",
    "comment" : "<p>Move Class exportbenchmark.ExportBenchmark moved to exportbenchmark2.client.exportbenchmark.ExportBenchmark</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1132974,
  "repository" : "https://github.com/hazelcast/hazelcast.git",
  "sha1" : "c00275e7f85c8a9af5785f66cc0f75dc027b6cb6",
  "url" : "https://github.com/hazelcast/hazelcast/commit/c00275e7f85c8a9af5785f66cc0f75dc027b6cb6",
  "author" : "mustafaiman",
  "time" : "7/6/15 5:59 AM",
  "refactorings" : [ {
    "type" : "Push Down Method",
    "description" : "Push Down Method protected getConnection() : HazelcastConnection from class com.hazelcast.jca.AbstractDeploymentTest to protected getConnection() : HazelcastConnection from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public Init() : void renamed to public init() : void in class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute protected connectionFactory : HazelcastConnectionFactory from class com.hazelcast.jca.AbstractDeploymentTest to private connectionFactory : HazelcastConnectionFactory from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected connectionFactory : HazelcastConnectionFactory from class com.hazelcast.jca.AbstractDeploymentTest to private connectionFactory : HazelcastConnectionFactory from class com.hazelcast.jca.ConnectionFactoryImplTest",
    "comment" : "Matin: FP",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deploymentHzRar() : ResourceAdapterArchive renamed to public createResourceAdapterDeployment() : ResourceAdapterArchive in class com.hazelcast.jca.AbstractDeploymentTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @BeforeClass in method public init() : void from class com.hazelcast.jca.XATransactionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @InSequence(2) in method public testTransactionCommit() : void from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Ignore in method public testTransactionCommit() : void from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @InSequence(1) in method public testTransactionRollback() : void from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Ignore in method public testTransactionRollback() : void from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Before in method public Init() : void from class com.hazelcast.jca.XATransactionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Resource(mappedName = \"java:jboss/UserTransaction\") in attribute private userTx : UserTransaction from class com.hazelcast.jca.XATransactionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Resource(mappedName = \"java:jboss/datasources/ExampleDS\") in attribute protected h2Datasource : DataSource from class com.hazelcast.jca.XATransactionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @RunWith(Arquillian.class) in class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @Category(SlowTest.class) in class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @Ignore in class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type NamingException in method public init() : void from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected doSql() : void from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected validateSQLdata(hasdata boolean) : void from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to private in attribute private connection : HazelcastConnection from class com.hazelcast.jca.XATestWithJCA",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to private in attribute private instance : HazelcastInstance from class com.hazelcast.jca.XATestWithJCA",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private h2Datasource : DataSource from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private connectionFactory : HazelcastConnectionFactory from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Resource(mappedName = \"java:/HazelcastCF\") in attribute protected connectionFactory : HazelcastConnectionFactory from class com.hazelcast.jca.AbstractDeploymentTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method public init() : void from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier static in attribute private userTx : UserTransaction from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier static in attribute private h2Datasource : DataSource from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier static in attribute private connectionFactory : HazelcastConnectionFactory from class com.hazelcast.jca.XATransactionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2426
}, {
  "id" : 1132984,
  "repository" : "https://github.com/wildfly/wildfly.git",
  "sha1" : "c0f8a7f2b4341601df63c5470f41f157dbd83781",
  "url" : "https://github.com/wildfly/wildfly/commit/c0f8a7f2b4341601df63c5470f41f157dbd83781",
  "author" : "Josh Kinlaw",
  "time" : "7/6/15 3:03 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private standaloneCollect(cli CLI, protocol String, host String, port int) : void extracted from public main(args String[]) : void in class org.jboss.as.jdr.CommandLineMain",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type port : String to port : int in method public JdrRunner(cli CLI, protocol String, host String, port int, user String, pass String) from class org.jboss.as.jdr.JdrRunner",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type port : String to cli : CLI in method public standaloneCollect(cli CLI, protocol String, host String, port int) : JdrReport in class org.jboss.as.jdr.JdrReportService",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setCli(cli CLI) : void extracted from public JdrRunner(protocol String, user String, pass String, host String, port String) in class org.jboss.as.jdr.JdrRunner & moved to class org.jboss.as.jdr.commands.JdrEnvironment",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public collect() : JdrReport from class org.jboss.as.jdr.JdrRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter cli : CLI in method public JdrRunner(cli CLI, protocol String, host String, port int, user String, pass String) from class org.jboss.as.jdr.JdrRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private parser : CommandLineParser from class org.jboss.as.jdr.CommandLineMain",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private options : Options from class org.jboss.as.jdr.CommandLineMain",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private formatter : HelpFormatter from class org.jboss.as.jdr.CommandLineMain",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Reorder Parameter",
    "description" : "Reorder Parameter [protocol : String, user : String, pass : String, host : String, port : String] to [cli : CLI, protocol : String, host : String, port : int, user : String, pass : String] in method public JdrRunner(cli CLI, protocol String, host String, port int, user String, pass String) from class org.jboss.as.jdr.JdrRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1133054,
  "repository" : "https://github.com/WhisperSystems/Signal-Android.git",
  "sha1" : "fa62b9bde224341e0c2d43c0694fc10c4df7336f",
  "url" : "https://github.com/WhisperSystems/Signal-Android/commit/fa62b9bde224341e0c2d43c0694fc10c4df7336f",
  "author" : "Jake McGinty",
  "time" : "7/6/15 8:50 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private init() : void inlined to public EmojiDrawer(context Context, attrs AttributeSet, defStyle int) in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private initializeResources() : void inlined to private initialize() : void in class org.thoughtcrime.securesms.components.emoji.EmojiToggle",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected onKeyboardShown(keyboardHeight int) : void renamed to protected onKeyboardOpen(keyboardHeight int) : void in class org.thoughtcrime.securesms.components.KeyboardAwareLinearLayout",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private hideEmojiPopup(expectingKeyboard boolean) : void extracted from public onClick(v View) : void in class org.thoughtcrime.securesms.ConversationActivity.ComposeKeyPressedListener & moved to class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : "<p>Extract and Move to the outer class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private hideEmojiPopup(expectingKeyboard boolean) : void extracted from public onBackPressed() : void in class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private hideEmojiPopup(expectingKeyboard boolean) : void extracted from public onFocusChange(v View, hasFocus boolean) : void in class org.thoughtcrime.securesms.ConversationActivity.ComposeKeyPressedListener & moved to class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : "<p>Extract and Move to the outer class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute rect : Rect to newRect : Rect in class org.thoughtcrime.securesms.components.KeyboardAwareLinearLayout",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute emojiDrawer : Optional<EmojiDrawer> to emojiPopup : Optional<EmojiPopup> in class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute composeText : EmojiEditText to listener : EmojiEventListener in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type emojiDrawer : Optional<EmojiDrawer> to emojiPopup : Optional<EmojiPopup> in class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type composeText : EmojiEditText to listener : EmojiEventListener in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type container : KeyboardAwareLinearLayout to container : LinearLayout in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable emojiDrawer : EmojiDrawer to emojiPopup : EmojiPopup in method private getEmojiPopup() : EmojiPopup in class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter composeText : EmojiEditText to listener : EmojiEventListener in method public setEmojiEventListener(listener EmojiEventListener) : void from class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type composeText : EmojiEditText to listener : EmojiEventListener in method public setEmojiEventListener(listener EmojiEventListener) : void from class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type EmojiDrawer to EmojiPopup in method private getEmojiPopup() : EmojiPopup in class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type emojiDrawer : EmojiDrawer to emojiPopup : EmojiPopup in method private getEmojiPopup() : EmojiPopup from class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type composeText : EmojiEditText to container : LinearLayout in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type container : KeyboardAwareLinearLayout to listener : EmojiEventListener in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setComposeEditText(composeText EmojiEditText) : void renamed to public setEmojiEventListener(listener EmojiEventListener) : void in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public setOnClickListener(listener OnClickListener) : void inlined to private initializeViews() : void in class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOnClickListener(listener OnClickListener) : void renamed to public setToEmoji() : void in class org.thoughtcrime.securesms.components.emoji.EmojiToggle",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public toggle() : void renamed to public setToIme() : void in class org.thoughtcrime.securesms.components.emoji.EmojiToggle",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private initializeResources() : void renamed to private initialize() : void in class org.thoughtcrime.securesms.components.emoji.EmojiToggle",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private init() : void renamed to public EmojiDrawer(context Context, attrs AttributeSet, defStyle int) in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getEmojiDrawer() : EmojiDrawer renamed to private getEmojiPopup() : EmojiPopup in class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @TargetApi(Build.VERSION_CODES.HONEYCOMB) in method public KeyboardAwareLinearLayout(context Context, attrs AttributeSet, defStyle int) from class org.thoughtcrime.securesms.components.KeyboardAwareLinearLayout",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public onClick(v View) : void from class org.thoughtcrime.securesms.ConversationActivity.ComposeKeyPressedListener",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public setOnClickListener(listener OnClickListener) : void from class org.thoughtcrime.securesms.components.emoji.EmojiToggle",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private getViewInset() : int from class org.thoughtcrime.securesms.components.KeyboardAwareLinearLayout",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private rect : Rect from class org.thoughtcrime.securesms.components.KeyboardAwareLinearLayout",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public setToEmoji() : void extracted from private initialize() : void in class org.thoughtcrime.securesms.components.emoji.EmojiToggle",
    "comment" : "<p>private void initializeResources() is inlined to private void initialize()<br />and statement setImageDrawable(this.emojiToggle);<br />is extracted to public void setToEmoji() as<br />setImageDrawable(emojiToggle);</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1255
}, {
  "id" : 1133238,
  "repository" : "https://github.com/google/truth.git",
  "sha1" : "1768840bf1e69892fd2a23776817f620edfed536",
  "url" : "https://github.com/google/truth/commit/1768840bf1e69892fd2a23776817f620edfed536",
  "author" : "kak",
  "time" : "7/6/15 1:54 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class com.google.common.truth.ListTest.Bar moved to com.google.common.truth.IterableTest.Bar",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.google.common.truth.ListTest.Foo moved to com.google.common.truth.IterableTest.Foo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public listContainsExactlyArray() : void renamed to public iterableContainsExactlyArray() : void in class com.google.common.truth.IterableTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public isOrderedFailure() : void from class com.google.common.truth.ListTest to public isOrderedFailure() : void from class com.google.common.truth.IterableTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public isStrictlyOrderedFailure() : void from class com.google.common.truth.ListTest to public isStrictlyOrderedFailure() : void from class com.google.common.truth.IterableTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public isOrderedWithNonComparableElementsFailure() : void from class com.google.common.truth.ListTest to public isOrderedWithNonComparableElementsFailure() : void from class com.google.common.truth.IterableTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public isStrictlyOrderedWithNonComparableElementsFailure() : void from class com.google.common.truth.ListTest to public isStrictlyOrderedWithNonComparableElementsFailure() : void from class com.google.common.truth.IterableTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private FOO_COMPARATOR : Comparator<Foo> from class com.google.common.truth.ListTest to private FOO_COMPARATOR : Comparator<Foo> from class com.google.common.truth.IterableTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private COMPARE_AS_DECIMAL : Comparator<String> from class com.google.common.truth.ListTest to private COMPARE_AS_DECIMAL : Comparator<String> from class com.google.common.truth.IterableTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public listIsStrictlyOrdered() : void from class com.google.common.truth.ListTest to public iterableIsStrictlyOrdered() : void from class com.google.common.truth.IterableTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public listIsOrdered() : void from class com.google.common.truth.ListTest to public iterableIsOrdered() : void from class com.google.common.truth.IterableTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public listIsStrictlyOrderedWithComparator() : void from class com.google.common.truth.ListTest to public iterableIsStrictlyOrderedWithComparator() : void from class com.google.common.truth.IterableTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public listIsStrictlyOrderedWithComparatorFailure() : void from class com.google.common.truth.ListTest to public iterableIsStrictlyOrderedWithComparatorFailure() : void from class com.google.common.truth.IterableTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public listIsOrderedWithComparator() : void from class com.google.common.truth.ListTest to public iterableIsOrderedWithComparator() : void from class com.google.common.truth.IterableTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public listIsOrderedWithComparatorFailure() : void from class com.google.common.truth.ListTest to public iterableIsOrderedWithComparatorFailure() : void from class com.google.common.truth.IterableTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public listOrderedByBaseClassComparator() : void from class com.google.common.truth.ListTest to public iterableOrderedByBaseClassComparator() : void from class com.google.common.truth.IterableTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type targetList : List<Bar> to targetList : Iterable<Bar> in method public iterableOrderedByBaseClassComparator() : void from class com.google.common.truth.IterableTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 301
}, {
  "id" : 1133240,
  "repository" : "https://github.com/google/truth.git",
  "sha1" : "200f1577d238a6d3fbcf99cb2a2585b2071214a6",
  "url" : "https://github.com/google/truth/commit/200f1577d238a6d3fbcf99cb2a2585b2071214a6",
  "author" : "kak",
  "time" : "7/6/15 1:54 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public isOrdered(comparator Comparator<? super T>) : void extracted from public isPartiallyOrdered(comparator Comparator<? super T>) : void in class com.google.common.truth.IterableSubject",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public isOrdered() : void extracted from public isPartiallyOrdered() : void in class com.google.common.truth.IterableSubject",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public listIsPartiallyOrderedWithComparatorFailure() : void renamed to public listIsOrderedWithComparatorFailure() : void in class com.google.common.truth.ListTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isPartiallyOrderedFailure() : void renamed to public isOrderedFailure() : void in class com.google.common.truth.ListTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isPartiallyOrderedWithNonComparableElementsFailure() : void renamed to public isOrderedWithNonComparableElementsFailure() : void in class com.google.common.truth.ListTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public listIsPartiallyOrdered() : void renamed to public listIsOrdered() : void in class com.google.common.truth.ListTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public listIsPartiallyOrderedWithComparator() : void renamed to public listIsOrderedWithComparator() : void in class com.google.common.truth.ListTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isPartiallyOrdered() : void renamed to public isOrdered() : void in class com.google.common.truth.IterableSubject",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isPartiallyOrdered(comparator Comparator<? super T>) : void renamed to public isOrdered(comparator Comparator<? super T>) : void in class com.google.common.truth.IterableSubject",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public isPartiallyOrdered() : void from class com.google.common.truth.IterableSubject",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public isPartiallyOrdered(comparator Comparator<? super T>) : void from class com.google.common.truth.IterableSubject",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 405
}, {
  "id" : 1133259,
  "repository" : "https://github.com/slapperwan/gh4a.git",
  "sha1" : "b8fffb706258db4c4d2f608d8e8dad9312e2230d",
  "url" : "https://github.com/slapperwan/gh4a/commit/b8fffb706258db4c4d2f608d8e8dad9312e2230d",
  "author" : "Danny Baumann",
  "time" : "7/6/15 4:56 AM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method public highlightImage(imageUrl String) : String from class com.gh4a.utils.StringUtils to private highlightImage(imageUrl String) : String from class com.gh4a.activities.FileViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private isExtensionIn(filename String, extensions List<String>) : boolean extracted from public isImage(filename String) : boolean in class com.gh4a.utils.FileUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "null assignment has been added through a ternary else. It makes the refactorig impure.",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private writeCssInclude(builder StringBuilder, cssType String) : void from class com.gh4a.utils.StringUtils to protected writeCssInclude(builder StringBuilder, cssType String) : void from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private writeScriptInclude(builder StringBuilder, scriptName String) : void from class com.gh4a.utils.StringUtils to protected writeScriptInclude(builder StringBuilder, scriptName String) : void from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public SKIP_PRETTIFY_EXT : List<String> from class com.gh4a.Constants to private SKIP_PRETTIFY_EXT : List<String> from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected loadCode(data String, fileName String) : void extracted from public onResultReady(result LoaderResult<Gist>) : void in class com.gh4a.activities.GistViewerActivity$1 & moved to class com.gh4a.activities.WebViewerActivity",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable ext : String to extension : String in method private isExtensionIn(filename String, extensions List<String>) : boolean from class com.gh4a.utils.FileUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute imageExts : List<String> to IMAGE_EXTS : List<String> in class com.gh4a.utils.FileUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public highlightSyntax(data String, fileName String, repoOwner String, repoName String, ref String) : String from class com.gh4a.utils.StringUtils to protected loadCode(data String, fileName String, repoOwner String, repoName String, ref String) : void from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to void in method protected loadCode(data String, fileName String, repoOwner String, repoName String, ref String) : void from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected loadCode(data String, fileName String, repoOwner String, repoName String, ref String) : void from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected writeScriptInclude(builder StringBuilder, scriptName String) : void from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected writeCssInclude(builder StringBuilder, cssType String) : void from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private highlightImage(imageUrl String) : String from class com.gh4a.activities.FileViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private SKIP_PRETTIFY_EXT : List<String> from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method public highlightSyntax(data String, fileName String, repoOwner String, repoName String, ref String) : String from class com.gh4a.utils.StringUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private IMAGE_EXTS : List<String> from class com.gh4a.utils.FileUtils",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 646
}, {
  "id" : 1133355,
  "repository" : "https://github.com/abarisain/dmix.git",
  "sha1" : "885771d57c97bd2dd48951e8aeaaa87ceb87532b",
  "url" : "https://github.com/abarisain/dmix/commit/885771d57c97bd2dd48951e8aeaaa87ceb87532b",
  "author" : "Avuton Olrich",
  "time" : "7/6/15 5:49 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method package processIntent(action String, mpd MPD) : void inlined to protected onHandleIntent(intent Intent) : void in class com.namelessdev.mpdroid.widgets.WidgetHelperService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable mpd : MPD to status : MPDStatus in method protected onHandleIntent(intent Intent) : void from class com.namelessdev.mpdroid.widgets.WidgetHelperService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type mpd : MPD to status : MPDStatus in method protected onHandleIntent(intent Intent) : void from class com.namelessdev.mpdroid.widgets.WidgetHelperService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 374
}, {
  "id" : 1133515,
  "repository" : "https://github.com/spring-projects/spring-data-mongodb.git",
  "sha1" : "3224fa8ce7e0079d6ad507e17534cdf01f758876",
  "url" : "https://github.com/spring-projects/spring-data-mongodb/commit/3224fa8ce7e0079d6ad507e17534cdf01f758876",
  "author" : "Christoph Strobl",
  "time" : "7/7/15 4:57 AM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private processTypeHintForNestedDocuments(source Object, info TypeInformation<?>) : TypeInformation<?> inlined to private getTypeHintForEntity(source Object, entity MongoPersistentEntity<?>) : TypeInformation<?> in class org.springframework.data.mongodb.core.convert.UpdateMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 890
}, {
  "id" : 1133583,
  "repository" : "https://github.com/google/guava.git",
  "sha1" : "5bab9e837cf273250aa26702204f139fdcfd9e7a",
  "url" : "https://github.com/google/guava/commit/5bab9e837cf273250aa26702204f139fdcfd9e7a",
  "author" : "Chris Povirk",
  "time" : "7/6/15 1:19 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private checkForConcurrentModification() : void inlined to public hasNext() : boolean in class com.google.common.collect.HashBiMap.Itr",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private checkForConcurrentModification() : void inlined to public remove() : void in class com.google.common.collect.HashBiMap.Itr",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter oldEntryForKey : BiEntry<K,V> in method private insert(entry BiEntry<K,V>, oldEntryForKey BiEntry<K,V>) : void from class com.google.common.collect.HashBiMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2437
}, {
  "id" : 1133661,
  "repository" : "https://github.com/real-logic/Aeron.git",
  "sha1" : "4b762c2c70f06b0c5d2cd85866424c46478c827b",
  "url" : "https://github.com/real-logic/Aeron/commit/4b762c2c70f06b0c5d2cd85866424c46478c827b",
  "author" : "Martin Thompson",
  "time" : "7/6/15 12:18 PM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private flowControl : FlowControl from class uk.co.real_logic.aeron.driver.cmd.NewPublicationCmd to private flowControl : FlowControl from class uk.co.real_logic.aeron.driver.NetworkPublication",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public onStatusMessage(termId int, termOffset int, receiverWindowLength int, srcAddress InetSocketAddress) : void extracted from private onStatusMessage(statusMsg StatusMessageFlyweight, srcAddress InetSocketAddress) : void in class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint & moved to class uk.co.real_logic.aeron.driver.NetworkPublication",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move class NetworkPublication</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package flowControl : FlowControl from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint.PublicationAssembly to private flowControl : FlowControl from class uk.co.real_logic.aeron.driver.NetworkPublication",
    "comment" : "<p>The inner class PublicationAssembly is simply deleted and the outher class SendChannelEndpoint is using the fields<br />private final BiInt2ObjectMap&lt;NetworkPublication&gt; driversPublicationByStreamAndSessionId = new BiInt2ObjectMap&lt;&gt;();<br />private final BiInt2ObjectMap&lt;NetworkPublication&gt; sendersPublicationByStreamAndSessionId = new BiInt2ObjectMap&lt;&gt;();<br />to access the NetworkPublication objects<br />replacing the previous fields<br />private final BiInt2ObjectMap&lt;NetworkPublication&gt; publicationByStreamAndSessionIdMap = new BiInt2ObjectMap&lt;&gt;();<br />private final BiInt2ObjectMap&lt;PublicationAssembly&gt; assemblyByStreamAndSessionIdMap = new BiInt2ObjectMap&lt;&gt;();</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable assembly : PublicationAssembly to publication : NetworkPublication in method private onStatusMessage(statusMsg StatusMessageFlyweight, srcAddress InetSocketAddress) : void from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable assembly : PublicationAssembly to publication : NetworkPublication in method private onNakMessage(nakMsg NakFlyweight) : void from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nakMessage : NakFlyweight to nakMsg : NakFlyweight in method private onNakMessage(nakMsg NakFlyweight) : void from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute publicationByStreamAndSessionIdMap : BiInt2ObjectMap<NetworkPublication> to driversPublicationByStreamAndSessionId : BiInt2ObjectMap<NetworkPublication> in class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute assemblyByStreamAndSessionIdMap : BiInt2ObjectMap<PublicationAssembly> to sendersPublicationByStreamAndSessionId : BiInt2ObjectMap<NetworkPublication> in class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type assembly : PublicationAssembly to publication : NetworkPublication in method private onStatusMessage(statusMsg StatusMessageFlyweight, srcAddress InetSocketAddress) : void from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type assembly : PublicationAssembly to publication : NetworkPublication in method private onNakMessage(nakMsg NakFlyweight) : void from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type assemblyByStreamAndSessionIdMap : BiInt2ObjectMap<PublicationAssembly> to sendersPublicationByStreamAndSessionId : BiInt2ObjectMap<NetworkPublication> in class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter flowControl : FlowControl in method public NetworkPublication(channelEndpoint SendChannelEndpoint, clock NanoClock, rawLog RawLog, senderPosition Position, publisherLimit Position, sessionId int, streamId int, initialTermId int, mtuLength int, initialPositionLimit long, systemCounters SystemCounters, flowControl FlowControl, retransmitHandler RetransmitHandler) from class uk.co.real_logic.aeron.driver.NetworkPublication",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter flowControl : FlowControl in method public onNewPublication(publication NetworkPublication, flowControl FlowControl) : void from class uk.co.real_logic.aeron.driver.Sender",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter flowControl : FlowControl in method public newPublication(publication NetworkPublication, flowControl FlowControl) : void from class uk.co.real_logic.aeron.driver.SenderProxy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter flowControl : FlowControl in method public NewPublicationCmd(publication NetworkPublication, flowControl FlowControl) from class uk.co.real_logic.aeron.driver.cmd.NewPublicationCmd",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter flowControl : FlowControl in method public addToDispatcher(publication NetworkPublication, flowControl FlowControl) : void from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1188
}, {
  "id" : 1133761,
  "repository" : "https://github.com/spring-projects/spring-data-jpa.git",
  "sha1" : "36d1b0717bc5836bba39985caadc2df5f2533ac4",
  "url" : "https://github.com/spring-projects/spring-data-jpa/commit/36d1b0717bc5836bba39985caadc2df5f2533ac4",
  "author" : "Dev Naruka",
  "time" : "7/7/15 9:13 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.data.jpa.repository.augment.JpaSoftDeleteQueryAugmentor.PropertyChangeEnsuringBeanWrapper moved to org.springframework.data.jpa.repository.augment.PropertyChangeEnsuringBeanWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable augmentor : JpaSoftDeleteQueryAugmentor to jpaAugmentor : JpaSoftDeleteQueryAugmentor in method public setUp() : void from class org.springframework.data.jpa.repository.support.SoftDeleteIntegrationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public withQuery(query String) : JpaQueryContext from class org.springframework.data.jpa.repository.support.JpaQueryContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Reorder Parameter",
    "description" : "Reorder Parameter [queryMode : QueryMode, entityManager : EntityManager, query : Query] to [query : Query, queryMode : QueryMode, entityManager : EntityManager] in method public JpaQueryContext(query Query, queryMode QueryMode, entityManager EntityManager) from class org.springframework.data.jpa.repository.support.JpaQueryContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private engine : QueryAugmentationEngine from class org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "comment" : "<p>protected QueryAugmentationEngine getAugmentationEngine()<br />is called in file<br />src/main/java/org/springframework/data/jpa/repository/support/QueryDslJpaRepository.java<br />extending SimpleJpaRepository</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to package in class org.springframework.data.jpa.repository.augment.PropertyChangeEnsuringBeanWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.springframework.data.jpa.repository.augment.JpaSoftDeleteQueryAugmentor.PropertyChangeEnsuringBeanWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1133865,
  "repository" : "https://github.com/apache/drill.git",
  "sha1" : "b2bbd9941be6b132a83d27c0ae02c935e1dec5dd",
  "url" : "https://github.com/apache/drill/commit/b2bbd9941be6b132a83d27c0ae02c935e1dec5dd",
  "author" : "Hanifi Gunes",
  "time" : "7/6/15 8:28 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private allocateBytes(size long) : void extracted from public allocateNew(valueCount int) : void in class org.apache.drill.exec.vector.BitVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private allocateBytes(size long) : void extracted from public allocateNewSafe() : boolean in class org.apache.drill.exec.vector.BitVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable outputIndex : int in method public flattenRecords(recordCount int, firstOutputIndex int) : int from class org.apache.drill.exec.physical.impl.flatten.FlattenTemplate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable valueSize : int to curSize : int in method private allocateBytes(size long) : void from class org.apache.drill.exec.vector.BitVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable valueSize : int to size : int in method public allocateNew(valueCount int) : void from class org.apache.drill.exec.vector.BitVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute allocationValueCount : int to allocationSizeInBytes : int in class org.apache.drill.exec.vector.BitVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute childIndexWithinCurrGroup : int to innerValueIndex : int in class org.apache.drill.exec.physical.impl.flatten.FlattenTemplate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute childIndex : int to currentInnerValueIndex : int in class org.apache.drill.exec.physical.impl.flatten.FlattenTemplate",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '>In method flattenRecords() the expression<br />childIndex - startIndex<br />becomes<br />final int delta = currentInnerValueIndexLocal - initialInnerValueIndex;<br />and<br />currentInnerValueIndex = currentInnerValueIndexLocal;<br />Thus, we can infer that childIndex -&gt; currentInnerValueIndex</span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable valueIndexLocal : int in method public flattenRecords(recordCount int, firstOutputIndex int) : int from class org.apache.drill.exec.physical.impl.flatten.FlattenTemplate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable v : NullableUInt4Vector to vector : NullableUInt4Vector in method public testNullableFixedType() : void from class org.apache.drill.exec.record.vector.TestValueVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable v : NullableFloat4Vector to vector : NullableFloat4Vector in method public testReAllocNullableFixedWidthVector() : void from class org.apache.drill.exec.record.vector.TestValueVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable v : NullableVarCharVector to vector : NullableVarCharVector in method public testNullableVarLen2() : void from class org.apache.drill.exec.record.vector.TestValueVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable v : BitVector to vector : BitVector in method public testBitVector() : void from class org.apache.drill.exec.record.vector.TestValueVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable v : NullableVarCharVector to vector : NullableVarCharVector in method public testReAllocNullableVariableWidthVector() : void from class org.apache.drill.exec.record.vector.TestValueVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable v : NullableFloat4Vector to vector : NullableFloat4Vector in method public testNullableFloat() : void from class org.apache.drill.exec.record.vector.TestValueVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable v : UInt4Vector to vector : UInt4Vector in method public testFixedType() : void from class org.apache.drill.exec.record.vector.TestValueVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable v : UInt4Vector to vector : UInt4Vector in method public testFixedVectorReallocation() : void in class org.apache.drill.exec.record.vector.TestValueVector",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter numRecords : int to valueCount : int in method public setInitialCapacity(valueCount int) : void from class org.apache.drill.exec.vector.BitVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable valueSize : int to curSize : int in method public reAlloc() : void in class org.apache.drill.exec.vector.BitVector",
    "comment" : "<p>The usage of the variables is not consistently replaced.<br />valueSize -&gt; newAllocationSize</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter numRecords : int to valueCount : int in method public setInitialCapacity(valueCount int) : void in class org.apache.drill.exec.vector.$",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute allocationTotalByteCount : int to allocationSizeInBytes : int in class org.apache.drill.exec.vector.$",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type logger : org.slf4j.Logger to logger : Logger in class org.apache.drill.exec.physical.impl.flatten.FlattenTemplate",
    "comment" : "<p>This is simple Type to Qualified Type. idk if this is CTT.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type logger : org.slf4j.Logger to logger : Logger in class org.apache.drill.exec.vector.BaseValueVector",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private allocateBytes(size long) : void extracted from public allocateNewSafe() : boolean in class org.apache.drill.exec.vector.$",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public allocateNew(valueCount int) : void renamed to private allocateBytes(size long) : void in class org.apache.drill.exec.vector.BitVector",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter startIndex : int in method public flattenRecords(startIndex int, recordCount int, firstOutputIndex int) : int from class org.apache.drill.exec.physical.impl.flatten.FlattenTemplate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter startIndex : int in method public abstract flattenRecords(startIndex int, recordCount int, firstOutputIndex int) : int from class org.apache.drill.exec.physical.impl.flatten.Flattener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type Exception in method public testVVInitialCapacity() : void from class org.apache.drill.exec.record.vector.TestValueVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to private in attribute private logger : Logger from class org.apache.drill.exec.physical.impl.flatten.FlattenTemplate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to private in attribute private allocator : TopLevelAllocator from class org.apache.drill.exec.record.vector.TestValueVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter firstOutputIndex : int in method public flattenRecords(recordCount int, firstOutputIndex int) : int from class org.apache.drill.exec.physical.impl.flatten.FlattenTemplate",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter valueCount : int in method public setInitialCapacity(valueCount int) : void from class org.apache.drill.exec.vector.BitVector",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable curSize : int in method private allocateBytes(size long) : void from class org.apache.drill.exec.vector.BitVector",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable newBuf : DrillBuf in method private allocateBytes(size long) : void from class org.apache.drill.exec.vector.BitVector",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable size : int in method public allocateNew(valueCount int) : void from class org.apache.drill.exec.vector.BitVector",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable newBuf : DrillBuf in method public reAlloc() : void from class org.apache.drill.exec.vector.BitVector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1133936,
  "repository" : "https://github.com/deeplearning4j/deeplearning4j.git",
  "sha1" : "3325f5ccd23f8016fa28a24f878b54f1918546ed",
  "url" : "https://github.com/deeplearning4j/deeplearning4j/commit/3325f5ccd23f8016fa28a24f878b54f1918546ed",
  "author" : "Carsten Schnober",
  "time" : "7/6/15 7:41 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public loadGoogleModel(modelFile File, binary boolean, lineBreaks boolean) : Word2Vec extracted from public loadGoogleModel(modelFile File, binary boolean) : Word2Vec in class org.deeplearning4j.models.embeddings.loader.WordVectorSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Add parameter on the top of the extracted method"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter linebreaks : boolean in method private readBinaryModel(modelFile File, linebreaks boolean) : Word2Vec from class org.deeplearning4j.models.embeddings.loader.WordVectorSerializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 994
}, {
  "id" : 1133977,
  "repository" : "https://github.com/cucumber/cucumber-jvm.git",
  "sha1" : "0e815f3e1339f91960c7c64ab395de6dd8ff9eec",
  "url" : "https://github.com/cucumber/cucumber-jvm/commit/0e815f3e1339f91960c7c64ab395de6dd8ff9eec",
  "author" : "Aslak Hellesøy",
  "time" : "7/6/15 7:36 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class cucumber.runtime.java.ObjectFactory moved to cucumber.api.java.ObjectFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public loadObjectFactory(classFinder ClassFinder) : ObjectFactory from class cucumber.runtime.java.JavaBackend to public loadObjectFactory(classFinder ClassFinder, objectFactoryClassName String) : ObjectFactory from class cucumber.runtime.java.ObjectFactoryLoader",
    "comment" : "<p>Though the body does not totally match, their call graphs match.</p><p>Indeed it is an extract class refactorings since two methods in JavaBackend are moved to a newly added class ObjectFactoryLoader.</p><p>Since RefDiff does not detect Extract Class, we consider it as CTP.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getMultipleObjectFactoryLogMessage() : String from class cucumber.runtime.java.JavaBackend to private getMultipleObjectFactoryLogMessage() : String from class cucumber.runtime.java.ObjectFactoryLoader",
    "comment" : "<p>Methods are both private =&gt; no call graph outside the class, but their bodies match</p><p>Indeed it is an extract class refactorings since two methods in JavaBackend are moved to a newly added class ObjectFactoryLoader.</p><p>Since RefDiff does not detect Extract Class, we consider it as CTP.</p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter objectFactoryClassName : String in method public loadObjectFactory(classFinder ClassFinder, objectFactoryClassName String) : ObjectFactory from class cucumber.runtime.java.ObjectFactoryLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter classLoader : ClassLoader in method private loadClass(className String, classLoader ClassLoader) : Class<?> from class cucumber.runtime.io.ResourceLoaderClassFinder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute env : Env to ENV : Env in class cucumber.runtime.jruby.JRubyBackend",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1134096,
  "repository" : "https://github.com/hibernate/hibernate-orm.git",
  "sha1" : "44a02e5efc39c6953ca6dd631669d91293ab67f6",
  "url" : "https://github.com/hibernate/hibernate-orm/commit/44a02e5efc39c6953ca6dd631669d91293ab67f6",
  "author" : "barreiro",
  "time" : "7/6/15 3:34 PM",
  "refactorings" : [ {
    "type" : "Move Package",
    "description" : "Move Package org.hibernate.test.bytecode.enhancement.entity.customer to org.hibernate.test.bytecode.enhancement.association",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.hibernate.test.bytecode.enhancement.entity.MyEntity moved to org.hibernate.test.bytecode.enhancement.basic.MyEntity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.hibernate.test.bytecode.enhancement.entity.Address moved to org.hibernate.test.bytecode.enhancement.dirty.Address",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.hibernate.test.bytecode.enhancement.entity.Country moved to org.hibernate.test.bytecode.enhancement.dirty.Country",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.hibernate.test.bytecode.enhancement.entity.SimpleEntity moved to org.hibernate.test.bytecode.enhancement.dirty.SimpleEntity",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.hibernate.test.bytecode.enhancement.MostBasicEnhancementTest moved and renamed to org.hibernate.test.bytecode.enhancement.basic.BasicInSessionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils.LocalPersistentAttributeInterceptor moved and renamed to org.hibernate.test.bytecode.enhancement.basic.ObjectAttributeMarkerInterceptor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getId() : Long from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public getId() : Integer from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public getName() : String from class org.hibernate.test.bytecode.enhancement.association.Group",
    "comment" : "group is moved to another package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getSomeNumber() : long from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public getSomeNumber() : long from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
    "comment" : "It is a rename class!",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public isActive() : boolean from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public isActive() : boolean from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
    "comment" : "It is a rename class!",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setActive(active boolean) : void from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public setActive(active boolean) : void from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
    "comment" : "It is a rename class!",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setId(id Long) : void from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public setId(id Long) : void from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
    "comment" : "It is a rename class!",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setName(name String) : void from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public setName(name String) : void from class org.hibernate.test.bytecode.enhancement.association.Group",
    "comment" : "group is moved to another package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setSomeNumber(someNumber long) : void from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public setSomeNumber(someNumber long) : void from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
    "comment" : "It is a rename class!",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addInventory(inventory CustomerInventory) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public addInventory(inventory CustomerInventory) : void from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getFirstName() : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public getFirstName() : String from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getId() : Integer from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public getId() : Integer from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getInventories() : List<CustomerInventory> from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public getInventories() : List<CustomerInventory> from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getLastName() : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public getLastName() : String from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getUser() : User from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public getUser() : User from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getVersion() : int from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public getVersion() : int from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public hashCode() : int from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public hashCode() : int from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setFirstName(firstName String) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public setFirstName(firstName String) : void from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setId(customerId Integer) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public setId(customerId Integer) : void from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setLastName(lastName String) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public setLastName(lastName String) : void from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setUser(user User) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public setUser(user User) : void from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public toString() : String from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public compare(cdb1 CustomerInventory, cdb2 CustomerInventory) : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public compare(cdb1 CustomerInventory, cdb2 CustomerInventory) : int from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getCustId() : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public getCustId() : int from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getCustomer() : Customer from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public getCustomer() : Customer from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getId() : Long from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public getId() : Integer from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getVehicle() : String from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public getVehicle() : String from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getVersion() : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public getVersion() : int from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public hashCode() : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public hashCode() : int from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setCustomer(customer Customer) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public setCustomer(customer Customer) : void from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getCustId() : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventoryPK to public getCustId() : int from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getId() : Long from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventoryPK to public getId() : Integer from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Group to public getName() : String from class org.hibernate.test.bytecode.enhancement.association.Group",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getUsers() : Set<User> from class org.hibernate.test.bytecode.enhancement.entity.customer.Group to public getUsers() : Set<User> from class org.hibernate.test.bytecode.enhancement.association.Group",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public removeUser(user User) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Group to public removeUser(user User) : void from class org.hibernate.test.bytecode.enhancement.association.Group",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setName(name String) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Group to public setName(name String) : void from class org.hibernate.test.bytecode.enhancement.association.Group",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setUsers(users Set<User>) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Group to public setUsers(users Set<User>) : void from class org.hibernate.test.bytecode.enhancement.association.Group",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getCustomer() : Customer from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public getCustomer() : Customer from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getGroups() : Set<Group> from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public getGroups() : Set<Group> from class org.hibernate.test.bytecode.enhancement.association.User",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getLogin() : String from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public getLogin() : String from class org.hibernate.test.bytecode.enhancement.association.User",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getPassword() : String from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public getPassword() : String from class org.hibernate.test.bytecode.enhancement.association.User",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setCustomer(customer Customer) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public setCustomer(customer Customer) : void from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "both clases are moved",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setGroups(groups Set<Group>) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public setGroups(groups Set<Group>) : void from class org.hibernate.test.bytecode.enhancement.association.User",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setLogin(login String) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public setLogin(login String) : void from class org.hibernate.test.bytecode.enhancement.association.User",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setPassword(password String) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public setPassword(password String) : void from class org.hibernate.test.bytecode.enhancement.association.User",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public equals(o Object) : boolean from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public equals(o Object) : boolean from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public equals(obj Object) : boolean from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public equals(obj Object) : boolean from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private decompileDumpedClass(className String) : void from class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils to public decompileDumpedClass(workingDir String, className String) : void from class org.hibernate.test.bytecode.enhancement.DecompileUtils",
    "comment" : "It is a extract class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addGroup(group Group) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public addGroup(group Group) : void from class org.hibernate.test.bytecode.enhancement.association.User",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public hashCode() : int from class org.hibernate.test.bytecode.enhancement.entity.customer.SupplierComponentPK to public hashCode() : int from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private active : boolean from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to private active : boolean from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private id : Long from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to private id : Long from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private name : String from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to private name : String from class org.hibernate.test.bytecode.enhancement.association.Group",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private name : String from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to private name : String from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private someNumber : long from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to private someNumber : long from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private id : int from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to private id : int from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private user : User from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to private user : User from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private version : int from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to private version : int from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private version : int from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to private version : int from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private custId : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to private custId : int from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private customer : Customer from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to private customer : Customer from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private id : Long from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to private id : Long from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private vehicle : String from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to private vehicle : String from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private version : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to private version : int from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private name : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Group to private name : String from class org.hibernate.test.bytecode.enhancement.association.Group",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private users : Set<User> from class org.hibernate.test.bytecode.enhancement.entity.customer.Group to private users : Set<User> from class org.hibernate.test.bytecode.enhancement.association.Group",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private customer : Customer from class org.hibernate.test.bytecode.enhancement.entity.customer.User to private customer : Customer from class org.hibernate.test.bytecode.enhancement.association.User",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private login : String from class org.hibernate.test.bytecode.enhancement.entity.customer.User to private login : String from class org.hibernate.test.bytecode.enhancement.association.User",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private password : String from class org.hibernate.test.bytecode.enhancement.entity.customer.User to private password : String from class org.hibernate.test.bytecode.enhancement.association.User",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private customerInventories : List<CustomerInventory> from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to private customerInventories : List<CustomerInventory> from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private firstName : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to private firstName : String from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private lastName : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to private lastName : String from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "It seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testEnhancement() : void renamed to public testLazy() : void in class org.hibernate.test.bytecode.enhancement.EnhancerTest",
    "comment" : "<p>new</p><p>Nikos: This is a False Positive</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.hibernate.test.bytecode.enhancement.entity.customer.Group moved to org.hibernate.test.bytecode.enhancement.association.Group",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.hibernate.test.bytecode.enhancement.entity.customer.User moved to org.hibernate.test.bytecode.enhancement.association.User",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Package",
    "description" : "Rename Package org.hibernate.test.bytecode.enhancement.entity to org.hibernate.test.bytecode.enhancement.basic",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory moved to org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.hibernate.test.bytecode.enhancement.entity.SubEntity moved and renamed to org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.hibernate.test.bytecode.enhancement.entity.customer.Customer moved to org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable set : Set<Group> to groups : Set<Group> in method public addGroup(group Group) : void from class org.hibernate.test.bytecode.enhancement.association.User",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable cl : ClassLoader in method private generateCtClassForAnEntity(entityClassToEnhance Class<?>) : CtClass from class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter obj : Object to cl : ClassLoader in method private setupClassLoader(cl ClassLoader, classesToLoad Class<?>) : void in class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter name : String to classesToLoad : Class<?> in method private setupClassLoader(cl ClassLoader, classesToLoad Class<?>) : void in class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter name : String to packageName : String in method private getEnhancerClassLoader(packageName String) : ClassLoader in class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type obj : Object to cl : ClassLoader in method private setupClassLoader(cl ClassLoader, classesToLoad Class<?>) : void in class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method private setupClassLoader(cl ClassLoader, classesToLoad Class<?>) : void in class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type compiler : JavaCompiler to taskObject : EnhancerTestTask in method public runEnhancerTestTask(task Class<? extends EnhancerTestTask>) : void in class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type fileManager : StandardJavaFileManager to defaultCL : ClassLoader in method public runEnhancerTestTask(task Class<? extends EnhancerTestTask>) : void in class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private id : Long from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to package id : Long from class org.hibernate.test.bytecode.enhancement.lazy.Child",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private name : String from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to package name : String from class org.hibernate.test.bytecode.enhancement.lazy.Child",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private id : Long from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to package id : Long from class org.hibernate.test.bytecode.enhancement.lazy.Parent",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addInventory(item String, quantity int, totalValue BigDecimal) : CustomerInventory from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public addInventory(item String) : CustomerInventory from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public getName() : String from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
    "comment" : "<p>Move And Rename Class org.hibernate.test.bytecode.enhancement.entity.SubEntity moved and renamed to org.hibernate.test.bytecode.enhancement.basic.SimpleEntity</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setName(name String) : void from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public setName(name String) : void from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
    "comment" : "<p>Move And Rename Class org.hibernate.test.bytecode.enhancement.entity.SubEntity moved and renamed to org.hibernate.test.bytecode.enhancement.basic.SimpleEntity</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testEnhancement() : void renamed to public testBasic() : void in class org.hibernate.test.bytecode.enhancement.EnhancerTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private testFor(entityClassToEnhance Class<?>) : void renamed to public testDirty() : void in class org.hibernate.test.bytecode.enhancement.EnhancerTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private decompileDumpedClass(className String) : void renamed to public runEnhancerTestTask(task Class<? extends EnhancerTestTask>) : void in class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Id in method public getId() : Long from class org.hibernate.test.bytecode.enhancement.entity.MyEntity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Id in method public getId() : Long from class org.hibernate.test.bytecode.enhancement.entity.SimpleEntity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Id in method public getId() : Long from class org.hibernate.test.bytecode.enhancement.entity.SubEntity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Id in attribute private id : Long from class org.hibernate.test.bytecode.enhancement.basic.MyEntity",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Id in attribute private id : Long from class org.hibernate.test.bytecode.enhancement.dirty.SimpleEntity",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Id in attribute private id : int from class org.hibernate.test.bytecode.enhancement.association.Group",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"GROUP_SEQUENCE\") in attribute private id : int from class org.hibernate.test.bytecode.enhancement.entity.customer.Group",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Id in attribute private id : int from class org.hibernate.test.bytecode.enhancement.association.User",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"USER_SEQUENCE\") in attribute private id : int from class org.hibernate.test.bytecode.enhancement.entity.customer.User",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Column in attribute private login : String from class org.hibernate.test.bytecode.enhancement.entity.customer.User",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Column in attribute private password : String from class org.hibernate.test.bytecode.enhancement.entity.customer.User",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Column(name = \"C_ID\") in attribute private id : int from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Column(name = \"C_FIRST\") in attribute private firstName : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Column(name = \"C_LAST\") in attribute private lastName : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Column(name = \"C_VERSION\") in attribute private version : int from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @TableGenerator(name = \"inventory\", table = \"U_SEQUENCES\", pkColumnName = \"S_ID\", valueColumnName = \"S_NEXTNUM\", pkColumnValue = \"inventory\", allocationSize = 1000) in attribute private id : Long from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @GeneratedValue(strategy = GenerationType.TABLE, generator = \"inventory\") in attribute private id : Long from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Column(name = \"CI_ID\") in attribute private id : Long from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Column(name = \"CI_CUSTOMERID\", insertable = false, updatable = false) in attribute private custId : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @JoinColumn(name = \"CI_CUSTOMERID\") in attribute private customer : Customer from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @JoinColumn(name = \"CI_ITEMID\") in attribute private vehicle : String from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Column(name = \"CI_VERSION\") in attribute private version : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Id in attribute private id : Long from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @Table(name = \"GROUP\") in class org.hibernate.test.bytecode.enhancement.entity.customer.Group",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @SequenceGenerator(name = \"GROUP_SEQUENCE\", sequenceName = \"GROUP_SEQUENCE\", allocationSize = 1, initialValue = 0) in class org.hibernate.test.bytecode.enhancement.entity.customer.Group",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @Table(name = \"USER\") in class org.hibernate.test.bytecode.enhancement.entity.customer.User",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @SequenceGenerator(name = \"USER_SEQUENCE\", sequenceName = \"USER_SEQUENCE\", allocationSize = 1, initialValue = 0) in class org.hibernate.test.bytecode.enhancement.entity.customer.User",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @Table(name = \"O_CUSTOMER\") in class org.hibernate.test.bytecode.enhancement.entity.customer.Customer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @SuppressWarnings(\"serial\") in class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @Table(name = \"O_CUSTINVENTORY\") in class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @IdClass(CustomerInventoryPK.class) in class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter workingDir : String in method public decompileDumpedClass(workingDir String, className String) : void from class org.hibernate.test.bytecode.enhancement.DecompileUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter quantity : int in method public addInventory(item String, quantity int, totalValue BigDecimal) : CustomerInventory from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter totalValue : BigDecimal in method public addInventory(item String, quantity int, totalValue BigDecimal) : CustomerInventory from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public testBasic() : void from class org.hibernate.test.bytecode.enhancement.EnhancerTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public runEnhancerTestTask(task Class<? extends EnhancerTestTask>) : void from class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public enhanceAndDecompile(classToEnhance Class<?>, cl ClassLoader) : Class<?> from class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public makeEntityEntry() : EntityEntry from class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public decompileDumpedClass(workingDir String, className String) : void from class org.hibernate.test.bytecode.enhancement.DecompileUtils",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private customerInventories : List<CustomerInventory> from class org.hibernate.test.bytecode.enhancement.association.Customer",
    "comment" : "<p>public void setInventories (List&lt;CustomerInventory&gt; inventories)<br />called in method<br />public void execute()<br />hibernate-core/src/test/java/org/hibernate/test/bytecode/enhancement/association/OneToManyAssociationTestTask.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Package",
    "description" : "Split Package org.hibernate.test.bytecode.enhancement.entity to [org.hibernate.test.bytecode.enhancement.basic, org.hibernate.test.bytecode.enhancement.dirty]",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable filename : String in method public decompileDumpedClass(workingDir String, className String) : void from class org.hibernate.test.bytecode.enhancement.DecompileUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3179
}, {
  "id" : 1134102,
  "repository" : "https://github.com/hibernate/hibernate-orm.git",
  "sha1" : "2f1b67b03f6c48aa189d7478e16ed0dcf8d50af8",
  "url" : "https://github.com/hibernate/hibernate-orm/commit/2f1b67b03f6c48aa189d7478e16ed0dcf8d50af8",
  "author" : "Radim Vansa",
  "time" : "7/6/15 1:40 PM",
  "refactorings" : [ {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private MUTABLE_NON_VERSIONED : CacheDataDescription from class org.hibernate.test.cache.infinispan.collection.CollectionRegionImplTestCase to protected MUTABLE_NON_VERSIONED : CacheDataDescription from class org.hibernate.test.cache.infinispan.AbstractEntityCollectionRegionTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private MUTABLE_NON_VERSIONED : CacheDataDescription from class org.hibernate.test.cache.infinispan.entity.EntityRegionImplTestCase to protected MUTABLE_NON_VERSIONED : CacheDataDescription from class org.hibernate.test.cache.infinispan.AbstractEntityCollectionRegionTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Parameter",
    "description" : "Split Parameter persister : EntityPersister to [entityName : String, naturalIdPropertyIndexes : int[], propertyTypes : Type[]] in method public OldNaturalIdCacheKey(naturalIdValues Object[], propertyTypes Type[], naturalIdPropertyIndexes int[], entityName String, session SessionImplementor) from class org.hibernate.cache.internal.OldNaturalIdCacheKey",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter persister : EntityPersister to entityName : String in method public OldNaturalIdCacheKey(naturalIdValues Object[], propertyTypes Type[], naturalIdPropertyIndexes int[], entityName String, session SessionImplementor) in class org.hibernate.cache.internal.OldNaturalIdCacheKey",
    "comment" : "<p>Split Parameter persister : EntityPersister to [entityName : String, naturalIdPropertyIndexes : int[], propertyTypes : Type[]]</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type persister : EntityPersister to entityName : String in method public OldNaturalIdCacheKey(naturalIdValues Object[], propertyTypes Type[], naturalIdPropertyIndexes int[], entityName String, session SessionImplementor) in class org.hibernate.cache.internal.OldNaturalIdCacheKey",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type VALUE1 : String to CACHE_DATA_DESCRIPTION : CacheDataDescription in class org.hibernate.test.cache.infinispan.collection.TransactionalExtraAPITestCase",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface org.hibernate.cache.spi.CacheKeysFactory from class org.hibernate.cache.internal.DefaultCacheKeysFactory$1",
    "comment" : "<p><span class='pl-k'>public</span> <span class='pl-k'>static</span> <span class='pl-smi'>CacheKeysFactory</span> <span class='pl-c1'>INSTANCE</span> <span class='pl-k'>=</span> <span class='pl-k'>new</span> <span class='pl-smi'>CacheKeysFactory</span>() is newly added code, which implements the newly added CacheKeysFactory interface.</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter keyType : Type in method public CacheDataDescriptionImpl(mutable boolean, versioned boolean, versionComparator Comparator, keyType Type) from class org.hibernate.cache.internal.CacheDataDescriptionImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter metadata : CacheDataDescription in method private getCache(regionName String, typeKey String, properties Properties, metadata CacheDataDescription) : AdvancedCache from class org.hibernate.cache.infinispan.InfinispanRegionFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter cacheKeysFactory : CacheKeysFactory in method public CollectionRegionImpl(cache AdvancedCache, name String, metadata CacheDataDescription, factory RegionFactory, cacheKeysFactory CacheKeysFactory) from class org.hibernate.cache.infinispan.collection.CollectionRegionImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter cacheKeysFactory : CacheKeysFactory in method public EntityRegionImpl(cache AdvancedCache, name String, metadata CacheDataDescription, factory RegionFactory, cacheKeysFactory CacheKeysFactory) from class org.hibernate.cache.infinispan.entity.EntityRegionImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter cacheKeysFactory : CacheKeysFactory in method public BaseTransactionalDataRegion(cache AdvancedCache, name String, metadata CacheDataDescription, factory RegionFactory, cacheKeysFactory CacheKeysFactory) from class org.hibernate.cache.infinispan.impl.BaseTransactionalDataRegion",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter cacheKeysFactory : CacheKeysFactory in method public NaturalIdRegionImpl(cache AdvancedCache, name String, metadata CacheDataDescription, factory RegionFactory, cacheKeysFactory CacheKeysFactory) from class org.hibernate.cache.infinispan.naturalid.NaturalIdRegionImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter cache : AdvancedCache in method protected TestValidator(cache AdvancedCache, cm EmbeddedCacheManager, transactionManager TransactionManager, nakedPutInvalidationPeriod long) from class org.hibernate.test.cache.infinispan.access.PutFromLoadValidatorUnitTestCase.TestValidator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected MUTABLE_NON_VERSIONED : CacheDataDescription from class org.hibernate.test.cache.infinispan.AbstractEntityCollectionRegionTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method public getActualConnectionProvider() : ConnectionProvider from class org.hibernate.test.cache.infinispan.tm.XaConnectionProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private MUTABLE_NON_VERSIONED : CacheDataDescription from class org.hibernate.test.cache.infinispan.InfinispanRegionFactoryTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private IMMUTABLE_NON_VERSIONED : CacheDataDescription from class org.hibernate.test.cache.infinispan.InfinispanRegionFactoryTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private actualConnectionProvider : ConnectionProvider from class org.hibernate.test.cache.infinispan.tm.XaConnectionProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private actualConnectionProvider : ConnectionProvider from class org.hibernate.test.cache.infinispan.tm.XaConnectionProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable naturalIdPropertyIndexes : int[] to naturalIdPropertyIndexes : int[] in method public OldNaturalIdCacheKey(naturalIdValues Object[], propertyTypes Type[], naturalIdPropertyIndexes int[], entityName String, session SessionImplementor) from class org.hibernate.cache.internal.OldNaturalIdCacheKey",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable propertyTypes : Type[] to propertyTypes : Type[] in method public OldNaturalIdCacheKey(naturalIdValues Object[], propertyTypes Type[], naturalIdPropertyIndexes int[], entityName String, session SessionImplementor) from class org.hibernate.cache.internal.OldNaturalIdCacheKey",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable naturalIdPropertyIndexes : int[] in method public OldNaturalIdCacheKey(naturalIdValues Object[], persister EntityPersister, session SessionImplementor) from class org.hibernate.cache.internal.OldNaturalIdCacheKey",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable propertyTypes : Type[] in method public OldNaturalIdCacheKey(naturalIdValues Object[], persister EntityPersister, session SessionImplementor) from class org.hibernate.cache.internal.OldNaturalIdCacheKey",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4137
}, {
  "id" : 1134145,
  "repository" : "https://github.com/gradle/gradle.git",
  "sha1" : "f394599bf1423be0be2d5822ed7f1271d2841225",
  "url" : "https://github.com/gradle/gradle/commit/f394599bf1423be0be2d5822ed7f1271d2841225",
  "author" : "Lóránt Pintér",
  "time" : "7/7/15 8:09 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.gradle.jvm.plugins.JarBinaryRules moved to org.gradle.jvm.internal.JarBinaryRules",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Package",
    "description" : "Rename Package org.gradle.jvm.plugins to org.gradle.jvm.internal",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1134151,
  "repository" : "https://github.com/gradle/gradle.git",
  "sha1" : "36ccb0f5c6771ff4be87a282560c090447520b66",
  "url" : "https://github.com/gradle/gradle/commit/36ccb0f5c6771ff4be87a282560c090447520b66",
  "author" : "Daz DeBoer",
  "time" : "7/6/15 8:45 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.ResolvedLocalComponentsResultGraphVisitor moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.projectresult.ResolvedLocalComponentsResultGraphVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.ResolutionResultDependencyGraphVisitor moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolutionResultDependencyGraphVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.AbstractArtifactSet moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.AbstractArtifactSet",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.ArtifactSet moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ArtifactSet",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.ConfigurationArtifactSet moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ConfigurationArtifactSet",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.DependencyArtifactSet moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.DependencyArtifactSet",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.ResolvedConfigurationDependencyGraphVisitor moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ResolvedConfigurationDependencyGraphVisitor",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public resolve(resolveContext ResolveContext, newModelBuilder ResolutionResultBuilder, oldModelBuilder ResolvedConfigurationBuilder, artifactsBuilder ResolvedArtifactsBuilder, projectModelBuilder ResolvedLocalComponentsResultBuilder) : void moved from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.DependencyGraphBuilder to class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver & inlined to public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results BuildableResolverResults) : void",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter resolveContext : ResolveContext to componentSource : ResolverProvider in method private createDependencyGraphBuilder(componentSource ResolverProvider, resolutionStrategy ResolutionStrategyInternal, metadataHandler GlobalDependencyResolutionRules) : DependencyGraphBuilder in class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver",
    "comment" : "<p>The code creating the componentSource object is removed from the original method:<br />ResolutionStrategyInternal resolutionStrategy = (ResolutionStrategyInternal) resolveContext.getResolutionStrategy();<br />ResolverProvider componentSource = createComponentSource(resolutionStrategy, resolveContext, repositories, metadataHandler);<br />There is no replacement of parameter usages.</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type resolveContext : ResolveContext to componentSource : ResolverProvider in method private createDependencyGraphBuilder(componentSource ResolverProvider, resolutionStrategy ResolutionStrategyInternal, metadataHandler GlobalDependencyResolutionRules) : DependencyGraphBuilder in class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter componentArtifactResolver : ArtifactResolver in method public DependencyGraphBuilder(componentIdResolver DependencyToComponentIdResolver, componentMetaDataResolver ComponentMetaDataResolver, componentArtifactResolver ArtifactResolver, resolveContextToComponentResolver ResolveContextToComponentResolver, dependencyToConfigurationResolver DependencyToConfigurationResolver, conflictHandler ConflictHandler) from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.DependencyGraphBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public ResolutionResultDependencyGraphVisitor(newModelBuilder ResolutionResultBuilder) from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolutionResultDependencyGraphVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public ResolvedConfigurationDependencyGraphVisitor(builder ResolvedConfigurationBuilder, artifactsBuilder ResolvedArtifactsBuilder, artifactResolver ArtifactResolver) from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ResolvedConfigurationDependencyGraphVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter resolveContext : ResolveContext in method private createDependencyGraphBuilder(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules) : DependencyGraphBuilder from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter repositories : List<? extends ResolutionAwareRepository> in method private createDependencyGraphBuilder(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules) : DependencyGraphBuilder from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.DependencyGraphBuilder.ModuleVersionResolveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.DependencyGraphVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolutionResultDependencyGraphVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ResolvedConfigurationDependencyGraphVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable projectModelVisitor : DependencyGraphVisitor in method public execute(ivy Ivy) : void from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver.resolve.withIvy.new Action<Ivy>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable oldModelVisitor : DependencyGraphVisitor in method public execute(ivy Ivy) : void from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver.resolve.withIvy.new Action<Ivy>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable componentSource : ResolverProvider in method public execute(ivy Ivy) : void from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver.resolve.withIvy.new Action<Ivy>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable resolutionStrategy : ResolutionStrategyInternal to resolutionStrategy : ResolutionStrategyInternal in method private createDependencyGraphBuilder(componentSource ResolverProvider, resolutionStrategy ResolutionStrategyInternal, metadataHandler GlobalDependencyResolutionRules) : DependencyGraphBuilder from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable componentSource : ResolverProvider to componentSource : ResolverProvider in method private createDependencyGraphBuilder(componentSource ResolverProvider, resolutionStrategy ResolutionStrategyInternal, metadataHandler GlobalDependencyResolutionRules) : DependencyGraphBuilder from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3963
}, {
  "id" : 1134188,
  "repository" : "https://github.com/gradle/gradle.git",
  "sha1" : "b1fb1192daa1647b0bd525600dd41063765eca70",
  "url" : "https://github.com/gradle/gradle/commit/b1fb1192daa1647b0bd525600dd41063765eca70",
  "author" : "Benjamin Muschko",
  "time" : "7/6/15 10:08 AM",
  "refactorings" : [ {
    "type" : "Push Down Method",
    "description" : "Push Down Method public setGradleUserHomeDir(gradleUserHomeDir File) : void from class org.gradle.testkit.functional.GradleRunner to public setGradleUserHomeDir(gradleUserHomeDir File) : void from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private gradleUserHomeDir : File from class org.gradle.testkit.functional.GradleRunner to private gradleUserHomeDir : File from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getTasks() : List<String> from class org.gradle.testkit.functional.GradleRunner to public getTasks() : List<String> from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private arguments : List<String> from class org.gradle.testkit.functional.GradleRunner to private arguments : List<String> from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private taskNames : List<String> from class org.gradle.testkit.functional.GradleRunner to private taskNames : List<String> from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public setArguments(arguments List<String>) : void from class org.gradle.testkit.functional.GradleRunner to public setArguments(arguments List<String>) : void from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private workingDirectory : File from class org.gradle.testkit.functional.GradleRunner to private workingDirectory : File from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getGradleUserHomeDir() : File from class org.gradle.testkit.functional.GradleRunner to public getGradleUserHomeDir() : File from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public setWorkingDir(workingDirectory File) : void from class org.gradle.testkit.functional.GradleRunner to public setWorkingDir(workingDirectory File) : void from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getArguments() : List<String> from class org.gradle.testkit.functional.GradleRunner to public getArguments() : List<String> from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public setTasks(taskNames List<String>) : void from class org.gradle.testkit.functional.GradleRunner to public setTasks(taskNames List<String>) : void from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getWorkingDir() : File from class org.gradle.testkit.functional.GradleRunner to public getWorkingDir() : File from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3286
}, {
  "id" : 1134191,
  "repository" : "https://github.com/gradle/gradle.git",
  "sha1" : "ba1da95200d080aef6251f13ced0ca67dff282be",
  "url" : "https://github.com/gradle/gradle/commit/ba1da95200d080aef6251f13ced0ca67dff282be",
  "author" : "Rene Groeschke",
  "time" : "7/6/15 7:43 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.gradle.tooling.tests.TestExecutionException moved to org.gradle.tooling.test.TestExecutionException",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Package",
    "description" : "Rename Package org.gradle.tooling.tests to org.gradle.tooling.test",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4581
}, {
  "id" : 1134252,
  "repository" : "https://github.com/crate/crate.git",
  "sha1" : "d5f10a4958f5e870680be906689d92d1efb42480",
  "url" : "https://github.com/crate/crate/commit/d5f10a4958f5e870680be906689d92d1efb42480",
  "author" : "Christian Haudum",
  "time" : "7/6/15 11:45 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public add(info ReferenceInfo, partitionBy boolean) : Builder extracted from public add(column String, type DataType, path List<String>, columnPolicy ColumnPolicy, indexType ReferenceInfo.IndexType, partitionBy boolean) : Builder in class io.crate.metadata.table.TestingTableInfo.Builder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public addIndex(columnIdent ColumnIdent, indexType ReferenceInfo.IndexType, columns List<ReferenceInfo>) : Builder extracted from public addIndex(columnIdent ColumnIdent, indexType ReferenceInfo.IndexType) : Builder in class io.crate.metadata.table.TestingTableInfo.Builder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "nonMappedInner nodes has been introduced"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter tableParameters : ImmutableMap<String,Object> in method public TestingTableInfo(columns List<ReferenceInfo>, partitionedByColumns List<ReferenceInfo>, indexColumns Map<ColumnIdent,IndexReferenceInfo>, references Map<ColumnIdent,ReferenceInfo>, ident TableIdent, granularity RowGranularity, routing Routing, primaryKey List<ColumnIdent>, clusteredBy ColumnIdent, isAlias boolean, partitionedBy List<ColumnIdent>, partitions List<PartitionName>, columnPolicy ColumnPolicy, schemaInfo SchemaInfo, tableParameters ImmutableMap<String,Object>) from class io.crate.metadata.table.TestingTableInfo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private analyzer : String from class io.crate.metadata.IndexReferenceInfo",
    "comment" : "<p>public String analyzer()<br />called in file<br />sql/src/main/java/io/crate/analyze/MetaDataToASTNodeResolver.java<br />String analyzer = indexRef.analyzer();</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private columns : List<ReferenceInfo> from class io.crate.metadata.IndexReferenceInfo",
    "comment" : "<p>public List&lt;ReferenceInfo&gt; columns()<br />called in file<br />sql/src/main/java/io/crate/analyze/MetaDataToASTNodeResolver.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1134634,
  "repository" : "https://github.com/infinispan/infinispan.git",
  "sha1" : "35b6c869546a7968b6fd2f640add6eea87e03c22",
  "url" : "https://github.com/infinispan/infinispan/commit/35b6c869546a7968b6fd2f640add6eea87e03c22",
  "author" : "Adrian Nistor",
  "time" : "7/6/15 1:12 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery.ReverseFilterResultComparator moved to org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery.ReverseFilterResultComparator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testEmbeddedQuery() : void renamed to public testEmbeddedLuceneQuery() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private createAccount(id int) : AccountPB renamed to private createAccountPB(id int) : AccountPB in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.query.dsl.embedded.impl.QueryEngine",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.FilterRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private projection : String[] from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to protected projection : String[] from class org.infinispan.query.dsl.impl.BaseQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getProjection() : String[] from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to public getProjection() : String[] from class org.infinispan.query.dsl.impl.BaseQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private parseQuery(cacheConfiguration Configuration, serCtx SerializationContext, queryString String, searchFactory SearchIntegrator) : LuceneQueryParsingResult renamed to private transformJpaToLucene(isCompatMode boolean, serCtx SerializationContext, jpqlString String, searchFactory SearchIntegrator) : LuceneQueryParsingResult in class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private executeIndexedQuery(cache AdvancedCache<byte[],byte[]>, cacheConfiguration Configuration, serCtx SerializationContext, request QueryRequest) : QueryResponse renamed to private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query in class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.syntax.BooleShannonExpansionTest",
    "comment" : "Extract Superclass",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private createAccountPB() : AccountPB inlined to public testRemoteQuery() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testEmbeddedQuery() : void renamed to public testEmbeddedLuceneQuery() : void in class org.infinispan.client.hotrod.marshall.NonIndexedEmbeddedCompatTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private createAccountPB() : AccountPB inlined to public testPutAndGet() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private createAccountPB() : AccountPB inlined to public testEmbeddedLuceneQuery() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter normalizedFilter : BooleanExpr to query : BooleanExpr in method public addFilter(queryString String, query BooleanExpr, projection List<String>, sortFields List<SortField>, callback FilterCallback, eventTypes Object[]) : FilterSubscriptionImpl<TypeMetadata,AttributeMetadata,AttributeId> from class org.infinispan.objectfilter.impl.FilterRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter queryString : String to jpqlString : String in method private transformJpaToLucene(isCompatMode boolean, serCtx SerializationContext, jpqlString String, searchFactory SearchIntegrator) : LuceneQueryParsingResult from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable matcherImplClass : Class<? extends Matcher> in method public buildQuery(queryFactory QueryFactory, jpqlString String, startOffset long, maxResults int) : Query from class org.infinispan.query.dsl.embedded.impl.QueryEngine",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private executeNonIndexedQuery(cache AdvancedCache<byte[],byte[]>, cacheConfiguration Configuration, serCtx SerializationContext, request QueryRequest) : QueryResponse inlined to public query(cache AdvancedCache<byte[],byte[]>, query byte[]) : byte[] in class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable metadataAdapter : MetadataAdapter<TypeMetadata,AttributeMetadata,AttributeId> in method public getObjectFilter(jpaQuery String) : ObjectFilter from class org.infinispan.objectfilter.impl.BaseMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public list() : List<T> from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to public list() : List<T> from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private listInternal() : List from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to private listInternal() : List from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getResultSize() : int from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to public getResultSize() : int from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private ensureAccessPermissions(cache AdvancedCache<?,?>) : void from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to private ensureAccessPermissions(cache AdvancedCache<?,?>) : void from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private INITIAL_CAPACITY : int from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to private INITIAL_CAPACITY : int from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private startOffset : int from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to protected startOffset : int from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private cache : AdvancedCache<?,?> from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to protected cache : AdvancedCache<?,?> from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private results : List from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to private results : List from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private resultSize : int from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to private resultSize : int from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private maxResults : int from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to protected maxResults : int from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable projection : String[] in method public buildLuceneQuery(queryFactory QueryFactory, jpqlString String, startOffset long, maxResults int, additionalLuceneQuery Query) : LuceneQuery from class org.infinispan.query.dsl.embedded.impl.QueryEngine",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter classLoader : ClassLoader to userClassLoader : ClassLoader in method public ReflectionEntityNamesResolver(userClassLoader ClassLoader) from class org.infinispan.objectfilter.impl.hql.ReflectionEntityNamesResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter jpaQuery : String to queryString : String in method public ObjectFilterImpl(matcher BaseMatcher<TypeMetadata,AttributeMetadata,AttributeId>, metadataAdapter MetadataAdapter<TypeMetadata,AttributeMetadata,AttributeId>, queryString String, query BooleanExpr, projections List<String>, sortFields List<SortField>) from class org.infinispan.objectfilter.impl.ObjectFilterImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter normalizedFilter : BooleanExpr to query : BooleanExpr in method public ObjectFilterImpl(matcher BaseMatcher<TypeMetadata,AttributeMetadata,AttributeId>, metadataAdapter MetadataAdapter<TypeMetadata,AttributeMetadata,AttributeId>, queryString String, query BooleanExpr, projections List<String>, sortFields List<SortField>) from class org.infinispan.objectfilter.impl.ObjectFilterImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Parameter",
    "description" : "Split Parameter parsingResult : FilterParsingResult<TypeMetadata> to [sortFields : List<SortField>, projections : List<String>] in method public ObjectFilterImpl(matcher BaseMatcher<TypeMetadata,AttributeMetadata,AttributeId>, metadataAdapter MetadataAdapter<TypeMetadata,AttributeMetadata,AttributeId>, queryString String, query BooleanExpr, projections List<String>, sortFields List<SortField>) from class org.infinispan.objectfilter.impl.ObjectFilterImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Parameter",
    "description" : "Split Parameter request : QueryRequest to [jpqlString : String, startOffset : long, maxResults : int] in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable projection : String[] in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type cache : AdvancedCache<byte[],byte[]> to cache : AdvancedCache<?,?> in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type QueryResponse to Query in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [totalResults : long, list : List<?>] to q : Query in method private makeResponse(isCompatMode boolean, serCtx SerializationContext, q Query) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type list : List<AccountPB> to list : List<Account> in method public testRemoteQueryForEmbeddedEntry() : void from class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type list : List<UserPB> to list : List<User> in method public testRemoteQueryForEmbeddedEntryOnNonIndexedField() : void from class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter parsingResult : FilterParsingResult<TypeMetadata> to projections : List<String> in method public ObjectFilterImpl(matcher BaseMatcher<TypeMetadata,AttributeMetadata,AttributeId>, metadataAdapter MetadataAdapter<TypeMetadata,AttributeMetadata,AttributeId>, queryString String, query BooleanExpr, projections List<String>, sortFields List<SortField>) in class org.infinispan.objectfilter.impl.ObjectFilterImpl",
    "comment" : "<p>Split Parameter parsingResult : FilterParsingResult&lt;TypeMetadata&gt; to [sortFields : List&lt;SortField&gt;, projections : List&lt;String&gt;]</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute classLoader : ClassLoader to classLoaders : ClassLoader[] in class org.infinispan.objectfilter.impl.hql.ReflectionEntityNamesResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter cacheConfiguration : Configuration to jpqlString : String in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query in class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "<p>Split Parameter request : QueryRequest to [jpqlString : String, maxResults : int, startOffset : long]</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter request : QueryRequest to startOffset : long in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query in class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "<p>Split Parameter request : QueryRequest to [jpqlString : String, maxResults : int, startOffset : long]</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter list : List<?> to q : org.infinispan.query.dsl.Query in method private makeResponse(isCompatMode boolean, serCtx SerializationContext, q org.infinispan.query.dsl.Query) : QueryResponse in class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>[List&lt;?&gt;</span> <span class='pl-v'>list</span>, <span class='pl-k'>int</span> <span class='pl-v'>projSize</span>, <span class='pl-k'>long</span> <span class='pl-v'>totalResults</span>, <span class='pl-k'>int</span> <span class='pl-v'>numResults] merged to q</span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type parsingResult : FilterParsingResult<TypeMetadata> to projections : List<String> in method public ObjectFilterImpl(matcher BaseMatcher<TypeMetadata,AttributeMetadata,AttributeId>, metadataAdapter MetadataAdapter<TypeMetadata,AttributeMetadata,AttributeId>, queryString String, query BooleanExpr, projections List<String>, sortFields List<SortField>) in class org.infinispan.objectfilter.impl.ObjectFilterImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type cacheConfiguration : Configuration to jpqlString : String in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query in class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to void in method public close() : void in class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery.getIterator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type list : List<AccountPB> to list : List<User> in method public testRemoteQueryForEmbeddedEntryOnIndexedAndNonIndexedField() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>testRemoteQueryForEmbeddedEntryOnIndexedAndNonIndexedField</span></span>() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type iterable : CloseableIterable<Map.Entry<?,ObjectFilter.FilterResult>> to it : CloseableIterator<Map.Entry<?,ObjectFilter.FilterResult>> in method protected getIterator() : CloseableIterator<ObjectFilter.FilterResult> in class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery",
    "comment" : "<p>Inline variable<br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>CloseableIterable&lt;<span class='pl-smi'>Map</span>.Entry&lt;?, <span class='pl-smi'>ObjectFilter</span>.</span><span class='pl-smi'>FilterResult</span><span class='pl-k'>&gt;&gt;</span> iterable <span class='pl-k'>=</span> cache<span class='pl-k'>.</span>filterEntries(filter)<span class='pl-k'>.</span>converter(filter);<br /><span class='pl-k'>final</span> <span class='pl-k'>CloseableIterator&lt;<span class='pl-smi'>Map</span>.Entry&lt;?, <span class='pl-smi'>ObjectFilter</span>.</span><span class='pl-smi'>FilterResult</span><span class='pl-k'>&gt;&gt;</span> it <span class='pl-k'>=</span> cache<span class='pl-k'>.</span>filterEntries(filter)<span class='pl-k'>.</span>converter(filter)<span class='pl-k'>.</span>iterator();<br /></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private eqAndInterval(first ComparisonExpr, second ComparisonExpr, isConjunction boolean, cmp int) : BooleanExpr from class org.infinispan.objectfilter.impl.syntax.BooleanFilterNormalizer to private optimizeEqAndInterval(first ComparisonExpr, second ComparisonExpr, isConjunction boolean, cmp int) : BooleanExpr from class org.infinispan.objectfilter.impl.syntax.PredicateOptimisations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private notEqAndInterval(first ComparisonExpr, second ComparisonExpr, isConjunction boolean, cmp int) : BooleanExpr from class org.infinispan.objectfilter.impl.syntax.BooleanFilterNormalizer to private optimizeNotEqAndInterval(first ComparisonExpr, second ComparisonExpr, isConjunction boolean, cmp int) : BooleanExpr from class org.infinispan.objectfilter.impl.syntax.PredicateOptimisations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getProjection() : String[] renamed to protected getComparator() : Comparator<Comparable[]> in class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Test(expectedExceptions = ParsingException.class, expectedExceptionsMessageRegExp = \"HQL100005:.*\") to @Test(expectedExceptions = ParsingException.class, expectedExceptionsMessageRegExp = \"ISPN000405:.*\") in method public testInvalidEmbeddedAttributeQuery() : void from class org.infinispan.query.dsl.embedded.QueryDslConditionsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter projection : String[] in method package RemoteQuery(queryFactory QueryFactory, cache RemoteCacheImpl, serializationContext SerializationContext, jpaQuery String, projection String[], startOffset long, maxResults int) from class org.infinispan.client.hotrod.impl.query.RemoteQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedParameters : Map<String,Object> in method public parse(jpaQuery String, namedParameters Map<String,Object>) : FilterParsingResult<TypeMetadata> from class org.infinispan.objectfilter.impl.BaseMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter projection : String[] in method package FilterQuery(queryFactory QueryFactory, jpaQuery String, projection String[]) from class org.infinispan.objectfilter.test.FilterQueryFactory.FilterQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter projection : String[] in method protected BaseQuery(queryFactory QueryFactory, jpaQuery String, projection String[]) from class org.infinispan.query.dsl.impl.BaseQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter projection : String[] in method public EmbeddedLuceneQuery(queryFactory QueryFactory, jpaQuery String, projection String[], cacheQuery CacheQuery) from class org.infinispan.query.dsl.embedded.impl.EmbeddedLuceneQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IOException in method private executeIndexedQuery(cache AdvancedCache<byte[],byte[]>, cacheConfiguration Configuration, serCtx SerializationContext, request QueryRequest) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public parse(jpaQuery String, namedParameters Map<String,Object>) : FilterParsingResult<TypeMetadata> from class org.infinispan.objectfilter.impl.BaseMatcher",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected BaseQuery(queryFactory QueryFactory, jpaQuery String, projection String[]) from class org.infinispan.query.dsl.impl.BaseQuery",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public EmbeddedLuceneQuery(queryFactory QueryFactory, jpaQuery String, projection String[], cacheQuery CacheQuery) from class org.infinispan.query.dsl.embedded.impl.EmbeddedLuceneQuery",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected projection : String[] from class org.infinispan.query.dsl.impl.BaseQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private optimizeEqAndInterval(first ComparisonExpr, second ComparisonExpr, isConjunction boolean, cmp int) : BooleanExpr from class org.infinispan.objectfilter.impl.syntax.PredicateOptimisations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private optimizeNotEqAndInterval(first ComparisonExpr, second ComparisonExpr, isConjunction boolean, cmp int) : BooleanExpr from class org.infinispan.objectfilter.impl.syntax.PredicateOptimisations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable isIndexed : boolean in method private executeNonIndexedQuery(cache AdvancedCache<byte[],byte[]>, cacheConfiguration Configuration, serCtx SerializationContext, request QueryRequest) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "<p>Inlined method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable isCompatMode : boolean in method private executeNonIndexedQuery(cache AdvancedCache<byte[],byte[]>, cacheConfiguration Configuration, serCtx SerializationContext, request QueryRequest) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "<p>Inlined method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter cacheConfiguration : Configuration in method private executeIndexedQuery(cache AdvancedCache<byte[],byte[]>, cacheConfiguration Configuration, serCtx SerializationContext, request QueryRequest) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter isCompatMode : boolean in method private transformJpaToLucene(isCompatMode boolean, serCtx SerializationContext, jpqlString String, searchFactory SearchIntegrator) : LuceneQueryParsingResult from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter cacheConfiguration : Configuration in method private parseQuery(cacheConfiguration Configuration, serCtx SerializationContext, queryString String, searchFactory SearchIntegrator) : LuceneQueryParsingResult from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serCtx : SerializationContext in method private getFieldDescriptor(serCtx SerializationContext, type String, attributePath String) : FieldDescriptor from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter type : String in method private getFieldDescriptor(serCtx SerializationContext, type String, attributePath String) : FieldDescriptor from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.infinispan.objectfilter.impl.BaseMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.infinispan.query.dsl.embedded.impl.EmbeddedLuceneQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type luceneQuery : Query to luceneQuery : org.apache.lucene.search.Query in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable normalizedFilter : BooleanExpr in method public registerFilter(jpaQuery String, callback FilterCallback, eventType Object...) : FilterSubscription from class org.infinispan.objectfilter.impl.BaseMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable md : Descriptor in method public getFieldBridge(type String, propertyPath String) : FieldBridge from class org.infinispan.query.remote.QueryFacadeImpl.parseQuery.fieldBridgeProvider.new FieldBridgeProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter numResults : int to numResults : int in method private makeResponse(isCompatMode boolean, serCtx SerializationContext, q Query) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter messageDescriptor : Descriptor to messageDescriptor : Descriptor in method private getFieldDescriptor(serCtx SerializationContext, type String, attributePath String) : FieldDescriptor from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter projSize : int to projSize : int in method private makeResponse(isCompatMode boolean, serCtx SerializationContext, q Query) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable isCompatMode : boolean to isCompatMode : boolean in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected cache : AdvancedCache<?,?> from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected startOffset : int from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected maxResults : int from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type entry : Map.Entry<?,ObjectFilter.FilterResult> to entry : ObjectFilter.FilterResult in method private listInternal() : List from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type iterable : CloseableIterable<Map.Entry<?,ObjectFilter.FilterResult>> to iterator : CloseableIterator<ObjectFilter.FilterResult> in method private listInternal() : List from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable iterable : CloseableIterable<Map.Entry<?,ObjectFilter.FilterResult>> to iterator : CloseableIterator<ObjectFilter.FilterResult> in method private listInternal() : List from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable r : ObjectFilter.FilterResult in method private listInternal() : List from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter list : List<?> to list : List<?> in method private makeResponse(isCompatMode boolean, serCtx SerializationContext, q Query) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6361
}, {
  "id" : 1135417,
  "repository" : "https://github.com/google/j2objc.git",
  "sha1" : "fa3e6fa02dadc675f0d487a15cd842b3ac4a0c11",
  "url" : "https://github.com/google/j2objc/commit/fa3e6fa02dadc675f0d487a15cd842b3ac4a0c11",
  "author" : "kstanger",
  "time" : "7/7/15 1:03 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getOperatorFunctionModifier(expr Expression) : String extracted from private rewriteBoxedPrefixOrPostfix(node TreeNode, operand Expression, funcName String) : void in class com.google.devtools.j2objc.translate.Autoboxer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "logic has been changed"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getOperatorFunctionModifier(expr Expression) : String extracted from private rewriteBoxedAssignment(node Assignment) : void in class com.google.devtools.j2objc.translate.Autoboxer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "assert message has been changed"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter operand : Expression to expr : Expression in method private getOperatorFunctionModifier(expr Expression) : String from class com.google.devtools.j2objc.translate.Autoboxer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable lhs : Expression to expr : Expression in method private getOperatorFunctionModifier(expr Expression) : String from class com.google.devtools.j2objc.translate.Autoboxer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1926
}, {
  "id" : 1135559,
  "repository" : "https://github.com/tomahawk-player/tomahawk-android.git",
  "sha1" : "56c273ee11296288cb15320c3de781b94a1e8eb4",
  "url" : "https://github.com/tomahawk-player/tomahawk-android/commit/56c273ee11296288cb15320c3de781b94a1e8eb4",
  "author" : "Enno Gottschalk",
  "time" : "7/7/15 10:44 PM",
  "refactorings" : [ {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getAlbumTimeStamps() : ConcurrentHashMap<Album,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to public getAlbumTimeStamps() : ConcurrentHashMap<Album,Long> from class org.tomahawk.libtomahawk.collection.UserCollection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected mAlbumTracks : ConcurrentHashMap<Album,Set<Query>> from class org.tomahawk.libtomahawk.collection.NativeCollection to protected mAlbumTracks : ConcurrentHashMap<Album,Set<Query>> from class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public wipe() : void from class org.tomahawk.libtomahawk.collection.NativeCollection to public wipe() : void from class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected mQueries : Set<Query> from class org.tomahawk.libtomahawk.collection.NativeCollection to protected mQueries : Set<Query> from class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected mArtists : Set<Artist> from class org.tomahawk.libtomahawk.collection.NativeCollection to protected mArtists : Set<Artist> from class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getArtistTimeStamps() : ConcurrentHashMap<Artist,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to public getArtistTimeStamps() : ConcurrentHashMap<Artist,Long> from class org.tomahawk.libtomahawk.collection.UserCollection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute protected mArtistTimeStamps : ConcurrentHashMap<Artist,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to private mArtistTimeStamps : ConcurrentHashMap<Artist,Long> from class org.tomahawk.libtomahawk.collection.UserCollection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public addQuery(query Query, addedTimeStamp long) : void from class org.tomahawk.libtomahawk.collection.NativeCollection to public addQuery(query Query, addedTimeStamp long) : void from class org.tomahawk.libtomahawk.collection.UserCollection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getQueryTimeStamps() : ConcurrentHashMap<Query,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to public getQueryTimeStamps() : ConcurrentHashMap<Query,Long> from class org.tomahawk.libtomahawk.collection.UserCollection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected mAlbumArtists : Set<Artist> from class org.tomahawk.libtomahawk.collection.NativeCollection to protected mAlbumArtists : Set<Artist> from class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute protected mQueryTimeStamps : ConcurrentHashMap<Query,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to private mQueryTimeStamps : ConcurrentHashMap<Query,Long> from class org.tomahawk.libtomahawk.collection.UserCollection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected mAlbums : Set<Album> from class org.tomahawk.libtomahawk.collection.NativeCollection to protected mAlbums : Set<Album> from class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute protected mAlbumTimeStamps : ConcurrentHashMap<Album,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to private mAlbumTimeStamps : ConcurrentHashMap<Album,Long> from class org.tomahawk.libtomahawk.collection.UserCollection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected mArtistAlbums : ConcurrentHashMap<Artist,Set<Album>> from class org.tomahawk.libtomahawk.collection.NativeCollection to protected mArtistAlbums : ConcurrentHashMap<Artist,Set<Album>> from class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Attribute",
    "description" : "Move And Rename Attribute private mCachedAlbumArtists : Set<Artist> renamed to protected mAlbumArtists : Set<Artist> and moved from class org.tomahawk.libtomahawk.collection.ScriptResolverCollection to class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Attribute",
    "description" : "Move And Rename Attribute private mCachedQueries : Set<Query> renamed to protected mQueries : Set<Query> and moved from class org.tomahawk.libtomahawk.collection.ScriptResolverCollection to class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Attribute",
    "description" : "Move And Rename Attribute private mCachedArtists : Set<Artist> renamed to protected mArtists : Set<Artist> and moved from class org.tomahawk.libtomahawk.collection.ScriptResolverCollection to class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Attribute",
    "description" : "Move And Rename Attribute private mCachedAlbums : Set<Album> renamed to protected mAlbums : Set<Album> and moved from class org.tomahawk.libtomahawk.collection.ScriptResolverCollection to class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Promise<List<Album>,Throwable,Void> to Promise<Set<Album>,Throwable,Void> in method public getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> from class org.tomahawk.libtomahawk.collection.NativeCollection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Promise<List<Query>,Throwable,Void> to Promise<Set<Query>,Throwable,Void> in method public getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> from class org.tomahawk.libtomahawk.collection.NativeCollection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Promise<List<Album>,Throwable,Void> to Promise<Set<Album>,Throwable,Void> in method public getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> from class org.tomahawk.libtomahawk.collection.ScriptResolverCollection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Promise<List<Query>,Throwable,Void> to Promise<Set<Query>,Throwable,Void> in method public getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> from class org.tomahawk.libtomahawk.collection.ScriptResolverCollection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Promise<List<Album>,Throwable,Void> to Promise<Set<Album>,Throwable,Void> in method public abstract getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> from class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Promise<List<Query>,Throwable,Void> to Promise<Set<Query>,Throwable,Void> in method public abstract getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> from class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter addedTimeStamp : long to onlyIfCached : boolean in method public getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.NativeCollection",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type albums : List<Album> to albums : Set<Album> in method public onReportResults(results JsonArray) : void from class org.tomahawk.libtomahawk.collection.ScriptResolverCollection.getArtistAlbums.done.new DoneCallback<ScriptResolverCollectionMetaData>.onDone.start.new ScriptJob.ResultsArrayCallback",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type deferred : Deferred<List<Album>,Throwable,Void> to deferred : Deferred<Set<Album>,Throwable,Void> in method public getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> from class org.tomahawk.libtomahawk.collection.ScriptResolverCollection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type queries : List<Query> to queries : Set<Query> in method public onReportResults(results JsonArray) : void from class org.tomahawk.libtomahawk.collection.ScriptResolverCollection.getAlbumTracks.done.new DoneCallback<ScriptResolverCollectionMetaData>.onDone.start.new ScriptJob.ResultsArrayCallback",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type deferred : Deferred<List<Query>,Throwable,Void> to deferred : Deferred<Set<Query>,Throwable,Void> in method public getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> from class org.tomahawk.libtomahawk.collection.ScriptResolverCollection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type addedTimeStamp : long to onlyIfCached : boolean in method public getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.NativeCollection",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type result : List<Query> to result : Set<Query> in method public onDone(result Set<Query>) : void from class org.tomahawk.tomahawk_android.adapters.ViewHolder.fillView.done.new DoneCallback<Set<Query>>",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type result : List<Album> to result : Set<Album> in method public onDone(result Set<Album>) : void from class org.tomahawk.tomahawk_android.fragments.AlbumsFragment.updateAdapter.done.new DoneCallback<Set<Album>>",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type result : List<Query> to result : Set<Query> in method public onDone(result Set<Query>) : void from class org.tomahawk.tomahawk_android.fragments.ContextMenuFragment.setupContextMenuItems.setOnClickListener.new View.OnClickListener.onClick.done.new DoneCallback<Set<Query>>",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Promise<Boolean,Throwable,Void> to Promise<Set<Query>,Throwable,Void> in method public getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.NativeCollection",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>Promise&lt;List&lt;<span class='pl-smi'>Query</span>&gt;, <span class='pl-smi'>Throwable</span>, <span class='pl-smi'>Void</span>&gt;</span></span> -&gt; <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>Promise&lt;Set&lt;<span class='pl-smi'>Query</span>&gt;, <span class='pl-smi'>Throwable</span>, <span class='pl-smi'>Void</span>&gt;</span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public hasArtistAlbums(artist Artist) : Promise<Boolean,Throwable,Void> renamed to public getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.NativeCollection",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter onlyIfCached : boolean in method public getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> from class org.tomahawk.libtomahawk.collection.NativeCollection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter onlyIfCached : boolean in method public getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> from class org.tomahawk.libtomahawk.collection.NativeCollection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter onlyIfCached : boolean in method public getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> from class org.tomahawk.libtomahawk.collection.ScriptResolverCollection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter onlyIfCached : boolean in method public getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> from class org.tomahawk.libtomahawk.collection.ScriptResolverCollection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter onlyIfCached : boolean in method public abstract getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> from class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter onlyIfCached : boolean in method public abstract getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> from class org.tomahawk.libtomahawk.collection.Collection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private mQueryTimeStamps : ConcurrentHashMap<Query,Long> from class org.tomahawk.libtomahawk.collection.UserCollection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private mArtistTimeStamps : ConcurrentHashMap<Artist,Long> from class org.tomahawk.libtomahawk.collection.UserCollection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private mAlbumTimeStamps : ConcurrentHashMap<Album,Long> from class org.tomahawk.libtomahawk.collection.UserCollection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type albums : List<Album> to albums : Set<Album> in method public call() : Set<Album> from class org.tomahawk.libtomahawk.collection.NativeCollection.getArtistAlbums.when.new Callable<Set<Album>>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type queries : List<Query> to queries : Set<Query> in method public call() : Set<Query> from class org.tomahawk.libtomahawk.collection.NativeCollection.getAlbumTracks.when.new Callable<Set<Query>>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Album> to Set<Album> in method public call() : Set<Album> from class org.tomahawk.libtomahawk.collection.NativeCollection.getArtistAlbums.when.new Callable<Set<Album>>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Query> to Set<Query> in method public call() : Set<Query> from class org.tomahawk.libtomahawk.collection.NativeCollection.getAlbumTracks.when.new Callable<Set<Query>>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type result : Boolean to result : Set<Query> in method public onDone(result Set<Query>) : void from class org.tomahawk.tomahawk_android.fragments.AlbumsFragment.onItemClick.done.new DoneCallback<Set<Query>>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type result : Boolean to result : Set<Album> in method public onDone(result Set<Album>) : void from class org.tomahawk.tomahawk_android.fragments.ArtistsFragment.onItemClick.done.new DoneCallback<Set<Album>>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type result : Boolean to result : Set<Query> in method public onDone(result Set<Query>) : void from class org.tomahawk.tomahawk_android.fragments.UserCollectionFragment.onItemClick.done.new DoneCallback<Set<Query>>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter queries : List<Query> to sortedQueries : List<Query> in method public onDone(queries Set<Query>) : void from class org.tomahawk.tomahawk_android.fragments.TracksFragment.updateAdapter.done.new DoneCallback<Set<Query>>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1144
}, {
  "id" : 1135604,
  "repository" : "https://github.com/deeplearning4j/deeplearning4j.git",
  "sha1" : "91cdfa1ffd937a4cb01cdc0052874ef7831955e2",
  "url" : "https://github.com/deeplearning4j/deeplearning4j/commit/91cdfa1ffd937a4cb01cdc0052874ef7831955e2",
  "author" : "nyghtowl",
  "time" : "7/7/15 8:06 PM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method public testBackTrackLine() : void from class org.deeplearning4j.plot.ListenerTest to public testBackTrackLine() : void from class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getNewScore(oldParameters INDArray) : double extracted from public optimize(initialStep double, parameters INDArray, gradients INDArray) : double in class org.deeplearning4j.optimize.solvers.BackTrackLineSearch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getIrisLogisticLayerConfig(activationFunction String, iterations int) : OutputLayer extracted from public testLineSearch() : void in class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter function : Model to layer : Model in method public BackTrackLineSearch(layer Model, stepFunction StepFunction, optimizer ConvexOptimizer) from class org.deeplearning4j.optimize.solvers.BackTrackLineSearch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable l : OutputLayer to layer : OutputLayer in method public testLineSearch() : void from class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable d : DataSet to data : DataSet in method public testLineSearch() : void from class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute function : Model to layer : Model in class org.deeplearning4j.optimize.solvers.BackTrackLineSearch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private getIris1ItConfig(hiddenLayerSizes int[], activationFunction String, iterations int) : MultiLayerConfiguration from class org.deeplearning4j.plot.ListenerTest to private getIrisMultiLayerConfig(hiddenLayerSizes int[], activationFunction String, iterations int) : MultiLayerConfiguration from class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest",
    "comment" : "<p>The methods are almost identical</p><p><a href='https://github.com/eclipse/deeplearning4j/commit/91cdfa1ffd937a4cb01cdc0052874ef7831955e2#diff-367fe3c8ca7846530b2d0562b3b83324R80'>https://github.com/eclipse/deeplearning4j/commit/91cdfa1ffd937a4cb01cdc0052874ef7831955e2#diff-367fe3c8ca7846530b2d0562b3b83324R80</a></p><p><a href='https://github.com/eclipse/deeplearning4j/commit/91cdfa1ffd937a4cb01cdc0052874ef7831955e2#diff-85103651ed390942e886bf294f94953eL188'>https://github.com/eclipse/deeplearning4j/commit/91cdfa1ffd937a4cb01cdc0052874ef7831955e2#diff-85103651ed390942e886bf294f94953eL188</a>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable c : MultiLayerConfiguration to conf : MultiLayerConfiguration in method private getIrisMultiLayerConfig(hiddenLayerSizes int[], activationFunction String, iterations int) : MultiLayerConfiguration from class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 997
}, {
  "id" : 1135734,
  "repository" : "https://github.com/google/closure-compiler.git",
  "sha1" : "b9a17665b158955ad28ef7f50cc0a8585460f053",
  "url" : "https://github.com/google/closure-compiler/commit/b9a17665b158955ad28ef7f50cc0a8585460f053",
  "author" : "tbreisacher",
  "time" : "7/7/15 1:21 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private createUntaggedTemplateLiteral(n Node) : void inlined to package visitTemplateLiteral(t NodeTraversal, n Node) : void in class com.google.javascript.jscomp.Es6TemplateLiterals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private createTaggedTemplateLiteral(t NodeTraversal, n Node) : void renamed to package visitTaggedTemplateLiteral(t NodeTraversal, n Node) : void in class com.google.javascript.jscomp.Es6TemplateLiterals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable templateLitNode : Node in method package processTemplateLiteral(tree TemplateLiteralExpressionTree) : Node from class com.google.javascript.jscomp.parsing.IRFactory.TransformDispatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable i : int to child : Node in method visitTaggedTemplateLiteral(t NodeTraversal, n Node) : void in class com.google.javascript.jscomp.Es6TemplateLiterals",
    "comment" : "<p>the implementation of the for loops is very different</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable i : int to child : Node in method private createRawStringArray(n Node) : Node in class com.google.javascript.jscomp.Es6TemplateLiterals",
    "comment" : "<p>the implementation of the for loops is very different</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable i : int to child : Node in method private createCookedStringArray(n Node) : Node in class com.google.javascript.jscomp.Es6TemplateLiterals",
    "comment" : "<p>the implementation of the for loops is very different</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable items : Node[] to array : Node in method private createRawStringArray(n Node) : Node in class com.google.javascript.jscomp.Es6TemplateLiterals",
    "comment" : "<p>return IR.arraylit(items); -&gt; return array;</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable items : Node[] to array : Node in method private createCookedStringArray(n Node) : Node in class com.google.javascript.jscomp.Es6TemplateLiterals",
    "comment" : "<p>return IR.arraylit(items); -&gt; return array;</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private createUntaggedTemplateLiteral(n Node) : void renamed to package visitTemplateLiteral(t NodeTraversal, n Node) : void in class com.google.javascript.jscomp.Es6TemplateLiterals",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package visitTemplateLiteral(t NodeTraversal, n Node) : void renamed to package visitTaggedTemplateLiteral(t NodeTraversal, n Node) : void in class com.google.javascript.jscomp.Es6TemplateLiterals",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Nullable in attribute public operand : ParseTree from class com.google.javascript.jscomp.parsing.parser.trees.TemplateLiteralExpressionTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package visitTaggedTemplateLiteral(t NodeTraversal, n Node) : void from class com.google.javascript.jscomp.Es6TemplateLiterals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable templateLit : Node in method package visitTaggedTemplateLiteral(t NodeTraversal, n Node) : void from class com.google.javascript.jscomp.Es6TemplateLiterals",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2970
}, {
  "id" : 1135909,
  "repository" : "https://github.com/spring-projects/spring-framework.git",
  "sha1" : "ef0eb01f93d6c485cf37692fd193833a6821272a",
  "url" : "https://github.com/spring-projects/spring-framework/commit/ef0eb01f93d6c485cf37692fd193833a6821272a",
  "author" : "Brian Clozel",
  "time" : "7/7/15 8:08 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected checkRequest(request HttpServletRequest) : void extracted from protected checkAndPrepare(request HttpServletRequest, response HttpServletResponse, cacheControl CacheControl) : void in class org.springframework.web.servlet.support.WebContentGenerator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected lookupCacheSeconds(urlPath String) : CacheControl renamed to protected lookupCacheControl(urlPath String) : CacheControl in class org.springframework.web.servlet.mvc.WebContentInterceptor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testSetPathMatcherToNull() : void renamed to public throwsExceptionWithNullPathMatcher() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public preHandleSetsCacheSecondsOnMatchingRequest() : void renamed to public cacheResourcesConfiguration() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public preHandleSetsCacheSecondsOnMatchingRequestWithCustomCacheMapping() : void renamed to public mappedCacheConfigurationOverridesGlobal() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public preHandleSetsCacheSecondsOnMatchingRequestWithCachingDisabled() : void renamed to public emptyCacheConfiguration() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public preHandleSetsCacheSecondsOnMatchingRequestWithNoCaching() : void renamed to public preventCacheConfiguration() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable cacheControl : CacheControl to cacheSeconds : Integer in method protected lookupCacheSeconds(urlPath String) : Integer from class org.springframework.web.servlet.mvc.WebContentInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type CacheControl to Integer in method protected lookupCacheSeconds(urlPath String) : Integer from class org.springframework.web.servlet.mvc.WebContentInterceptor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cacheControl : CacheControl to cacheSeconds : Integer in method protected lookupCacheSeconds(urlPath String) : Integer from class org.springframework.web.servlet.mvc.WebContentInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type cacheMappings : Map<String,CacheControl> to cacheMappings : Map<String,Integer> in class org.springframework.web.servlet.mvc.WebContentInterceptor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cacheControlHeaders : List to cacheControlHeaders : Iterable<String> in method public cacheResourcesConfiguration() : void from class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cacheControlHeaders : List to cacheControlHeaders : Iterable<String> in method public mappedCacheConfigurationOverridesGlobal() : void from class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cacheControlHeaders : List to cacheControlHeaders : Iterable<String> in method public preventCacheConfiguration() : void from class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type expiresHeaders : List to expiresHeaders : Iterable<String> in method public emptyCacheConfiguration() : void from class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cacheControlHeaders : List to cacheControlHeaders : Iterable<String> in method public emptyCacheConfiguration() : void from class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute cacheMappings : Map<String,CacheControl> to cacheControlMappings : Map<String,CacheControl> in class org.springframework.web.servlet.mvc.WebContentInterceptor",
    "comment" : "<p>cacheMappings still exists in child commit</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable cacheControl : CacheControl to cacheSeconds : Integer in method public preHandle(request HttpServletRequest, response HttpServletResponse, handler Object) : boolean in class org.springframework.web.servlet.mvc.WebContentInterceptor",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>CacheControl</span> cacheControl <span class='pl-k'>=</span> lookupCacheControl(lookupPath);</span>&nbsp; still exists in child commit</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type expiresHeaders : List to interceptor : WebContentInterceptor in method public http10CachingConfigAndSpecificMapping() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public preHandleSetsCacheSecondsOnMatchingRequestWithNoCaching() : void renamed to public emptyCacheConfiguration() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public preHandleSetsCacheSecondsOnMatchingRequestWithCachingDisabled() : void renamed to public http10CachingConfigAndSpecificMapping() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter cacheSeconds : int in method protected addHttp10CacheHeaders(cacheSeconds int, response HttpServletResponse) : void from class org.springframework.web.servlet.support.WebContentGenerator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"deprecation\") in method public http10CachingConfigAndSpecificMapping() : void from class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>http10CachingConfigAndSpecificMapping</span></span>() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public http10CachingConfigAndSpecificMapping() : void from class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>http10CachingConfigAndSpecificMapping</span></span>() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method protected addHttp10CacheHeaders(cacheSeconds int, response HttpServletResponse) : void from class org.springframework.web.servlet.support.WebContentGenerator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2657
}, {
  "id" : 1136002,
  "repository" : "https://github.com/apache/hive.git",
  "sha1" : "b8d2140fe4faccadcf1a6343ec8cd0cc58c315f9",
  "url" : "https://github.com/apache/hive/commit/b8d2140fe4faccadcf1a6343ec8cd0cc58c315f9",
  "author" : "Sergey Shelukhin",
  "time" : "7/7/15 10:30 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private doFirstFetchIfNeeded() : void extracted from private joinFinalLeftData() : void in class org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private doFirstFetchIfNeeded() : void extracted from public process(row Object, tag int) : void in class org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable hasMore : boolean in method private fetchOneRow(tag byte) : void from class org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method private doFirstFetchIfNeeded() : void in class org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>private</span> <span class='pl-k'>boolean</span> <span class='pl-en'>allFetchDone</span>()</span> still exists in child commit</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private allFetchDone() : boolean renamed to private doFirstFetchIfNeeded() : void in class org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4288
}, {
  "id" : 1136184,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "ce5f9ff96e2718e4014655f819314ac2ac4bd8bf",
  "url" : "https://github.com/JetBrains/intellij-community/commit/ce5f9ff96e2718e4014655f819314ac2ac4bd8bf",
  "author" : "Vassiliy.Kudryashov",
  "time" : "7/8/15 5:41 PM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method private getLiveIndicator(base Icon) : Icon from class com.intellij.execution.ui.RunContentManagerImpl to public getLiveIndicator(base Icon) : Icon from class com.intellij.execution.runners.ExecutionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getConfiguration(project Project) : RunnerAndConfigurationSettings renamed to private getSelectedConfiguration(project Project) : RunnerAndConfigurationSettings in class com.intellij.execution.ExecutorRegistryImpl.ExecutorAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable icon : Icon in method private setConfigurationIcon(presentation Presentation, settings RunnerAndConfigurationSettings, project Project) : void from class com.intellij.execution.actions.RunConfigurationsComboBoxAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @Nullable in parameter base : Icon in method public getLiveIndicator(base Icon) : Icon from class com.intellij.execution.runners.ExecutionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public getRunningDescriptors(condition Condition<RunnerAndConfigurationSettings>) : List<RunContentDescriptor> from class com.intellij.execution.impl.ExecutionManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public getLiveIndicator(base Icon) : Icon from class com.intellij.execution.runners.ExecutionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"UseJBColor\") in method public paintIcon(c Component, g Graphics, x int, y int) : void from class com.intellij.execution.runners.ExecutionUtil.getLiveIndicator.new LayeredIcon.new Icon",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 22095
}, {
  "id" : 1136333,
  "repository" : "https://github.com/WhisperSystems/Signal-Android.git",
  "sha1" : "c4a37e38aba926c2bef27e4fc00e3a4848ce46bd",
  "url" : "https://github.com/WhisperSystems/Signal-Android/commit/c4a37e38aba926c2bef27e4fc00e3a4848ce46bd",
  "author" : "Calvin Hu",
  "time" : "7/8/15 8:01 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public setMedia(slide Slide, masterSecret MasterSecret) : void extracted from public setMedia(slide Slide) : void in class org.thoughtcrime.securesms.mms.AttachmentManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Some logic has been added"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private constructPartFromUri(uri Uri) : PduPart renamed to private constructPartFromByteArrayAndUri(uri Uri, data byte[], encrypted boolean) : PduPart in class org.thoughtcrime.securesms.mms.ImageSlide",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable draftType : String in method private getDraftsForCurrentState() : Drafts from class org.thoughtcrime.securesms.ConversationActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter data : byte[] in method private constructPartFromByteArrayAndUri(uri Uri, data byte[], encrypted boolean) : PduPart from class org.thoughtcrime.securesms.mms.ImageSlide",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter encrypted : boolean in method private constructPartFromByteArrayAndUri(uri Uri, data byte[], encrypted boolean) : PduPart from class org.thoughtcrime.securesms.mms.ImageSlide",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public rotateBitmap(bitmap Bitmap, angle int) : Bitmap from class org.thoughtcrime.securesms.util.BitmapUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1335
}, {
  "id" : 1136335,
  "repository" : "https://github.com/WhisperSystems/Signal-Android.git",
  "sha1" : "f0b2cc559026871c1b4d8e008666afb590553004",
  "url" : "https://github.com/WhisperSystems/Signal-Android/commit/f0b2cc559026871c1b4d8e008666afb590553004",
  "author" : "Christoph Haefner",
  "time" : "7/8/15 4:55 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private craftIntent(context Context, intentAction String, extras Bundle) : PendingIntent extracted from public getMarkAsReadIntent(context Context, masterSecret MasterSecret) : PendingIntent in class org.thoughtcrime.securesms.notifications.NotificationState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "method invocation name and arguments have been changed -putExtra-"
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable replyAction : Action in method private sendSingleThreadNotification(context Context, masterSecret MasterSecret, notificationState NotificationState, signal boolean) : void from class org.thoughtcrime.securesms.notifications.MessageNotifier",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 923
}, {
  "id" : 1136374,
  "repository" : "https://github.com/novoda/android-demos.git",
  "sha1" : "5cdabae35f0642e9fe243afe12e4c16b3378a150",
  "url" : "https://github.com/novoda/android-demos/commit/5cdabae35f0642e9fe243afe12e4c16b3378a150",
  "author" : "Friedger Müffke",
  "time" : "7/9/15 10:00 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class com.novoda.Base64DecoderException moved to com.novoda.demo.encryption.Base64DecoderException",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.novoda.Base64 moved to com.novoda.demo.encryption.Base64",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.novoda.Encrypt moved and renamed to com.novoda.demo.encryption.EncryptionActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private updateTextViews() : void extracted from public onCreate(savedInstanceState Bundle) : void in class com.novoda.demo.encryption.EncryptionActivity",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "hasen't been reported by RefactoringMiner"
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1136424,
  "repository" : "https://github.com/nutzam/nutz.git",
  "sha1" : "de7efe40dad0f4bb900c4fffa80ed377745532b3",
  "url" : "https://github.com/nutzam/nutz/commit/de7efe40dad0f4bb900c4fffa80ed377745532b3",
  "author" : "kouxian",
  "time" : "7/8/15 5:25 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public migration(dao Dao, klass Class<?>, add boolean, del boolean, tableName Object) : void extracted from public migration(dao Dao, klass Class<?>, add boolean, del boolean) : void in class org.nutz.dao.util.Daos",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "lots of logic changes"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable sql : Sql to sb : StringBuilder in method public invoke(conn Connection) : void in class org.nutz.dao.util.Daos.migration.dao",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>sql still exists in child commit: Sql</span> sql <span class='pl-k'>=</span> <span class='pl-smi'>Sqls</span><span class='pl-k'>.</span>create(sb<span class='pl-k'>.</span>toString());</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public migration(dao Dao, packageName String, add boolean, del boolean, nameTable String) : void extracted from public migration(dao Dao, packageName String, add boolean, del boolean) : void in class org.nutz.dao.util.Daos",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter dao : Dao in method public migration(dao Dao, klass Class<?>, add boolean, del boolean) : void from class org.nutz.dao.util.Daos",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1121
}, {
  "id" : 1136480,
  "repository" : "https://github.com/siacs/Conversations.git",
  "sha1" : "bdc9f9a44f337ab595a3570833dc6a0558df904c",
  "url" : "https://github.com/siacs/Conversations/commit/bdc9f9a44f337ab595a3570833dc6a0558df904c",
  "author" : "Andreas Straub",
  "time" : "7/9/15 9:23 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getIdentityKeyCursor(account Account, name String, own boolean, fingerprint String) : Cursor extracted from private getIdentityKeyCursor(account Account, name String, own boolean) : Cursor in class eu.siacs.conversations.persistance.DatabaseBackend",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the -selectionString- extracted variable has been changed"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isTrustedSession(account Account, contact AxolotlAddress) : boolean renamed to public isIdentityKeyTrusted(account Account, name String, fingerprint String) : AxolotlService.SQLiteAxolotlStore.Trust in class eu.siacs.conversations.persistance.DatabaseBackend",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setTrustedSession(account Account, contact AxolotlAddress, trusted boolean) : void renamed to public setIdentityKeyTrust(account Account, name String, fingerprint String, trust AxolotlService.SQLiteAxolotlStore.Trust) : boolean in class eu.siacs.conversations.persistance.DatabaseBackend",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter counterpart : AxolotlAddress to name : String in method public getFingerprintTrust(name String, fingerprint String) : SQLiteAxolotlStore.Trust in class eu.siacs.conversations.crypto.axolotl.AxolotlService",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter counterpart : AxolotlAddress to name : String in method public setFingerprintTrust(name String, fingerprint String, trust SQLiteAxolotlStore.Trust) : void in class eu.siacs.conversations.crypto.axolotl.AxolotlService",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter address : AxolotlAddress to name : String in method public getFingerprintTrust(name String, fingerprint String) : Trust in class eu.siacs.conversations.crypto.axolotl.AxolotlService.SQLiteAxolotlStore",
    "comment" : "<p>If we consider <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>public</span> <span class='pl-k'>boolean</span> <span class='pl-en'>isTrustedSession</span>(<span class='pl-smi'>AxolotlAddress</span> <span class='pl-v'>address</span>)</span> renamed to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>public</span> <span class='pl-smi'>Trust</span> <span class='pl-en'>getFingerprintTrust</span>(<span class='pl-smi'>String</span> <span class='pl-v'>name</span>, <span class='pl-smi'>String</span> <span class='pl-v'>fingerprint</span>)</span></p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter address : AxolotlAddress to name : String in method public setFingerprintTrust(name String, fingerprint String, trust Trust) : void in class eu.siacs.conversations.crypto.axolotl.AxolotlService.SQLiteAxolotlStore",
    "comment" : "<p>If we consider <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>public</span> <span class='pl-k'>void</span> <span class='pl-en'>setTrustedSession</span>(<span class='pl-smi'>AxolotlAddress</span> <span class='pl-v'>address</span>, <span class='pl-k'>boolean</span> <span class='pl-v'>trusted</span>)</span> renamed to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>public</span> <span class='pl-k'>void</span> <span class='pl-en'>setFingerprintTrust</span>(<span class='pl-smi'>String</span> <span class='pl-v'>name</span>, <span class='pl-smi'>String</span> <span class='pl-v'>fingerprint</span>, <span class='pl-smi'>Trust</span> <span class='pl-v'>trust</span>)</span></p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter trusted : boolean to trust : Trust in method public setFingerprintTrust(name String, fingerprint String, trust Trust) : void in class eu.siacs.conversations.crypto.axolotl.AxolotlService.SQLiteAxolotlStore",
    "comment" : "<p>If we consider <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>public</span> <span class='pl-k'>void</span> <span class='pl-en'>setTrustedSession</span>(<span class='pl-smi'>AxolotlAddress</span> <span class='pl-v'>address</span>, <span class='pl-k'>boolean</span> <span class='pl-v'>trusted</span>)</span> renamed to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>public</span> <span class='pl-k'>void</span> <span class='pl-en'>setFingerprintTrust</span>(<span class='pl-smi'>String</span> <span class='pl-v'>name</span>, <span class='pl-smi'>String</span> <span class='pl-v'>fingerprint</span>, <span class='pl-smi'>Trust</span> <span class='pl-v'>trust</span>)</span></p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute isTrusted : boolean to fingerprint : String in class eu.siacs.conversations.crypto.axolotl.AxolotlService.XmppAxolotlSession",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter session : AxolotlService.XmppAxolotlSession to fingerprint : String in method public setAxolotlFingerprint(fingerprint String) : void in class eu.siacs.conversations.entities.Message",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter contact : AxolotlAddress to fingerprint : String in method private getIdentityKeyCursor(account Account, name String, own boolean, fingerprint String) : Cursor in class eu.siacs.conversations.persistance.DatabaseBackend",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable selectionString : String in method private getIdentityKeyCursor(account Account, name String, own boolean, fingerprint String) : Cursor from class eu.siacs.conversations.persistance.DatabaseBackend",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type counterpart : AxolotlAddress to name : String in method public getFingerprintTrust(name String, fingerprint String) : SQLiteAxolotlStore.Trust in class eu.siacs.conversations.crypto.axolotl.AxolotlService",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type counterpart : AxolotlAddress to name : String in method public setFingerprintTrust(name String, fingerprint String, trust SQLiteAxolotlStore.Trust) : void in class eu.siacs.conversations.crypto.axolotl.AxolotlService",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type address : AxolotlAddress to name : String in method public getFingerprintTrust(name String, fingerprint String) : Trust in class eu.siacs.conversations.crypto.axolotl.AxolotlService.SQLiteAxolotlStore",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type address : AxolotlAddress to name : String in method public setFingerprintTrust(name String, fingerprint String, trust Trust) : void in class eu.siacs.conversations.crypto.axolotl.AxolotlService.SQLiteAxolotlStore",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type session : AxolotlService.XmppAxolotlSession to fingerprint : String in method public setAxolotlFingerprint(fingerprint String) : void in class eu.siacs.conversations.entities.Message",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type contact : AxolotlAddress to fingerprint : String in method private getIdentityKeyCursor(account Account, name String, own boolean, fingerprint String) : Cursor in class eu.siacs.conversations.persistance.DatabaseBackend",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public setFingerprintTrust(name String, fingerprint String, trust SQLiteAxolotlStore.Trust) : void in class eu.siacs.conversations.crypto.axolotl.AxolotlService",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type axolotlSession : AxolotlService.XmppAxolotlSession to FINGERPRINT : String in class eu.siacs.conversations.entities.Message",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public trustSession(counterpart AxolotlAddress) : void renamed to public getFingerprintTrust(name String, fingerprint String) : SQLiteAxolotlStore.Trust in class eu.siacs.conversations.crypto.axolotl.AxolotlService",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isTrustedSession(counterpart AxolotlAddress) : boolean renamed to public setFingerprintTrust(name String, fingerprint String, trust SQLiteAxolotlStore.Trust) : void in class eu.siacs.conversations.crypto.axolotl.AxolotlService",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setTrustedSession(address AxolotlAddress, trusted boolean) : void renamed to public setFingerprintTrust(name String, fingerprint String, trust Trust) : void in class eu.siacs.conversations.crypto.axolotl.AxolotlService.SQLiteAxolotlStore",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getIdentityKeyCursor(account Account, name String, own boolean) : Cursor renamed to public setIdentityKeyTrust(account Account, name String, fingerprint String, trust AxolotlService.SQLiteAxolotlStore.Trust) : boolean in class eu.siacs.conversations.persistance.DatabaseBackend",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAxolotlSession(session AxolotlService.XmppAxolotlSession) : void renamed to public setAxolotlFingerprint(fingerprint String) : void in class eu.siacs.conversations.entities.Message",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter fingerprint : String in method public decrypt(session AxolotlService.XmppAxolotlSession, key byte[], fingerprint String) : XmppAxolotlPlaintextMessage from class eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter fingerprint : String in method public XmppAxolotlPlaintextMessage(session AxolotlService.XmppAxolotlSession, plaintext String, fingerprint String) from class eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage.XmppAxolotlPlaintextMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter fingerprint : String in method private Message(uuid String, conversationUUid String, counterpart Jid, trueCounterpart Jid, body String, timeSent long, encryption int, status int, type int, remoteMsgId String, relativeFilePath String, serverMsgId String, fingerprint String) from class eu.siacs.conversations.entities.Message",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter fingerprint : String in method private storeIdentityKey(account Account, name String, own boolean, fingerprint String, base64Serialized String) : void from class eu.siacs.conversations.persistance.DatabaseBackend",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type selectionArgs : String[] to selectionArgs : ArrayList<String> in method private getIdentityKeyCursor(account Account, name String, own boolean, fingerprint String) : Cursor from class eu.siacs.conversations.persistance.DatabaseBackend",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1622
}, {
  "id" : 1136537,
  "repository" : "https://github.com/bitcoinj/bitcoinj.git",
  "sha1" : "95bfa40630e34f6f369e0055d9f37f49bca60247",
  "url" : "https://github.com/bitcoinj/bitcoinj/commit/95bfa40630e34f6f369e0055d9f37f49bca60247",
  "author" : "Mike Hearn",
  "time" : "7/8/15 7:36 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public getUTXOs(outPoints List<TransactionOutPoint>, includeMempool boolean) : ListenableFuture<UTXOsMessage> extracted from public getUTXOs(outPoints List<TransactionOutPoint>) : ListenableFuture<UTXOsMessage> in class org.bitcoinj.core.Peer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1322
}, {
  "id" : 1136668,
  "repository" : "https://github.com/orfjackal/retrolambda.git",
  "sha1" : "46b0d84de9c309bca48a99e572e6611693ed5236",
  "url" : "https://github.com/orfjackal/retrolambda/commit/46b0d84de9c309bca48a99e572e6611693ed5236",
  "author" : "Esko Luontola",
  "time" : "7/8/15 2:08 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public saveResource(relativePath Path, content byte[]) : void extracted from public save(bytecode byte[]) : void in class net.orfjackal.retrolambda.files.ClassSaver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Path.get() has been covered the value of relativePath"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public save(bytecode byte[]) : void renamed to public saveClass(bytecode byte[]) : void in class net.orfjackal.retrolambda.files.ClassSaver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter inputFile : Path to file : Path in method public visitFile(file Path, attrs BasicFileAttributes) : FileVisitResult from class net.orfjackal.retrolambda.files.BytecodeFileVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter inputFile : Path to dir : Path in method public preVisitDirectory(dir Path, attrs BasicFileAttributes) : FileVisitResult in class net.orfjackal.retrolambda.files.BytecodeFileVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable outputFile : Path to relativePath : Path in method public saveClass(bytecode byte[]) : void in class net.orfjackal.retrolambda.files.ClassSaver",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected visit(bytecode byte[]) : void renamed to protected visitClass(bytecode byte[]) : void in class net.orfjackal.retrolambda.files.BytecodeFileVisitor",
    "comment" : "<p>abstract method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected abstract visit(bytecode byte[]) : void renamed to protected abstract visitClass(bytecode byte[]) : void in class net.orfjackal.retrolambda.files.BytecodeFileVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected visit(bytecode byte[]) : void renamed to protected visitClass(bytecode byte[]) : void in class net.orfjackal.retrolambda.Retrolambda.run.visitFiles",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 384
}, {
  "id" : 1136729,
  "repository" : "https://github.com/reactor/reactor.git",
  "sha1" : "669b96c8aa4ed5134617932118de563bd4c34066",
  "url" : "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
  "author" : "Stephane Maldini",
  "time" : "7/9/15 6:45 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class reactor.core.alloc.Recyclable moved to reactor.core.support.Recyclable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class reactor.bus.alloc.EventAllocator moved to reactor.alloc.EventAllocator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class reactor.core.alloc.ReferenceCountingAllocator moved to reactor.alloc.ReferenceCountingAllocator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class reactor.bus.alloc.EventAllocatorTests moved to reactor.alloc.EventAllocatorTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class reactor.core.alloc.RecyclableString moved to reactor.alloc.RecyclableString",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class reactor.bus.alloc.EventFactorySupplier moved to reactor.alloc.EventFactorySupplier",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class reactor.core.alloc.AbstractReference moved to reactor.alloc.AbstractReference",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class reactor.core.alloc.Allocator moved to reactor.alloc.Allocator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class reactor.core.alloc.Reference moved to reactor.alloc.Reference",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class reactor.core.alloc.RecyclableNumber moved to reactor.alloc.RecyclableNumber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Package",
    "description" : "Rename Package reactor.core.alloc to reactor.core.support",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1136737,
  "repository" : "https://github.com/checkstyle/checkstyle.git",
  "sha1" : "a07cae0aca9f9072256b3a5fd05779e8d69b9748",
  "url" : "https://github.com/checkstyle/checkstyle/commit/a07cae0aca9f9072256b3a5fd05779e8d69b9748",
  "author" : "Baratali Izmailov",
  "time" : "7/8/15 10:27 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private leaveLiteralIf(literalIf DetailAST) : void inlined to public leaveToken(literalIf DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private visitLiteralTry(literalTry DetailAST) : void inlined to public visitToken(literalTry DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private leaveLiteralTry() : void inlined to public leaveToken(literalTry DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private visitLiteralIf(literalIf DetailAST) : void inlined to public visitToken(literalIf DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ast : DetailAST to literalIf : DetailAST in method public leaveToken(literalIf DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ast : DetailAST to literalTry : DetailAST in method public leaveToken(literalTry DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ast : DetailAST to literalTry : DetailAST in method public visitToken(literalTry DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ast : DetailAST to literalIf : DetailAST in method public visitToken(literalIf DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private visitLiteralIf(literalIf DetailAST) : void renamed to public visitToken(literalIf DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private leaveLiteralIf(literalIf DetailAST) : void renamed to public leaveToken(literalIf DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1138
}, {
  "id" : 1136760,
  "repository" : "https://github.com/apache/cassandra.git",
  "sha1" : "f283ed29814403bde6350a2598cdd6e2c8b983d5",
  "url" : "https://github.com/apache/cassandra/commit/f283ed29814403bde6350a2598cdd6e2c8b983d5",
  "author" : "Yuki Morishita",
  "time" : "7/8/15 1:58 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method public submitBackground(cfs ColumnFamilyStore, autoFill boolean) : List<Future<?>> inlined to public submitBackground(cfs ColumnFamilyStore) : List<Future<?>> in class org.apache.cassandra.db.compaction.CompactionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.apache.cassandra.db.compaction.CompactionManager.BackgroundCompactionTask renamed to org.apache.cassandra.db.compaction.CompactionManager.BackgroundCompactionCandidate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 5916
}, {
  "id" : 1136831,
  "repository" : "https://github.com/JetBrains/MPS.git",
  "sha1" : "7b5622d41537315710b6fd57b2739a3a64698375",
  "url" : "https://github.com/JetBrains/MPS/commit/7b5622d41537315710b6fd57b2739a3a64698375",
  "author" : "Fedor Isakov",
  "time" : "7/8/15 2:53 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getTreePath(components List<String>, escapePathSep boolean) : TreePath extracted from private stringToPath(pathString String) : TreePath in class jetbrains.mps.ide.ui.tree.MPSTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "hard to catch"
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type components : String[] to components : List<String> in method private stringToPath(pathString String) : TreePath from class jetbrains.mps.ide.ui.tree.MPSTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable treeNodeId : String in method private getTreePath(components List<String>, escapePathSep boolean) : TreePath from class jetbrains.mps.ide.ui.tree.MPSTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private stringToPath(pathString String) : TreePath renamed to private getTreePath(components List<String>, escapePathSep boolean) : TreePath in class jetbrains.mps.ide.ui.tree.MPSTree",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Nullable in method private getTreePath(components List<String>, escapePathSep boolean) : TreePath from class jetbrains.mps.ide.ui.tree.MPSTree",
    "comment" : "<p>getTreePath(components List&lt;String&gt;, escapePathSep boolean) is an extracted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 24724
}, {
  "id" : 1136870,
  "repository" : "https://github.com/crate/crate.git",
  "sha1" : "563d281b61e9f8748858e911eaa810e981f1e953",
  "url" : "https://github.com/crate/crate/commit/563d281b61e9f8748858e911eaa810e981f1e953",
  "author" : "dobe",
  "time" : "7/9/15 6:48 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getCustomRoutingCol() : ColumnIdent extracted from private getRoutingCol() : ColumnIdent in class io.crate.metadata.doc.DocIndexMetaData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the if condition has been changed"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private validateNoUnsupportedFields(function Function, context Context) : String renamed to private rewriteAndValidateFields(function Function, context Context) : Function in class io.crate.lucene.LuceneQueryBuilder.Visitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testSelectById() : void renamed to public testSelectByIdWithCustomRouting() : void in class io.crate.analyze.where.WhereClauseAnalyzerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable columnName : String in method private validateNoUnsupportedFields(function Function, context Context) : String from class io.crate.lucene.LuceneQueryBuilder.Visitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to Function in method private rewriteAndValidateFields(function Function, context Context) : Function from class io.crate.lucene.LuceneQueryBuilder.Visitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type columnName : String to ref : Reference in method private rewriteAndValidateFields(function Function, context Context) : Function in class io.crate.lucene.LuceneQueryBuilder.Visitor",
    "comment" : "<p>Extract variable ref from<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>Reference</span> ref <span class='pl-k'>=</span> (<span class='pl-smi'>Reference</span>) left;</span><br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-smi'>String</span> columnName <span class='pl-k'>=</span> ((<span class='pl-smi'>Reference</span>) left)<span class='pl-k'>.</span>info()<span class='pl-k'>.</span>ident()<span class='pl-k'>.</span>columnIdent()<span class='pl-k'>.</span>name();</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getRoutingCol() : ColumnIdent renamed to private getCustomRoutingCol() : ColumnIdent in class io.crate.metadata.doc.DocIndexMetaData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private hasAutoGeneratedPrimaryKey : boolean from class io.crate.metadata.table.TestingTableInfo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2438
}, {
  "id" : 1136909,
  "repository" : "https://github.com/Alluxio/alluxio.git",
  "sha1" : "b0938501f1014cf663e33b44ed5bb9b24d19a358",
  "url" : "https://github.com/Alluxio/alluxio/commit/b0938501f1014cf663e33b44ed5bb9b24d19a358",
  "author" : "Gene Pang",
  "time" : "7/8/15 1:29 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getBlockOutStream(filename String, isLocalWrite boolean) : BlockOutStream extracted from public disableLocalWriteTest() : void in class tachyon.client.BlockOutStreamIntegrationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the -true- is the same as the -Boolean.toString(isLocalWrite)-, when the isLocalWrite is true. But, I cannot catch this"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getBlockOutStream(filename String, isLocalWrite boolean) : BlockOutStream extracted from public enableLocalWriteTest() : void in class tachyon.client.BlockOutStreamIntegrationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Same as above"
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable allocateBytes : long in method package RemoteBlockOutStream(file TachyonFile, opType WriteType, blockIndex int, initialBytes long, tachyonConf TachyonConf) from class tachyon.client.RemoteBlockOutStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute mOpen : boolean to mClosed : boolean in class tachyon.client.RemoteBlockOutStream",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='x x-first x-last'>mOpen becomes !mClosed and vice versa<br /></span></span></p>",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type fs : TachyonFS to os : BlockOutStream in method public cancelRemoteWriteTest() : void in class tachyon.client.BlockOutStreamIntegrationTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 771
}, {
  "id" : 1136996,
  "repository" : "https://github.com/gwtproject/gwt.git",
  "sha1" : "e0dda9f61b7c409944c4734edf75b108e0288f59",
  "url" : "https://github.com/gwtproject/gwt/commit/e0dda9f61b7c409944c4734edf75b108e0288f59",
  "author" : "Daniel Kurka",
  "time" : "7/8/15 4:20 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class com.google.gwt.core.client.impl.Md5Digest moved to java.security.MessageDigest.Md5Digest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier public to private in class java.security.MessageDigest.Md5Digest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier final in class com.google.gwt.core.client.impl.Md5Digest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class java.security.MessageDigest.Md5Digest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2294
}, {
  "id" : 1137049,
  "repository" : "https://github.com/Jasig/cas.git",
  "sha1" : "7fb0d1ce3b6583013e81ac05eb9afb15d20eab7f",
  "url" : "https://github.com/Jasig/cas/commit/7fb0d1ce3b6583013e81ac05eb9afb15d20eab7f",
  "author" : "Misagh Moayyed",
  "time" : "7/8/15 2:56 PM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute public NTLMSSP_SIGNATURE : Byte[] from class org.jasig.cas.support.spnego.util.SpnegoConstants to private NTLMSSP_SIGNATURE : Byte[] from class org.jasig.cas.support.spnego.authentication.principal.SpnegoCredential",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private NTLMSSP_SIGNATURE : Byte[] from class org.jasig.cas.support.spnego.authentication.principal.SpnegoCredential",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private NTLMSSP_SIGNATURE : Byte[] from class org.jasig.cas.support.spnego.authentication.principal.SpnegoCredential",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier static in attribute private NTLMSSP_SIGNATURE : Byte[] from class org.jasig.cas.support.spnego.authentication.principal.SpnegoCredential",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1137085,
  "repository" : "https://github.com/facebook/facebook-android-sdk.git",
  "sha1" : "19d1936c3b07d97d88646aeae30de747715e3248",
  "url" : "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
  "author" : "Ming Li",
  "time" : "7/8/15 3:33 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getErrorMessage(extras Bundle) : String extracted from private handleResultOk(request LoginClient.Request, data Intent) : LoginClient.Result in class com.facebook.login.KatanaProxyLoginMethodHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public sdkInitialize(applicationContext Context, callbackRequestCodeOffset int, callback InitializeCallback) : void extracted from public sdkInitialize(applicationContext Context, callbackRequestCodeOffset int) : void in class com.facebook.FacebookSdk",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public sdkInitialize(applicationContext Context, callback InitializeCallback) : void extracted from public sdkInitialize(applicationContext Context) : void in class com.facebook.FacebookSdk",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private CAPTION_PARAM : String from class com.facebook.share.internal.ShareInternalUtility to private CAPTION_PARAM : String from class com.facebook.GraphRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getError(extras Bundle) : String extracted from private handleResultOk(request LoginClient.Request, data Intent) : LoginClient.Result in class com.facebook.login.KatanaProxyLoginMethodHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private PICTURE_PARAM : String from class com.facebook.share.internal.ShareInternalUtility to private PICTURE_PARAM : String from class com.facebook.GraphRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public newUploadPhotoRequest(graphPath String, accessToken AccessToken, photoUri Uri, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.share.internal.ShareInternalUtility to public newUploadPhotoRequest(accessToken AccessToken, graphPath String, photoUri Uri, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.GraphRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public newUploadPhotoRequest(graphPath String, accessToken AccessToken, image Bitmap, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.share.internal.ShareInternalUtility to public newUploadPhotoRequest(accessToken AccessToken, graphPath String, image Bitmap, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.GraphRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public newUploadPhotoRequest(graphPath String, accessToken AccessToken, file File, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.share.internal.ShareInternalUtility to public newUploadPhotoRequest(accessToken AccessToken, graphPath String, file File, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.GraphRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable params : Bundle in method public createAppCall(content ShareContent) : AppCall from class com.facebook.share.widget.ShareDialog.FeedHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute TEST_OG_TYPE : String to TEST_OG_OBJECT_TYPE : String in class com.facebook.RequestTests",
    "comment" : "<p>There is only one reference for this replacement<br />https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248?diff=split#diff-4d432d53d5f796cc5fa2fa622fcabdb6R430</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable request : GraphRequest to ogObject : JSONObject in method private executePostOpenGraphRequest() : String in class com.facebook.RequestTests",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '> <span class='pl-smi'>GraphRequest</span> request <span class='pl-k'>=</span> <span class='pl-k'>new</span> <span class='pl-smi'>GraphRequest</span>() exists in the child commit<br /></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable request : GraphRequest to ogObject : JSONObject in method public testUpdateOpenGraphObjectRequest() : void in class com.facebook.RequestTests",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>GraphRequest</span> request <span class='pl-k'>=</span> <span class='pl-k'>new</span> <span class='pl-smi'>GraphRequest</span>() exists in the child commit</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type request : GraphRequest to parameters : Bundle in method public testExecuteSingleGetUsingHttpURLConnection() : void in class com.facebook.RequestTests",
    "comment" : "<p>request still exists in child commit</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Reorder Parameter",
    "description" : "Reorder Parameter [graphPath : String, accessToken : AccessToken, image : Bitmap, caption : String, params : Bundle, callback : Callback] to [accessToken : AccessToken, graphPath : String, image : Bitmap, caption : String, params : Bundle, callback : Callback] in method public newUploadPhotoRequest(accessToken AccessToken, graphPath String, image Bitmap, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.GraphRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Reorder Parameter",
    "description" : "Reorder Parameter [graphPath : String, accessToken : AccessToken, file : File, caption : String, params : Bundle, callback : Callback] to [accessToken : AccessToken, graphPath : String, file : File, caption : String, params : Bundle, callback : Callback] in method public newUploadPhotoRequest(accessToken AccessToken, graphPath String, file File, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.GraphRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Reorder Parameter",
    "description" : "Reorder Parameter [graphPath : String, accessToken : AccessToken, photoUri : Uri, caption : String, params : Bundle, callback : Callback] to [accessToken : AccessToken, graphPath : String, photoUri : Uri, caption : String, params : Bundle, callback : Callback] in method public newUploadPhotoRequest(accessToken AccessToken, graphPath String, photoUri Uri, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.GraphRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @LargeTest in method public testExecuteUploadPhoto() : void from class com.facebook.RequestTests",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute SUPPRESS_SSO : LoginBehavior to WEB_ONLY : LoginBehavior in class com.facebook.login.LoginBehavior",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute SSO_ONLY : LoginBehavior to NATIVE_ONLY : LoginBehavior in class com.facebook.login.LoginBehavior",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute SSO_WITH_FALLBACK : LoginBehavior to NATIVE_WITH_FALLBACK : LoginBehavior in class com.facebook.login.LoginBehavior",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to protected in method protected ShareContent(in Parcel) from class com.facebook.share.model.ShareContent",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable linkContent : ShareLinkContent in method public createAppCall(content ShareContent) : AppCall from class com.facebook.share.widget.ShareDialog.FeedHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable appCall : AppCall in method public createAppCall(content ShareContent) : AppCall from class com.facebook.share.widget.ShareDialog.FeedHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1748
}, {
  "id" : 1137157,
  "repository" : "https://github.com/apache/hive.git",
  "sha1" : "f664789737d516ac664462732664121acc111a1e",
  "url" : "https://github.com/apache/hive/commit/f664789737d516ac664462732664121acc111a1e",
  "author" : "Eugene Koifman",
  "time" : "7/8/15 9:53 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private dumpConfig(conf Configuration, sb StringBuilder) : void extracted from private dumpEnvironent() : String in class org.apache.hive.hcatalog.templeton.AppConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type MetaException in method private buildHcatDelegationToken(user String) : String from class org.apache.hive.hcatalog.templeton.SecureProxySupport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 5501
}, {
  "id" : 1137182,
  "repository" : "https://github.com/HubSpot/Singularity.git",
  "sha1" : "944aea445051891280a8ab7fbbd514c19646f1ab",
  "url" : "https://github.com/HubSpot/Singularity/commit/944aea445051891280a8ab7fbbd514c19646f1ab",
  "author" : "Whitney Sorenson",
  "time" : "7/9/15 7:21 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected launchTask(request SingularityRequest, deploy SingularityDeploy, launchTime long, updateTime long, instanceNo int, initialTaskState TaskState) : SingularityTask extracted from protected launchTask(request SingularityRequest, deploy SingularityDeploy, launchTime long, instanceNo int, initialTaskState TaskState) : SingularityTask in class com.hubspot.singularity.SingularitySchedulerTestBase",
    "comment" : "<p>Add Parameter updateTime : long in method protected launchTask(request SingularityRequest, deploy SingularityDeploy, launchTime long, updateTime long, instanceNo int, initialTaskState TaskState) : SingularityTask from class com.hubspot.singularity.SingularitySchedulerTestBase</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter isDeployPending : boolean in method private getHealthcheckDeployState(deploy SingularityDeploy, matchingActiveTasks Collection<SingularityTaskId>, isDeployPending boolean) : DeployHealth from class com.hubspot.singularity.scheduler.SingularityDeployHealthHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter updateTime : long in method protected launchTask(request SingularityRequest, deploy SingularityDeploy, launchTime long, updateTime long, instanceNo int, initialTaskState TaskState) : SingularityTask from class com.hubspot.singularity.SingularitySchedulerTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 838
}, {
  "id" : 1137231,
  "repository" : "https://github.com/CyanogenMod/android_frameworks_base.git",
  "sha1" : "910397f2390d6821a006991ed6035c76cbc74897",
  "url" : "https://github.com/CyanogenMod/android_frameworks_base/commit/910397f2390d6821a006991ed6035c76cbc74897",
  "author" : "Jorge Ruesga",
  "time" : "7/9/15 4:42 PM",
  "refactorings" : [ {
    "type" : "Extract Interface",
    "description" : "Extract Interface com.android.systemui.statusbar.policy.BatteryStateRegistar from class com.android.systemui.statusbar.policy.BatteryController",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getBoltPointsArrayResource() : int extracted from private loadBoltPoints(res Resources) : float[] in class com.android.systemui.BatteryMeterView.NormalBatteryMeterDrawable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getBoltPointsArrayResource() : int extracted from private loadBoltPoints(res Resources) : float[] in class com.android.systemui.BatteryMeterView.CircleBatteryMeterDrawable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public internalStoreStatsHistoryInFile(stats BatteryStats, fname String) : void extracted from public storeStatsHistoryInFile(fname String) : void in class com.android.internal.os.BatteryStatsHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected setCpuSpeedSteps(numSpeedSteps int) : void extracted from public readSummaryFromParcel(in Parcel) : void in class com.android.internal.os.BatteryStatsImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected setCpuSpeedSteps(numSpeedSteps int) : void extracted from public setNumSpeedSteps(steps int) : void in class com.android.internal.os.BatteryStatsImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected setCpuSpeedSteps(numSpeedSteps int) : void extracted from package readFromParcelLocked(in Parcel) : void in class com.android.internal.os.BatteryStatsImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getKernelWakelockUpdateVersion() : int extracted from public updateKernelWakelocksLocked() : void in class com.android.internal.os.BatteryStatsImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private load() : void renamed to private loadStats() : void in class com.android.internal.os.BatteryStatsHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback moved to com.android.systemui.statusbar.policy.BatteryStateRegistar.BatteryStateChangeCallback",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setBatteryController(batteryController BatteryController) : void renamed to public setBatteryStateRegistar(batteryStateRegistar BatteryStateRegistar) : void in class com.android.systemui.BatteryLevelTextView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable callResult : int in method private queryProperty(id int, fromDock boolean) : long from class android.os.BatteryManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter steps : int to numSpeedSteps : int in method protected setCpuSpeedSteps(numSpeedSteps int) : void from class com.android.internal.os.BatteryStatsImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute mBatteryController : BatteryController to mBatteryStateRegistar : BatteryStateRegistar in class com.android.systemui.BatteryLevelTextView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getKernelWakelockUpdateVersion() : int extracted from private parseProcWakelocks(wlBuffer byte[], len int, wakeup_sources boolean) : Map<String,KernelWakelockStats> in class com.android.internal.os.BatteryStatsImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter batteryController : BatteryController to batteryStateRegistar : BatteryStateRegistar in method public setBatteryStateRegistar(batteryStateRegistar BatteryStateRegistar) : void from class com.android.systemui.BatteryLevelTextView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type mBatteryController : BatteryController to mBatteryStateRegistar : BatteryStateRegistar in class com.android.systemui.BatteryLevelTextView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable v : BatteryMeterView in method public setBatteryController(batteryController BatteryController) : void from class com.android.systemui.statusbar.phone.KeyguardStatusBarView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable batteryMeterView : BatteryMeterView in method protected makeStatusBarView() : PhoneStatusBarView from class com.android.systemui.statusbar.phone.PhoneStatusBar",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable v : BatteryMeterView in method public setBatteryController(batteryController BatteryController) : void from class com.android.systemui.statusbar.phone.StatusBarHeaderView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type batteryController : BatteryController to batteryStateRegistar : BatteryStateRegistar in method public setBatteryStateRegistar(batteryStateRegistar BatteryStateRegistar) : void from class com.android.systemui.BatteryLevelTextView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type STATUS_BAR_BATTERY_STYLE : String to mBatteryStateRegistar : BatteryStateRegistar in class com.android.systemui.BatteryLevelTextView",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type STATUS_BAR_BATTERY_STYLE : String to mBatteryStateRegistar : BatteryStateRegistar in class com.android.systemui.BatteryMeterView",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type mBatteryController : BatteryController to mDockBatteryLevel : BatteryLevelTextView in class com.android.systemui.statusbar.phone.KeyguardStatusBarView",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type mBatteryController : BatteryController to mDockBatteryLevel : BatteryLevelTextView in class com.android.systemui.statusbar.phone.StatusBarHeaderView",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected setKernelWakelockUpdateVersion(kernelWakelockUpdateVersion int) : void extracted from private parseProcWakelocks(wlBuffer byte[], len int, wakeup_sources boolean) : Map<String,KernelWakelockStats> in class com.android.internal.os.BatteryStatsImpl",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='x x-first'>sKernelWakelockUpdateVersion</span><span class='pl-k x x-last'>   is replaced with&nbsp;<span class='x x-first'>setKernelWakelockUpdateVersion(getKernelWakelockUpdateVersion() </span><span class='pl-k x'> </span> <span class='pl-c1 x'>1</span><span class='x x-last'>)</span></span></span></p><p>&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public storeStatsHistoryInFile(fname String) : void renamed to public internalStoreStatsHistoryInFile(stats BatteryStats, fname String) : void in class com.android.internal.os.BatteryStatsHelper",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public addStateChangedCallback(cb BatteryStateChangeCallback) : void from class com.android.systemui.statusbar.policy.BatteryController",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public removeStateChangedCallback(cb BatteryStateChangeCallback) : void from class com.android.systemui.statusbar.policy.BatteryController",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter fromDock : boolean in method private queryProperty(id int, fromDock boolean) : long from class android.os.BatteryManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private sNumSpeedSteps : int from class com.android.internal.os.BatteryStatsImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private sKernelWakelockUpdateVersion : int from class com.android.internal.os.BatteryStatsImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable onBattery : boolean in method public setBatteryState(status int, health int, plugType int, level int, temp int, volt int) : void from class com.android.internal.os.BatteryStatsImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to protected in class com.android.systemui.BatteryMeterView.BatteryTracker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier public to package in class com.android.systemui.statusbar.policy.BatteryStateRegistar.BatteryStateChangeCallback",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier final in class com.android.internal.os.BatteryStatsImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable batteryChanged : boolean in method private processValuesLocked(force boolean) : void from class com.android.server.BatteryService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 11400
}, {
  "id" : 1137311,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "e1625136ba12907696ef4c6e922ce073293f3a2c",
  "url" : "https://github.com/JetBrains/intellij-community/commit/e1625136ba12907696ef4c6e922ce073293f3a2c",
  "author" : "Vladislav.Soroka",
  "time" : "7/10/15 10:34 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private addAnnotationProcessorOption(compilerArg String, optionsMap Map<String,String>) : void extracted from private getAnnotationProcessorOptionsFromCompilerConfig(compilerConfig Element) : Map<String,String> in class org.jetbrains.idea.maven.project.MavenProject",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "null check logic has been added to the child commit"
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable param : String to compilerArg : String in method private addAnnotationProcessorOption(compilerArg String, optionsMap Map<String,String>) : void from class org.jetbrains.idea.maven.project.MavenProject",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable res : Map<String,String> to optionsMap : Map<String,String> in method private addAnnotationProcessorOption(compilerArg String, optionsMap Map<String,String>) : void from class org.jetbrains.idea.maven.project.MavenProject",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 15481
}, {
  "id" : 1137389,
  "repository" : "https://github.com/openhab/openhab.git",
  "sha1" : "cf1efb6d27a4037cdbe5a780afa6053859a60d4a",
  "url" : "https://github.com/openhab/openhab/commit/cf1efb6d27a4037cdbe5a780afa6053859a60d4a",
  "author" : "HelmutL",
  "time" : "7/9/15 9:46 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private initializeGeneralGlobals() : void extracted from private initializeSciptGlobals() : void in class org.openhab.core.jsr223.internal.engine.scriptmanager.Script",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private initializeNashornGlobals() : void extracted from private initializeSciptGlobals() : void in class org.openhab.core.jsr223.internal.engine.scriptmanager.Script",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private engine : ScriptEngine from class org.openhab.core.jsr223.internal.engine.scriptmanager.Script",
    "comment" : "<p>public ScriptEngine getEngine()<br />called in file<br />bundles/core/org.openhab.core.jsr223/src/main/java/org/openhab/core/jsr223/internal/engine/scriptmanager/ScriptManager.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2598
}, {
  "id" : 1137397,
  "repository" : "https://github.com/hazelcast/hazelcast.git",
  "sha1" : "69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
  "url" : "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
  "author" : "Marko Topolnik",
  "time" : "7/10/15 5:19 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute public UTF_8 : Charset from class com.hazelcast.client.impl.protocol.util.SafeBuffer to public UTF_8 : Charset from class com.hazelcast.nio.Bits",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public UTF_8 : Charset from class com.hazelcast.client.impl.protocol.util.UnsafeBuffer to public UTF_8 : Charset from class com.hazelcast.nio.Bits",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.hazelcast.client.impl.protocol.util.Int2ObjectHashMap moved to com.hazelcast.util.collection.Int2ObjectHashMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.hazelcast.client.protocol.Int2ObjectHashMapTest moved to com.hazelcast.util.collection.Int2ObjectHashMapTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.hazelcast.client.impl.protocol.util.Int2ObjectHashMap.Supplier moved to com.hazelcast.util.function.Supplier",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOrDefault(key int, supplier Supplier<V>) : V renamed to public computeIfAbsent(key int, mappingFunction IntFunction<? extends V>) : V in class com.hazelcast.util.collection.Int2ObjectHashMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter supplier : Supplier<V> to mappingFunction : IntFunction<? extends V> in method public computeIfAbsent(key int, mappingFunction IntFunction<? extends V>) : V from class com.hazelcast.util.collection.Int2ObjectHashMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type supplier : Supplier<V> to mappingFunction : IntFunction<? extends V> in method public computeIfAbsent(key int, mappingFunction IntFunction<? extends V>) : V from class com.hazelcast.util.collection.Int2ObjectHashMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type valueCollection : ValueCollection<V> to valueCollection : ValueCollection in class com.hazelcast.util.collection.Int2ObjectHashMap",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type entrySet : EntrySet<V> to entrySet : EntrySet in class com.hazelcast.util.collection.Int2ObjectHashMap",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Attribute",
    "description" : "Extract Attribute private UTF8_MAX_BYTES_PER_CHAR : int in class com.hazelcast.client.impl.protocol.util.ParameterUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @edu.umd.cs.findbugs.annotations.SuppressWarnings({\"PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS\"}) to @edu.umd.cs.findbugs.annotations.SuppressWarnings(\"PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS\") in class com.hazelcast.util.collection.Int2ObjectHashMap",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter value : int in method public nextPowerOfTwo(value int) : int from class com.hazelcast.util.QuickMath",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter value : long in method public nextPowerOfTwo(value long) : long from class com.hazelcast.util.QuickMath",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier final in class com.hazelcast.client.impl.protocol.util.ParameterUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1599
}, {
  "id" : 1137575,
  "repository" : "https://github.com/google/auto.git",
  "sha1" : "8967e7c33c59e1336e1e3b4671293ced5697fca6",
  "url" : "https://github.com/google/auto/commit/8967e7c33c59e1336e1e3b4671293ced5697fca6",
  "author" : "emcmanus",
  "time" : "7/9/15 9:16 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private doTestMissingClass(tempDir File) : void extracted from public testMissingClass() : void in class com.google.auto.value.processor.AutoAnnotationCompilationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the argument of the getTask has been changed and there is no corresponding refactoring to justify this change. Also, argumentization cannot help in this regard."
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type IOException in method public testMissingClass() : void from class com.google.auto.value.processor.AutoAnnotationCompilationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1137576,
  "repository" : "https://github.com/google/auto.git",
  "sha1" : "8fc60d81fe0e46e7e5c96e71d4a93fcadc6bde4f",
  "url" : "https://github.com/google/auto/commit/8fc60d81fe0e46e7e5c96e71d4a93fcadc6bde4f",
  "author" : "dpb",
  "time" : "7/9/15 9:16 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private deferredElements() : ImmutableMap<String,Optional<? extends Element>> extracted from public process(annotations Set<? extends TypeElement>, roundEnv RoundEnvironment) : boolean in class com.google.auto.common.BasicAnnotationProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private validElements(deferredElements ImmutableMap<String,Optional<? extends Element>>, roundEnv RoundEnvironment) : ImmutableSetMultimap<Class<? extends Annotation>,Element> extracted from public process(annotations Set<? extends TypeElement>, roundEnv RoundEnvironment) : boolean in class com.google.auto.common.BasicAnnotationProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "rename variable on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private process(validElements ImmutableSetMultimap<Class<? extends Annotation>,Element>) : void extracted from public process(annotations Set<? extends TypeElement>, roundEnv RoundEnvironment) : boolean in class com.google.auto.common.BasicAnnotationProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable elementsByAnnotationBuilder : ImmutableSetMultimap.Builder<Class<? extends Annotation>,Element> to validElements : ImmutableSetMultimap.Builder<Class<? extends Annotation>,Element> in method private validElements(deferredElements ImmutableMap<String,Optional<? extends Element>>, roundEnv RoundEnvironment) : ImmutableSetMultimap<Class<? extends Annotation>,Element> from class com.google.auto.common.BasicAnnotationProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable deferredElementsBuilder : ImmutableMap.Builder<String,Optional<? extends Element>> to deferredElements : ImmutableMap.Builder<String,Optional<? extends Element>> in method private deferredElements() : ImmutableMap<String,Optional<? extends Element>> from class com.google.auto.common.BasicAnnotationProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1137619,
  "repository" : "https://github.com/spotify/helios.git",
  "sha1" : "da39bfeb9c370abe2d86e6e327fade252434090d",
  "url" : "https://github.com/spotify/helios/commit/da39bfeb9c370abe2d86e6e327fade252434090d",
  "author" : "David Xia",
  "time" : "7/9/15 3:44 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method package run0(client HeliosClient, out PrintStream, json boolean, name String, full boolean) : int extracted from package run(options Namespace, client HeliosClient, out PrintStream, json boolean, stdin BufferedReader) : int in class com.spotify.helios.cli.command.DeploymentGroupStatusCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method package watchDeploymentGroup(out PrintStream, name String, interval int, clients List<TargetAndClient>) : void inlined to package run(options Namespace, client HeliosClient, out PrintStream, json boolean, stdin BufferedReader) : int in class com.spotify.helios.cli.command.DeploymentGroupWatchCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter clients : List<TargetAndClient> to client : HeliosClient in method package run(options Namespace, client HeliosClient, out PrintStream, json boolean, stdin BufferedReader) : int from class com.spotify.helios.cli.command.DeploymentGroupWatchCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clients : List<TargetAndClient> to client : HeliosClient in method package run(options Namespace, client HeliosClient, out PrintStream, json boolean, stdin BufferedReader) : int from class com.spotify.helios.cli.command.DeploymentGroupWatchCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter clients : List<TargetAndClient> to options : Namespace in method package run(options Namespace, client HeliosClient, out PrintStream, json boolean, stdin BufferedReader) : int in class com.spotify.helios.cli.command.DeploymentGroupWatchCommand",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter out : PrintStream to client : HeliosClient in method package run(options Namespace, client HeliosClient, out PrintStream, json boolean, stdin BufferedReader) : int in class com.spotify.helios.cli.command.DeploymentGroupWatchCommand",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Attribute",
    "description" : "Extract Attribute private DATE_TIME_PATTERN : String in class com.spotify.helios.cli.command.DeploymentGroupWatchCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package run(options Namespace, client HeliosClient, out PrintStream, json boolean, stdin BufferedReader) : int renamed to package run0(client HeliosClient, out PrintStream, json boolean, name String, full boolean) : int in class com.spotify.helios.cli.command.DeploymentGroupStatusCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter options : Namespace in method package run(options Namespace, clients List<TargetAndClient>, out PrintStream, json boolean, stdin BufferedReader) : int from class com.spotify.helios.cli.command.DeploymentGroupWatchCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter out : PrintStream in method package run(options Namespace, clients List<TargetAndClient>, out PrintStream, json boolean, stdin BufferedReader) : int from class com.spotify.helios.cli.command.DeploymentGroupWatchCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter json : boolean in method package run(options Namespace, clients List<TargetAndClient>, out PrintStream, json boolean, stdin BufferedReader) : int from class com.spotify.helios.cli.command.DeploymentGroupWatchCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter stdin : BufferedReader in method package run(options Namespace, clients List<TargetAndClient>, out PrintStream, json boolean, stdin BufferedReader) : int from class com.spotify.helios.cli.command.DeploymentGroupWatchCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter clients : List<TargetAndClient> in method package run(options Namespace, clients List<TargetAndClient>, out PrintStream, json boolean, stdin BufferedReader) : int from class com.spotify.helios.cli.command.DeploymentGroupWatchCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1137627,
  "repository" : "https://github.com/siacs/Conversations.git",
  "sha1" : "925801c14e7500313069b2bc04abd066798a881c",
  "url" : "https://github.com/siacs/Conversations/commit/925801c14e7500313069b2bc04abd066798a881c",
  "author" : "Daniel Gultsch",
  "time" : "7/10/15 9:14 AM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method private setupTrustManager(connection HttpsURLConnection, interactive boolean) : void from class eu.siacs.conversations.http.HttpConnection to public setupTrustManager(connection HttpsURLConnection, interactive boolean) : void from class eu.siacs.conversations.http.HttpConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public setupTrustManager(connection HttpsURLConnection, interactive boolean) : void from class eu.siacs.conversations.http.HttpConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 462
}, {
  "id" : 1137793,
  "repository" : "https://github.com/thymeleaf/thymeleaf.git",
  "sha1" : "378ba37750a9cb1b19a6db434dfa59308f721ea6",
  "url" : "https://github.com/thymeleaf/thymeleaf/commit/378ba37750a9cb1b19a6db434dfa59308f721ea6",
  "author" : "Daniel Fernández",
  "time" : "7/9/15 9:20 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private matchOverflow(structure char[]) : boolean extracted from public read(cbuf char[], off int, len int) : int in class org.thymeleaf.templateparser.reader.BlockAwareReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Logic has been changed completely"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter target : char[] to structure : char[] in method private matchOverflow(structure char[]) : boolean in class org.thymeleaf.templateparser.reader.BlockAwareReader",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private isArrayEquals(target char[], array char[], offset int, len int) : boolean renamed to private matchOverflow(structure char[]) : boolean in class org.thymeleaf.templateparser.reader.BlockAwareReader",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 215
}, {
  "id" : 1137794,
  "repository" : "https://github.com/thymeleaf/thymeleaf.git",
  "sha1" : "aed371dac5e1248880e869930c636994c3d0f8dc",
  "url" : "https://github.com/thymeleaf/thymeleaf/commit/aed371dac5e1248880e869930c636994c3d0f8dc",
  "author" : "Daniel Fernández",
  "time" : "7/9/15 6:57 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private fillUpOverflow() : void extracted from public read(cbuf char[], off int, len int) : int in class org.thymeleaf.templateparser.markup.ThymeleafMarkupTemplateReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the attribute assignment has been changed, and there is no explanation for that"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private processReadBuffer(buffer char[], off int, len int) : int extracted from public read(cbuf char[], off int, len int) : int in class org.thymeleaf.templateparser.markup.ThymeleafMarkupTemplateReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Lots of added statements"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter cbuf : char[] to buffer : char[] in method private processReadBuffer(buffer char[], off int, len int) : int from class org.thymeleaf.templateparser.markup.ThymeleafMarkupTemplateReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Attribute",
    "description" : "Parameterize Attribute overflowBuffer : char[] to cbuf : char[] in method private processReadBuffer(buffer char[], off int, len int) : int from class org.thymeleaf.templateparser.markup.ThymeleafMarkupTemplateReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 256
}, {
  "id" : 1138004,
  "repository" : "https://github.com/netty/netty.git",
  "sha1" : "8a16081a9322b4a4062baaf32edc6b6b8b4afa88",
  "url" : "https://github.com/netty/netty/commit/8a16081a9322b4a4062baaf32edc6b6b8b4afa88",
  "author" : "nmittler",
  "time" : "7/9/15 11:35 AM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private cancelPendingStreams() : void inlined to public close() : void in class io.netty.handler.codec.http2.StreamBufferingEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class io.netty.handler.codec.http2.StreamBufferingEncoder.GoAwayException renamed to io.netty.handler.codec.http2.StreamBufferingEncoder.Http2GoAwayException",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type debugData : ByteBuf to debugData : ByteString in class io.netty.handler.codec.http2.StreamBufferingEncoder.Http2GoAwayException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type debugData : ByteBuf to debugData : ByteString in method public Http2GoAwayException(lastStreamId int, errorCode long, debugData ByteString) from class io.netty.handler.codec.http2.StreamBufferingEncoder.Http2GoAwayException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ByteBuf to ByteString in method public debugData() : ByteString from class io.netty.handler.codec.http2.StreamBufferingEncoder.Http2GoAwayException",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private cancelPendingStreams() : void renamed to public close() : void in class io.netty.handler.codec.http2.StreamBufferingEncoder",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : Exception to e : Http2ChannelClosedException in method public close() : void from class io.netty.handler.codec.http2.StreamBufferingEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3991
}, {
  "id" : 1138074,
  "repository" : "https://github.com/Alluxio/alluxio.git",
  "sha1" : "9aeefcd8120bb3b89cdb437d8c32d2ed84b8a825",
  "url" : "https://github.com/Alluxio/alluxio/commit/9aeefcd8120bb3b89cdb437d8c32d2ed84b8a825",
  "author" : "Carson Wang",
  "time" : "7/9/15 1:34 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getCandidateDirInTier(tier StorageTier, blockSize long) : StorageDir extracted from public allocateBlock(userId long, blockId long, blockSize long, location BlockStoreLocation) : TempBlockMeta in class tachyon.worker.block.allocator.MaxFreeAllocator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "This is a pure refactoring. The only suspicious change is in the maxFreeBytes variable initializer and the if condition. These two changes together are justifiable -only together-"
    }
  } ],
  "refDiffExecutionTime" : 348
}, {
  "id" : 1138135,
  "repository" : "https://github.com/apache/camel.git",
  "sha1" : "cb0935e3af05b333b5c85a4fb3b1846836218f11",
  "url" : "https://github.com/apache/camel/commit/cb0935e3af05b333b5c85a4fb3b1846836218f11",
  "author" : "Jonathan Anstey",
  "time" : "7/10/15 11:17 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private storeCamelContextInQuartzContext() : SchedulerContext extracted from private createAndInitScheduler() : void in class org.apache.camel.component.quartz2.QuartzComponent",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 15605
}, {
  "id" : 1138152,
  "repository" : "https://github.com/apache/camel.git",
  "sha1" : "9f319029ecc031cf8bf1756ab8a0e9e4e52c2902",
  "url" : "https://github.com/apache/camel/commit/9f319029ecc031cf8bf1756ab8a0e9e4e52c2902",
  "author" : "Claus Ibsen",
  "time" : "7/9/15 1:06 PM",
  "refactorings" : [ {
    "type" : "Extract Interface",
    "description" : "Extract Interface org.apache.camel.model.OtherAttributesAware from class org.apache.camel.model.ProcessorDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable processorDefinition : ProcessorDefinition<?> to other : OtherAttributesAware in method public resolvePropertyPlaceholders(camelContext CamelContext, definition Object) : void from class org.apache.camel.model.ProcessorDefinitionHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type processorDefinition : ProcessorDefinition<?> to other : OtherAttributesAware in method public resolvePropertyPlaceholders(camelContext CamelContext, definition Object) : void from class org.apache.camel.model.ProcessorDefinitionHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getOtherAttributes() : Map<QName,Object> from class org.apache.camel.model.ProcessorDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public setOtherAttributes(otherAttributes Map<QName,Object>) : void from class org.apache.camel.model.ProcessorDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6877
}, {
  "id" : 1138354,
  "repository" : "https://github.com/CyanogenMod/android_frameworks_base.git",
  "sha1" : "76331570e68446c17e4ff5287f5b7b2b6b472895",
  "url" : "https://github.com/CyanogenMod/android_frameworks_base/commit/76331570e68446c17e4ff5287f5b7b2b6b472895",
  "author" : "Andy Mast",
  "time" : "7/11/15 2:50 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public clearFailedUnlockAttempts(clearFingers boolean) : void extracted from public clearFailedUnlockAttempts() : void in class com.android.keyguard.KeyguardUpdateMonitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the assignment to the -mFailedFingerprintAttempts- variable has been changed throguh this refactoring"
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private mFailedFingerprintAttempts : int from class com.android.keyguard.KeyguardUpdateMonitor",
    "comment" : "<p>Getter public int getFailedFingerprintUnlockAttempts()<br />is called in private void handleKeyguardDone(boolean authenticated, boolean wakeup)<br />packages/SystemUI/src/com/android/systemui/keyguard/KeyguardViewMediator.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6374
}, {
  "id" : 1138530,
  "repository" : "https://github.com/hazelcast/hazelcast.git",
  "sha1" : "679d38d4316c16ccba4982d7f3ba13c147a451cb",
  "url" : "https://github.com/hazelcast/hazelcast/commit/679d38d4316c16ccba4982d7f3ba13c147a451cb",
  "author" : "Serkan OZAL",
  "time" : "7/12/15 6:06 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected getFromNearCache(keyData Data, async boolean) : Object extracted from protected getInternal(key K, expiryPolicy ExpiryPolicy, async boolean) : Object in class com.hazelcast.client.cache.impl.AbstractClientCacheProxy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the return value of the extracted method can be different from the source operation based on the -async- parameter, which is not initialized in the source operation or passed as an argument."
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable newPut : boolean to oldRecord : R in method public put(key K, value V) : void from class com.hazelcast.cache.impl.nearcache.impl.store.AbstractNearCacheRecordStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type newPut : boolean to oldRecord : R in method public put(key K, value V) : void from class com.hazelcast.cache.impl.nearcache.impl.store.AbstractNearCacheRecordStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private valueData : Data from class com.hazelcast.client.util.ClientDelegatingFuture",
    "comment" : "<p>public Data getValueData()<br />is called in file<br />hazelcast-client-new/src/main/java/com/hazelcast/client/cache/impl/AbstractClientCacheProxy.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter newPut : boolean to oldRecord : R in method protected onPutError(key K, value V, record R, oldRecord R, error Throwable) : void from class com.hazelcast.cache.impl.nearcache.impl.store.AbstractNearCacheRecordStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter newPut : boolean to oldRecord : R in method protected onPut(key K, value V, record R, oldRecord R) : void from class com.hazelcast.cache.impl.nearcache.impl.store.AbstractNearCacheRecordStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type newPut : boolean to oldRecord : R in method protected onPutError(key K, value V, record R, oldRecord R, error Throwable) : void from class com.hazelcast.cache.impl.nearcache.impl.store.AbstractNearCacheRecordStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type newPut : boolean to oldRecord : R in method protected onPut(key K, value V, record R, oldRecord R) : void from class com.hazelcast.cache.impl.nearcache.impl.store.AbstractNearCacheRecordStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2034
}, {
  "id" : 1138932,
  "repository" : "https://github.com/QuantumBadger/RedReader.git",
  "sha1" : "2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
  "url" : "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
  "author" : "QuantumBadger",
  "time" : "7/11/15 11:33 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute public UI_THREAD_HANDLER : Handler from class org.quantumbadger.redreader.common.General to public UI_THREAD_HANDLER : Handler from class org.quantumbadger.redreader.common.AndroidApi",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1114
}, {
  "id" : 1139036,
  "repository" : "https://github.com/spotify/helios.git",
  "sha1" : "dd8753cfb0f67db4dde6c5254e2df3104b635dae",
  "url" : "https://github.com/spotify/helios/commit/dd8753cfb0f67db4dde6c5254e2df3104b635dae",
  "author" : "Rohan Singh",
  "time" : "7/10/15 6:18 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getDeploymentGroup(client ZooKeeperClient, name String) : DeploymentGroup extracted from public getDeploymentGroup(name String) : DeploymentGroup in class com.spotify.helios.master.ZooKeeperMasterModel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "rename method on top the extracted method"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public configDeploymentGroups(name String) : String renamed to public configDeploymentGroup(name String) : String in class com.spotify.helios.servicescommon.coordination.Paths",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter deploymentGroup : DeploymentGroup in method private deployJobRetry(client ZooKeeperClient, host String, deployment Deployment, count int, token String, deploymentGroup DeploymentGroup) : void from class com.spotify.helios.master.ZooKeeperMasterModel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter masterModel : MasterModel in method public RollingUpdateService(masterModel MasterModel, reactorFactory ReactorFactory) from class com.spotify.helios.rollingupdate.RollingUpdateService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1139075,
  "repository" : "https://github.com/SimonVT/schematic.git",
  "sha1" : "c1a9dd63aca8bf488f9a671aa6281538540397f8",
  "url" : "https://github.com/SimonVT/schematic/commit/c1a9dd63aca8bf488f9a671aa6281538540397f8",
  "author" : "Simon Vig Therkildsen",
  "time" : "7/12/15 10:27 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private printNotifyInsert(writer JavaWriter, uri UriContract) : void extracted from public write(filer Filer) : void in class net.simonvt.schematic.compiler.ContentProviderWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private printNotifyBulkInsert(writer JavaWriter, uri UriContract) : void extracted from public write(filer Filer) : void in class net.simonvt.schematic.compiler.ContentProviderWriter",
    "comment" : "<p>Two methods <span class='blob-code-inner'><span class='pl-en'>printNotifyInsert</span></span>() and printNotifyBulkInsert() are extracted from method write()<br />Both of them have similar bodies, but only the code corresponding to <span class='blob-code-inner'><span class='pl-en'>printNotifyInsert</span></span>() appears as deleted in the text diff.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "There are two differences which make the refactoring impure -params.append(-ids-)- is one if them"
    }
  } ],
  "refDiffExecutionTime" : 364
}, {
  "id" : 1139092,
  "repository" : "https://github.com/github/android.git",
  "sha1" : "a7401e5091c06c68fae499ea1972b40143c66fa9",
  "url" : "https://github.com/github/android/commit/a7401e5091c06c68fae499ea1972b40143c66fa9",
  "author" : "Henrik",
  "time" : "7/11/15 9:20 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private onUserLoggedIn(uri Uri) : void extracted from protected onNewIntent(intent Intent) : void in class com.github.mobile.accounts.LoginActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "rename method on top the extracted method"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private endAccess(accessToken String, scope String) : void renamed to private endAuth(accessToken String, scope String) : void in class com.github.mobile.accounts.LoginActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable chooser : Intent to intent : Intent in method private openLoginInBrowser(client ApiClient) : void from class com.github.mobile.accounts.LoginActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected onNewIntent(intent Intent) : void renamed to private onUserLoggedIn(uri Uri) : void in class com.github.mobile.accounts.LoginActivity",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable chooser : Intent in method private openLoginInBrowser(client ApiClient) : void from class com.github.mobile.accounts.LoginActivity",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 539
}, {
  "id" : 1139097,
  "repository" : "https://github.com/cgeo/cgeo.git",
  "sha1" : "7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
  "url" : "https://github.com/cgeo/cgeo/commit/7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
  "author" : "Bananeweizen",
  "time" : "7/12/15 7:01 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class cgeo.geocaching.connector.TerraCachingConnector moved to cgeo.geocaching.connector.tc.TerraCachingConnector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public canHandle(geocode String) : boolean from class cgeo.geocaching.connector.TerraCachingConnector to public canHandle(geocode String) : boolean from class cgeo.geocaching.connector.tc.TerraCachingConnector",
    "comment" : "It is a move method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getHost() : String from class cgeo.geocaching.connector.TerraCachingConnector to public getHost() : String from class cgeo.geocaching.connector.tc.TerraCachingConnector",
    "comment" : "It is a move method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class cgeo.geocaching.connector.TerraCachingConnector to public getName() : String from class cgeo.geocaching.connector.tc.TerraCachingConnector",
    "comment" : "It is a move method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public isOwner(cache Geocache) : boolean from class cgeo.geocaching.connector.TerraCachingConnector to public isOwner(cache Geocache) : boolean from class cgeo.geocaching.connector.tc.TerraCachingConnector",
    "comment" : "It is a move method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private PATTERN_GEOCODE : Pattern from class cgeo.geocaching.connector.TerraCachingConnector to private PATTERN_GEOCODE : Pattern from class cgeo.geocaching.connector.tc.TerraCachingConnector",
    "comment" : "It is a move method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public testCanHandle() : void from class cgeo.geocaching.connector.TerraCachingConnectorTest to public testHandleTerraCaches() : void from class cgeo.geocaching.connector.tc.TerraCachingConnectorTest",
    "comment" : "<p>cgeo.geocaching.connector.TerraCachingConnectorTest has been move to cgeo.geocaching.connector.tc.TerraCachingConnectorTest.<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>private</span> <span class='pl-k'>static</span> <span class='pl-smi'>IConnector</span> <span class='pl-en'>getTerraCachingConnector</span>()</span> is extracted from testCanHandle()<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>public</span> <span class='pl-k'>static</span> <span class='pl-k'>void</span> <span class='pl-en'>testHandleCyberCaches</span>() is a newly added test method</span><br /><br /></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testTerraCaching() : void renamed to public testTerraCachingOldCollection() : void in class cgeo.geocaching.files.GPXParserTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"static-method\") in method protected afterParsing(cache Geocache) : void from class cgeo.geocaching.files.GPXParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getTerraCachingConnector() : IConnector extracted from public testCanHandle() : void in class cgeo.geocaching.connector.tc.TerraCachingConnectorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "first moved, then extract method"
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class cgeo.geocaching.connector.tc.TerraCachingConnector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2501
}, {
  "id" : 1139304,
  "repository" : "https://github.com/deeplearning4j/deeplearning4j.git",
  "sha1" : "3d080545362794ac5ab63a6cf1bdfb523a0d92a5",
  "url" : "https://github.com/deeplearning4j/deeplearning4j/commit/3d080545362794ac5ab63a6cf1bdfb523a0d92a5",
  "author" : "jyt109",
  "time" : "7/11/15 11:47 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public readCaffeModel(is InputStream, sizeLimitMb int) : NetParameter extracted from public readCaffeModel(caffeModelPath String, sizeLimitMb int) : NetParameter in class org.deeplearning4j.translate.CaffeModelToJavaClass",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1804
}, {
  "id" : 1139380,
  "repository" : "https://github.com/square/javapoet.git",
  "sha1" : "5a37c2aa596377cb4c9b6f916614407fd0a7d3db",
  "url" : "https://github.com/square/javapoet/commit/5a37c2aa596377cb4c9b6f916614407fd0a7d3db",
  "author" : "Thomas Broyer",
  "time" : "7/10/15 11:56 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.javapoet.TypesTest.Parameterized moved to com.squareup.javapoet.AbstractTypesTest.Parameterized",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass com.squareup.javapoet.AbstractTypesTest from class com.squareup.javapoet.TypesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getElement(clazz Class<?>) : TypeElement renamed to protected getElements() : Elements in class com.squareup.javapoet.TypesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public parameterizedType() : void from class com.squareup.javapoet.TypesTest to public parameterizedType() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public arrayType() : void from class com.squareup.javapoet.TypesTest to public arrayType() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getParameterizedTypeMirror() : void from class com.squareup.javapoet.TypesTest to public getParameterizedTypeMirror() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public wildcardMirrorExtendsType() : void from class com.squareup.javapoet.TypesTest to public wildcardMirrorExtendsType() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getVoidTypeMirror() : void from class com.squareup.javapoet.TypesTest to public getVoidTypeMirror() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getNullTypeMirror() : void from class com.squareup.javapoet.TypesTest to public getNullTypeMirror() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public unbox() : void from class com.squareup.javapoet.TypesTest to public unbox() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public wildcardExtendsObject() : void from class com.squareup.javapoet.TypesTest to public wildcardExtendsObject() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public wildcardExtendsType() : void from class com.squareup.javapoet.TypesTest to public wildcardExtendsType() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public typeVariable() : void from class com.squareup.javapoet.TypesTest to public typeVariable() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private getMirror(clazz Class<?>) : TypeMirror from class com.squareup.javapoet.TypesTest to private getMirror(clazz Class<?>) : TypeMirror from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getTypeVariableTypeMirror() : void from class com.squareup.javapoet.TypesTest to public getTypeVariableTypeMirror() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getPrimitiveTypeMirror() : void from class com.squareup.javapoet.TypesTest to public getPrimitiveTypeMirror() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public wildcardSuperType() : void from class com.squareup.javapoet.TypesTest to public wildcardSuperType() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public wildcardMirrorSuperType() : void from class com.squareup.javapoet.TypesTest to public wildcardMirrorSuperType() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public wildcardMirrorNoBounds() : void from class com.squareup.javapoet.TypesTest to public wildcardMirrorNoBounds() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getBasicTypeMirror() : void from class com.squareup.javapoet.TypesTest to public getBasicTypeMirror() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public box() : void from class com.squareup.javapoet.TypesTest to public box() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getArrayTypeMirror() : void from class com.squareup.javapoet.TypesTest to public getArrayTypeMirror() : void from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeElement to Elements in method protected getElements() : Elements from class com.squareup.javapoet.TypesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private getElement(clazz Class<?>) : TypeElement from class com.squareup.javapoet.TypesTest to private getElement(clazz Class<?>) : TypeElement from class com.squareup.javapoet.AbstractTypesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getVoidTypeMirror() : void renamed to protected getElements() : Elements in class com.squareup.javapoet.TypesTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected getElements() : Elements from class com.squareup.javapoet.TypesTest",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter clazz : Class<?> in method private getElement(clazz Class<?>) : TypeElement from class com.squareup.javapoet.TypesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected getElements() : Elements from class com.squareup.javapoet.TypesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1139443,
  "repository" : "https://github.com/checkstyle/checkstyle.git",
  "sha1" : "febbc986cb25ed460ea601c0a68c7d2597f89ee4",
  "url" : "https://github.com/checkstyle/checkstyle/commit/febbc986cb25ed460ea601c0a68c7d2597f89ee4",
  "author" : "Michal Kordas",
  "time" : "7/12/15 2:07 AM",
  "refactorings" : [ {
    "type" : "Rename Class",
    "description" : "Rename Class com.google.checkstyle.test.chapter4formatting.rule4822variabledistance.InputVariableDeclarationUsageDistanceCheck.writer renamed to com.google.checkstyle.test.chapter4formatting.rule4822variabledistance.InputVariableDeclarationUsageDistanceCheck.otherWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.google.checkstyle.test.chapter5naming.rule521packageNames.PackageNameInputBad moved to com.google.checkstyle.test.chapter5naming.rule521packageNamesCamelCase.PackageNameInputBad",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Package",
    "description" : "Rename Package com.google.checkstyle.test.chapter5naming.rule521packageNames to com.google.checkstyle.test.chapter5naming.rule521packageNamesCamelCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 641
}, {
  "id" : 1139562,
  "repository" : "https://github.com/Alluxio/alluxio.git",
  "sha1" : "5b184ac783784c1ca4baf1437888c79bd9460763",
  "url" : "https://github.com/Alluxio/alluxio/commit/5b184ac783784c1ca4baf1437888c79bd9460763",
  "author" : "cc",
  "time" : "7/11/15 9:32 AM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private freeSpace(bytesToBeAvailable long, location BlockStoreLocation) : EvictionPlan inlined to public freeSpaceWithView(bytesToBeAvailable long, location BlockStoreLocation, view BlockMetadataManagerView) : EvictionPlan in class tachyon.worker.block.evictor.LRUEvictor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 537
}, {
  "id" : 1139781,
  "repository" : "https://github.com/structr/structr.git",
  "sha1" : "15afd616cba5fb3d432d11a6de0d4f7805b202db",
  "url" : "https://github.com/structr/structr/commit/15afd616cba5fb3d432d11a6de0d4f7805b202db",
  "author" : "Christian Morgner",
  "time" : "7/13/15 4:05 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method package handleObject(nodeFactory NodeFactory, relFactory RelationshipFactory, key String, value Object, includeHiddenAndDeleted boolean, publicOnly boolean, level int) : Object extracted from public execute(query String, parameters Map<String,Object>, includeHiddenAndDeleted boolean, publicOnly boolean) : List<GraphObject> in class org.structr.core.graph.CypherQueryCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Logic has been changed totally"
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable type : Class in method public instantiate(node Node) : T from class org.structr.core.graph.NodeFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable type : Class in method public instantiate(relationship Relationship) : T from class org.structr.core.graph.RelationshipFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable graphDb : GraphDatabaseService in method public getRelationshipById(uuid String) : RelationshipInterface from class org.structr.core.app.StructrApp",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable graphDb : GraphDatabaseService in method public getNodeById(uuid String) : NodeInterface from class org.structr.core.app.StructrApp",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2025
}, {
  "id" : 1139791,
  "repository" : "https://github.com/spring-projects/spring-boot.git",
  "sha1" : "84937551787072a4befac29fb48436b3187ac4c6",
  "url" : "https://github.com/spring-projects/spring-boot/commit/84937551787072a4befac29fb48436b3187ac4c6",
  "author" : "Andy Wilkinson",
  "time" : "7/14/15 8:30 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration.SpringBootSecDispatcher moved to org.springframework.boot.cli.compiler.MavenSettingsReader.SpringBootSecDispatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createMirrorSelector(settings Settings) : MirrorSelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createMirrorSelector(settings Settings) : MirrorSelector from class org.springframework.boot.cli.compiler.MavenSettings",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createSettingsDecrypter() : SettingsDecrypter from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createSettingsDecrypter() : SettingsDecrypter from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private decryptSettings(settings Settings) : SettingsDecryptionResult from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private decryptSettings(settings Settings) : SettingsDecryptionResult from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private loadSettings() : Settings from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private loadSettings() : Settings from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private setField(clazz Class<?>, fieldName String, target Object, value Object) : void from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private setField(clazz Class<?>, fieldName String, target Object, value Object) : void from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createProxySelector(proxies List<Proxy>) : ProxySelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createProxySelector(decryptedSettings SettingsDecryptionResult) : ProxySelector from class org.springframework.boot.cli.compiler.MavenSettings",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createAuthenticationSelector(servers List<Server>) : AuthenticationSelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createAuthenticationSelector(decryptedSettings SettingsDecryptionResult) : AuthenticationSelector from class org.springframework.boot.cli.compiler.MavenSettings",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private loadSettings() : Settings from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory to private loadSettings() : Settings from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "target class did not exust in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public readSettings() : MavenSettings extracted from public apply(session DefaultRepositorySystemSession, repositorySystem RepositorySystem) : void in class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration & moved to class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to <span class='blob-code-inner'><span class='pl-en'>MavenSettingsReader</span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private homeDir : String from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private homeDir : String from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.springframework.boot.cli.compiler.MavenSettingsReader from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type settings : Settings to settings : MavenSettings in method public apply(session DefaultRepositorySystemSession, repositorySystem RepositorySystem) : void from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public SettingsXmlRepositorySystemSessionAutoConfiguration() from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to public MavenSettingsReader() from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method package SettingsXmlRepositorySystemSessionAutoConfiguration(homeDir String) from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to public MavenSettingsReader(homeDir String) from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter localRepository : String in method private addDefaultCacheAsRepository(localRepository String, repositoryConfiguration List<RepositoryConfiguration>) : void from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private addDefaultCacheAsRepository(localRepository String, repositoryConfiguration List<RepositoryConfiguration>) : void from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public MavenSettingsReader(homeDir String) from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private loadSettings() : Settings from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable session : DefaultRepositorySystemSession in method private assertSessionCustomization(userHome String) : void from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable localRepository : String to localRepository : String in method private getLocalRepositoryDirectory(localRepository String) : File from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2343
}, {
  "id" : 1139897,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "af618666043f21b3db7e6a1be2aa225ae0f432b4",
  "url" : "https://github.com/JetBrains/intellij-community/commit/af618666043f21b3db7e6a1be2aa225ae0f432b4",
  "author" : "peter",
  "time" : "7/14/15 6:34 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private isNavigationBlocked(renderer GutterIconRenderer, project Project) : boolean extracted from public mouseReleased(e MouseEvent) : void in class com.intellij.openapi.editor.impl.EditorGutterComponentImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 18405
}, {
  "id" : 1139976,
  "repository" : "https://github.com/hazelcast/hazelcast.git",
  "sha1" : "76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
  "url" : "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
  "author" : "sancar",
  "time" : "7/13/15 8:28 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected createAddress(host String, port int) : Address extracted from private createAddresses(count int) : Address[] in class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Parameterize attribute on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected createAddress(host String, port int) : Address extracted from private createAddresses(addressArray String...) : Address[] in class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Parameterize attribute on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected startSelectors() : void extracted from public start() : void in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected initializeSelectors(client HazelcastClientInstanceImpl) : void extracted from public ClientConnectionManagerImpl(client HazelcastClientInstanceImpl, addressTranslator AddressTranslator) in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected shutdownSelectors() : void extracted from public shutdown() : void in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private tripshutdown(instances HazelcastInstance...) : void renamed to private tripTerminate(instances HazelcastInstance...) : void in class com.hazelcast.mapreduce.MapReduceTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private TestHazelcastInstanceFactory(addresses Address[]) renamed to private init(initialNodeCount int) : void in class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private pickAddress() : Address extracted from public newHazelcastInstance(config Config) : HazelcastInstance in class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter address : Address to remoteEndpoint : Address in method public registerConnection(remoteEndpoint Address, connection Connection) : boolean from class com.hazelcast.test.TestNodeRegistry.MockConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter addresses : Address[] to ioService : IOService in method package MockConnectionManager(ioService IOService, nodes ConcurrentMap<Address,NodeEngineImpl>, node Node, joinerLock Object) from class com.hazelcast.test.TestNodeRegistry.MockConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter conn : Connection to connection : Connection in method public destroyConnection(connection Connection) : void from class com.hazelcast.test.TestNodeRegistry.MockConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type addresses : Address[] to ioService : IOService in method package MockConnectionManager(ioService IOService, nodes ConcurrentMap<Address,NodeEngineImpl>, node Node, joinerLock Object) from class com.hazelcast.test.TestNodeRegistry.MockConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Address[] to List<Address> in method private createAddresses(ports AtomicInteger, count int) : List<Address> from class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Address[] to List<Address> in method private createAddresses(ports AtomicInteger, addressArray String...) : List<Address> from class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type addresses : Address[] to addresses : List<Address> in class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type addresses : Address[] to addresses : List<Address> in method private createAddresses(ports AtomicInteger, count int) : List<Address> from class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type addresses : Address[] to addresses : List<Address> in method private createAddresses(ports AtomicInteger, addressArray String...) : List<Address> from class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute PORTS : AtomicInteger to ports : AtomicInteger in class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : "<p>This is quite challenging to detect because there an attribute named ports and a parameter named ports at the same time</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter addresses : Address[] to initialNodeCount : int in method private init(initialNodeCount int) : void in class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : "<p>It is actually addresses.length replaced with initialNodeCount</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to boolean in method public live() : boolean in class com.hazelcast.test.TestNodeRegistry.MockConnection",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Attribute",
    "description" : "Extract Attribute private live : boolean in class com.hazelcast.test.TestNodeRegistry.MockConnection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getProtocolVersion() : short from class com.hazelcast.client.impl.HazelcastClientInstanceImpl to public getProtocolVersion() : short from class com.hazelcast.client.impl.HazelcastClientInstanceImpl",
    "comment" : "<p>src methd == target method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public handleClientMessage(message ClientMessage, connection Connection) : void from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl to public handleClientMessage(message ClientMessage, connection Connection) : void from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
    "comment" : "<p>src methd == target method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public handlePacket(packet Packet) : void from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl to public handlePacket(packet Packet) : void from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
    "comment" : "<p>src methd == target method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method private newHazelcastClient() : HazelcastInstance from class com.hazelcast.test.TestHazelcastInstanceFactory to public newHazelcastClient() : HazelcastInstance from class com.hazelcast.client.test.TestHazelcastFactory",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getId() : int renamed to public live() : boolean in class com.hazelcast.test.TestNodeRegistry.MockConnection",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter clientServiceFactory : ClientServiceFactory in method public HazelcastClientInstanceImpl(config ClientConfig, clientServiceFactory ClientServiceFactory) from class com.hazelcast.client.impl.HazelcastClientInstanceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter ports : AtomicInteger in method private createAddresses(ports AtomicInteger, count int) : List<Address> from class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter ports : AtomicInteger in method private createAddresses(ports AtomicInteger, addressArray String...) : List<Address> from class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter addresses : Address[] in method public MockNodeContext(addresses Address[], nodes ConcurrentMap<Address,NodeEngineImpl>, thisAddress Address, joinerLock Object) from class com.hazelcast.test.TestNodeRegistry.MockNodeContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter addresses : Address[] in method package MockJoiner(node Node, addresses Address[], nodes ConcurrentMap<Address,NodeEngineImpl>, joinerLock Object) from class com.hazelcast.test.TestNodeRegistry.MockJoiner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected innerClose() : void from class com.hazelcast.client.connection.nio.ClientConnection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected createSocketConnection(address Address) : ClientConnection from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public createNodeContext(address Address) : NodeContext from class com.hazelcast.test.TestNodeRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public getInstance(address Address) : HazelcastInstance from class com.hazelcast.test.TestNodeRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected connectionId : int from class com.hazelcast.client.connection.nio.ClientConnection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected connectionIdGen : AtomicInteger from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected alive : boolean from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private mockNetwork : boolean from class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected addresses : List<Address> from class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected registry : TestNodeRegistry from class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to protected in attribute protected localEndpoint : Address from class com.hazelcast.test.TestNodeRegistry.MockConnection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to protected in attribute protected nodeEngine : NodeEngineImpl from class com.hazelcast.test.TestNodeRegistry.MockConnection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Attribute",
    "description" : "Parameterize Attribute PORTS : AtomicInteger to ports : AtomicInteger in method protected createAddress(host String, port int) : Address from class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Attribute With Variable",
    "description" : "Replace Attribute With Variable addresses : Address[] to ioService : NodeIOService in method public createConnectionManager(node Node, serverSocketChannel ServerSocketChannel) : ConnectionManager from class com.hazelcast.test.TestNodeRegistry.MockNodeContext",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private inSelector : IOSelector from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private outSelector : IOSelector from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private count : int from class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private addresses : Address[] from class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private registry : TestNodeRegistry from class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter connection : Connection in method public registerConnection(remoteEndpoint Address, connection Connection) : boolean from class com.hazelcast.test.TestNodeRegistry.MockConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter remoteEndpoint : Address in method public registerConnection(remoteEndpoint Address, connection Connection) : boolean from class com.hazelcast.test.TestNodeRegistry.MockConnectionManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter connection : Connection in method public destroyConnection(connection Connection) : void from class com.hazelcast.test.TestNodeRegistry.MockConnectionManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class com.hazelcast.test.TestNodeRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class com.hazelcast.test.TestNodeRegistry.MockConnection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier final in class com.hazelcast.test.TestHazelcastInstanceFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4170
}, {
  "id" : 1139995,
  "repository" : "https://github.com/spring-projects/spring-security.git",
  "sha1" : "64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca",
  "url" : "https://github.com/spring-projects/spring-security/commit/64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca",
  "author" : "Rob Winch",
  "time" : "7/14/15 12:45 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap<MessageMatcher<?>,String>, handler SecurityExpressionHandler<Message<Object>>) : MessageSecurityMetadataSource extracted from public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap<MessageMatcher<?>,String>) : MessageSecurityMetadataSource in class org.springframework.security.messaging.access.expression.ExpressionBasedMessageSecurityMetadataSourceFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable voter : MessageExpressionVoter<Object> in method public inboundChannelSecurity() : ChannelSecurityInterceptor from class org.springframework.security.config.annotation.web.socket.AbstractSecurityWebSocketMessageBrokerConfigurer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier final in class org.springframework.security.messaging.access.expression.MessageSecurityExpressionRoot",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable handler : DefaultMessageSecurityExpressionHandler<Object> in method public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap<MessageMatcher<?>,String>) : MessageSecurityMetadataSource from class org.springframework.security.messaging.access.expression.ExpressionBasedMessageSecurityMetadataSourceFactory",
    "comment" : "<p>DefaultMessageSecurityExpressionHandler&lt;Object&gt; handler = new DefaultMessageSecurityExpressionHandler&lt;Object&gt;();<br />inlined to<br />return createExpressionMessageMetadataSource(matcherToExpression, new DefaultMessageSecurityExpressionHandler&lt;Object&gt;());</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6646
}, {
  "id" : 1140028,
  "repository" : "https://github.com/neo4j/neo4j.git",
  "sha1" : "a26b61201cd86c9a8773b418d9c84b446e95a601",
  "url" : "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
  "author" : "Mattias Persson",
  "time" : "7/14/15 5:14 AM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method public arrayAsCollection(arrayValue Object) : Collection<Object> from class org.neo4j.kernel.impl.util.IoPrimitiveUtils to public arrayAsCollection(arrayValue Object) : Collection<Object> from class org.neo4j.graphdb.Neo4jMatchers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type instanceCache : InstanceCache<StoreNodeRelationshipCursor> to instanceCache : Consumer<StoreNodeRelationshipCursor> in method public StoreNodeRelationshipCursor(relationshipRecord RelationshipRecord, relationshipStore RelationshipStore, groupRecord RelationshipGroupRecord, groupStore RelationshipGroupStore, storeStatement StoreStatement, instanceCache Consumer<StoreNodeRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type instanceCache : InstanceCache<StoreNodeRelationshipCursor> to instanceCache : Consumer<StoreNodeRelationshipCursor> in class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter relationshipId : long to relId : long in method protected nextFrom(relId long, type int, startNode long, endNode long) : Long in class org.neo4j.unsafe.batchinsert.BatchInserterImpl.getRelationshipIds.neoStore",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter storeIterator : RelationshipIterator to startNode : long in method protected nextFrom(relId long, type int, startNode long, endNode long) : Long in class org.neo4j.unsafe.batchinsert.BatchInserterImpl.getRelationshipIds.neoStore",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute storeIterable : StoreRelationshipIterable to relationshipCursor : StoreNodeRelationshipCursor in class org.neo4j.unsafe.batchinsert.BatchRelationshipIterable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type indexKey : org.neo4j.kernel.impl.store.counts.keys.IndexKey to indexKey : IndexKey in method public equals(other Object) : boolean from class org.neo4j.kernel.impl.store.counts.keys.IndexKey",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type that : org.neo4j.kernel.impl.store.counts.keys.IndexSampleKey to that : IndexSampleKey in method public compareTo(other CountsKey) : int from class org.neo4j.kernel.impl.store.counts.keys.IndexSampleKey",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type that : org.neo4j.kernel.impl.store.counts.keys.RelationshipKey to that : RelationshipKey in method public equals(o Object) : boolean from class org.neo4j.kernel.impl.store.counts.keys.RelationshipKey",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type that : org.neo4j.kernel.impl.store.counts.keys.RelationshipKey to that : RelationshipKey in method public compareTo(other CountsKey) : int from class org.neo4j.kernel.impl.store.counts.keys.RelationshipKey",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type storeIterable : StoreRelationshipIterable to relationshipCursor : StoreNodeRelationshipCursor in class org.neo4j.unsafe.batchinsert.BatchRelationshipIterable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visit(relId long, type int, startNode long, endNode long) : void renamed to protected nextFrom(relId long, type int, startNode long, endNode long) : BatchRelationship in class org.neo4j.unsafe.batchinsert.BatchInserterImpl.getRelationships",
    "comment" : "<p><a href='https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601?diff=split#diff-f537b692181f76cbd289e24dd4a09794L918'>https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601?diff=split#diff-f537b692181f76cbd289e24dd4a09794L918</a></p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public appliesTo(rawConfiguration Map<String,String>) : boolean from class org.neo4j.kernel.configuration.BaseConfigurationMigrator.SpecificPropertyMigration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public apply(rawConfiguration Map<String,String>) : Map<String,String> from class org.neo4j.kernel.configuration.BaseConfigurationMigrator.SpecificPropertyMigration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getDeprecationMessage() : String from class org.neo4j.kernel.configuration.BaseConfigurationMigrator.SpecificPropertyMigration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public setValueWithOldSetting(value String, rawConfiguration Map<String,String>) : void from class org.neo4j.kernel.configuration.BaseConfigurationMigrator.PropertyRenamed",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public nodeCursor(statement KernelStatement, nodeId long) : NodeCursor from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public relationshipCursor(statement KernelStatement, relationshipId long) : RelationshipCursor from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public augmentSingleNodeCursor(cursor NodeCursor) : NodeCursor from class org.neo4j.kernel.impl.api.state.TxState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public augmentPropertyCursor(cursor PropertyCursor, propertyContainerState PropertyContainerState) : PropertyCursor from class org.neo4j.kernel.impl.api.state.TxState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public augmentLabelCursor(cursor LabelCursor, nodeState NodeState) : LabelCursor from class org.neo4j.kernel.impl.api.state.TxState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public augmentSingleRelationshipCursor(cursor RelationshipCursor) : RelationshipCursor from class org.neo4j.kernel.impl.api.state.TxState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public augmentNodeRelationshipCursor(cursor RelationshipCursor, nodeState NodeState, direction Direction, relTypes int[]) : RelationshipCursor from class org.neo4j.kernel.impl.api.state.TxState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public next() : boolean from class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public get() : T from class org.neo4j.kernel.impl.util.InstanceCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public accept(instance T) : void from class org.neo4j.kernel.impl.util.InstanceCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getOutput() : Output from class org.neo4j.shell.impl.SameJvmClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getServer() : ShellServer from class org.neo4j.shell.impl.SameJvmClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public logEntries(channel ReadableVersionableLogChannel) : IOCursor<LogEntry> from class org.neo4j.kernel.impl.transaction.log.LogDeserializer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AddIndexFailureException in method public indexCreate(labelId int, propertyKeyId int) : IndexDescriptor from class org.neo4j.kernel.api.SchemaWrite",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AddIndexFailureException in method public indexCreate(state KernelStatement, labelId int, propertyKeyId int) : IndexDescriptor from class org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AddIndexFailureException in method public indexCreate(state KernelStatement, labelId int, propertyKey int) : IndexDescriptor from class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AddIndexFailureException in method public indexCreate(state KernelStatement, labelId int, propertyKey int) : IndexDescriptor from class org.neo4j.kernel.impl.api.LockingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AddIndexFailureException in method public indexCreate(labelId int, propertyKeyId int) : IndexDescriptor from class org.neo4j.kernel.impl.api.OperationsFacade",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AddIndexFailureException in method public indexCreate(state KernelStatement, labelId int, propertyKeyId int) : IndexDescriptor from class org.neo4j.kernel.impl.api.operations.SchemaWriteOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IOException in method private countDeletions(s IndexSearcher) : int from class org.neo4j.index.impl.lucene.Hits",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type PropertyKeyNotFoundException in method private createNode(label Label, number int) : long from class org.neo4j.kernel.api.impl.index.LuceneIndexRecoveryIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type LabelNotFoundKernelException in method private createNode(label Label, number int) : long from class org.neo4j.kernel.api.impl.index.LuceneIndexRecoveryIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type ShellException in method public printHelpString(out Output, server ShellServer, list boolean) : void from class org.neo4j.shell.apps.Man",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private migrations : List<Migration> from class org.neo4j.kernel.configuration.BaseConfigurationMigrator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private propertyKey : String from class org.neo4j.kernel.configuration.BaseConfigurationMigrator.SpecificPropertyMigration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private deprecationMessage : String from class org.neo4j.kernel.configuration.BaseConfigurationMigrator.SpecificPropertyMigration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private newKey : String from class org.neo4j.kernel.configuration.BaseConfigurationMigrator.PropertyRenamed",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private bufferedLog : BufferingLog from class org.neo4j.kernel.configuration.Config",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private settingsClasses : Iterable<Class<?>> from class org.neo4j.kernel.configuration.SystemPropertiesConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private instanceCache : Consumer<StoreNodeRelationshipCursor> from class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private graphDatabaseService : GraphDatabaseService from class org.neo4j.kernel.impl.core.NodeManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private relationshipTypeTokenHolder : RelationshipTypeTokenHolder from class org.neo4j.kernel.impl.core.NodeManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private neoStore : NeoStore from class org.neo4j.kernel.impl.store.StoreAccess",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private weight : Weight from class org.neo4j.index.impl.lucene.Hits",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private searcher : IndexSearcher from class org.neo4j.index.impl.lucene.Hits",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private hitDocs : Vector<HitDoc> from class org.neo4j.index.impl.lucene.Hits",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private lengthAtStart : int from class org.neo4j.index.impl.lucene.Hits",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private score : boolean from class org.neo4j.index.impl.lucene.Hits",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private realm : String from class org.neo4j.server.rest.security.AuthenticationException",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private host : String from class org.neo4j.shell.impl.RmiLocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private port : int from class org.neo4j.shell.impl.RmiLocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private name : String from class org.neo4j.shell.impl.RmiLocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private out : Output from class org.neo4j.shell.impl.SameJvmClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private server : ShellServer from class org.neo4j.shell.impl.SameJvmClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : AlreadyIndexedException|AlreadyConstrainedException|AddIndexFailureException to e : AlreadyIndexedException|AlreadyConstrainedException in method public createIndexDefinition(label Label, propertyKey String) : IndexDefinition from class org.neo4j.kernel.impl.coreapi.schema.SchemaImpl.GDBSchemaActions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter relationshipId : long to relId : long in method protected nextFrom(relId long, type int, startNode long, endNode long) : Long from class org.neo4j.unsafe.batchinsert.BatchInserterImpl.getRelationshipIds.new BatchRelationshipIterable<Long>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 10292
}, {
  "id" : 1140032,
  "repository" : "https://github.com/neo4j/neo4j.git",
  "sha1" : "5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
  "url" : "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
  "author" : "Mikhaylo Demianenko",
  "time" : "7/13/15 8:59 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldCreateEmptyCountsTrackerStoreWhenCreatingDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Add parameter (inside the constructor) on the top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldRotateCountsStoreWhenClosingTheDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Add parameter (inside the constructor) on the top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldRotateCountsStoreWhenRotatingLog() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Add parameter (inside the constructor) on the top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountStoreWhenDBContainsDenseNodes() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Add parameter (inside the constructor) on the top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreNodesAndRelationshipsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Add parameter (inside the constructor) on the top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateAnEmptyCountsStoreFromAnEmptyDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Add parameter (inside the constructor) on the top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreUnusedRelationshipRecordsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Add parameter (inside the constructor) on the top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreNodesInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Add parameter (inside the constructor) on the top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreUnusedNodeRecordsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Add parameter (inside the constructor) on the top of the extracted method"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setup() : void renamed to public setUp() : void in class org.neo4j.kernel.impl.store.StoreFactoryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public teardown() : void renamed to public tearDown() : void in class org.neo4j.kernel.impl.store.StoreFactoryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute neostore : NeoStore to neoStore : NeoStore in class org.neo4j.kernel.impl.store.StoreFactoryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter config : Config in method public CountsTracker(logProvider LogProvider, fs FileSystemAbstraction, pages PageCache, config Config, baseFile File) from class org.neo4j.kernel.impl.store.counts.CountsTracker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter timerFactory : RotationTimerFactory in method public AbstractKeyValueStore(fs FileSystemAbstraction, pages PageCache, base File, monitor RotationMonitor, timerFactory RotationTimerFactory, keySize int, valueSize int, headerFields HeaderField<?>...) from class org.neo4j.kernel.impl.store.kvstore.AbstractKeyValueStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter timerFactory : RotationTimerFactory in method package rotate(force boolean, strategy RotationStrategy, timerFactory RotationTimerFactory, headersUpdater Consumer<Headers.Builder>) : ActiveState<Key> from class org.neo4j.kernel.impl.store.kvstore.RotationState.Rotation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package Result(successful boolean) from class org.neo4j.consistency.ConsistencyCheckService.Result",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter storeDir : File in method public runFullConsistencyCheck(storeDir File, tuningConfiguration Config, progressFactory ProgressMonitorFactory, logProvider LogProvider, fileSystem FileSystemAbstraction, pageCache PageCache) : Result from class org.neo4j.consistency.ConsistencyCheckService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter logProvider : LogProvider in method public runFullConsistencyCheck(storeDir File, tuningConfiguration Config, progressFactory ProgressMonitorFactory, logProvider LogProvider, fileSystem FileSystemAbstraction, pageCache PageCache) : Result from class org.neo4j.consistency.ConsistencyCheckService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter pageCache : PageCache in method public runFullConsistencyCheck(storeDir File, tuningConfiguration Config, progressFactory ProgressMonitorFactory, logProvider LogProvider, fileSystem FileSystemAbstraction, pageCache PageCache) : Result from class org.neo4j.consistency.ConsistencyCheckService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.neo4j.consistency.ConsistencyCheckService.Result",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable consistencyCheckerConfig : Config in method public runFullConsistencyCheck(storeDir File, tuningConfiguration Config, progressFactory ProgressMonitorFactory, logProvider LogProvider, fileSystem FileSystemAbstraction, pageCache PageCache) : Result from class org.neo4j.consistency.ConsistencyCheckService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter timerFactory : RotationTimerFactory in method package rotate(force boolean, strategy RotationStrategy, timerFactory RotationTimerFactory, headers Consumer<Headers.Builder>) : ProgressiveState<Key> from class org.neo4j.kernel.impl.store.kvstore.DeadState.Prepared.prepareRotation.new Rotation<Key,RotationState.Rotation<Key>>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter timerFactory : RotationTimerFactory in method package rotate(force boolean, strategy RotationStrategy, timerFactory RotationTimerFactory, headers Consumer<Headers.Builder>) : ProgressiveState<Key> from class org.neo4j.kernel.impl.store.kvstore.DeadState.NeedsCreation.prepareRotation.new Rotation<Key,NeedsCreation<Key>>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6884
}, {
  "id" : 1140061,
  "repository" : "https://github.com/jline/jline2.git",
  "sha1" : "80d3ffb5aafa90992385c17e8338c2cc5def3cec",
  "url" : "https://github.com/jline/jline2/commit/80d3ffb5aafa90992385c17e8338c2cc5def3cec",
  "author" : "Luke Call",
  "time" : "7/13/15 10:30 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public readCharacter(checkForAltKeyCombo boolean) : int extracted from public readCharacter() : int in class jline.console.ConsoleReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "it does contain nonMappedLeaves and nodes but due the passed argument, the nonMapped branch will not be executed"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public readCharacter(checkForAltKeyCombo boolean, allowed char...) : int extracted from public readCharacter(allowed char...) : int in class jline.console.ConsoleReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "due the passed argument, the nonMapped branch will not be executed"
    }
  } ],
  "refDiffExecutionTime" : 653
}, {
  "id" : 1140071,
  "repository" : "https://github.com/plutext/docx4j.git",
  "sha1" : "e29924b33ec0c0298ba4fc3f7a8c218c8e6cfa0c",
  "url" : "https://github.com/plutext/docx4j/commit/e29924b33ec0c0298ba4fc3f7a8c218c8e6cfa0c",
  "author" : "Jason Harrop",
  "time" : "7/14/15 12:58 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public save(outFile File, flags int, password String) : void extracted from public save(outFile File, flags int) : void in class org.docx4j.openpackaging.packages.OpcPackage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "lots of logic changes"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public save(outStream OutputStream, flags int, password String) : void extracted from public save(outStream OutputStream, flags int) : void in class org.docx4j.openpackaging.packages.OpcPackage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Extract method on the top of the extracted method"
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.LittleEndianConsts moved to org.docx4j.org.apache.poi.util.LittleEndianConsts",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.Ole10Native moved to org.docx4j.org.apache.poi.poifs.filesystem.Ole10Native",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.RawDataBlockList moved to org.docx4j.org.apache.poi.poifs.storage.RawDataBlockList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.Decryptor moved to org.docx4j.org.apache.poi.poifs.crypt.Decryptor",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.RecordFormatException moved to org.docx4j.org.apache.poi.util.RecordFormatException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.ReadingNotSupportedException moved to org.docx4j.org.apache.poi.hpsf.ReadingNotSupportedException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Decryptor moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Decryptor",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.StringUtil moved to org.docx4j.org.apache.poi.util.StringUtil",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.Property moved to org.docx4j.org.apache.poi.hpsf.Property",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.standard.EncryptionRecord moved to org.docx4j.org.apache.poi.poifs.crypt.standard.EncryptionRecord",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.standard.StandardEncryptor moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardEncryptor",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.ShortField moved to org.docx4j.org.apache.poi.util.ShortField",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.property.PropertyTableBase moved to org.docx4j.org.apache.poi.poifs.property.PropertyTableBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.LittleEndianInputStream moved to org.docx4j.org.apache.poi.util.LittleEndianInputStream",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.POIFSFileSystem moved to org.docx4j.org.apache.poi.poifs.filesystem.POIFSFileSystem",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.ByteField moved to org.docx4j.org.apache.poi.util.ByteField",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.NoFormatIDException moved to org.docx4j.org.apache.poi.hpsf.NoFormatIDException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.SmallBlockTableWriter moved to org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionHeader",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.eventfilesystem.POIFSReaderEvent moved to org.docx4j.org.apache.poi.poifs.eventfilesystem.POIFSReaderEvent",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.OPOIFSFileSystem moved to org.docx4j.org.apache.poi.poifs.filesystem.OPOIFSFileSystem",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionVerifier",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.HeaderBlockWriter moved to org.docx4j.org.apache.poi.poifs.storage.HeaderBlockWriter",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.FilteringDirectoryNode moved to org.docx4j.org.apache.poi.poifs.filesystem.FilteringDirectoryNode",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.dev.POIFSViewable moved to org.docx4j.org.apache.poi.poifs.dev.POIFSViewable",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.BlockWritable moved to org.docx4j.org.apache.poi.poifs.storage.BlockWritable",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hssf.OldExcelFormatException moved to org.docx4j.org.apache.poi.hssf.OldExcelFormatException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionVerifier",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.ClassID moved to org.docx4j.org.apache.poi.hpsf.ClassID",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.property.Parent moved to org.docx4j.org.apache.poi.poifs.property.Parent",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.CloseIgnoringInputStream moved to org.docx4j.org.apache.poi.util.CloseIgnoringInputStream",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.Encryptor moved to org.docx4j.org.apache.poi.poifs.crypt.Encryptor",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.BlockList moved to org.docx4j.org.apache.poi.poifs.storage.BlockList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.ListManagedBlock moved to org.docx4j.org.apache.poi.poifs.storage.ListManagedBlock",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.BlockListImpl moved to org.docx4j.org.apache.poi.poifs.storage.BlockListImpl",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.TypeWriter moved to org.docx4j.org.apache.poi.hpsf.TypeWriter",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.DelayableLittleEndianOutput moved to org.docx4j.org.apache.poi.util.DelayableLittleEndianOutput",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.EncryptionInfo moved to org.docx4j.org.apache.poi.poifs.crypt.EncryptionInfo",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.nio.ByteArrayBackedDataSource moved to org.docx4j.org.apache.poi.poifs.nio.ByteArrayBackedDataSource",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.NoPropertySetStreamException moved to org.docx4j.org.apache.poi.hpsf.NoPropertySetStreamException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.DocumentNode moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentNode",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.LittleEndianOutput moved to org.docx4j.org.apache.poi.util.LittleEndianOutput",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.EntryUtils moved to org.docx4j.org.apache.poi.poifs.filesystem.EntryUtils",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.IOUtils moved to org.docx4j.org.apache.poi.util.IOUtils",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.NPOIFSFileSystem moved to org.docx4j.org.apache.poi.poifs.filesystem.NPOIFSFileSystem",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.UnexpectedPropertySetTypeException moved to org.docx4j.org.apache.poi.hpsf.UnexpectedPropertySetTypeException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.Filetime moved to org.docx4j.org.apache.poi.hpsf.Filetime",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.TypedPropertyValue moved to org.docx4j.org.apache.poi.hpsf.TypedPropertyValue",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.BATManaged moved to org.docx4j.org.apache.poi.poifs.filesystem.BATManaged",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.DocumentOutputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentOutputStream",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.agile.EncryptionDocument moved to org.docx4j.org.apache.poi.poifs.crypt.agile.EncryptionDocument",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.property.PropertyFactory moved to org.docx4j.org.apache.poi.poifs.property.PropertyFactory",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.Entry moved to org.docx4j.org.apache.poi.poifs.filesystem.Entry",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.NPOIFSStream moved to org.docx4j.org.apache.poi.poifs.filesystem.NPOIFSStream",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.standard.StandardDecryptor moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardDecryptor",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.MutableSection moved to org.docx4j.org.apache.poi.hpsf.MutableSection",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.SummaryInformation moved to org.docx4j.org.apache.poi.hpsf.SummaryInformation",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.LittleEndianByteArrayOutputStream moved to org.docx4j.org.apache.poi.util.LittleEndianByteArrayOutputStream",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.DocumentSummaryInformation moved to org.docx4j.org.apache.poi.hpsf.DocumentSummaryInformation",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.PngUtils moved to org.docx4j.org.apache.poi.util.PngUtils",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.CodePageUtil moved to org.docx4j.org.apache.poi.util.CodePageUtil",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.BigBlock moved to org.docx4j.org.apache.poi.poifs.storage.BigBlock",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.property.NPropertyTable moved to org.docx4j.org.apache.poi.poifs.property.NPropertyTable",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.Vector moved to org.docx4j.org.apache.poi.hpsf.Vector",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.DocumentHelper moved to org.docx4j.org.apache.poi.util.DocumentHelper",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.SpecialPropertySet moved to org.docx4j.org.apache.poi.hpsf.SpecialPropertySet",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.IndirectPropertyName moved to org.docx4j.org.apache.poi.hpsf.IndirectPropertyName",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.VersionedStream moved to org.docx4j.org.apache.poi.hpsf.VersionedStream",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.property.Property moved to org.docx4j.org.apache.poi.poifs.property.Property",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.MutablePropertySet moved to org.docx4j.org.apache.poi.hpsf.MutablePropertySet",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.WritingNotSupportedException moved to org.docx4j.org.apache.poi.hpsf.WritingNotSupportedException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.Util moved to org.docx4j.org.apache.poi.hpsf.Util",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.HeaderBlock moved to org.docx4j.org.apache.poi.poifs.storage.HeaderBlock",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.Array moved to org.docx4j.org.apache.poi.hpsf.Array",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.property.PropertyTable moved to org.docx4j.org.apache.poi.poifs.property.PropertyTable",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.EncryptionInfoBuilder moved to org.docx4j.org.apache.poi.poifs.crypt.EncryptionInfoBuilder",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.DocumentBlock moved to org.docx4j.org.apache.poi.poifs.storage.DocumentBlock",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.MissingSectionException moved to org.docx4j.org.apache.poi.hpsf.MissingSectionException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.HexRead moved to org.docx4j.org.apache.poi.util.HexRead",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.BoundedInputStream moved to org.docx4j.org.apache.poi.util.BoundedInputStream",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.EncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.EncryptionVerifier",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.property.RootProperty moved to org.docx4j.org.apache.poi.poifs.property.RootProperty",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.OfficeXmlFileException moved to org.docx4j.org.apache.poi.poifs.filesystem.OfficeXmlFileException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.IntegerField moved to org.docx4j.org.apache.poi.util.IntegerField",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.FixedField moved to org.docx4j.org.apache.poi.util.FixedField",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.BitField moved to org.docx4j.org.apache.poi.util.BitField",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.ChunkedCipherOutputStream moved to org.docx4j.org.apache.poi.poifs.crypt.ChunkedCipherOutputStream",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.POIFSWriterEvent moved to org.docx4j.org.apache.poi.poifs.filesystem.POIFSWriterEvent",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.PropertyBlock moved to org.docx4j.org.apache.poi.poifs.storage.PropertyBlock",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.HexDump moved to org.docx4j.org.apache.poi.util.HexDump",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.Ole10NativeException moved to org.docx4j.org.apache.poi.poifs.filesystem.Ole10NativeException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.OldFileFormatException moved to org.docx4j.org.apache.poi.OldFileFormatException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.DocumentDescriptor moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentDescriptor",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.property.DocumentProperty moved to org.docx4j.org.apache.poi.poifs.property.DocumentProperty",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.Variant moved to org.docx4j.org.apache.poi.hpsf.Variant",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.eventfilesystem.POIFSReader moved to org.docx4j.org.apache.poi.poifs.eventfilesystem.POIFSReader",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.BlockAllocationTableWriter moved to org.docx4j.org.apache.poi.poifs.storage.BlockAllocationTableWriter",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.TempFileCreationStrategy moved to org.docx4j.org.apache.poi.util.TempFileCreationStrategy",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.GUID moved to org.docx4j.org.apache.poi.hpsf.GUID",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.agile.AgileEncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.agile.AgileEncryptionVerifier",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.dev.POIFSViewer moved to org.docx4j.org.apache.poi.poifs.dev.POIFSViewer",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.DataSpaceMapUtils moved to org.docx4j.org.apache.poi.poifs.crypt.DataSpaceMapUtils",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.EncryptedDocumentException moved to org.docx4j.org.apache.poi.EncryptedDocumentException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Encryptor moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Encryptor",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.NotOLE2FileException moved to org.docx4j.org.apache.poi.poifs.filesystem.NotOLE2FileException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.LongField moved to org.docx4j.org.apache.poi.util.LongField",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.DocumentEntry moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentEntry",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.HPSFException moved to org.docx4j.org.apache.poi.hpsf.HPSFException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.nio.DataSource moved to org.docx4j.org.apache.poi.poifs.nio.DataSource",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.property.PropertyConstants moved to org.docx4j.org.apache.poi.poifs.property.PropertyConstants",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.ChunkedCipherInputStream moved to org.docx4j.org.apache.poi.poifs.crypt.ChunkedCipherInputStream",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.VariantBool moved to org.docx4j.org.apache.poi.hpsf.VariantBool",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.SmallDocumentBlockList moved to org.docx4j.org.apache.poi.poifs.storage.SmallDocumentBlockList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.property.Child moved to org.docx4j.org.apache.poi.poifs.property.Child",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.RawDataBlock moved to org.docx4j.org.apache.poi.poifs.storage.RawDataBlock",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.UnsupportedFileFormatException moved to org.docx4j.org.apache.poi.UnsupportedFileFormatException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.nio.FileBackedDataSource moved to org.docx4j.org.apache.poi.poifs.nio.FileBackedDataSource",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.UnsupportedVariantTypeException moved to org.docx4j.org.apache.poi.hpsf.UnsupportedVariantTypeException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.SAXHelper moved to org.docx4j.org.apache.poi.util.SAXHelper",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.IntList moved to org.docx4j.org.apache.poi.util.IntList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.CryptoFunctions moved to org.docx4j.org.apache.poi.poifs.crypt.CryptoFunctions",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.CustomProperty moved to org.docx4j.org.apache.poi.hpsf.CustomProperty",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.dev.POIFSViewEngine moved to org.docx4j.org.apache.poi.poifs.dev.POIFSViewEngine",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.HeaderBlockConstants moved to org.docx4j.org.apache.poi.poifs.storage.HeaderBlockConstants",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionInfoBuilder moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionInfoBuilder",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.BitFieldFactory moved to org.docx4j.org.apache.poi.util.BitFieldFactory",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.MarkUnsupportedException moved to org.docx4j.org.apache.poi.hpsf.MarkUnsupportedException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.agile.AgileEncryptor moved to org.docx4j.org.apache.poi.poifs.crypt.agile.AgileEncryptor",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.agile.AgileDecryptor moved to org.docx4j.org.apache.poi.poifs.crypt.agile.AgileDecryptor",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionInfoBuilder moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionInfoBuilder",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.TempFile moved to org.docx4j.org.apache.poi.util.TempFile",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.NoSingleSectionException moved to org.docx4j.org.apache.poi.hpsf.NoSingleSectionException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.wellknown.PropertyIDMap moved to org.docx4j.org.apache.poi.hpsf.wellknown.PropertyIDMap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.wellknown.SectionIDMap moved to org.docx4j.org.apache.poi.hpsf.wellknown.SectionIDMap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.VariantTypeException moved to org.docx4j.org.apache.poi.hpsf.VariantTypeException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.DirectoryEntry moved to org.docx4j.org.apache.poi.poifs.filesystem.DirectoryEntry",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.EmptyFileException moved to org.docx4j.org.apache.poi.EmptyFileException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.ClipboardData moved to org.docx4j.org.apache.poi.hpsf.ClipboardData",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.eventfilesystem.POIFSReaderRegistry moved to org.docx4j.org.apache.poi.poifs.eventfilesystem.POIFSReaderRegistry",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.IllegalPropertySetDataException moved to org.docx4j.org.apache.poi.hpsf.IllegalPropertySetDataException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.LittleEndianInput moved to org.docx4j.org.apache.poi.util.LittleEndianInput",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.PropertySetFactory moved to org.docx4j.org.apache.poi.hpsf.PropertySetFactory",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.EntryNode moved to org.docx4j.org.apache.poi.poifs.filesystem.EntryNode",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.property.DirectoryProperty moved to org.docx4j.org.apache.poi.poifs.property.DirectoryProperty",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.LittleEndian moved to org.docx4j.org.apache.poi.util.LittleEndian",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.Currency moved to org.docx4j.org.apache.poi.hpsf.Currency",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.NDocumentInputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.NDocumentInputStream",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.Date moved to org.docx4j.org.apache.poi.hpsf.Date",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.BlockStore moved to org.docx4j.org.apache.poi.poifs.filesystem.BlockStore",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.POIFSDocumentPath moved to org.docx4j.org.apache.poi.poifs.filesystem.POIFSDocumentPath",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.BlockAllocationTableReader moved to org.docx4j.org.apache.poi.poifs.storage.BlockAllocationTableReader",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.util.LittleEndianOutputStream moved to org.docx4j.org.apache.poi.util.LittleEndianOutputStream",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.eventfilesystem.POIFSReaderListener moved to org.docx4j.org.apache.poi.poifs.eventfilesystem.POIFSReaderListener",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.Decimal moved to org.docx4j.org.apache.poi.hpsf.Decimal",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.Blob moved to org.docx4j.org.apache.poi.hpsf.Blob",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.NPOIFSDocument moved to org.docx4j.org.apache.poi.poifs.filesystem.NPOIFSDocument",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.UnicodeString moved to org.docx4j.org.apache.poi.hpsf.UnicodeString",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionHeader",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.ODocumentInputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.ODocumentInputStream",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.NPOIFSMiniStore moved to org.docx4j.org.apache.poi.poifs.filesystem.NPOIFSMiniStore",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.OPOIFSDocument moved to org.docx4j.org.apache.poi.poifs.filesystem.OPOIFSDocument",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.DataInputBlock moved to org.docx4j.org.apache.poi.poifs.storage.DataInputBlock",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.VariantSupport moved to org.docx4j.org.apache.poi.hpsf.VariantSupport",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.common.POIFSConstants moved to org.docx4j.org.apache.poi.poifs.common.POIFSConstants",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.NDocumentOutputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.NDocumentOutputStream",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.POIFSWriterListener moved to org.docx4j.org.apache.poi.poifs.filesystem.POIFSWriterListener",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.DirectoryNode moved to org.docx4j.org.apache.poi.poifs.filesystem.DirectoryNode",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.EncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.EncryptionHeader",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptor moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptor",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.dev.POIFSLister moved to org.docx4j.org.apache.poi.poifs.dev.POIFSLister",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.HPSFRuntimeException moved to org.docx4j.org.apache.poi.hpsf.HPSFRuntimeException",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.PropertySet moved to org.docx4j.org.apache.poi.hpsf.PropertySet",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.common.POIFSBigBlockSize moved to org.docx4j.org.apache.poi.poifs.common.POIFSBigBlockSize",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.CodePageString moved to org.docx4j.org.apache.poi.hpsf.CodePageString",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.Section moved to org.docx4j.org.apache.poi.hpsf.Section",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.MutableProperty moved to org.docx4j.org.apache.poi.hpsf.MutableProperty",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.filesystem.DocumentInputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentInputStream",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.hpsf.CustomProperties moved to org.docx4j.org.apache.poi.hpsf.CustomProperties",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.ChainingMode moved to org.docx4j.org.apache.poi.poifs.crypt.ChainingMode",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.CipherAlgorithm moved to org.docx4j.org.apache.poi.poifs.crypt.CipherAlgorithm",
    "comment" : "<p>Package-related refactoring</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.CipherProvider moved to org.docx4j.org.apache.poi.poifs.crypt.CipherProvider",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.SmallDocumentBlock moved to org.docx4j.org.apache.poi.poifs.storage.SmallDocumentBlock",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.BATBlock moved to org.docx4j.org.apache.poi.poifs.storage.BATBlock",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.HashAlgorithm moved to org.docx4j.org.apache.poi.poifs.crypt.HashAlgorithm",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder moved to org.docx4j.org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addNewEncryption() : com.microsoft.schemas.office.x2006.encryption.CTEncryption from class org.apache.poi.poifs.crypt.agile.EncryptionDocument to public addNewEncryption() : org.docx4j.com.microsoft.schemas.office.x2006.encryption.CTEncryption from class org.docx4j.org.apache.poi.poifs.crypt.agile.EncryptionDocument",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getEncryption() : com.microsoft.schemas.office.x2006.encryption.CTEncryption from class org.apache.poi.poifs.crypt.agile.EncryptionDocument to public getEncryption() : org.docx4j.com.microsoft.schemas.office.x2006.encryption.CTEncryption from class org.docx4j.org.apache.poi.poifs.crypt.agile.EncryptionDocument",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setEncryption(encryption com.microsoft.schemas.office.x2006.encryption.CTEncryption) : void from class org.apache.poi.poifs.crypt.agile.EncryptionDocument to public setEncryption(encryption org.docx4j.com.microsoft.schemas.office.x2006.encryption.CTEncryption) : void from class org.docx4j.org.apache.poi.poifs.crypt.agile.EncryptionDocument",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public dump(root DirectoryEntry, parent File) : void from class org.apache.poi.poifs.dev.POIFSDump to public dump(root DirectoryEntry, parent File) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSDump",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public displayRawBlocksSummary(data_blocks RawDataBlockList) : void from class org.apache.poi.poifs.dev.POIFSHeaderDumper to public displayRawBlocksSummary(data_blocks RawDataBlockList) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSHeaderDumper",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public main(args String[]) : void from class org.apache.poi.poifs.dev.POIFSHeaderDumper to public main(args String[]) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSHeaderDumper",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public countBlocks() : int from class org.apache.poi.poifs.storage.SmallBlockTableWriter to public countBlocks() : int from class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getSBAT() : BlockAllocationTableWriter from class org.apache.poi.poifs.storage.SmallBlockTableWriter to public getSBAT() : BlockAllocationTableWriter from class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getSBATBlockCount() : int from class org.apache.poi.poifs.storage.SmallBlockTableWriter to public getSBATBlockCount() : int from class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setStartBlock(start_block int) : void from class org.apache.poi.poifs.storage.SmallBlockTableWriter to public setStartBlock(start_block int) : void from class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public displayBATReader(batReader BlockAllocationTableReader) : void from class org.apache.poi.poifs.dev.POIFSHeaderDumper to public displayBATReader(type String, batReader BlockAllocationTableReader) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSHeaderDumper",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public displayHeader(header_block HeaderBlock) : void from class org.apache.poi.poifs.dev.POIFSHeaderDumper to public displayHeader(header_block HeaderBlock) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSHeaderDumper",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public viewFile(filename String) : void from class org.apache.poi.poifs.dev.POIFSHeaderDumper to public viewFile(filename String) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSHeaderDumper",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public builder : String from class org.apache.poi.poifs.crypt.EncryptionMode to public builder : String from class org.docx4j.org.apache.poi.poifs.crypt.EncryptionMode",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public encryptionFlags : int from class org.apache.poi.poifs.crypt.EncryptionMode to public encryptionFlags : int from class org.docx4j.org.apache.poi.poifs.crypt.EncryptionMode",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public versionMajor : int from class org.apache.poi.poifs.crypt.EncryptionMode to public versionMajor : int from class org.docx4j.org.apache.poi.poifs.crypt.EncryptionMode",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public versionMinor : int from class org.apache.poi.poifs.crypt.EncryptionMode to public versionMinor : int from class org.docx4j.org.apache.poi.poifs.crypt.EncryptionMode",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package encryption : CTEncryption from class org.apache.poi.poifs.crypt.agile.EncryptionDocument to package encryption : CTEncryption from class org.docx4j.org.apache.poi.poifs.crypt.agile.EncryptionDocument",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private _big_block_count : int from class org.apache.poi.poifs.storage.SmallBlockTableWriter to private _big_block_count : int from class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private _root : RootProperty from class org.apache.poi.poifs.storage.SmallBlockTableWriter to private _root : RootProperty from class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private _sbat : BlockAllocationTableWriter from class org.apache.poi.poifs.storage.SmallBlockTableWriter to private _sbat : BlockAllocationTableWriter from class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
    "comment" : "it is a move class or sth like that",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.dev.POIFSDump moved to org.docx4j.org.apache.poi.poifs.dev.POIFSDump",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.dev.POIFSHeaderDumper moved to org.docx4j.org.apache.poi.poifs.dev.POIFSHeaderDumper",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable baos : ByteArrayOutputStream to bos : ByteArrayOutputStream in method protected marshallEncryptionDocument(ed EncryptionDocument, os LittleEndianByteArrayOutputStream) : void from class org.docx4j.org.apache.poi.poifs.crypt.agile.AgileEncryptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable sbat : BlockList to sbatReader : BlockAllocationTableReader in method public viewFile(filename String) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSHeaderDumper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute jcXmlDSig : JAXBContext to jcEncryption : JAXBContext in class org.docx4j.jaxb.Context",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type sbat : BlockList to sbatReader : BlockAllocationTableReader in method public viewFile(filename String) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSHeaderDumper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type _documents : List<POIFSViewable> to _documents : List<OPOIFSDocument> in class org.docx4j.org.apache.poi.poifs.filesystem.OPOIFSFileSystem",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type _small_blocks : List to _small_blocks : List<SmallDocumentBlock> in class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type blocks : BlockWritable[] to blocks : SmallDocumentBlock[] in method public SmallBlockTableWriter(bigBlockSize POIFSBigBlockSize, documents List<OPOIFSDocument>, root RootProperty) from class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type sdbs : List to sdbs : List<SmallDocumentBlock> in method public extract(bigBlockSize POIFSBigBlockSize, blocks ListManagedBlock[]) : List<SmallDocumentBlock> from class org.docx4j.org.apache.poi.poifs.storage.SmallDocumentBlock",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type documents : List to documents : List<OPOIFSDocument> in method public SmallBlockTableWriter(bigBlockSize POIFSBigBlockSize, documents List<OPOIFSDocument>, root RootProperty) from class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type blocks : List to blocks : List<SmallDocumentBlock> in method public fill(bigBlockSize POIFSBigBlockSize, blocks List<SmallDocumentBlock>) : int from class org.docx4j.org.apache.poi.poifs.storage.SmallDocumentBlock",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type blocks : List to blocks : List<SmallDocumentBlock> in method public SmallDocumentBlockList(blocks List<SmallDocumentBlock>) from class org.docx4j.org.apache.poi.poifs.storage.SmallDocumentBlockList",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type com.microsoft.schemas.office.x2006.encryption.CTEncryption to org.docx4j.com.microsoft.schemas.office.x2006.encryption.CTEncryption in method public getEncryption() : org.docx4j.com.microsoft.schemas.office.x2006.encryption.CTEncryption from class org.docx4j.org.apache.poi.poifs.crypt.agile.EncryptionDocument",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type encryption : com.microsoft.schemas.office.x2006.encryption.CTEncryption to encryption : org.docx4j.com.microsoft.schemas.office.x2006.encryption.CTEncryption in method public setEncryption(encryption org.docx4j.com.microsoft.schemas.office.x2006.encryption.CTEncryption) : void from class org.docx4j.org.apache.poi.poifs.crypt.agile.EncryptionDocument",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type com.microsoft.schemas.office.x2006.encryption.CTEncryption to org.docx4j.com.microsoft.schemas.office.x2006.encryption.CTEncryption in method public addNewEncryption() : org.docx4j.com.microsoft.schemas.office.x2006.encryption.CTEncryption from class org.docx4j.org.apache.poi.poifs.crypt.agile.EncryptionDocument",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type hashAlgo : org.apache.poi.poifs.crypt.HashAlgorithm to hashAlgo : org.docx4j.org.apache.poi.poifs.crypt.HashAlgorithm in method public confirmPassword(password String, keySpec byte[], keySalt byte[], verifier byte[], verifierSalt byte[], integritySalt byte[]) : void from class org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Encryptor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type BlockWritable[] to SmallDocumentBlock[] in method public getSmallBlocks() : SmallDocumentBlock[] from class org.docx4j.org.apache.poi.poifs.filesystem.OPOIFSDocument",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List to List<SmallDocumentBlock> in method public extract(bigBlockSize POIFSBigBlockSize, blocks ListManagedBlock[]) : List<SmallDocumentBlock> from class org.docx4j.org.apache.poi.poifs.storage.SmallDocumentBlock",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type loader : LoadFromZipNG to loader : Load3 in method private load(pkgIdentifier PackageIdentifier, is InputStream, type Filetype, password String) : OpcPackage from class org.docx4j.openpackaging.packages.OpcPackage",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.crypt.EncryptionMode moved to org.docx4j.org.apache.poi.poifs.crypt.EncryptionMode",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private prepareReader(bigBlockSize POIFSBigBlockSize, blockList RawDataBlockList, list BlockList, root RootProperty, sbatStart int) : BlockAllocationTableReader extracted from public getSmallDocumentBlocks(bigBlockSize POIFSBigBlockSize, blockList RawDataBlockList, root RootProperty, sbatStart int) : BlockList in class org.apache.poi.poifs.storage.SmallBlockTableReader & moved to class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableReader",
    "comment" : "<p>org.apache.poi.poifs.storage.SmallBlockTableReader is moved to org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableReader<br />It is Extract Method, but the move class is not detected</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getSmallDocumentBlocks(bigBlockSize POIFSBigBlockSize, blockList RawDataBlockList, root RootProperty, sbatStart int) : BlockList from class org.apache.poi.poifs.storage.SmallBlockTableReader to public getSmallDocumentBlocks(bigBlockSize POIFSBigBlockSize, blockList RawDataBlockList, root RootProperty, sbatStart int) : BlockList from class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableReader",
    "comment" : "<p>org.apache.poi.poifs.storage.SmallBlockTableReader is moved to org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableReader<br />The move class is not detected</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private prepareSmallDocumentBlocks(bigBlockSize POIFSBigBlockSize, blockList RawDataBlockList, root RootProperty, sbatStart int) : BlockList extracted from public getSmallDocumentBlocks(bigBlockSize POIFSBigBlockSize, blockList RawDataBlockList, root RootProperty, sbatStart int) : BlockList in class org.apache.poi.poifs.storage.SmallBlockTableReader & moved to class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableReader",
    "comment" : "<p>org.apache.poi.poifs.storage.SmallBlockTableReader is moved to org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableReader<br />It is Extract Method, but the move class is not detected</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter type : String in method public displayBATReader(type String, batReader BlockAllocationTableReader) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSHeaderDumper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected SmallDocumentBlock(bigBlockSize POIFSBigBlockSize) from class org.docx4j.org.apache.poi.poifs.storage.SmallDocumentBlock",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.poi.poifs.storage.SmallBlockTableReader moved to org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private prepareSmallDocumentBlocks(bigBlockSize POIFSBigBlockSize, blockList RawDataBlockList, root RootProperty, sbatStart int) : BlockList extracted from public getSmallDocumentBlocks(bigBlockSize POIFSBigBlockSize, blockList RawDataBlockList, root RootProperty, sbatStart int) : BlockList in class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private prepareReader(bigBlockSize POIFSBigBlockSize, blockList RawDataBlockList, list BlockList, root RootProperty, sbatStart int) : BlockAllocationTableReader extracted from public getSmallDocumentBlocks(bigBlockSize POIFSBigBlockSize, blockList RawDataBlockList, root RootProperty, sbatStart int) : BlockList in class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private _blocks_per_big_block : int from class org.docx4j.org.apache.poi.poifs.storage.SmallDocumentBlock",
    "comment" : "<p>protected int getSmallBlocksPerBigBlock() is not called in this commit</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6242
}, {
  "id" : 1140131,
  "repository" : "https://github.com/Netflix/feign.git",
  "sha1" : "b2b4085348de32f10903970dded99fdf0376a43c",
  "url" : "https://github.com/Netflix/feign/commit/b2b4085348de32f10903970dded99fdf0376a43c",
  "author" : "Adrian Cole",
  "time" : "7/13/15 1:49 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata extracted from public parseAndValidatateMetadata(method Method) : MethodMetadata in class feign.Contract.BaseContract",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private headersFromAnnotation(targetType Class<?>, data MethodMetadata) : void extracted from public parseAndValidatateMetadata(method Method) : MethodMetadata in class feign.Contract.Default",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public configKey(targetType Class, method Method) : String extracted from public configKey(method Method) : String in class feign.Feign",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public toKeyMethodFormatsAsExpected() : void renamed to public configKeyFormatsAsExpected() : void in class feign.FeignTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public parseAndValidatateMetadata(method Method) : MethodMetadata renamed to protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata in class feign.jaxrs.JAXRSContract",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public parseAndValidatateMetadata(method Method) : MethodMetadata renamed to protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata in class feign.Contract.Default",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public parseAndValidatateMetadata(method Method) : MethodMetadata renamed to private headersFromAnnotation(targetType Class<?>, data MethodMetadata) : void in class feign.Contract.Default",
    "comment" : "headersFromAnnotation is extraced",
    "validation" : "FP",
    "detectionTools" : "RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public formParamsDoesNotSetBodyType() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public headerParamsParseIntoIndexToName() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public customExpander() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public slashAreEncodedWhenNeeded() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public httpMethods() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public bodyParamIsGeneric() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public tooManyBodies() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public customMethodWithoutPath() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public bodyWithoutParameters() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public headersOnMethodAddsContentTypeHeader() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public headersOnTypeAddsContentTypeHeader() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public withPathAndURIParam() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public pathAndQueryParams() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public bodyWithTemplate() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public formParamsParseIntoIndexToName() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public httpMethods() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public customMethodWithoutPath() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public producesAddsAcceptHeader() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public producesNada() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public producesEmpty() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public consumesAddsContentTypeHeader() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public consumesNada() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public consumesEmpty() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public bodyParamIsGeneric() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public tooManyBodies() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public emptyPathOnType() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public emptyPathParam() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public pathParamWithSpaces() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public regexPathOnMethod() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public withPathAndURIParams() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public pathAndQueryParams() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public emptyQueryParam() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public formParamsParseIntoIndexToName() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public formParamsDoesNotSetBodyType() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public emptyFormParam() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public headerParamsParseIntoIndexToName() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public emptyHeaderParam() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public pathsWithoutSlashesParseCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public pathsWithSomeSlashesParseCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public pathsWithSomeOtherSlashesParseCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public classWithRootPathParsesCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public classPathWithTrailingSlashParsesCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private parsePathOnTypeMethod(name String) : MethodMetadata inlined to public parsePathMethod() : void in class feign.jaxrs.JAXRSContractTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter declaring : Class<?> to targetType : Class<?> in method public parseAndValidatateMetadata(targetType Class<?>) : List<MethodMetadata> from class feign.Contract.BaseContract",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter declaring : Class<?> to targetType : Class<?> in method public parseAndValidatateMetadata(targetType Class<?>) : List<MethodMetadata> from class feign.Contract",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter name : String to method : String in method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>) : MethodMetadata in class feign.jaxrs.JAXRSContractTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type param : Class<?> to param : Type in method public configKey(targetType Class, method Method) : String from class feign.Feign",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type metadata : List<MethodMetadata> to result : Map<String,MethodMetadata> in method public parseAndValidatateMetadata(targetType Class<?>) : List<MethodMetadata> from class feign.Contract.BaseContract",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public parseAndValidatateMetadata(method Method) : MethodMetadata renamed to protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata in class feign.Contract.BaseContract",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public formParamsDoesNotSetBodyType() : void renamed to public simpleParameterizedBaseApi() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public slashAreEncodedWhenNeeded() : void renamed to public parameterizedBaseApi() : void in class feign.DefaultContractTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public parseAndValidatateMetadata(method Method) : MethodMetadata from class feign.Contract.BaseContract",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public configKey(method Method) : String from class feign.Feign",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter targetType : Class<?> in method protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata from class feign.Contract.Default",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter targetType : Class<?> in method protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata from class feign.jaxrs.JAXRSContract",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public simpleParameterizedBaseApi() : void from class feign.DefaultContractTest",
    "comment" : "<p>simpleParameterizedBaseApi() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public parameterizedBaseApi() : void from class feign.DefaultContractTest",
    "comment" : "<p>parameterizedBaseApi() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata from class feign.Contract.Default",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata from class feign.jaxrs.JAXRSContract",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 617
}]
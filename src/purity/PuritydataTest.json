[ {
  "id" : 1100435,
  "repository" : "https://github.com/realm/realm-java.git",
  "sha1" : "6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb",
  "url" : "https://github.com/realm/realm-java/commit/6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb",
  "author" : "Christian Melchior",
  "time" : "6/8/15 7:26 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private showStatus(txt String) : void extracted from private showStatus(realm Realm) : void in class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private showStatus(txt String) : void extracted from protected onCreate(savedInstanceState Bundle) : void in class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
    "comment" : "The method showStatus(txt String) is added in the refactored version and indeed is called inside onCreate(..) but there ",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type path3 : String to config0 : RealmConfiguration in method protected onCreate(savedInstanceState Bundle) : void in class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable realmMigration : RealmMigration in method public migrateRealm(configuration RealmConfiguration, migration RealmMigration) : void from class io.realm.Realm",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable config0 : RealmConfiguration in method protected onCreate(savedInstanceState Bundle) : void from class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable config2 : RealmConfiguration in method protected onCreate(savedInstanceState Bundle) : void from class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable config1 : RealmConfiguration in method protected onCreate(savedInstanceState Bundle) : void from class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1250
}, {
  "id" : 1100663,
  "repository" : "https://github.com/rstudio/rstudio.git",
  "sha1" : "cb49e436b9d7ee55f2531ebc2ef1863f5c9ba9fe",
  "url" : "https://github.com/rstudio/rstudio/commit/cb49e436b9d7ee55f2531ebc2ef1863f5c9ba9fe",
  "author" : "JJ Allaire",
  "time" : "6/8/15 9:53 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected setMaxHeight(maxHeight int) : void extracted from protected wrapMenuBar(menuBar ToolbarMenuBar) : Widget in class org.rstudio.core.client.widget.ScrollableToolbarPopupMenu",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2603
}, {
  "id" : 1100842,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "7ed3f273ab0caf0337c22f0b721d51829bb0c877",
  "url" : "https://github.com/JetBrains/intellij-community/commit/7ed3f273ab0caf0337c22f0b721d51829bb0c877",
  "author" : "Ekaterina Tuzova",
  "time" : "6/8/15 10:29 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private addCoursesFromStepic(result List<CourseInfo>, pageNumber int) : boolean extracted from public getCourses() : List<CourseInfo> in class com.jetbrains.edu.stepic.EduStepicConnector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable coursesContainer : CoursesContainer in method private addCoursesFromStepic(result List<CourseInfo>, pageNumber int) : boolean from class com.jetbrains.edu.stepic.EduStepicConnector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 27567
}, {
  "id" : 1100856,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "7a4dab88185553bd09e827839fdf52e870ef7088",
  "url" : "https://github.com/JetBrains/intellij-community/commit/7a4dab88185553bd09e827839fdf52e870ef7088",
  "author" : "Dmitry Batrak",
  "time" : "6/8/15 8:07 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getDataFile(name String) : File extracted from private getJarFile(name String) : VirtualFile in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getDocumentationText(sourceEditorText String) : String extracted from public testImagesInsideJavadocJar() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable useDt : boolean to anchorPresent : boolean in method protected getParseSettings(url String) : ParseSettings from class com.intellij.codeInsight.documentation.AbstractExternalFilter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Trinity<Pattern,Pattern,Boolean> to ParseSettings in method protected getParseSettings(url String) : ParseSettings from class com.intellij.codeInsight.javadoc.JavaDocExternalFilter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Trinity<Pattern,Pattern,Boolean> to ParseSettings in method protected getParseSettings(url String) : ParseSettings from class com.intellij.codeInsight.documentation.AbstractExternalFilter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type ourPackageInfoSettings : Trinity<Pattern,Pattern,Boolean> to ourPackageInfoSettings : ParseSettings in class com.intellij.codeInsight.javadoc.JavaDocExternalFilter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type settings : Trinity<Pattern,Pattern,Boolean> to settings : ParseSettings in method protected doBuildFromStream(url String, input Reader, data StringBuilder, searchForEncoding boolean, matchStart boolean) : void from class com.intellij.codeInsight.documentation.AbstractExternalFilter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable popup : JBPopup to imgMatcher : Matcher in method public testImagesInsideJavadocJar() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type popup : JBPopup to imgMatcher : Matcher in method public testImagesInsideJavadocJar() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type documentationComponent : DocumentationComponent to relativeUrl : String in method public testImagesInsideJavadocJar() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type editorPane : JEditorPane to actualText : String in method public testReferenceStyleDoesntMatchBytecodeVersion() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type document : HTMLDocument to expectedText : String in method public testReferenceStyleDoesntMatchBytecodeVersion() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getImageDataFromDocumentationComponent(documentationComponent DocumentationComponent) : byte[] renamed to public testReferenceStyleDoesntMatchBytecodeVersion() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type documentationComponent : DocumentationComponent to documentationComponent : MockDocumentationComponent in method private getDocumentationText(sourceEditorText String) : String from class com.intellij.codeInsight.JavaExternalDocumentationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 28911
}, {
  "id" : 1100868,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "7655200f58293e5a30bf8b3cbb29ebadae374564",
  "url" : "https://github.com/JetBrains/intellij-community/commit/7655200f58293e5a30bf8b3cbb29ebadae374564",
  "author" : "Egor.Ushakov",
  "time" : "6/8/15 6:06 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private checkRemap() : void extracted from public getLine() : int in class com.intellij.debugger.engine.RemappedSourcePosition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private checkRemap() : void extracted from public getOffset() : int in class com.intellij.debugger.engine.RemappedSourcePosition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter document : Document to position : XSourcePosition in method public runToCursor(position XSourcePosition, ignoreBreakpoints boolean) : void in class com.intellij.debugger.impl.DebuggerSession",
    "comment" : "<p>Parameters <span class='blob-code-inner blob-code-marker-deletion'><span class='pl-smi x x-first'>Document</span> <span class='pl-v x'>document</span><span class='x'>, </span><span class='pl-k x'>int</span> <span class='pl-v x x-last'>line</span></span> are merged into <span class='blob-code-inner blob-code-marker-addition'><span class='pl-smi x'>XSourcePosition</span> <span class='pl-v x x-last'>position</span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [document : Document, line : int] to position : XSourcePosition in method public runToCursor(position XSourcePosition, ignoreBreakpoints boolean) : void from class com.intellij.debugger.impl.DebuggerSession",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [document : Document, lineIndex : int] to position : XSourcePosition in method public addRunToCursorBreakpoint(position XSourcePosition, ignoreBreakpoints boolean) : RunToCursorBreakpoint from class com.intellij.debugger.ui.breakpoints.BreakpointManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [document : Document, lineIndex : int] to position : XSourcePosition in method public createRunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) : ResumeCommand from class com.intellij.debugger.engine.DebugProcessImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter document : Document to position : XSourcePosition in method public createRunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) : ResumeCommand in class com.intellij.debugger.engine.DebugProcessImpl",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter document : Document to position : XSourcePosition in method private RunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) in class com.intellij.debugger.engine.DebugProcessImpl.RunToCursorCommand",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter document : Document to position : XSourcePosition in method public addRunToCursorBreakpoint(position XSourcePosition, ignoreBreakpoints boolean) : RunToCursorBreakpoint in class com.intellij.debugger.ui.breakpoints.BreakpointManager",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter document : Document to classType : ReferenceType in method protected acceptLocation(debugProcess DebugProcessImpl, classType ReferenceType, loc Location) : boolean in class com.intellij.debugger.ui.breakpoints.RunToCursorBreakpoint",
    "comment" : "<p>method acceptLocation() is new</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter lineIndex : int to loc : Location in method protected acceptLocation(debugProcess DebugProcessImpl, classType ReferenceType, loc Location) : boolean in class com.intellij.debugger.ui.breakpoints.RunToCursorBreakpoint",
    "comment" : "<p>method acceptLocation() is new</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable virtualFile : VirtualFile to position : SourcePosition in method public compute() : Boolean in class com.intellij.debugger.ui.breakpoints.RunToCursorBreakpoint.acceptLocation.runReadAction",
    "comment" : "<p>method acceptLocation() is new</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable line : int to offset : int in method public getCaretPosition(project Project, context DataContext) : XSourcePosition from class com.intellij.xdebugger.impl.XDebuggerUtilImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type document : Document to position : XSourcePosition in method public createRunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) : ResumeCommand in class com.intellij.debugger.engine.DebugProcessImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type document : Document to position : XSourcePosition in method private RunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) in class com.intellij.debugger.engine.DebugProcessImpl.RunToCursorCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type document : Document to position : XSourcePosition in method public runToCursor(position XSourcePosition, ignoreBreakpoints boolean) : void in class com.intellij.debugger.impl.DebuggerSession",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type document : Document to position : XSourcePosition in method public addRunToCursorBreakpoint(position XSourcePosition, ignoreBreakpoints boolean) : RunToCursorBreakpoint in class com.intellij.debugger.ui.breakpoints.BreakpointManager",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type document : Document to classType : ReferenceType in method protected acceptLocation(debugProcess DebugProcessImpl, classType ReferenceType, loc Location) : boolean in class com.intellij.debugger.ui.breakpoints.RunToCursorBreakpoint",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to void in method private checkRemap() : void in class com.intellij.debugger.engine.RemappedSourcePosition",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOffset() : int renamed to private checkRemap() : void in class com.intellij.debugger.engine.RemappedSourcePosition",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter position : XSourcePosition in method public createRunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) : ResumeCommand from class com.intellij.debugger.engine.DebugProcessImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter position : XSourcePosition in method private RunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) from class com.intellij.debugger.engine.DebugProcessImpl.RunToCursorCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter position : XSourcePosition in method public runToCursor(position XSourcePosition, ignoreBreakpoints boolean) : void from class com.intellij.debugger.impl.DebuggerSession",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter position : XSourcePosition in method public addRunToCursorBreakpoint(position XSourcePosition, ignoreBreakpoints boolean) : RunToCursorBreakpoint from class com.intellij.debugger.ui.breakpoints.BreakpointManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [document : Document, lineIndex : int] to position : XSourcePosition in method private RunToCursorCommand(suspendContext SuspendContextImpl, position XSourcePosition, ignoreBreakpoints boolean) from class com.intellij.debugger.engine.DebugProcessImpl.RunToCursorCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable method : Method in method public getSourcePosition(location Location) : SourcePosition from class com.intellij.debugger.engine.PositionManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter ignoreBreakpoints : boolean in method public createRunToCursorCommand(suspendContext SuspendContextImpl, document Document, lineIndex int, ignoreBreakpoints boolean) : ResumeCommand from class com.intellij.debugger.engine.DebugProcessImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable breakpointManager : BreakpointManager in method private RunToCursorCommand(suspendContext SuspendContextImpl, document Document, lineIndex int, ignoreBreakpoints boolean) from class com.intellij.debugger.engine.DebugProcessImpl.RunToCursorCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable line : int in method public getCaretPosition(project Project, context DataContext) : XSourcePosition from class com.intellij.xdebugger.impl.XDebuggerUtilImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable psiFile : PsiFile in method public createRunToCursorCommand(suspendContext SuspendContextImpl, document Document, lineIndex int, ignoreBreakpoints boolean) : ResumeCommand from class com.intellij.debugger.engine.DebugProcessImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 37410
}, {
  "id" : 1101296,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "4a2247c24efee48de53ca07302b6810ab7205621",
  "url" : "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
  "author" : "Teryk Bellahsene",
  "time" : "6/8/15 11:12 AM",
  "refactorings" : [ {
    "type" : "Move Package",
    "description" : "Move Package org.sonar.server.custommeasure to org.sonar.server.measure.custom",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.persistence.CustomMeasureDao moved to org.sonar.server.measure.custom.persistence.CustomMeasureDao",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.persistence.CustomMeasureDaoTest moved to org.sonar.server.measure.custom.persistence.CustomMeasureDaoTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.persistence.CustomMeasureTesting moved to org.sonar.server.measure.custom.persistence.CustomMeasureTesting",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWs moved to org.sonar.server.measure.custom.ws.CustomMeasuresWs",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsAction moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsAction",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsModule moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsModule",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsModuleTest moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsModuleTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsTest moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.ws.DeleteAction moved to org.sonar.server.measure.custom.ws.DeleteAction",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.custommeasure.ws.DeleteActionTest moved to org.sonar.server.measure.custom.ws.DeleteActionTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3691
}, {
  "id" : 1101310,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "abbf32571232db81a5343db17a933a9ce6923b44",
  "url" : "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
  "author" : "Simon Brandhof",
  "time" : "6/8/15 10:22 AM",
  "refactorings" : [ {
    "type" : "Rename Package",
    "description" : "Rename Package org.sonar.server.notifications to org.sonar.server.notification",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.DefaultNotificationManagerTest moved to org.sonar.server.notification.DefaultNotificationManagerTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.NotificationChannelTest moved to org.sonar.server.notification.NotificationChannelTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.NotificationDispatcher moved to org.sonar.server.notification.NotificationDispatcher",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.NotificationDispatcherMetadata moved to org.sonar.server.notification.NotificationDispatcherMetadata",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.NotificationDispatcherMetadataTest moved to org.sonar.server.notification.NotificationDispatcherMetadataTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.NotificationDispatcherTest moved to org.sonar.server.notification.NotificationDispatcherTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.NotificationCenter moved to org.sonar.server.notification.NotificationCenter",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.NotificationCenterTest moved to org.sonar.server.notification.NotificationCenterTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.NotificationService moved to org.sonar.server.notification.NotificationService",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.NotificationServiceTest moved to org.sonar.server.notification.NotificationServiceTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.NotificationTest moved to org.sonar.server.notification.NotificationTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.email.AlertsEmailTemplate moved to org.sonar.server.notification.email.AlertsEmailTemplate",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.email.AlertsEmailTemplateTest moved to org.sonar.server.notification.email.AlertsEmailTemplateTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.email.EmailNotificationChannel moved to org.sonar.server.notification.email.EmailNotificationChannel",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.notifications.email.EmailNotificationChannelTest moved to org.sonar.server.notification.email.EmailNotificationChannelTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.DefaultNotificationManager moved to org.sonar.server.notification.DefaultNotificationManager",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface org.sonar.server.notification.NotificationManager from class org.sonar.server.notification.DefaultNotificationManager",
    "comment" : "NotificationManager existed in the previous revision too",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.notification.NotificationManager moved to org.sonar.server.notification.NotificationManager",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @RequiresDB in class org.sonar.core.notification.DefaultNotificationManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @ServerSide in class org.sonar.core.notification.NotificationManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @BatchSide in class org.sonar.core.notification.NotificationManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @InstantiationStrategy(InstantiationStrategy.PER_BATCH) in class org.sonar.core.notification.NotificationManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 9294
}, {
  "id" : 1102793,
  "repository" : "https://github.com/crashub/crash.git",
  "sha1" : "2801269c7e47bd6e243612654a74cee809d20959",
  "url" : "https://github.com/crashub/crash/commit/2801269c7e47bd6e243612654a74cee809d20959",
  "author" : "Oliver Trosien",
  "time" : "6/7/15 11:15 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private convertPemKeyPair(pemKeyPair PEMKeyPair) : KeyPair extracted from public loadKeys() : Iterable<KeyPair> in class org.crsh.auth.FilePublicKeyProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable keyPair : PEMKeyPair to pemKeyPair : PEMKeyPair in method private convertPemKeyPair(pemKeyPair PEMKeyPair) : KeyPair from class org.crsh.auth.FilePublicKeyProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 417
}, {
  "id" : 1102923,
  "repository" : "https://github.com/jeeeyul/eclipse-themes.git",
  "sha1" : "72f61ec9b85a740fd09d10ad711e275d2ec2e564",
  "url" : "https://github.com/jeeeyul/eclipse-themes/commit/72f61ec9b85a740fd09d10ad711e275d2ec2e564",
  "author" : "Jeeeyul Lee",
  "time" : "6/8/15 6:29 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class net.jeeeyul.eclipse.themes.test.e4app.TestView moved to net.jeeeyul.eclipse.themes.test.e4app.views.TestView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.jeeeyul.eclipse.themes.test.e4app.SplashHandler moved to net.jeeeyul.eclipse.themes.test.e4app.handlers.SplashHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.jeeeyul.eclipse.themes.test.e4app.AboutHandler moved to net.jeeeyul.eclipse.themes.test.e4app.handlers.AboutHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 313
}, {
  "id" : 1103199,
  "repository" : "https://github.com/oblac/jodd.git",
  "sha1" : "722ef9156896248ef3fbe83adde0f6ff8f46856a",
  "url" : "https://github.com/oblac/jodd/commit/722ef9156896248ef3fbe83adde0f6ff8f46856a",
  "author" : "Igor Spasi?",
  "time" : "6/8/15 6:08 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected resolveFormEncoding() : String extracted from protected formBuffer() : Buffer in class jodd.http.HttpBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @MultipartConfig in class jodd.http.Echo2Servlet",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable utf8Stirng : String in method protected formBuffer() : Buffer from class jodd.http.HttpBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1225
}, {
  "id" : 1103658,
  "repository" : "https://github.com/glyptodon/guacamole-client.git",
  "sha1" : "ebb483320d971ff4d9e947309668f5da1fcd3d23",
  "url" : "https://github.com/glyptodon/guacamole-client/commit/ebb483320d971ff4d9e947309668f5da1fcd3d23",
  "author" : "Michael Jumper",
  "time" : "6/8/15 5:46 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private CONFIRM_NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private CONFIRM_NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private logger : Logger from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private CONFIRM_NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private CONFIRM_NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private EXPIRED_PASSWORD : CredentialsInfo from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private EXPIRED_PASSWORD : CredentialsInfo from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type GuacamoleException in method public retrieveUser(credentials Credentials) : ModeledUser from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1103823,
  "repository" : "https://github.com/raphw/byte-buddy.git",
  "sha1" : "372f4ae6cebcd664e3b43cade356d1df233f6467",
  "url" : "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
  "author" : "Rafael Winterhalter",
  "time" : "6/8/15 12:07 PM",
  "refactorings" : [ {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection to public ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Retaining moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.Retaining",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public onType(typeDescription TypeDescription) : TypeVariableProxy from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to public onType(typeDescription TypeDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion, Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the method is the same since both class implement the same extends the same class | Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP. However, I would mark the entire thing as a rename class. All the methods/attributes of the removed class is being repeated (with small modifications) in the new class. Matin, Davood: FP, condidate move and rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion, Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the method is the same since both class implement the same extends the same class | Davood: same as above",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from public prepare(instrumentedType InstrumentedType) : InstrumentedType in class net.bytebuddy.implementation.FieldAccessor.ForNamedField.PreparationHandler.FieldDefiner & moved to class net.bytebuddy.dynamic.TargetType",
    "comment" : "call to resolve() with three args in old vrs call to resolve() with two args in new",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from protected resolveReturnType(instrumentedType TypeDescription) : TypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken & moved to class net.bytebuddy.dynamic.TargetType",
    "comment" : "The call to method resolve() with three params is changed to method resolve() with two params in the refactored version. Not an extract method refactroing.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from protected resolveFieldType(instrumentedType TypeDescription) : TypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.FieldToken & moved to class net.bytebuddy.dynamic.TargetType",
    "comment" : "call to resolve() with three args in old vrs call to resolve() with two args in new",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private substitutionMatcher : ElementMatcher<? super TypeDescription> from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to private substitutionMatcher : ElementMatcher<? super TypeDescription> from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion. Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the attribute is the same since both class implement the same extends the same class |  Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private substitute : TypeDescription from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to private substitute : TypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion. Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the attribute is the same since both class implement the same extends the same class | Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor moved and renamed to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable resolved : List<GenericTypeDescription> to substituted : List<GenericTypeDescription> in method public resolve(typeDescriptions List<? extends GenericTypeDescription>, substitute TypeDescription) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter typeList : List<? extends GenericTypeDescription> to typeDescriptions : List<? extends GenericTypeDescription> in method public resolve(typeDescriptions List<? extends GenericTypeDescription>, substitute TypeDescription) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private MethodToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, methodDescription MethodDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute targetType : TypeDescription to levelType : TypeDescription in class net.bytebuddy.dynamic.scaffold.inline.InlineInstrumentedTypeTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected ParameterToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, parameterDescription ParameterDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.ParameterToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private FieldToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, fieldDescription FieldDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.FieldToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type parameterTypes : List<? extends TypeDescription> to parameterTypes : List<? extends GenericTypeDescription> in method public MethodToken(parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type exceptionTypes : List<? extends TypeDescription> to exceptionTypes : List<? extends GenericTypeDescription> in method public MethodToken(parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type returnType : TypeDescription to returnType : GenericTypeDescription in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type parameterTypes : List<? extends TypeDescription> to parameterTypes : List<? extends GenericTypeDescription> in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type exceptionTypes : List<? extends TypeDescription> to exceptionTypes : List<? extends GenericTypeDescription> in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private FieldToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, fieldDescription FieldDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.FieldToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private MethodToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, methodDescription MethodDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected ParameterToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, parameterDescription ParameterDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.ParameterToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type exceptionMatcher : ElementMatcher<? super List<? extends TypeDescription>> to exceptionMatcher : ElementMatcher<? super Iterable<? extends TypeDescription>> in method public declaresException(exceptionMatcher ElementMatcher<? super Iterable<? extends TypeDescription>>) : ElementMatcher.Junction<T> from class net.bytebuddy.matcher.ElementMatchers",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method protected resolveReturnType(instrumentedType TypeDescription) : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method protected resolveParameterTypes(instrumentedType TypeDescription) : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method protected resolveExceptionTypes(instrumentedType TypeDescription) : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method public getReturnType() : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method public getParameterTypes() : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method public getExceptionTypes() : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method protected resolveFieldType(instrumentedType TypeDescription) : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.FieldToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter substitutionMatcher : ElementMatcher<? super TypeDescription> to typeDescription : GenericTypeDescription in method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription in class net.bytebuddy.dynamic.TargetType",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type returnType : TypeDescription to returnType : GenericTypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type parameterTypes : List<TypeDescription> to parameterTypes : List<GenericTypeDescription> in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type exceptionTypes : List<TypeDescription> to exceptionTypes : List<GenericTypeDescription> in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type parameterTypes : TypeList to parameterTypes : GenericTypeList in class net.bytebuddy.dynamic.DynamicTypeBuilderTokenTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type exceptionTypes : TypeList to exceptionTypes : GenericTypeList in class net.bytebuddy.dynamic.DynamicTypeBuilderTokenTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection to public ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.ForType moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForType",
    "comment" : "<p>Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getInterfacesGen() : GenericTypeList from class net.bytebuddy.description.type.TypeDescription to public getInterfacesGen() : GenericTypeList from class net.bytebuddy.description.type.generic.GenericTypeDescription",
    "comment" : "<p>These are abstract methods</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getSuperTypeGen() : GenericTypeDescription from class net.bytebuddy.description.type.TypeDescription to public getSuperTypeGen() : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription",
    "comment" : "<p>this is an abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter substitutionMatcher : ElementMatcher<? super TypeDescription> in method public resolve(typeList List<? extends GenericTypeDescription>, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public asRawType() : TypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.ForWildcardType",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected ForType(substitute TypeDescription) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected ForRawType(substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType to public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter substitutionMatcher : ElementMatcher<? super TypeDescription> in method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter substitute : TypeDescription in method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter observed : TypeDescription to typeDescription : TypeDescription in method public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to public in attribute public ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected AbstractBase(loadedTypeInitializer LoadedTypeInitializer, typeInitializer TypeInitializer, matcher ElementMatcher<? super TypeDescription>, typeVariables List<? extends GenericTypeDescription>, fieldDescriptions List<? extends FieldDescription>, methodDescriptions List<? extends MethodDescription>) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected ForMethod(substitute TypeDescription, typeVariableMethodMatcher ElementMatcher<? super MethodDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in method protected ForMethod(substitute TypeDescription, typeVariableMethodMatcher ElementMatcher<? super MethodDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in method protected ForMethod(substitute TypeDescription, typeVariableMethodMatcher ElementMatcher<? super MethodDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getSuperTypeGen() : GenericTypeDescription extracted from public next() : GenericTypeDescription in class net.bytebuddy.description.type.TypeDescription.AbstractTypeDescription.SuperTypeIterator & moved to class net.bytebuddy.description.type.generic.GenericTypeDescription.ForParameterizedType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4590
}, {
  "id" : 1103915,
  "repository" : "https://github.com/Athou/commafeed.git",
  "sha1" : "18a7bd1fd1a83b3b8d1b245e32f78c0b4443b7a7",
  "url" : "https://github.com/Athou/commafeed/commit/18a7bd1fd1a83b3b8d1b245e32f78c0b4443b7a7",
  "author" : "Athou",
  "time" : "6/8/15 10:53 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private fetch(url String) : byte[] extracted from public fetch(feed Feed) : byte[] in class com.commafeed.backend.favicon.DefaultFaviconFetcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 256
}, {
  "id" : 1103963,
  "repository" : "https://github.com/fabric8io/fabric8.git",
  "sha1" : "8127b21a220ca677c4e59961d019e7753da7ea6e",
  "url" : "https://github.com/fabric8io/fabric8/commit/8127b21a220ca677c4e59961d019e7753da7ea6e",
  "author" : "Jimmi Dyson",
  "time" : "6/8/15 8:49 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected getProbe(prefix String) : Probe extracted from protected getLivenessProbe() : Probe in class io.fabric8.maven.JsonMojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 13059
}, {
  "id" : 1104589,
  "repository" : "https://github.com/puniverse/quasar.git",
  "sha1" : "c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
  "url" : "https://github.com/puniverse/quasar/commit/c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
  "author" : "pron",
  "time" : "6/8/15 8:49 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected failedSubscribe(s Subscription) : void extracted from public onSubscribe(s Subscription) : void in class co.paralleluniverse.strands.channels.reactivestreams.ChannelSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected failedSubscribe(s Subscriber<? super T>, t Throwable) : void extracted from public subscribe(s Subscriber<? super T>) : void in class co.paralleluniverse.strands.channels.reactivestreams.ChannelPublisher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable e : Exception to t : Throwable in method protected failedSubscribe(s Subscriber<? super T>, t Throwable) : void from class co.paralleluniverse.strands.channels.reactivestreams.ChannelPublisher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : Exception to t : Throwable in method protected failedSubscribe(s Subscriber<? super T>, t Throwable) : void from class co.paralleluniverse.strands.channels.reactivestreams.ChannelPublisher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 548
}, {
  "id" : 1104637,
  "repository" : "https://github.com/dreamhead/moco.git",
  "sha1" : "55ffa2f3353c5dc77fe6b790e5e045b76a07a772",
  "url" : "https://github.com/dreamhead/moco/commit/55ffa2f3353c5dc77fe6b790e5e045b76a07a772",
  "author" : "dreamhead",
  "time" : "6/8/15 11:18 AM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected onRequestAttached(matcher RequestMatcher) : HttpResponseSetting from class com.github.dreamhead.moco.internal.ActualHttpServer to protected onRequestAttached(matcher RequestMatcher) : HttpResponseSetting from class com.github.dreamhead.moco.internal.HttpConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public redirectTo(url String) : HttpResponseSetting from class com.github.dreamhead.moco.internal.ActualHttpServer to public redirectTo(url String) : HttpResponseSetting from class com.github.dreamhead.moco.internal.HttpConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 472
}, {
  "id" : 1104750,
  "repository" : "https://github.com/vaadin/vaadin.git",
  "sha1" : "b0d5315e8ba95d099f93dc2d16339033a6525b59",
  "url" : "https://github.com/vaadin/vaadin/commit/b0d5315e8ba95d099f93dc2d16339033a6525b59",
  "author" : "Teppo Kurki",
  "time" : "6/8/15 4:19 AM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private remove() : void inlined to public testColExpandRatioIsForgotten() : void in class com.vaadin.ui.GridLayoutExpandRatioTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public testRowExpandRatioIsForgotten() : void from class com.vaadin.ui.GridLayoutExpandRatioTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3001
}, {
  "id" : 1104952,
  "repository" : "https://github.com/gradle/gradle.git",
  "sha1" : "04bcfe98dbe7b05e508559930c21379ece845732",
  "url" : "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
  "author" : "Cedric Champeau",
  "time" : "6/8/15 9:02 AM",
  "refactorings" : [ {
    "type" : "Extract Interface",
    "description" : "Extract Interface org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedArtifactsContainer from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ResolvedArtifactResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.gradle.internal.component.model.ComponentArtifactIdentifier moved to org.gradle.api.artifacts.component.ComponentArtifactIdentifier",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method private assertHasArtifacts() : void from class org.gradle.api.internal.artifacts.ResolverResults to private assertHasArtifacts() : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method private assertHasResult() : void from class org.gradle.api.internal.artifacts.ResolverResults to private assertHasResult() : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public eachResolvedProject(action Action<ResolvedProjectConfiguration>) : void from class org.gradle.api.internal.artifacts.ResolverResults to public eachResolvedProject(action Action<ResolvedProjectConfiguration>) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public failed(failure ResolveException) : void from class org.gradle.api.internal.artifacts.ResolverResults to public failed(failure ResolveException) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getArtifactsBuilder() : ResolvedArtifactsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to public getArtifactsBuilder() : ResolvedArtifactsBuilder from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getGraphResults() : ResolvedGraphResults from class org.gradle.api.internal.artifacts.ResolverResults to public getGraphResults() : ResolvedGraphResults from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getTransientConfigurationResultsBuilder() : TransientConfigurationResultsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to public getTransientConfigurationResultsBuilder() : TransientConfigurationResultsBuilder from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public resolved(resolutionResult ResolutionResult, resolvedLocalComponentsResult ResolvedLocalComponentsResult) : void from class org.gradle.api.internal.artifacts.ResolverResults to public resolved(resolutionResult ResolutionResult, resolvedLocalComponentsResult ResolvedLocalComponentsResult) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public retainState(graphResults ResolvedGraphResults, artifactResults ResolvedArtifactsBuilder, transientConfigurationResultsBuilder TransientConfigurationResultsBuilder) : void from class org.gradle.api.internal.artifacts.ResolverResults to public retainState(graphResults ResolvedGraphResults, artifactResults ResolvedArtifactsBuilder, transientConfigurationResultsBuilder TransientConfigurationResultsBuilder) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public withResolvedConfiguration(resolvedConfiguration ResolvedConfiguration) : void from class org.gradle.api.internal.artifacts.ResolverResults to public withResolvedConfiguration(resolvedConfiguration ResolvedConfiguration) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private fatalFailure : ResolveException from class org.gradle.api.internal.artifacts.ResolverResults to private fatalFailure : ResolveException from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private graphResults : ResolvedGraphResults from class org.gradle.api.internal.artifacts.ResolverResults to private graphResults : ResolvedGraphResults from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private resolutionResult : ResolutionResult from class org.gradle.api.internal.artifacts.ResolverResults to private resolutionResult : ResolutionResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private resolvedConfiguration : ResolvedConfiguration from class org.gradle.api.internal.artifacts.ResolverResults to private resolvedConfiguration : ResolvedConfiguration from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private resolvedLocalComponentsResult : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.ResolverResults to private resolvedLocalComponentsResult : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private transientConfigurationResultsBuilder : TransientConfigurationResultsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to private transientConfigurationResultsBuilder : TransientConfigurationResultsBuilder from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private artifactResults : ResolvedArtifactsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to private artifactResults : ResolvedArtifactsBuilder from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getResolutionResult() : ResolutionResult from class org.gradle.api.internal.artifacts.ResolverResults to public getResolutionResult() : ResolutionResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getResolvedConfiguration() : ResolvedConfiguration from class org.gradle.api.internal.artifacts.ResolverResults to public getResolvedConfiguration() : ResolvedConfiguration from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getResolvedLocalComponents() : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.ResolverResults to public getResolvedLocalComponents() : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public hasError() : boolean from class org.gradle.api.internal.artifacts.ResolverResults to public hasError() : boolean from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Subclass",
    "description" : "Extract Subclass org.gradle.api.internal.artifacts.DefaultResolverResults from class org.gradle.api.internal.artifacts.ResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.CacheLockingArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.CacheLockingArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(configuration ConfigurationInternal, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.DefaultConfigurationResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(configuration ConfigurationInternal, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.DefaultConfigurationResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.SelfResolvingDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(contextInternal ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.SelfResolvingDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.ShortcircuitEmptyConfigsArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.ShortcircuitEmptyConfigsArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type onResolve : Action<ResolverResults> to onResolve : Action<DefaultResolverResults> in method public resolve(resolveContext ResolveContext, onResolve Action<DefaultResolverResults>) : void from class org.gradle.language.java.plugins.JavaLanguagePlugin.DependencyResolvingClasspath",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ArtifactDependencyResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(configuration ConfigurationInternal, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ConfigurationResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(configuration ConfigurationInternal, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ConfigurationResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type cachedResolverResults : ResolverResults to cachedResolverResults : DefaultResolverResults in class org.gradle.api.internal.artifacts.configurations.DefaultConfiguration",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type resolverResults : ResolverResults to resolverResults : DefaultResolverResults in method public execute(resolverResults DefaultResolverResults) : void from class org.gradle.language.java.plugins.JavaLanguagePlugin.DependencyResolvingClasspath.assertResolved.resolve.new Action<DefaultResolverResults>",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ResolvedArtifactsBuilder to ResolvedArtifactsContainer in method public getResolvedArtifacts() : ResolvedArtifactsContainer in class org.gradle.api.internal.artifacts.ResolverResults",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type resolve : ResolvedArtifactResults to resolvedLocalComponents : ResolvedLocalComponentsResult in method public execute(resolverResults DefaultResolverResults) : void in class org.gradle.language.java.plugins.JavaLanguagePlugin.DependencyResolvingClasspath.assertResolved.resolve",
    "comment" : "<p>the functionality has changed. A for loop has been deleted.</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getArtifacts() : Set<ResolvedArtifact> from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ResolvedArtifactResults to public getArtifacts() : Set<ResolvedArtifact> from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedArtifactsContainer",
    "comment" : "<p>There is already a Extract Interface detected.&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getArtifactsBuilder() : ResolvedArtifactsBuilder renamed to public getResolvedArtifacts() : ResolvedArtifactsContainer in class org.gradle.api.internal.artifacts.ResolverResults",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public hasError() : boolean from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getResolvedConfiguration() : ResolvedConfiguration from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getResolutionResult() : ResolutionResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getResolvedLocalComponents() : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter artifactId : ComponentArtifactIdentifier in method public DefaultResolvedArtifact(owner ResolvedModuleVersion, artifact IvyArtifactName, artifactId ComponentArtifactIdentifier, artifactSource Factory<File>) from class org.gradle.api.internal.artifacts.DefaultResolvedArtifact",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Type Declaration Kind",
    "description" : "Change Type Declaration Kind class to interface in type org.gradle.api.internal.artifacts.ResolverResults",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 9978
}, {
  "id" : 1105075,
  "repository" : "https://github.com/JetBrains/MPS.git",
  "sha1" : "2bcd05a827ead109a56cb1f79a83dcd332f42888",
  "url" : "https://github.com/JetBrains/MPS/commit/2bcd05a827ead109a56cb1f79a83dcd332f42888",
  "author" : "Mihail Muhin",
  "time" : "6/7/15 7:36 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method public getLanguage(id SLanguageId, langName String, version int) : SLanguage inlined to public getLanguage(id SLanguageId, langName String) : SLanguage in class jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public getLanguageVersion() : int from class org.jetbrains.mps.openapi.language.SLanguage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Deprecated in method public addLanguage(id SLanguage, version int) : void from class jetbrains.mps.smodel.SModel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter version : int in method public LangKey(id SLanguageId, name String, version int) from class jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.LangKey",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter version : int in method protected SLanguageAdapter(language String, version int) from class jetbrains.mps.smodel.adapter.structure.language.SLanguageAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter version : int in method public getLanguage(langId SLanguageId, langName String, version int) : SLanguage from class jetbrains.mps.smodel.persistence.def.v9.IdInfoReadHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 43228
}, {
  "id" : 1105586,
  "repository" : "https://github.com/SecUpwN/Android-IMSI-Catcher-Detector.git",
  "sha1" : "e235f884f2e0bc258da77b9c80492ad33386fa86",
  "url" : "https://github.com/SecUpwN/Android-IMSI-Catcher-Detector/commit/e235f884f2e0bc258da77b9c80492ad33386fa86",
  "author" : "Marvin Arnold",
  "time" : "6/7/15 9:44 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private createCellSignalTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createOpenCellIDTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createDefaultMCCTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createLocationTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createSilentSmsTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createCellTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createEventLogTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 463
}, {
  "id" : 1105941,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "138911ce88b05039242b8d1b2bb5b7a59008f5ee",
  "url" : "https://github.com/JetBrains/intellij-community/commit/138911ce88b05039242b8d1b2bb5b7a59008f5ee",
  "author" : "Dmitry Batrak",
  "time" : "6/8/15 12:40 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public getHTMLEditorKit(noGapsBetweenParagraphs boolean) : HTMLEditorKit extracted from public getHTMLEditorKit() : HTMLEditorKit in class com.intellij.util.ui.UIUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "One condition has been added for adding one of the properties"
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable customCss : String in method public getHTMLEditorKit() : HTMLEditorKit from class com.intellij.util.ui.UIUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 15944
}, {
  "id" : 1105947,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "04397f41107bd6de41b31d45a4e8e2ed65628bbe",
  "url" : "https://github.com/JetBrains/intellij-community/commit/04397f41107bd6de41b31d45a4e8e2ed65628bbe",
  "author" : "Anna Kozlova",
  "time" : "6/8/15 11:50 AM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private checkForTestRoots(srcModule Module, testFolders Set<VirtualFile>, processed Set<Module>) : void inlined to protected checkForTestRoots(srcModule Module, testFolders Set<VirtualFile>) : void in class com.intellij.testIntegration.createTest.CreateTestAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 14649
}, {
  "id" : 1105950,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
  "url" : "https://github.com/JetBrains/intellij-community/commit/cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
  "author" : "Bas Leijdekkers",
  "time" : "6/8/15 11:39 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private canBinaryExpressionBeUnboxed(lhs PsiExpression, rhs PsiExpression) : boolean extracted from private canBeUnboxed(expression PsiExpression) : boolean in class com.siyeh.ig.migration.UnnecessaryBoxingInspection.UnnecessaryBoxingVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Functionality has been changed"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private isAnnotatedNotNull(expression PsiExpression) : boolean from class com.siyeh.ig.psiutils.SwitchUtils to private isAnnotated(expression PsiExpression, nullable boolean) : boolean from class com.siyeh.ig.psiutils.ExpressionUtils",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private isAnnotatedNullable(expression PsiExpression) : boolean from class com.siyeh.ig.psiutils.SwitchUtils to private isAnnotated(expression PsiExpression, nullable boolean) : boolean from class com.siyeh.ig.psiutils.ExpressionUtils",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nullable : boolean in method private isAnnotated(expression PsiExpression, nullable boolean) : boolean from class com.siyeh.ig.psiutils.ExpressionUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 15592
}, {
  "id" : 1105969,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "c55a8c3761e9aae9f375d312c14b1bbb9ee9c0fa",
  "url" : "https://github.com/SonarSource/sonarqube/commit/c55a8c3761e9aae9f375d312c14b1bbb9ee9c0fa",
  "author" : "Julien Lancelot",
  "time" : "6/8/15 1:21 PM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep to private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "One setter has been added and used, which changes the behavior of the moved operation"
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type now : long to now : Date in class org.sonar.server.computation.step.PersistComponentsStepTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter system2 : System2 in method public PersistComponentsStep(dbClient DbClient, treeRootHolder TreeRootHolder, reportReader BatchReportReader, dbIdsRepository DbIdsRepository, system2 System2) from class org.sonar.server.computation.step.PersistComponentsStep",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1106007,
  "repository" : "https://github.com/glyptodon/guacamole-client.git",
  "sha1" : "ce1f3d07976de31aed8f8189ec5e1a6453f4b580",
  "url" : "https://github.com/glyptodon/guacamole-client/commit/ce1f3d07976de31aed8f8189ec5e1a6453f4b580",
  "author" : "Michael Jumper",
  "time" : "6/8/15 2:17 PM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private CONFIRM_NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private CONFIRM_NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private logger : Logger from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private CONFIRM_NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private CONFIRM_NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private EXPIRED_PASSWORD : CredentialsInfo from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to private EXPIRED_PASSWORD : CredentialsInfo from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type GuacamoleException in method public retrieveUser(credentials Credentials) : ModeledUser from class org.glyptodon.guacamole.auth.jdbc.user.UserService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1106044,
  "repository" : "https://github.com/BroadleafCommerce/BroadleafCommerce.git",
  "sha1" : "4ef35268bb96bb78b2dc698fa68e7ce763cde32e",
  "url" : "https://github.com/BroadleafCommerce/BroadleafCommerce/commit/4ef35268bb96bb78b2dc698fa68e7ce763cde32e",
  "author" : "Chris Kittrell",
  "time" : "6/8/15 11:14 AM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public setColumn(column Integer) : void from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to public setColumn(column Integer) : void from class org.broadleafcommerce.openadmin.dto.FieldMetadata",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getColumn() : Integer from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to public getColumn() : Integer from class org.broadleafcommerce.openadmin.dto.FieldMetadata",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected column : Integer from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to private column : Integer from class org.broadleafcommerce.openadmin.dto.FieldMetadata",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private column : Integer from class org.broadleafcommerce.openadmin.dto.FieldMetadata",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1106247,
  "repository" : "https://github.com/datastax/java-driver.git",
  "sha1" : "1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
  "url" : "https://github.com/datastax/java-driver/commit/1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
  "author" : "olim7t",
  "time" : "6/8/15 11:19 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public setMaxRequestsPerConnection(distance HostDistance, newMaxRequests int) : PoolingOptions extracted from public setMaxSimultaneousRequestsPerHostThreshold(distance HostDistance, newMaxRequests int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Considering the Rename Attribute refactoring, this is indeed pure extract method!"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public getMaxRequestsPerConnection(distance HostDistance) : int extracted from public getMaxSimultaneousRequestsPerHostThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Considering the Rename Attribute refactoring, this is indeed pure extract method!"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public getNewConnectionThreshold(distance HostDistance) : int extracted from public getMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Rename Attribute refactoring on top of the Extract Method. Isn't it a Rename Method refactoring? Consistency check also admit this arguement."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public setNewConnectionThreshold(distance HostDistance, newValue int) : PoolingOptions extracted from public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "String Literal has been changed inside a method invocation. So, it may change the behavior of the extracted code"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter newMaxSimultaneousRequests : int to newValue : int in method public setNewConnectionThreshold(distance HostDistance, newValue int) : PoolingOptions from class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute DEFAULT_MAX_REQUESTS_PER_CONNECTION : int to DEFAULT_NEW_CONNECTION_THRESHOLD : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute DEFAULT_MAX_REQUESTS_PER_HOST_LOCAL : int to DEFAULT_MAX_REQUESTS_PER_CONNECTION_LOCAL : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute maxSimultaneousRequestsPerHostLocal : int to maxRequestsPerConnectionLocal : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute DEFAULT_MAX_REQUESTS_PER_HOST_REMOTE : int to DEFAULT_MAX_REQUESTS_PER_CONNECTION_REMOTE : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute maxSimultaneousRequestsPerHostRemote : int to maxRequestsPerConnectionRemote : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute maxSimultaneousRequestsPerConnection : int[] to newConnectionThreshold : int[] in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMinSimultaneousRequestsPerConnectionThreshold(distance HostDistance) : int renamed to public getCoreConnectionsPerHost(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMinSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMinSimultaneousRequests int) : PoolingOptions renamed to public getNewConnectionThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions renamed to public setNewConnectionThreshold(distance HostDistance, newValue int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCoreConnectionsPerHost(distance HostDistance) : int renamed to public getMaxRequestsPerConnection(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxSimultaneousRequestsPerHostThreshold(distance HostDistance, newMaxRequests int) : PoolingOptions renamed to public setMaxRequestsPerConnection(distance HostDistance, newMaxRequests int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMaxConnectionsPerHost(distance HostDistance) : int renamed to public getMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public getMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance) : int from class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions from class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public getMaxSimultaneousRequestsPerHostThreshold(distance HostDistance) : int from class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public setMaxSimultaneousRequestsPerHostThreshold(distance HostDistance, newMaxRequests int) : PoolingOptions from class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions from class com.datastax.driver.core.PoolingOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1106350,
  "repository" : "https://github.com/puniverse/quasar.git",
  "sha1" : "56d4b999e8be70be237049708f019c278c356e71",
  "url" : "https://github.com/puniverse/quasar/commit/56d4b999e8be70be237049708f019c278c356e71",
  "author" : "circlespainter",
  "time" : "6/8/15 3:49 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method public pushMethod(entry int, numSlots int, method String, sourceLine int) : void inlined to public pushMethod(entry int, numSlots int) : void in class co.paralleluniverse.fibers.Stack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method package verifySuspend(current Fiber, exc boolean) : Fiber inlined to package verifySuspend(current Fiber) : Fiber in class co.paralleluniverse.fibers.Fiber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public checkInstrumentation(exc boolean) : boolean inlined to public checkInstrumentation() : boolean in class co.paralleluniverse.fibers.Fiber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public popMethod(catchAll boolean) : void inlined to public popMethod() : void in class co.paralleluniverse.fibers.Stack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private isNonSuspendable(clazz Class, methodName String) : boolean renamed to private isSuspendable(clazz Class, methodName String) : boolean in class co.paralleluniverse.fibers.Fiber",
    "comment" : "The method is name is changed since the functionality is changed | Davood: The method is called in (almost) the same place than the older one, I mark it as TP",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private emitInstrumentedAnn() : void extracted from public visitEnd() : void in class co.paralleluniverse.fibers.instrument.InstrumentClass",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Another statement has been added"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable notInstrumented : boolean to ok : boolean in method public checkInstrumentation() : boolean from class co.paralleluniverse.fibers.Fiber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable classInstrumented : boolean in method public checkInstrumentation() : boolean from class co.paralleluniverse.fibers.Fiber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private emitInstrumentedAnn(mv MethodVisitor) : void extracted from public accept(mv MethodVisitor, hasAnnotation boolean) : void in class co.paralleluniverse.fibers.instrument.InstrumentMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Lots of added statements"
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type susp : Boolean to susp : boolean in method public collectCodeBlocks() : boolean from class co.paralleluniverse.fibers.instrument.InstrumentMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter exc : boolean to currentSteIdx : int in method private isCallSiteInstrumented(stes StackTraceElement[], currentSteIdx int, clazz Class, methodName String, lineNumber int) : Pair<Boolean,int[]> in class co.paralleluniverse.fibers.Fiber",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable methodInstrumented : boolean in method public checkInstrumentation() : boolean from class co.paralleluniverse.fibers.Fiber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type exc : boolean to currentSteIdx : int in method private isCallSiteInstrumented(stes StackTraceElement[], currentSteIdx int, clazz Class, methodName String, lineNumber int) : Pair<Boolean,int[]> in class co.paralleluniverse.fibers.Fiber",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private emitMethodCoordStringConst(mv MethodVisitor) : void renamed to private emitInstrumentedAnn(mv MethodVisitor) : void in class co.paralleluniverse.fibers.instrument.InstrumentMethod",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package verifySuspend(current Fiber, exc boolean) : Fiber renamed to private isCallSiteInstrumented(stes StackTraceElement[], currentSteIdx int, clazz Class, methodName String, lineNumber int) : Pair<Boolean,int[]> in class co.paralleluniverse.fibers.Fiber",
    "comment" : "<p>Inline Method package verifySuspend(current Fiber, exc boolean) : Fiber inlined to package verifySuspend(current Fiber) : Fiber in class co.paralleluniverse.fibers.Fiber</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"null\") in method public checkInstrumentation() : boolean from class co.paralleluniverse.fibers.Fiber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sourceName : String in method public InstrumentMethod(db MethodDatabase, sourceName String, className String, mn MethodNode) from class co.paralleluniverse.fibers.instrument.InstrumentMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter inCatchAll : boolean in method private emitPopMethod(mv MethodVisitor, inCatchAll boolean) : void from class co.paralleluniverse.fibers.instrument.InstrumentMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 970
}, {
  "id" : 1106355,
  "repository" : "https://github.com/hibernate/hibernate-orm.git",
  "sha1" : "2b89553db5081fe4e55b7b34d636d0ea2acf71c5",
  "url" : "https://github.com/hibernate/hibernate-orm/commit/2b89553db5081fe4e55b7b34d636d0ea2acf71c5",
  "author" : "Steve Ebersole",
  "time" : "6/8/15 4:24 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private categorizeAnnotatedClass(annotatedClass Class, attributeConverterManager AttributeConverterManager) : void extracted from public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) in class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Conditions have been changed!"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable annotateClass : Class to annotatedClass : Class in method public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable clazz : Class to annotatedClass : Class in method public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable annotateClass : Class to annotatedClass : Class in method private categorizeAnnotatedClass(annotatedClass Class, attributeConverterManager AttributeConverterManager) : void from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable clazz : Class to annotatedClass : Class in method private categorizeAnnotatedClass(annotatedClass Class, attributeConverterManager AttributeConverterManager) : void from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable clazz : Class in method public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
    "comment" : "<p>Extracted method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6112
}, {
  "id" : 1106365,
  "repository" : "https://github.com/apache/cassandra.git",
  "sha1" : "446e2537895c15b404a74107069a12f3fc404b15",
  "url" : "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
  "author" : "Philip Thompson",
  "time" : "6/8/15 4:41 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.hadoop.BulkRecordWriter.NullOutputHandler moved to org.apache.cassandra.hadoop.cql3.CqlBulkRecordWriter.NullOutputHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat.SplitCallable moved to org.apache.cassandra.hadoop.cql3.CqlInputFormat.SplitCallable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageFilter() : void renamed to public testCqlNativeStorageFilter() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageFullCopy() : void renamed to public testCqlNativeStorageFullCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageBagOnlyCopy() : void renamed to public testCqlNativeStorageBagOnlyCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageSingleTupleCopy() : void renamed to public testCqlNativeStorageSingleTupleCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageCounterCF() : void renamed to public testCqlNativeStorageCounterCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageJoin() : void renamed to public testCqlNativeStorageJoin() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageCompositeColumnCF() : void renamed to public testCqlNativeStorageCompositeColumnCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageSchema() : void renamed to public testCqlNativeStorageSchema() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testCassandraStorageCompositeKeyCF() : void renamed to public testCqlNativeStorageCompositeKeyCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private describeSplits(keyspace String, table String, tokenRange TokenRange, splitSize int) : Map<TokenRange,Long> from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private describeSplits(keyspace String, table String, tokenRange TokenRange, splitSize int) : Map<TokenRange,Long> from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getRangeMap(conf Configuration, keyspace String) : Map<TokenRange,Set<Host>> from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private getRangeMap(conf Configuration, keyspace String) : Map<TokenRange,Set<Host>> from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getSubSplits(keyspace String, cfName String, range TokenRange, conf Configuration) : Map<TokenRange,Long> from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private getSubSplits(keyspace String, cfName String, range TokenRange, conf Configuration) : Map<TokenRange,Long> from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private rangeToTokenRange(metadata Metadata, range Range<Token>) : TokenRange from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private rangeToTokenRange(metadata Metadata, range Range<Token>) : TokenRange from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected validateConfiguration(conf Configuration) : void from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to protected validateConfiguration(conf Configuration) : void from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getSplits(context JobContext) : List<InputSplit> from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to public getSplits(context JobContext) : List<org.apache.hadoop.mapreduce.InputSplit> from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Types has been changed, which do not change the behavior"
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private cfName : String from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private cfName : String from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private keyspace : String from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private keyspace : String from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
    "validation" : "FP",
    "detectionTools" : "RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private partitioner : IPartitioner from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private partitioner : IPartitioner from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private session : Session from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private session : Session from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public MAPRED_TASK_ID : String from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to public MAPRED_TASK_ID : String from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class WordCount to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class WordCountSetup to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.BulkRecordWriter to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private keyspace : String from class org.apache.cassandra.hadoop.ColumnFamilyRecordReader to private keyspace : String from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private cfName : String from class org.apache.cassandra.hadoop.ColumnFamilyRecordReader to private cfName : String from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.ColumnFamilyOutputFormat to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class WordCountCounters to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public QUEUE_SIZE : String from class org.apache.cassandra.hadoop.ColumnFamilyOutputFormat to public QUEUE_SIZE : String from class org.apache.cassandra.hadoop.cql3.CqlOutputFormat",
    "comment" : "<p>The source class is deleted.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public BATCH_THRESHOLD : String from class org.apache.cassandra.hadoop.ColumnFamilyOutputFormat to public BATCH_THRESHOLD : String from class org.apache.cassandra.hadoop.cql3.CqlOutputFormat",
    "comment" : "<p>The source class is deleted.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.ColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "<p>The attribute logger is moved form the superclass of ColumnFamilyInputFormat (AbstractColumnFamilyInputFormat) to CqlInputFormat and it is already detected and marked as CTP.</p><p>&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1106365/141</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.ColumnFamilyRecordReader to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getSplits(jobConf JobConf, numSplits int) : InputSplit[] from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to public getSplits(jobConf JobConf, numSplits int) : InputSplit[] from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "<p>Return type is non-qualified after the move</p><p>public org.apache.hadoop.mapred.InputSplit[] getSplits(JobConf jobConf, int numSplits) throws IOException<br />public InputSplit[] getSplits(JobConf jobConf, int numSplits) throws IOException</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "All replacements are variable types"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable got : ColumnOrSuperColumn to row : Row in method private getColumnValue(ks String, cf String, colName String, key String, validator String) : String from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Cassandra.Client to Session in method protected getClient() : Session from class org.apache.cassandra.pig.PigTestBase",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type got : ColumnOrSuperColumn to row : Row in method private getColumnValue(ks String, cf String, colName String, key String, validator String) : String from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type client : Cassandra.Client to client : Session in method protected executeCQLStatements(statements String[]) : void from class org.apache.cassandra.pig.PigTestBase",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type column : Tuple to column : Object in method public testCassandraStorageDataType() : void from class org.apache.cassandra.pig.ThriftColumnFamilyDataTypeTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type client : Cassandra.Client to client : Session in method private getColumnValue(ks String, cf String, colName String, key String, validator String) : String from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable tr : TTransport to cluster : Cluster in method protected getClient() : Session in class org.apache.cassandra.pig.PigTestBase",
    "comment" : "<p>Implementation is completely different, although method name is the same</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type org.apache.hadoop.mapred.InputSplit[] to InputSplit[] in method public getSplits(jobConf JobConf, numSplits int) : InputSplit[] from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tr : TTransport to cluster : Cluster in method protected getClient() : Session in class org.apache.cassandra.pig.PigTestBase",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cp : ColumnPath to rows : ResultSet in method private getColumnValue(ks String, cf String, colName String, key String, validator String) : String in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.ColumnFamilyInputFormat to private logger : Logger from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method protected executeCQLStatements(statements String[]) : void from class org.apache.cassandra.pig.PigTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TTransportException in method protected getClient() : Cassandra.Client from class org.apache.cassandra.pig.PigTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method public setup() : void from class org.apache.cassandra.pig.ThriftColumnFamilyDataTypeTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method public setup() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method private getColumnValue(ks String, cf String, colName String, key String, validator String) : String from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method public testCassandraStorageFullCopy() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method public testCassandraStorageSingleTupleCopy() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method public testCassandraStorageBagOnlyCopy() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type TException in method public testCassandraStorageFilter() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable key : Tuple in method public testCassandraStorageCompositeKeyCF() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type oldInputSplits : org.apache.hadoop.mapred.InputSplit[] to oldInputSplits : InputSplit[] in method public getSplits(jobConf JobConf, numSplits int) : InputSplit[] from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6589
}, {
  "id" : 1106576,
  "repository" : "https://github.com/liferay/liferay-portal.git",
  "sha1" : "59fd9e696cec5f2ed44c27422bbc426b11647321",
  "url" : "https://github.com/liferay/liferay-portal/commit/59fd9e696cec5f2ed44c27422bbc426b11647321",
  "author" : "Andrea Di Giorgi",
  "time" : "6/10/15 6:43 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public addDependency(project Project, configurationName String, group String, name String, version String, classifier String, transitive boolean) : Dependency extracted from public addDependency(project Project, configurationName String, group String, name String, version String, transitive boolean) : Dependency in class com.liferay.gradle.util.GradleUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "One extra condition has been added"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addDependency(project Project, configurationName String, group String, name String, version String, classifier String) : Dependency from class com.liferay.gradle.plugins.poshi.runner.util.GradleUtil to public addDependency(project Project, configurationName String, group String, name String, version String, classifier String, transitive boolean) : Dependency from class com.liferay.gradle.util.GradleUtil",
    "comment" : "class GradleUtil is deleted,  thus it does not total comply with the defenition of move method.",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "transitive parameter has been added and put to the dependencyNotation variable"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter transitive : boolean in method public addDependency(project Project, configurationName String, group String, name String, version String, classifier String, transitive boolean) : Dependency from class com.liferay.gradle.util.GradleUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 10416
}, {
  "id" : 1106945,
  "repository" : "https://github.com/HubSpot/Singularity.git",
  "sha1" : "45ada13b852af85e1ae0491267a0239d9bdf6f3f",
  "url" : "https://github.com/HubSpot/Singularity/commit/45ada13b852af85e1ae0491267a0239d9bdf6f3f",
  "author" : "tpetr",
  "time" : "6/10/15 4:07 PM",
  "refactorings" : [ {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private validator : SingularityValidator from class com.hubspot.singularity.resources.DeployResource to protected validator : SingularityValidator from class com.hubspot.singularity.resources.AbstractRequestResource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private validator : SingularityValidator from class com.hubspot.singularity.resources.RequestResource to protected validator : SingularityValidator from class com.hubspot.singularity.resources.AbstractRequestResource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter validator : SingularityValidator in method public AbstractRequestResource(requestManager RequestManager, deployManager DeployManager, user Optional<SingularityUser>, validator SingularityValidator) from class com.hubspot.singularity.resources.AbstractRequestResource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected validator : SingularityValidator from class com.hubspot.singularity.resources.AbstractRequestResource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1107119,
  "repository" : "https://github.com/CyanogenMod/android_frameworks_base.git",
  "sha1" : "96a2c3410f3c71d3ab20857036422f1d64c3a6d3",
  "url" : "https://github.com/CyanogenMod/android_frameworks_base/commit/96a2c3410f3c71d3ab20857036422f1d64c3a6d3",
  "author" : "Steve Kondik",
  "time" : "6/11/15 12:41 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private cleanupProximityLocked() : void extracted from private cleanupProximity() : void in class com.android.server.power.PowerManagerService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 8657
}, {
  "id" : 1107345,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "219d6ddfd1db62c11efb57e0216436874e087834",
  "url" : "https://github.com/JetBrains/intellij-community/commit/219d6ddfd1db62c11efb57e0216436874e087834",
  "author" : "Michael Golubev",
  "time" : "6/10/15 4:04 PM",
  "refactorings" : [ {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass com.intellij.remoteServer.agent.util.log.LogPipeBase from class com.intellij.remoteServer.agent.util.log.LogPipe",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass com.intellij.remoteServer.impl.runtime.log.LoggingHandlerBase from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private addAdditionalLoggingHandler(loggingHandler LoggingHandlerBase) : void extracted from public addAdditionalLog(presentableName String) : LoggingHandler in class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "myAdditionalLoggingHandlers has been changed from a Map to a list. That's why we have non-mapped add statement in the child commit. Note that we have change attribute type refactoring regarding this change."
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLoggingHandler() : LoggingHandlerImpl renamed to public getComponent() : JComponent in class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentNodeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLoggingHandler() : LoggingHandlerImpl renamed to public getComponent() : JComponent in class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentLogNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public dispose() : void from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerImpl to public dispose() : void from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable entry : Map.Entry<String,LoggingHandlerImpl> to loggingComponent : LoggingHandlerBase in method public getChildren() : Collection<? extends AbstractTreeNode> from class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentNodeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable handler : LoggingHandlerImpl to loggingHandler : LoggingHandlerBase in method private addAdditionalLoggingHandler(loggingHandler LoggingHandlerBase) : void from class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLoggingHandler() : LoggingHandlerImpl renamed to public getComponent() : JComponent in class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.LogProvidingNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type value : Pair<LoggingHandlerImpl,String> to value : LoggingHandlerBase in method public DeploymentLogNode(value LoggingHandlerBase, deploymentNode DeploymentNodeImpl) from class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentLogNode",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<? extends LogPipe> to List<? extends LogPipeBase> in method public createLogPipes(deploymentName String) : List<? extends LogPipeBase> from class com.intellij.remoteServer.agent.util.log.LogPipeProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Map<String,LoggingHandlerImpl> to List<LoggingHandlerBase> in method public getAdditionalLoggingHandlers() : List<LoggingHandlerBase> from class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LoggingHandlerImpl to JComponent in method public getComponent() : JComponent from class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentNodeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LoggingHandlerImpl to JComponent in method public getComponent() : JComponent from class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentLogNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LoggingHandlerImpl to JComponent in method public getComponent() : JComponent from class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.LogProvidingNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type handler : LoggingHandlerImpl to loggingHandler : LoggingHandlerBase in method private addAdditionalLoggingHandler(loggingHandler LoggingHandlerBase) : void from class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type entry : Map.Entry<String,LoggingHandlerImpl> to loggingComponent : LoggingHandlerBase in method public getChildren() : Collection<? extends AbstractTreeNode> from class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentNodeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type myDeploymentName2ActiveLogPipes : Map<String,List<LogPipe>> to myDeploymentName2ActiveLogPipes : Map<String,List<LogPipeBase>> in class com.intellij.remoteServer.agent.util.log.LogAgentManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pipes : ArrayList<LogPipe> to pipes : ArrayList<LogPipeBase> in method private doStartListeningLog(deploymentName String, provider LogPipeProvider) : void from class com.intellij.remoteServer.agent.util.log.LogAgentManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pipes : List<LogPipe> to pipes : List<LogPipeBase> in method public stopListeningLog(deploymentName String) : void from class com.intellij.remoteServer.agent.util.log.LogAgentManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type myAdditionalLoggingHandlers : Map<String,LoggingHandlerImpl> to myAdditionalLoggingHandlers : List<LoggingHandlerBase> in class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type result : HashMap<String,LoggingHandlerImpl> to result : List<LoggingHandlerBase> in method public getAdditionalLoggingHandlers() : List<LoggingHandlerBase> from class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable loggingHandler : LoggingHandlerImpl to logComponent : JComponent in method private onSelectionChanged() : void in class com.intellij.remoteServer.impl.runtime.ui.ServersToolWindowContent",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'> <span class='pl-smi'>JComponent</span> logComponent <span class='pl-k'>=</span> loggingHandler<span class='pl-k'>.</span>getConsole()<span class='pl-k'>.</span>getComponent();</span>&nbsp; exists in parent commit</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pipe : LogPipe to pipe : LogPipeBase in method private doStartListeningLog(deploymentName String, provider LogPipeProvider) : void from class com.intellij.remoteServer.agent.util.log.LogAgentManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pipe : LogPipe to pipe : LogPipeBase in method public stopListeningLog(deploymentName String) : void from class com.intellij.remoteServer.agent.util.log.LogAgentManager",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter presentableName : String in method public LoggingHandlerImpl(presentableName String, project Project) from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 14854
}, {
  "id" : 1107379,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "484038e916dc40bf87eca10c77889d79eca96c4d",
  "url" : "https://github.com/JetBrains/intellij-community/commit/484038e916dc40bf87eca10c77889d79eca96c4d",
  "author" : "Eugene Zhuravlev",
  "time" : "6/10/15 9:11 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public removeNodes(paths Collection<TreePath>) : void extracted from public removeNode(nodePath TreePath) : void in class com.intellij.compiler.options.AnnotationProcessorsPanel.MyTreeModel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Added other functionalities"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter parent : TreePath to path : TreePath in method public removeNode(path TreePath) : void from class com.intellij.util.ui.EditableTreeModel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 16962
}, {
  "id" : 1107713,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
  "url" : "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
  "author" : "Julien Lancelot",
  "time" : "6/10/15 9:30 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.component.SnapshotQuery moved to org.sonar.core.component.db.SnapshotQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.component.SnapshotQueryTest moved to org.sonar.core.component.db.SnapshotQueryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent renamed to org.sonar.server.computation.step.PersistComponentsStep.PersistComponentExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public not_update_create_at() : void renamed to public do_not_update_created_at_on_existing_component() : void in class org.sonar.server.computation.step.PersistComponentsStepTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public fail_to_get_periods_if_not_initialized() : void renamed to public get_periods_throws_illegal_state_exception_if_not_initialized() : void in class org.sonar.server.computation.period.PeriodsHolderImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable persisComponent : PersisComponent to persistComponentExecutor : PersistComponentExecutor in method public execute() : void from class org.sonar.server.computation.step.PersistComponentsStep",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type persisComponent : PersisComponent to persistComponentExecutor : PersistComponentExecutor in method public execute() : void from class org.sonar.server.computation.step.PersistComponentsStep",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type periods : List<Period> to periods : ImmutableList<Period> in class org.sonar.server.computation.period.PeriodsHolderImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @CheckForNull in attribute private periods : ImmutableList<Period> from class org.sonar.server.computation.period.PeriodsHolderImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter resourceCache : BatchComponentCache in method public QualityGateVerifier(qualityGate QualityGate, resourceCache BatchComponentCache, periods Periods, i18n I18n, durations Durations) from class org.sonar.batch.qualitygate.QualityGateVerifier",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter periods : Periods in method public QualityGateVerifier(qualityGate QualityGate, resourceCache BatchComponentCache, periods Periods, i18n I18n, durations Durations) from class org.sonar.batch.qualitygate.QualityGateVerifier",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public recursivelyProcessComponent(component Component, lastModule ComponentDto) : void from class org.sonar.server.computation.step.PersistComponentsStep.PersistComponentExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2491
}, {
  "id" : 1107718,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "7668c875dfa7240b1ec08eb60b42107bae1b4cd3",
  "url" : "https://github.com/SonarSource/sonarqube/commit/7668c875dfa7240b1ec08eb60b42107bae1b4cd3",
  "author" : "Julien Lancelot",
  "time" : "6/10/15 9:30 AM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep to private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "one method call has been added"
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type now : long to now : Date in class org.sonar.server.computation.step.PersistComponentsStepTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter system2 : System2 in method public PersistComponentsStep(dbClient DbClient, treeRootHolder TreeRootHolder, reportReader BatchReportReader, dbIdsRepository DbIdsRepository, system2 System2) from class org.sonar.server.computation.step.PersistComponentsStep",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2975
}, {
  "id" : 1107899,
  "repository" : "https://github.com/elastic/elasticsearch.git",
  "sha1" : "c928852d4ab7d8c744063979208709ed4429b8e9",
  "url" : "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
  "author" : "Christoph Büscher",
  "time" : "6/11/15 9:40 AM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method public newFilter(parseContext QueryParseContext, fieldPattern String, queryName String) : Query from class org.elasticsearch.index.query.ExistsQueryParser to public newFilter(parseContext QueryParseContext, fieldPattern String, queryName String) : Query from class org.elasticsearch.index.query.ExistsQueryBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public parse(parseContext QueryParseContext) : Query renamed to public fromXContent(parseContext QueryParseContext) : QueryBuilder in class org.elasticsearch.index.query.ExistsQueryParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Query to QueryBuilder in method public fromXContent(parseContext QueryParseContext) : QueryBuilder from class org.elasticsearch.index.query.ExistsQueryParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type deserializedQuery : QB to deserializedQuery : QueryBuilder in method public testSerialization() : void from class org.elasticsearch.index.query.BaseQueryTestCase",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private name : String from class org.elasticsearch.index.query.ExistsQueryBuilder",
    "comment" : "<p>public String name()<br />called in method<br />protected Query createExpectedQuery(ExistsQueryBuilder queryBuilder, QueryParseContext context)<br />core/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTest.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private queryName : String from class org.elasticsearch.index.query.ExistsQueryBuilder",
    "comment" : "<p>public String queryName()<br />called in method<br />protected void assertLuceneQuery(ExistsQueryBuilder queryBuilder, Query query, QueryParseContext context)<br />core/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTest.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private name : String from class org.elasticsearch.index.query.ExistsQueryBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3765
}, {
  "id" : 1107905,
  "repository" : "https://github.com/elastic/elasticsearch.git",
  "sha1" : "f77804dad35c13d9ff96456e85737883cf7ddd99",
  "url" : "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
  "author" : "Simon Willnauer",
  "time" : "6/11/15 6:58 AM",
  "refactorings" : [ {
    "type" : "Rename Method",
    "description" : "Rename Method public getMergePolicyProvider() : MergePolicyProvider renamed to public getMergePolicy() : MergePolicy in class org.elasticsearch.index.engine.EngineConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.elasticsearch.index.merge.policy.ElasticsearchMergePolicy moved to org.elasticsearch.index.shard.ElasticsearchMergePolicy",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.elasticsearch.index.merge.policy.FilterDocValuesProducer moved to org.elasticsearch.index.shard.FilterDocValuesProducer",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.elasticsearch.index.merge.policy.VersionFieldUpgrader moved to org.elasticsearch.index.shard.VersionFieldUpgrader",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.elasticsearch.index.merge.policy.VersionFieldUpgraderTest moved to org.elasticsearch.index.shard.VersionFieldUpgraderTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.elasticsearch.index.merge.policy.TieredMergePolicyProvider moved and renamed to org.elasticsearch.index.shard.MergePolicyConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public formatNoCFSRatio(ratio double) : String from class org.elasticsearch.index.merge.policy.AbstractMergePolicyProvider to public formatNoCFSRatio(ratio double) : String from class org.elasticsearch.index.shard.MergePolicyConfig",
    "comment" : "class AbstractMergePolicyProvider is deleted,  thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public parseNoCFSRatio(noCFSRatio String) : double from class org.elasticsearch.index.merge.policy.AbstractMergePolicyProvider to public parseNoCFSRatio(noCFSRatio String) : double from class org.elasticsearch.index.shard.MergePolicyConfig",
    "comment" : "class AbstractMergePolicyProvider is deleted,  thus it does not total comply with the defenition of move method.",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getMergePolicy() : LogByteSizeMergePolicy from class org.elasticsearch.index.merge.policy.LogByteSizeMergePolicyProvider to public getMergePolicy() : MergePolicy from class org.elasticsearch.index.engine.EngineConfig",
    "comment" : "LogByteSizeMergePolicyProvider is deleted, in class EngineConfig field mergePolicyProvider -> mergePolicy and thus the getter is renmed to  getMergePolicy ",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getMergePolicy() : LogDocMergePolicy from class org.elasticsearch.index.merge.policy.LogDocMergePolicyProvider to public getMergePolicy() : MergePolicy from class org.elasticsearch.index.engine.EngineConfig",
    "comment" : "<p>The method is a getter, the coresponding&nbsp;attribute has changed, so do the method signature.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public onRefreshSettings(settings Settings) : void from class org.elasticsearch.index.merge.policy.TieredMergePolicyProvider.ApplySettings to public onRefreshSettings(settings Settings) : void from class org.elasticsearch.index.shard.MergePolicyConfig",
    "comment" : "<p>Matin: Second Opinion. The method is renamed since the return type is changed</p><p>Davood: There are three implementations of the same interface and the method is forced to be implemented in all the implementing classes. All the classes are deleted in this commit, and the newly-added class implements the same interface and the method is identical to one of the removed ones</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Changes caused my move class refactoring"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public build(value String) : Settings from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest to public build(value String) : Settings from class org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : "Second Opinion. It is a move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTieredMergePolicySettingsUpdate() : void from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest to public testTieredMergePolicySettingsUpdate() : void from class org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : "The class in based version is deleted and the class in refactored version is added. Five methods in total are moved frome the deletd class, to the added class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public INDEX_COMPOUND_FORMAT : String from class org.elasticsearch.index.merge.policy.AbstractMergePolicyProvider to public INDEX_COMPOUND_FORMAT : String from class org.elasticsearch.index.shard.MergePolicyConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Package",
    "description" : "Move Package org.elasticsearch.index.merge.policy to org.elasticsearch.index.shard",
    "comment" : "<p>Package org.elasticsearch.index.merge.policy does not exist in child commit after refactoring</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.elasticsearch.index.merge.policy.MergePolicySettingsTest moved to org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter mergePolicyProvider : MergePolicyProvider to mergePolicy : MergePolicy in method public EngineConfig(shardId ShardId, threadPool ThreadPool, indexingService ShardIndexingService, indexSettingsService IndexSettingsService, warmer IndicesWarmer, store Store, deletionPolicy SnapshotDeletionPolicy, mergePolicy MergePolicy, mergeScheduler MergeSchedulerProvider, analyzer Analyzer, similarity Similarity, codecService CodecService, failedEngineListener Engine.FailedEngineListener, translogRecoveryPerformer TranslogRecoveryPerformer, filterCache QueryCache, filterCachingPolicy QueryCachingPolicy, translogConfig TranslogConfig) from class org.elasticsearch.index.engine.EngineConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute mergePolicyProvider : MergePolicyProvider to mergePolicy : MergePolicy in class org.elasticsearch.index.engine.EngineConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type mergePolicyProvider : MergePolicyProvider to mergePolicy : MergePolicy in method public EngineConfig(shardId ShardId, threadPool ThreadPool, indexingService ShardIndexingService, indexSettingsService IndexSettingsService, warmer IndicesWarmer, store Store, deletionPolicy SnapshotDeletionPolicy, mergePolicy MergePolicy, mergeScheduler MergeSchedulerProvider, analyzer Analyzer, similarity Similarity, codecService CodecService, failedEngineListener Engine.FailedEngineListener, translogRecoveryPerformer TranslogRecoveryPerformer, filterCache QueryCache, filterCachingPolicy QueryCachingPolicy, translogConfig TranslogConfig) from class org.elasticsearch.index.engine.EngineConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type MergePolicyProvider to MergePolicy in method public getMergePolicy() : MergePolicy from class org.elasticsearch.index.engine.EngineConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type mergePolicyProvider : MergePolicyProvider to mergePolicy : MergePolicy in class org.elasticsearch.index.engine.EngineConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute mergePolicyProvider : MergePolicyProvider to mergePolicyConfig : MergePolicyConfig in class org.elasticsearch.index.shard.IndexShard",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='x x-first'>mergePolicyProvider is replaced with mergePolicyConfig</span><span class='pl-k x'>.</span><span class='x x-last'>getMergePolicy()<br />MergePolicyConfig contains attribute <span class='pl-k'>private</span> <span class='pl-k'>final</span> <span class='pl-smi'>TieredMergePolicy</span> mergePolicy <span class='pl-k'>=</span> <span class='pl-k'>new</span> <span class='pl-smi'>TieredMergePolicy</span>();<br /></span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TieredMergePolicy to MergePolicy in method public getMergePolicy() : MergePolicy from class org.elasticsearch.index.shard.MergePolicyConfig",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type mergePolicyProvider : MergePolicyProvider to mergePolicyConfig : MergePolicyConfig in class org.elasticsearch.index.shard.IndexShard",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public build(value boolean) : Settings from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest to public build(value String) : Settings from class org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public build(value double) : Settings from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest to public build(value String) : Settings from class org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public build(value int) : Settings from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest to public build(value String) : Settings from class org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createMergePolicy() : MergePolicyProvider<?> renamed to protected createEngine(indexSettingsService IndexSettingsService, store Store, translogPath Path, mergeSchedulerProvider MergeSchedulerProvider, mergePolicy MergePolicy) : InternalEngine in class org.elasticsearch.index.engine.InternalEngineTests",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public getMergePolicy() : TieredMergePolicy from class org.elasticsearch.index.merge.policy.TieredMergePolicyProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter mergePolicy : MergePolicy in method protected createEngine(indexSettingsService IndexSettingsService, store Store, translogPath Path, mergeSchedulerProvider MergeSchedulerProvider, mergePolicy MergePolicy) : InternalEngine from class org.elasticsearch.index.engine.InternalEngineTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter mergePolicy : MergePolicy in method public config(indexSettingsService IndexSettingsService, store Store, translogPath Path, mergeSchedulerProvider MergeSchedulerProvider, mergePolicy MergePolicy) : EngineConfig from class org.elasticsearch.index.engine.InternalEngineTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter mergePolicyProvider : MergePolicyProvider in method public IndexShard(shardId ShardId, indexSettingsService IndexSettingsService, indicesLifecycle IndicesLifecycle, store Store, mergeScheduler MergeSchedulerProvider, threadPool ThreadPool, mapperService MapperService, queryParserService IndexQueryParserService, indexCache IndexCache, indexAliasesService IndexAliasesService, indexingService ShardIndexingService, getService ShardGetService, searchService ShardSearchService, shardWarmerService ShardIndexWarmerService, shardFilterCache ShardFilterCache, shardFieldData ShardFieldData, percolatorQueriesRegistry PercolatorQueriesRegistry, shardPercolateService ShardPercolateService, codecService CodecService, termVectorsService ShardTermVectorsService, indexFieldDataService IndexFieldDataService, indexService IndexService, shardSuggestService ShardSuggestService, shardQueryCache ShardQueryCache, shardBitsetFilterCache ShardBitsetFilterCache, warmer IndicesWarmer, deletionPolicy SnapshotDeletionPolicy, similarityService SimilarityService, mergePolicyProvider MergePolicyProvider, factory EngineFactory, clusterService ClusterService, nodeEnv NodeEnvironment, path ShardPath, bigArrays BigArrays) from class org.elasticsearch.index.shard.IndexShard",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter mergePolicyProvider : MergePolicyProvider in method public ShadowIndexShard(shardId ShardId, indexSettingsService IndexSettingsService, indicesLifecycle IndicesLifecycle, store Store, mergeScheduler MergeSchedulerProvider, threadPool ThreadPool, mapperService MapperService, queryParserService IndexQueryParserService, indexCache IndexCache, indexAliasesService IndexAliasesService, indexingService ShardIndexingService, getService ShardGetService, searchService ShardSearchService, shardWarmerService ShardIndexWarmerService, shardFilterCache ShardFilterCache, shardFieldData ShardFieldData, percolatorQueriesRegistry PercolatorQueriesRegistry, shardPercolateService ShardPercolateService, codecService CodecService, termVectorsService ShardTermVectorsService, indexFieldDataService IndexFieldDataService, indexService IndexService, shardSuggestService ShardSuggestService, shardQueryCache ShardQueryCache, shardBitsetFilterCache ShardBitsetFilterCache, warmer IndicesWarmer, deletionPolicy SnapshotDeletionPolicy, similarityService SimilarityService, mergePolicyProvider MergePolicyProvider, factory EngineFactory, clusterService ClusterService, nodeEnv NodeEnvironment, path ShardPath, bigArrays BigArrays) from class org.elasticsearch.index.shard.ShadowIndexShard",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type IOException in method public testForceMerge() : void from class org.elasticsearch.index.engine.InternalEngineTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier final in class org.elasticsearch.index.shard.MergePolicyConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type mp : TieredMergePolicyProvider to mp : MergePolicyConfig in method public testTieredMergePolicySettingsUpdate() : void from class org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type mp : TieredMergePolicyProvider to mp : MergePolicyConfig in method public testUpdateSettings() : void from class org.elasticsearch.index.shard.MergePolicySettingsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable service : IndexSettingsService in method public testCompoundFileSettings() : void from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 8239
}, {
  "id" : 1107917,
  "repository" : "https://github.com/elastic/elasticsearch.git",
  "sha1" : "ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
  "url" : "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
  "author" : "javanna",
  "time" : "6/10/15 7:46 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected buildFQuery(builder XContentBuilder, params Params) : void extracted from protected doXContent(builder XContentBuilder, params Params) : void in class org.elasticsearch.index.query.QueryFilterBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "The string value of FQUERY_NAME is the same as the FQueryFilterBuilder.NAME ultimately"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter value : long[] to values : long[] in method public writeLongArray(values long[]) : void from class org.elasticsearch.common.io.stream.StreamOutput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter value : float[] to values : float[] in method public writeFloatArray(values float[]) : void from class org.elasticsearch.common.io.stream.StreamOutput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter value : double[] to values : double[] in method public writeDoubleArray(values double[]) : void from class org.elasticsearch.common.io.stream.StreamOutput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter value : int[] to values : int[] in method public writeIntArray(values int[]) : void from class org.elasticsearch.common.io.stream.StreamOutput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type QueryFilterBuilder to FQueryFilterBuilder in method public getBuilderPrototype() : FQueryFilterBuilder from class org.elasticsearch.index.query.FQueryFilterParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected doXContent(builder XContentBuilder, params Params) : void renamed to protected buildFQuery(builder XContentBuilder, params Params) : void in class org.elasticsearch.index.query.QueryFilterBuilder",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public readMap() : Map<String,Object> from class org.elasticsearch.common.io.stream.StreamInput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public IndicesQueriesRegistry(settings Settings, injectedQueryParsers Set<QueryParser>, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.indices.query.IndicesQueriesRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public LocalTransport(settings Settings, threadPool ThreadPool, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.local.LocalTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public NettyTransport(settings Settings, threadPool ThreadPool, networkService NetworkService, bigArrays BigArrays, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.netty.NettyTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public ServerChannelPipelineFactory(nettyTransport NettyTransport, name String, settings Settings, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.netty.NettyTransport.ServerChannelPipelineFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public CountingAssertingLocalTransport(settings Settings, threadPool ThreadPool, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.plugins.PluggableTransportModuleTests.CountingAssertingLocalTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public AssertingLocalTransport(settings Settings, threadPool ThreadPool, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.test.transport.AssertingLocalTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method protected build(settings Settings, version Version, namedWriteableRegistry NamedWriteableRegistry) : MockTransportService from class org.elasticsearch.transport.local.SimpleLocalTransportTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public ExceptionThrowingNettyTransport(settings Settings, threadPool ThreadPool, networkService NetworkService, bigArrays BigArrays, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.netty.NettyTransportTests.ExceptionThrowingNettyTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public ErrorPipelineFactory(exceptionThrowingNettyTransport ExceptionThrowingNettyTransport, name String, groupSettings Settings, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.netty.NettyTransportTests.ExceptionThrowingNettyTransport.ErrorPipelineFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method protected build(settings Settings, version Version, namedWriteableRegistry NamedWriteableRegistry) : MockTransportService from class org.elasticsearch.transport.netty.SimpleNettyTransportTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method protected abstract build(settings Settings, version Version, namedWriteableRegistry NamedWriteableRegistry) : MockTransportService from class org.elasticsearch.transport.AbstractSimpleTransportTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Annotation",
    "description" : "Add Variable Annotation @SuppressWarnings(\"unchecked\") in variable map : Map<String,Object> in method public writeGenericValue(value Object) : void from class org.elasticsearch.common.io.stream.StreamOutput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 7383
}, {
  "id" : 1108190,
  "repository" : "https://github.com/kuujo/copycat.git",
  "sha1" : "19a49f8f36b2f6d82534dc13504d672e41a3a8d1",
  "url" : "https://github.com/kuujo/copycat/commit/19a49f8f36b2f6d82534dc13504d672e41a3a8d1",
  "author" : "Jordan Halterman",
  "time" : "6/10/15 6:01 AM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private doAppendEntries(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private doAppendEntries(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private doCheckPreviousEntry(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private doCheckPreviousEntry(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private handleAppend(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private handleAppend(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private applyCommits(commitIndex long) : CompletableFuture<Void> from class net.kuujo.copycat.raft.state.ActiveState to private applyCommits(commitIndex long) : CompletableFuture<Void> from class net.kuujo.copycat.raft.state.PassiveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private applyIndex(globalIndex long) : void from class net.kuujo.copycat.raft.state.ActiveState to private applyIndex(globalIndex long) : void from class net.kuujo.copycat.raft.state.PassiveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected transition : boolean from class net.kuujo.copycat.raft.state.ActiveState to protected transition : boolean from class net.kuujo.copycat.raft.state.PassiveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type CompletableFuture<RaftState> to void in method protected transition(state RaftState) : void from class net.kuujo.copycat.raft.state.ActiveState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected transition(state RaftState) : void from class net.kuujo.copycat.raft.state.ActiveState",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter request : AppendRequest in method protected append(request AppendRequest) : CompletableFuture<AppendResponse> from class net.kuujo.copycat.raft.state.PassiveState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 858
}, {
  "id" : 1108762,
  "repository" : "https://github.com/raphw/byte-buddy.git",
  "sha1" : "f1dfb66a368760e77094ac1e3860b332cf0e4eb5",
  "url" : "https://github.com/raphw/byte-buddy/commit/f1dfb66a368760e77094ac1e3860b332cf0e4eb5",
  "author" : "Rafael Winterhalter",
  "time" : "6/10/15 5:31 AM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.Explicit to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable.OfLegacyVmMethod to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable.OfLegacyVmConstructor to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1005
}, {
  "id" : 1109077,
  "repository" : "https://github.com/FasterXML/jackson-databind.git",
  "sha1" : "44dea1f292933192ea5287d9b3e14a7daaef3c0f",
  "url" : "https://github.com/FasterXML/jackson-databind/commit/44dea1f292933192ea5287d9b3e14a7daaef3c0f",
  "author" : "Cowtowncoder",
  "time" : "6/10/15 8:33 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class com.fasterxml.jackson.failing.TestExternalTypeId222.Issue222BeanB moved to com.fasterxml.jackson.databind.jsontype.TestExternalId.Issue222BeanB",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.fasterxml.jackson.failing.TestExternalTypeId222.Issue222Bean moved to com.fasterxml.jackson.databind.jsontype.TestExternalId.Issue222Bean",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public testIssue222() : void from class com.fasterxml.jackson.failing.TestExternalTypeId222 to public testExternalTypeWithProp222() : void from class com.fasterxml.jackson.databind.jsontype.TestExternalId",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute protected _typeSerializer : TypeSerializer from class com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
    "comment" : "<p>public void assignTypeSerializer(TypeSerializer typeSer)<br />is called in<br />protected List&lt;BeanPropertyWriter&gt; removeOverlappingTypeIds()<br />src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute protected _typeSerializer : TypeSerializer from class com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1439
}, {
  "id" : 1109425,
  "repository" : "https://github.com/Alluxio/alluxio.git",
  "sha1" : "6d10621465c0e6ae81ad8d240d70a55c72caeea6",
  "url" : "https://github.com/Alluxio/alluxio/commit/6d10621465c0e6ae81ad8d240d70a55c72caeea6",
  "author" : "Bin Fan",
  "time" : "6/10/15 9:21 PM",
  "refactorings" : [ {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute protected mBlockSize : long from class tachyon.worker.block.meta.BlockMetaBase to private mBlockSize : long from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getBlockSize() : long from class tachyon.worker.block.meta.BlockMetaBase to public getBlockSize() : long from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter blockSize : long to initialBlockSize : long in method public TempBlockMeta(userId long, blockId long, initialBlockSize long, dir StorageDir) from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public getBlockSize() : long from class tachyon.worker.block.meta.BlockMetaBase to public getBlockSize() : long from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getBlockSize() : long from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter blockSize : long in method public BlockMetaBase(blockId long, blockSize long, dir StorageDir) from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private mBlockSize : long from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private mUserId : long from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : "<p>public long getUserId() is not called</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute protected mDir : StorageDir from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private mBlockSize : long from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1109449,
  "repository" : "https://github.com/Alluxio/alluxio.git",
  "sha1" : "0ba343846f21649e29ffc600f30a7f3e463fb24c",
  "url" : "https://github.com/Alluxio/alluxio/commit/0ba343846f21649e29ffc600f30a7f3e463fb24c",
  "author" : "Bin Fan",
  "time" : "6/10/15 3:33 AM",
  "refactorings" : [ {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass tachyon.worker.block.meta.BlockMetaBase from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass tachyon.worker.block.meta.BlockMetaBase from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getParentDir() : StorageDir from class tachyon.worker.block.meta.BlockMeta to public getParentDir() : StorageDir from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getBlockId() : long from class tachyon.worker.block.meta.BlockMeta to public getBlockId() : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getBlockSize() : long from class tachyon.worker.block.meta.BlockMeta to public getBlockSize() : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private mDir : StorageDir from class tachyon.worker.block.meta.BlockMeta to protected mDir : StorageDir from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private mBlockSize : long from class tachyon.worker.block.meta.BlockMeta to protected mBlockSize : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private mBlockId : long from class tachyon.worker.block.meta.BlockMeta to protected mBlockId : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public getTmpPath(userId long) : String from class tachyon.worker.block.meta.BlockMeta to public getPath() : String from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getPath() : String from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getPath() : String from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter userId : long in method public getTmpPath(userId long) : String from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected mBlockId : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected mBlockSize : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected mDir : StorageDir from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1110072,
  "repository" : "https://github.com/orientechnologies/orientdb.git",
  "sha1" : "b40adc25008b6f608ee3eb3422c8884fff987337",
  "url" : "https://github.com/orientechnologies/orientdb/commit/b40adc25008b6f608ee3eb3422c8884fff987337",
  "author" : "lvca",
  "time" : "6/15/15 7:43 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected readSynchResult(network OChannelBinaryAsynchClient, database ODatabaseDocument) : Object extracted from public command(iCommand OCommandRequestText) : Object in class com.orientechnologies.orient.client.remote.OStorageRemote",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Hard to catch. -Default- implementation in switch case has been changed. Note that this is because of the final variable declaration inside the extracted method. It should be whether initialized or assign value in each case, consisting default."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public serializeValue(listener OAbstractCommandResultListener, result Object) : void extracted from private indexGet() : void in class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "It may contain a bug fix - null check"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public serializeValue(listener OAbstractCommandResultListener, result Object) : void extracted from protected command() : void in class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "It may contain a bug fix - null check"
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ODatabase<ORecord> to ODatabaseDocumentInternal in method protected getDatabase() : ODatabaseDocumentInternal from class com.orientechnologies.orient.core.index.OIndexRemote",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type REQUEST_INDEX_GET : int to REQUEST_INDEX_GET : byte in class com.orientechnologies.orient.enterprise.channel.binary.OChannelBinaryProtocol",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type REQUEST_INDEX_PUT : int to REQUEST_INDEX_PUT : byte in class com.orientechnologies.orient.enterprise.channel.binary.OChannelBinaryProtocol",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type REQUEST_INDEX_REMOVE : int to REQUEST_INDEX_REMOVE : byte in class com.orientechnologies.orient.enterprise.channel.binary.OChannelBinaryProtocol",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable doc : ODocument in method public command(iCommand OCommandRequestText) : Object from class com.orientechnologies.orient.client.remote.OStorageRemote",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable token : Integer in method public command(iCommand OCommandRequestText) : Object from class com.orientechnologies.orient.client.remote.OStorageRemote",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable unsubscribe : Boolean in method public command(iCommand OCommandRequestText) : Object from class com.orientechnologies.orient.client.remote.OStorageRemote",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable index : OIndex<?> in method private indexPut() : void from class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable index : OIndex<?> in method private indexRemove() : void from class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable res : boolean in method private indexRemove() : void from class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable index : OIndex<?> in method private indexGet() : void from class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable result : Object in method protected readSynchResult(network OChannelBinaryAsynchClient, database ODatabaseDocument) : Object from class com.orientechnologies.orient.client.remote.OStorageRemote",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable value : ORecordId in method private indexPut() : void from class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4630
}, {
  "id" : 1110153,
  "repository" : "https://github.com/VoltDB/voltdb.git",
  "sha1" : "e9efc045fbc6fa893c66a03b72b7eedb388cf96c",
  "url" : "https://github.com/VoltDB/voltdb/commit/e9efc045fbc6fa893c66a03b72b7eedb388cf96c",
  "author" : "wweiss",
  "time" : "6/15/15 12:27 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public setMpUniqueIdListener(listener DurableMpUniqueIdListener) : void extracted from public setMpDRGateway(mpGateway PartitionDRGateway) : void in class org.voltdb.iv2.SpScheduler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Condition statement has been changed completely"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter task : TransactionTask to listener : DurableSpUniqueIdListener in method public setSpUniqueIdListener(listener DurableSpUniqueIdListener) : void in class org.voltdb.iv2.SpScheduler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter pendingTask : TransactionTask to listener : DurableMpUniqueIdListener in method public setMpUniqueIdListener(listener DurableMpUniqueIdListener) : void in class org.voltdb.iv2.SpScheduler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter lastMpUniqueId : long to uniqueId : long in method public lastSpUniqueIdMadeDurable(uniqueId long) : void in class org.voltdb.iv2.SpScheduler.DurableSpUniqueIdListener",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type task : TransactionTask to listener : DurableSpUniqueIdListener in method public setSpUniqueIdListener(listener DurableSpUniqueIdListener) : void in class org.voltdb.iv2.SpScheduler",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type pendingTask : TransactionTask to listener : DurableMpUniqueIdListener in method public setMpUniqueIdListener(listener DurableMpUniqueIdListener) : void in class org.voltdb.iv2.SpScheduler",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public uniqueIdDurable(uniqueId long) : void renamed to public lastMpUniqueIdMadeDurable(uniqueId long) : void in class org.voltdb.PartitionDRGateway",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public lastMpUniqueIdMadeDurable(uniqueId long) : void from class org.voltdb.PartitionDRGateway",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public offerPendingMPTasks(txnId long) : void from class org.voltdb.iv2.SpScheduler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1110155,
  "repository" : "https://github.com/VoltDB/voltdb.git",
  "sha1" : "669e0722324965e3c99f29685517ac24d4ff2848",
  "url" : "https://github.com/VoltDB/voltdb/commit/669e0722324965e3c99f29685517ac24d4ff2848",
  "author" : "Manju James",
  "time" : "6/15/15 10:56 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public getClient(timeout long, scheme ClientAuthHashScheme, useAdmin boolean) : Client extracted from public getClient(timeout long, scheme ClientAuthHashScheme) : Client in class org.voltdb.regressionsuites.RegressionSuite",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Added functionality - if-else condition"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private runPausedMode(isAdmin boolean) : void extracted from public testPausedMode() : void in class org.voltdb.TestClientInterface",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Added some asserts"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public makeStoredProcAdHocPlannerWork(replySiteId long, sql String, userParams Object[], singlePartition boolean, context CatalogContext, completionHandler AsyncCompilerWorkCompletionHandler, isAdmin boolean) : AdHocPlannerWork extracted from public makeStoredProcAdHocPlannerWork(replySiteId long, sql String, userParams Object[], singlePartition boolean, context CatalogContext, completionHandler AsyncCompilerWorkCompletionHandler) : AdHocPlannerWork in class org.voltdb.compiler.AdHocPlannerWork",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public mockStatementBatch(replySiteId long, sql String, extractedValues Object[], paramTypes VoltType[], userParams Object[], partitionParamIndex int, catalogHash byte[], readOnly boolean, isAdmin boolean) : AdHocPlannedStmtBatch extracted from public mockStatementBatch(replySiteId long, sql String, extractedValues Object[], paramTypes VoltType[], userParams Object[], partitionParamIndex int, catalogHash byte[]) : AdHocPlannedStmtBatch in class org.voltdb.compiler.AdHocPlannedStmtBatch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "One parameter has been added to the method call -mockStatementBatch-, which itself has been extracted during this commit. So, like parametrize variable, extract method can cause this behavior."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getListenerAddress(hostId int, useAdmin boolean) : String extracted from public getListenerAddress(hostId int) : String in class org.voltdb.regressionsuites.LocalCluster",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "The functionality of the extracted code has been changed due to the added if-else condition. But, if we check the extracted method invocations, the result would be the same. So, what would be the purity state of this refactoring?"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private allowPauseModeExecution(handler ClientInputHandler, procedure Procedure, invocation StoredProcedureInvocation) : boolean extracted from package handleRead(buf ByteBuffer, handler ClientInputHandler, ccxn Connection) : ClientResponseImpl in class org.voltdb.ClientInterface",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private writeResponseToConnection(response ClientResponseImpl) : void extracted from public run() : void in class org.voltdb.ClientInterface.processFinishedCompilerWork.ft.create.new Runnable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1110240,
  "repository" : "https://github.com/datastax/java-driver.git",
  "sha1" : "d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
  "url" : "https://github.com/datastax/java-driver/commit/d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
  "author" : "Kevin Gallardo",
  "time" : "6/15/15 10:45 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method package getPreparedQuery(type QueryType, columns Set<ColumnMapper<?>>, options Option...) : PreparedStatement extracted from package getPreparedQuery(type QueryType, options Option...) : PreparedStatement in class com.datastax.driver.mapping.Mapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "???"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter entity : T to options : Option in method package getPreparedQuery(type QueryType, options Option...) : PreparedStatement in class com.datastax.driver.mapping.Mapper",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type entity : T to options : Option in method package getPreparedQuery(type QueryType, options Option...) : PreparedStatement in class com.datastax.driver.mapping.Mapper",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Merge Variable",
    "description" : "Merge Variable [value : Object, cm : ColumnMapper<T>] to entry : Map.Entry<ColumnMapper<?>,Object> in method public saveQuery(entity T, options Option...) : Statement from class com.datastax.driver.mapping.Mapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter strategyType : StrategyType in method protected EntityMapper(entityClass Class<T>, keyspace String, table String, writeConsistency ConsistencyLevel, readConsistency ConsistencyLevel, strategyType StrategyType) from class com.datastax.driver.mapping.EntityMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter columns : Set<ColumnMapper<?>> in method package makePreparedQueryString(table TableMetadata, mapper EntityMapper<?>, columns Set<ColumnMapper<?>>, options Mapper.Option...) : String from class com.datastax.driver.mapping.QueryType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter strategyType : StrategyType in method private ReflectionMapper(entityClass Class<T>, keyspace String, table String, writeConsistency ConsistencyLevel, readConsistency ConsistencyLevel, strategyType StrategyType) from class com.datastax.driver.mapping.ReflectionMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter strategyType : StrategyType in method public create(entityClass Class<T>, keyspace String, table String, writeConsistency ConsistencyLevel, readConsistency ConsistencyLevel, strategyType StrategyType) : EntityMapper<T> from class com.datastax.driver.mapping.ReflectionMapper.ReflectionFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter strategyType : StrategyType in method public create(entityClass Class<T>, keyspace String, table String, writeConsistency ConsistencyLevel, readConsistency ConsistencyLevel, strategyType StrategyType) : EntityMapper<T> from class com.datastax.driver.mapping.EntityMapper.Factory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1110245,
  "repository" : "https://github.com/datastax/java-driver.git",
  "sha1" : "3a0603f8f778be3219a5a0f3a7845cda65f1e172",
  "url" : "https://github.com/datastax/java-driver/commit/3a0603f8f778be3219a5a0f3a7845cda65f1e172",
  "author" : "Alexandre Dutra",
  "time" : "6/15/15 4:48 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public values(names List<String>, values List<Object>) : Insert extracted from public values(names String[], values Object[]) : Insert in class com.datastax.driver.core.querybuilder.Insert",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Array implementation has been changed to List implementation. So, it's completely pure!"
    }
  } ],
  "refDiffExecutionTime" : 518
}, {
  "id" : 1110272,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "3972b9b3d4e03bdb5e62dfa663e3e0a1871e3c9f",
  "url" : "https://github.com/JetBrains/intellij-community/commit/3972b9b3d4e03bdb5e62dfa663e3e0a1871e3c9f",
  "author" : "Yaroslav Lepenkin",
  "time" : "6/15/15 9:02 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class com.intellij.psi.codeStyle.autodetect.NewLineBlocksIterator moved to com.intellij.psi.formatter.common.NewLineBlocksIterator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 15855
}, {
  "id" : 1110282,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "d71154ed21e2d5c65bb0ddb000bcb04ca5735048",
  "url" : "https://github.com/JetBrains/intellij-community/commit/d71154ed21e2d5c65bb0ddb000bcb04ca5735048",
  "author" : "Vladimir Krivosheev",
  "time" : "6/15/15 5:59 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public canonicalizePath(url String, baseUrl Url, baseUrlIsFile boolean) : String extracted from protected canonicalizeUrl(url String, baseUrl Url, trimFileScheme boolean, sourceIndex int, baseUrlIsFile boolean) : Url in class org.jetbrains.debugger.sourcemap.SourceResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Return expression has been added within the Mechanics of Extract Method Refactoring"
    }
  } ],
  "refDiffExecutionTime" : 15112
}, {
  "id" : 1110287,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "a97341973c3b683d62d1422e5404ed5c7ccf45f8",
  "url" : "https://github.com/JetBrains/intellij-community/commit/a97341973c3b683d62d1422e5404ed5c7ccf45f8",
  "author" : "Anna Kozlova",
  "time" : "6/15/15 3:56 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private setNewName(newText String) : PsiElement extracted from public bindToElement(element PsiElement) : PsiElement in class org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "New functionalities has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private setNewName(newText String) : PsiElement extracted from public handleElementRename(newElementName String) : PsiElement in class org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "New functionalities has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getOldName() : String extracted from public handleElementRename(newElementName String) : PsiElement in class org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Else condition has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getOldName() : String extracted from public bindToElement(element PsiElement) : PsiElement in class org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 15192
}, {
  "id" : 1110654,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "06fa57185cba7304c69a7d6c792a15f2632e3e02",
  "url" : "https://github.com/SonarSource/sonarqube/commit/06fa57185cba7304c69a7d6c792a15f2632e3e02",
  "author" : "Sébastien Lesaint",
  "time" : "6/15/15 8:07 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.server.computation.measure.Measure.QualityGateStatus moved to org.sonar.server.computation.measure.QualityGateStatus",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type rawStatus : Measure.QualityGateStatus to rawStatus : QualityGateStatus in method private checkQualityGateStatusChange(project Component, metric Metric, rawStatus QualityGateStatus) : void from class org.sonar.server.computation.step.QualityGateEventsStep",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type rawStatus : Measure.QualityGateStatus to rawStatus : QualityGateStatus in method private checkNewQualityGate(project Component, rawStatus QualityGateStatus) : void from class org.sonar.server.computation.step.QualityGateEventsStep",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type rawStatus : Measure.QualityGateStatus to rawStatus : QualityGateStatus in method private notifyUsers(project Component, label String, rawStatus QualityGateStatus, isNewAlert boolean) : void from class org.sonar.server.computation.step.QualityGateEventsStep",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type newQualityGateStatus : Measure.QualityGateStatus to newQualityGateStatus : QualityGateStatus in method private verify_event_created_if_base_ALERT_STATUS_measure_exists_and_status_has_changed(previousAlertStatus Measure.Level, newQualityGateStatus QualityGateStatus, expectedLabel String) : void from class org.sonar.server.computation.step.QualityGateEventsStepTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type baseStatus : Measure.QualityGateStatus to baseStatus : QualityGateStatus in method private checkQualityGateStatusChange(project Component, metric Metric, rawStatus QualityGateStatus) : void from class org.sonar.server.computation.step.QualityGateEventsStep",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type someStatus : Measure.QualityGateStatus to someStatus : QualityGateStatus in method public getAlertStatus_returns_argument_from_setAlertStatus() : void from class org.sonar.server.computation.measure.MeasureImplTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type OK_QUALITY_GATE_STATUS : Measure.QualityGateStatus to OK_QUALITY_GATE_STATUS : QualityGateStatus in class org.sonar.server.computation.step.QualityGateEventsStepTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type WARN_QUALITY_GATE_STATUS : Measure.QualityGateStatus to WARN_QUALITY_GATE_STATUS : QualityGateStatus in class org.sonar.server.computation.step.QualityGateEventsStepTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type ERROR_QUALITY_GATE_STATUS : Measure.QualityGateStatus to ERROR_QUALITY_GATE_STATUS : QualityGateStatus in class org.sonar.server.computation.step.QualityGateEventsStepTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type someQGStatus : Measure.QualityGateStatus to someQGStatus : QualityGateStatus in method public no_event_created_if_no_base_ALERT_STATUS_and_raw_is_OK() : void from class org.sonar.server.computation.step.QualityGateEventsStepTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type someQGStatus : Measure.QualityGateStatus to someQGStatus : QualityGateStatus in method private verify_event_created_if_no_base_ALERT_STATUS_measure(rawAlterStatus Measure.Level, expectedLabel String) : void from class org.sonar.server.computation.step.QualityGateEventsStepTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type status : Level to status : Measure.Level in class org.sonar.server.computation.measure.QualityGateStatus",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type status : Level to status : Measure.Level in method public QualityGateStatus(status Measure.Level) from class org.sonar.server.computation.measure.QualityGateStatus",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type status : Level to status : Measure.Level in method public QualityGateStatus(status Measure.Level, text String) from class org.sonar.server.computation.measure.QualityGateStatus",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Level to Measure.Level in method public getStatus() : Measure.Level from class org.sonar.server.computation.measure.QualityGateStatus",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.sonar.server.computation.measure.QualityGateStatus",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3190
}, {
  "id" : 1111161,
  "repository" : "https://github.com/undertow-io/undertow.git",
  "sha1" : "d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
  "url" : "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
  "author" : "Stuart Douglas",
  "time" : "6/15/15 6:06 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public addPredicatedHandler(predicate Predicate, handlerWrapper HandlerWrapper, elseBranch HandlerWrapper) : PredicatesHandler extracted from public addPredicatedHandler(predicate Predicate, handlerWrapper HandlerWrapper) : PredicatesHandler in class io.undertow.predicate.PredicatesHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "elsebranch has been added to the Holder constructor. So, it's not pure when we have this replacement."
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private isOperator(op String) : boolean from class io.undertow.predicate.PredicateParser to private isOperator(op String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Condition has been changed"
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class io.undertow.util.PredicateTokeniser.Token moved to io.undertow.server.handlers.builder.PredicatedHandlersParser.Token",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private isOperator(op String) : boolean from class io.undertow.server.handlers.builder.HandlerParser to private isOperator(op String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Condition has been changed"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.predicate.PredicateParser to private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package tokenize(string String) : Deque<Token> from class io.undertow.server.handlers.builder.HandlerParser to public tokenize(string String) : Deque<Token> from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Lots of code have been added to the child commit"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private isSpecialChar(token String) : boolean from class io.undertow.predicate.PredicateParser to private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.HandlerParser to private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Change has been caused because of the nested move method refactoring. In this case, within this commit, the -error- method has been moved from -PredicateTokeniser- class to -PredicatedHandlersParser- class. So, the change is a pure change!"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private precedence(operator String) : int from class io.undertow.server.handlers.builder.HandlerParser to private precedence(operator String) : int from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "One condition has been added"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private precedence(operator String) : int from class io.undertow.predicate.PredicateParser to private precedence(operator String) : int from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "One condition has been added"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.HandlerParser to private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private handleSingleArrayValue(string String, builder PredicateBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node from class io.undertow.predicate.PredicateParser to private handleSingleArrayValue(string String, builder Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Logic has been changed"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public error(string String, pos int, reason String) : IllegalStateException from class io.undertow.util.PredicateTokeniser to public error(string String, pos int, reason String) : IllegalStateException from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method package parse(string String, tokens Deque<Token>) : Node extracted from public parse(contents String, classLoader ClassLoader) : List<PredicatedHandler> in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "<p>There is a very small number of common statements between the original and the extracted method,<br />while a very big number of new statements in the extracted method.</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private readArrayType(string String, tokens Deque<Token>, expectedEndToken String) : List<Token> extracted from private handleSingleArrayValue(string String, builder PredicateBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node in class io.undertow.predicate.PredicateParser & moved to class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "<p>added</p><p>Even the original methods used to call&nbsp;readArrayType, so I can't mark this as TP</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private loadPredicateBuilders(classLoader ClassLoader) : Map<String,PredicateBuilder> extracted from public parse(contents String, classLoader ClassLoader) : List<PredicatedHandler> in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "<p>added</p><p>The method which is reported to be extracted seems to be in the original method being unified as well, but with different name (loadBuilders), so this is false positive.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private collapseOutput(token Object, tokens Deque<Object>) : Node from class io.undertow.predicate.PredicateParser to private collapseOutput(token Node, tokens Deque<Node>) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Include lots of changes"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private handleSingleArrayValue(string String, builder HandlerBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String, last Token) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser to private handleSingleArrayValue(string String, builder Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "<p>added</p><p>There were two&nbsp;handleSingleArrayValue methods, they seem to be unified and moved to the target class, but one is more similar to the handleSingleArrayValue method in the target class. Since <a href='219'>the other one</a> is marked as TP, we should mark this as FP.</p><p>Update: After seeing this case, I understood that we accepted similar cases as TP in both cases.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Lots of changes"
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public parse(string String, tokens Deque<Token>, classLoader ClassLoader) : Predicate moved from class io.undertow.predicate.PredicateParser to class io.undertow.server.handlers.builder.PredicatedHandlersParser & inlined to public parse(contents String, classLoader ClassLoader) : List<PredicatedHandler>",
    "comment" : "<p>The method is Inlined from class <span class='blob-code-inner'><span class='pl-en'>PredicateParser.<br /></span></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private handleNode(contents String, node Node, predicateBuilders Map<String,PredicateBuilder>, handlerBuilders Map<String,HandlerBuilder>, attributeParser ExchangeAttributeParser) : List<PredicatedHandler> extracted from public parse(contents String, classLoader ClassLoader) : List<PredicatedHandler> in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "<p>added</p><p>DOUBLE CHECK WITH MATIN. This is one of the cases I believe should be FP because the original code does not have anything to do with the extracted code.</p><p>Nikos: The added code is completely new functionality. It has not been extracted from existing code.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public tokenize(string String) : Deque<Token> from class io.undertow.util.PredicateTokeniser to public tokenize(string String) : Deque<Token> from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Lots of changes"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private handleLineEnd(string String, operatorStack Deque<Token>, output Deque<Node>, blocks List<Node>) : void extracted from package parse(string String, tokens Deque<Token>, builders Map<String,PredicateBuilder>, attributeParser ExchangeAttributeParser) : Predicate in class io.undertow.predicate.PredicateParser & moved to class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package parse(string String, tokens Deque<Token>, builders Map<String,PredicateBuilder>, attributeParser ExchangeAttributeParser) : Predicate from class io.undertow.predicate.PredicateParser to package parse(string String, tokens Deque<Token>, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Lots of changes happened"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder PredicateBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String) : Object from class io.undertow.predicate.PredicateParser to private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "<p>added</p><p>&nbsp;</p><p>This is like case refactroing with ID= 4278</p><p>Two methods (with very similar body) with name readArrayType(..) from two different classes PredicateParser and HandlerParser are moved to class PredicatedHandlersParser. We also verified it with Nik.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Logic has been changed completely"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder HandlerBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String, last Token) : Object from class io.undertow.server.handlers.builder.HandlerParser to private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Logic has been changed completely"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private loadHandlerBuilders(classLoader ClassLoader) : Map<String,HandlerBuilder> extracted from public parse(contents String, classLoader ClassLoader) : List<PredicatedHandler> in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private node : Node from class io.undertow.predicate.PredicateParser.NotNode to private node : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser.NotNode",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public parsePredicate(string String, classLoader ClassLoader) : Predicate extracted from public parse(string String, classLoader ClassLoader) : Predicate in class io.undertow.predicate.PredicateParser & moved to class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public parseHandler(string String, classLoader ClassLoader) : HandlerWrapper extracted from public parse(string String, classLoader ClassLoader) : HandlerWrapper in class io.undertow.server.handlers.builder.HandlerParser & moved to class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type builder : PredicateBuilder to builder : Token in method private handleSingleArrayValue(string String, builder Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable wrappers : List<PredicatedHandler> to values : List<Object> in method private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "<p>method private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) is new</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private handleSingleVarArgsValue(string String, builder PredicateBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node from class io.undertow.predicate.PredicateParser to private handleSingleVarArgsValue(string String, expressionName Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Lots of changes"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter attributeParser : ExchangeAttributeParser to parser : ExchangeAttributeParser in method private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type paramName : Token to paramName : String in method private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type others : List<Deque<Token>> to handlerBuilders : Map<String,HandlerBuilder> in method public parseHandler(string String, classLoader ClassLoader) : HandlerWrapper in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public parse(string String, tokens Deque<Token>, classLoader ClassLoader) : HandlerWrapper moved from class io.undertow.server.handlers.builder.HandlerParser to class io.undertow.server.handlers.builder.PredicatedHandlersParser & inlined to public parse(contents String, classLoader ClassLoader) : List<PredicatedHandler>",
    "comment" : "<p>The method is inlined from class <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>HandlerParser</span></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private loadBuilders(classLoader ClassLoader) : Map<String,PredicateBuilder> from class io.undertow.predicate.PredicateParser to private loadPredicateBuilders(classLoader ClassLoader) : Map<String,PredicateBuilder> from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private loadBuilders(classLoader ClassLoader) : Map<String,HandlerBuilder> from class io.undertow.server.handlers.builder.HandlerParser to private loadHandlerBuilders(classLoader ClassLoader) : Map<String,HandlerBuilder> from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private precedence(operator String) : int inlined to package parse(string String, tokens Deque<Token>, topLevel boolean) : Node in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private parsePredicate(string String, token Token, tokens Deque<Token>, builders Map<String,PredicateBuilder>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.predicate.PredicateParser to private parseExpression(string String, token Token, tokens Deque<Token>) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private parseBuilder(string String, token Token, tokens Deque<Token>, builders Map<String,HandlerBuilder>, attributeParser ExchangeAttributeParser) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser to private parseExpression(string String, token Token, tokens Deque<Token>) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Predicate to Node in method package parse(string String, tokens Deque<Token>, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type HandlerWrapper to Node in method private parseExpression(string String, token Token, tokens Deque<Token>) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Object to Node in method private parseExpression(string String, token Token, tokens Deque<Token>) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter elseBranch : HttpHandler in method private Holder(predicate Predicate, handler HttpHandler, elseBranch HttpHandler) from class io.undertow.predicate.PredicatesHandler.Holder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter builders : Map<String,PredicateBuilder> in method private parsePredicate(string String, token Token, tokens Deque<Token>, builders Map<String,PredicateBuilder>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.predicate.PredicateParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter attributeParser : ExchangeAttributeParser in method private parsePredicate(string String, token Token, tokens Deque<Token>, builders Map<String,PredicateBuilder>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.predicate.PredicateParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter token : Token in method private handleSingleArrayValue(string String, builder PredicateBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node from class io.undertow.predicate.PredicateParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter attributeParser : ExchangeAttributeParser in method private handleSingleArrayValue(string String, builder PredicateBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node from class io.undertow.predicate.PredicateParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter attributeParser : ExchangeAttributeParser in method private handleSingleVarArgsValue(string String, builder PredicateBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node from class io.undertow.predicate.PredicateParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter builders : Map<String,HandlerBuilder> in method private parseBuilder(string String, token Token, tokens Deque<Token>, builders Map<String,HandlerBuilder>, attributeParser ExchangeAttributeParser) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter attributeParser : ExchangeAttributeParser in method private parseBuilder(string String, token Token, tokens Deque<Token>, builders Map<String,HandlerBuilder>, attributeParser ExchangeAttributeParser) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public tokenize(string String) : Deque<Token> from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private attribute : ExchangeAttribute from class io.undertow.predicate.ContainsPredicate",
    "comment" : "<p>public ExchangeAttribute getAttribute()<br />is called in file<br />core/src/test/java/io/undertow/server/handlers/builder/PredicatedHandlersParserTestCase.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private header : HttpString from class io.undertow.server.handlers.SetHeaderHandler",
    "comment" : "<p>called in method public void testParsedHandler2()<br />core/src/test/java/io/undertow/server/handlers/builder/PredicatedHandlersParserTestCase.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private value : ExchangeAttribute from class io.undertow.server.handlers.SetHeaderHandler",
    "comment" : "<p>called in method public void testParsedHandler2()<br />core/src/test/java/io/undertow/server/handlers/builder/PredicatedHandlersParserTestCase.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier final in method public parse(string String, classLoader ClassLoader) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter attributeParser : ExchangeAttributeParser in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder PredicateBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String) : Object from class io.undertow.predicate.PredicateParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter attributeParser : ExchangeAttributeParser in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder HandlerBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String, last Token) : Object from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter topLevel : boolean in method package parse(string String, tokens Deque<Token>, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter builders : Map<String,PredicateBuilder> in method package parse(string String, tokens Deque<Token>, builders Map<String,PredicateBuilder>, attributeParser ExchangeAttributeParser) : Predicate from class io.undertow.predicate.PredicateParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter attributeParser : ExchangeAttributeParser in method package parse(string String, tokens Deque<Token>, builders Map<String,PredicateBuilder>, attributeParser ExchangeAttributeParser) : Predicate from class io.undertow.predicate.PredicateParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter value : ArrayNode in method private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter tokens : Deque<Token> in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder PredicateBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String) : Object from class io.undertow.predicate.PredicateParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter builder : PredicateBuilder in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder PredicateBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String) : Object from class io.undertow.predicate.PredicateParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter expectedEndToken : String in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder PredicateBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String) : Object from class io.undertow.predicate.PredicateParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter tokens : Deque<Token> in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder HandlerBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String, last Token) : Object from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter builder : HandlerBuilder in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder HandlerBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String, last Token) : Object from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter expectedEndToken : String in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder HandlerBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String, last Token) : Object from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter last : Token in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder HandlerBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String, last Token) : Object from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter token : Token in method private handleSingleArrayValue(string String, builder HandlerBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String, last Token) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter last : Token in method private handleSingleArrayValue(string String, builder HandlerBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String, last Token) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter attributeParser : ExchangeAttributeParser in method private handleSingleArrayValue(string String, builder HandlerBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String, last Token) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type builder : HandlerBuilder to builder : Token in method private handleSingleArrayValue(string String, builder Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type HandlerWrapper to Node in method private handleSingleArrayValue(string String, builder Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class io.undertow.predicate.ContainsPredicate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier public to package in class io.undertow.server.handlers.builder.PredicatedHandlersParser.Token",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable type : Class<?> to type : Class in method private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type type : Class<?> to type : Class in method private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type output : Deque<Object> to output : Deque<Node> in method package parse(string String, tokens Deque<Token>, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type top : String to top : Token in method package parse(string String, tokens Deque<Token>, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type operatorStack : Deque<String> to operatorStack : Deque<Token> in method package parse(string String, tokens Deque<Token>, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type op : String to op : Token in method package parse(string String, tokens Deque<Token>, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type values : Map<String,Object> to values : Map<String,Node> in method private parseExpression(string String, token Token, tokens Deque<Token>) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type array : Object to array : List<Token> in method private handleSingleVarArgsValue(string String, expressionName Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type array : Object to array : List<Token> in method private handleSingleArrayValue(string String, builder Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable last : Token in method private parseBuilder(string String, token Token, tokens Deque<Token>, builders Map<String,HandlerBuilder>, attributeParser ExchangeAttributeParser) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : "<p>Token last = tokens.isEmpty() ? token : tokens.getLast();&nbsp;</p><p>In the pairs of matched statements where both 'tokens' and 'last' are used, 'last' is removed<br /><br />return handleSingleArrayValue(string, builder, tokens, next, attributeParser, endChar, last);<br />return handleSingleArrayValue(string, token, tokens, endChar);<br /><br />values.put(next.getToken(), readArrayType(string, tokens, next, builder, attributeParser, '}', last));<br />values.put(next.getToken(), new ArrayNode(value, readArrayType(string, tokens,'}')));</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter builder : PredicateBuilder to expressionName : Token in method private handleSingleVarArgsValue(string String, expressionName Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type builder : PredicateBuilder to expressionName : Token in method private handleSingleVarArgsValue(string String, expressionName Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1111363,
  "repository" : "https://github.com/spring-projects/spring-data-rest.git",
  "sha1" : "b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
  "url" : "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
  "author" : "Greg Turnquist",
  "time" : "6/15/15 10:32 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected setupMockMvc() : void extracted from public setUp() : void in class org.springframework.data.rest.webmvc.AbstractWebIntegrationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method protected abstract expectedRootLinkRels() : Iterable<String> from class org.springframework.data.rest.webmvc.AbstractWebIntegrationTests to protected abstract expectedRootLinkRels() : Iterable<String> from class org.springframework.data.rest.webmvc.CommonWebTests",
    "comment" : "<p>abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1111984,
  "repository" : "https://github.com/checkstyle/checkstyle.git",
  "sha1" : "5a9b7249e3d092a78ac8e7d48aeeb62bf1c44e20",
  "url" : "https://github.com/checkstyle/checkstyle/commit/5a9b7249e3d092a78ac8e7d48aeeb62bf1c44e20",
  "author" : "Roman Ivanov",
  "time" : "6/15/15 1:56 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private processField(ast DetailAST, parentType int) : void extracted from private processIDENT(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Nested Extract Method refactoring. There is no way with the current mappings to catch the purity of this refactoring."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private isDeclarationToken(parentType int) : boolean extracted from private processIDENT(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2863
}, {
  "id" : 1112031,
  "repository" : "https://github.com/eclipse/vert.x.git",
  "sha1" : "718782014519034b28f6d3182fd9d340b7b31a74",
  "url" : "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
  "author" : "purplefox",
  "time" : "6/15/15 7:22 AM",
  "refactorings" : [ {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute protected connectionMap : Map<Channel,C> from class io.vertx.core.net.impl.VertxHandler to protected connectionMap : Map<Channel,C> from class io.vertx.core.http.impl.VertxHttpHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected getConnection(channel Channel) : C extracted from public channelWritabilityChanged(ctx ChannelHandlerContext) : void in class io.vertx.core.net.impl.VertxHandler & moved to class io.vertx.core.http.impl.VertxHttpHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected getConnection(channel Channel) : C extracted from public channelReadComplete(ctx ChannelHandlerContext) : void in class io.vertx.core.net.impl.VertxHandler & moved to class io.vertx.core.http.impl.VertxHttpHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter server : DatagramSocketImpl to socket : DatagramSocketImpl in method package DatagramServerHandler(vertx VertxInternal, socket DatagramSocketImpl) from class io.vertx.core.datagram.impl.DatagramServerHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute server : DatagramSocketImpl to socket : DatagramSocketImpl in class io.vertx.core.datagram.impl.DatagramServerHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute vertx : VertxInternal to connectionMap : Map<Channel,C> in class io.vertx.core.http.impl.VertxHttpHandler",
    "comment" : "<p>Conflicting refactoring:<br />Push Down Attribute protected connectionMap : Map&lt;Channel,C&gt; from class io.vertx.core.net.impl.VertxHandler to protected connectionMap : Map&lt;Channel,C&gt; from class io.vertx.core.http.impl.VertxHttpHandler</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter connectionMap : Map<Channel,C> to channel : Channel in method protected removeConnection(channel Channel) : C in class io.vertx.core.net.impl.VertxHandler",
    "comment" : "<p>removeConnection() is a newly abstract method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected getConnection(channel Channel) : NetSocketImpl extracted from public exceptionCaught(chctx ChannelHandlerContext, t Throwable) : void in class io.vertx.core.net.impl.VertxHandler & moved to class io.vertx.core.net.impl.VertxNetHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected getConnection(channel Channel) : NetSocketImpl extracted from public channelWritabilityChanged(ctx ChannelHandlerContext) : void in class io.vertx.core.net.impl.VertxHandler & moved to class io.vertx.core.net.impl.VertxNetHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected removeConnection(channel Channel) : NetSocketImpl extracted from public channelInactive(chctx ChannelHandlerContext) : void in class io.vertx.core.net.impl.VertxHandler & moved to class io.vertx.core.net.impl.VertxNetHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected getConnection(channel Channel) : NetSocketImpl extracted from public channelRead(chctx ChannelHandlerContext, msg Object) : void in class io.vertx.core.net.impl.VertxHandler & moved to class io.vertx.core.net.impl.VertxNetHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected getConnection(channel Channel) : NetSocketImpl extracted from public channelReadComplete(ctx ChannelHandlerContext) : void in class io.vertx.core.net.impl.VertxHandler & moved to class io.vertx.core.net.impl.VertxNetHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected VertxHandler(vertx VertxInternal, connectionMap Map<Channel,C>) renamed to protected abstract removeConnection(channel Channel) : C in class io.vertx.core.net.impl.VertxHandler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter vertx : VertxInternal in method public ClientHandler(vertx VertxInternal, context ContextImpl) from class io.vertx.core.http.impl.HttpClientImpl.ClientHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter vertx : VertxInternal in method public ServerHandler(vertx VertxInternal) from class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter connectionMap : Map<Channel,C> in method protected VertxHandler(vertx VertxInternal, connectionMap Map<Channel,C>) from class io.vertx.core.net.impl.VertxHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute protected connectionMap : Map<Channel,C> from class io.vertx.core.net.impl.VertxHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1710
}, {
  "id" : 1112091,
  "repository" : "https://github.com/droolsjbpm/drools.git",
  "sha1" : "1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
  "url" : "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
  "author" : "Mario Fusco",
  "time" : "6/15/15 9:41 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected initPriorityQueue(kBase InternalKnowledgeBase) : BinaryHeapQueue extracted from public AgendaGroupQueueImpl(name String, kBase InternalKnowledgeBase) in class org.drools.core.common.AgendaGroupQueueImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private internalAddEntry(entry PropagationEntry) : void extracted from public addEntry(entry PropagationEntry) : void in class org.drools.core.phreak.SynchronizedPropagationList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "the notifyHalt method is not the one that has been moved to this class."
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute protected evaluatingActionQueue : AtomicBoolean from class org.drools.core.impl.StatefulKnowledgeSessionImpl to private evaluatingActionQueue : AtomicBoolean from class org.drools.reteoo.common.ReteWorkingMemory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public notifyHalt() : void from class org.drools.core.common.DefaultAgenda to public notifyHalt() : void from class org.drools.core.phreak.SynchronizedBypassPropagationList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "-this- has been added"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public notifyHalt() : void from class org.drools.reteoo.common.ReteAgenda to public notifyHalt() : void from class org.drools.core.phreak.SynchronizedBypassPropagationList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "-this- has been added"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PhreakTimerNode.TimerAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PropagationEntry.AbstractPropagationEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isHighestSalience(nextRule RuleAgendaItem) : boolean renamed to private isHigherSalience(nextRule RuleAgendaItem) : boolean in class org.drools.core.phreak.RuleExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public executeIfNotFiring(task Runnable) : boolean renamed to public executeTask(executable ExecutableEntry) : void in class org.drools.reteoo.common.ReteAgenda",
    "comment" : "<p>Obvious case</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private internalFlush() : void renamed to public flush(workingMemory InternalWorkingMemory, currentHead PropagationEntry) : void in class org.drools.core.phreak.SynchronizedPropagationList",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public addActivation(item AgendaItem, notify boolean) : void renamed to public fireTimedActivation(activation Activation) : boolean in class org.drools.core.common.DefaultAgenda",
    "comment" : "<p>Second Opinion. Seems FP</p><p>Davood: The bodies are the same with one throw statement</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private waitAndEnterExecutionState(newState ExecutionState) : void extracted from public fireUntilHalt(agendaFilter AgendaFilter) : void in class org.drools.core.common.DefaultAgenda",
    "comment" : " Statements in waitAndEnterExecutionState(..) are not part of  fireUntilHalt(..)",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public takeAll() : PropagationEntry extracted from public flush() : void in class org.drools.core.phreak.SynchronizedPropagationList",
    "comment" : "<p>Laleh: hard to say if indeed it is an extract method, there&nbsp;are other changes too</p><p>Davood and Matin: internalFlush() was renamed to takeAll()</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public add(handle EventFactHandle) : void extracted from public assertFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : boolean in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "It is extract and move since the method is moved to the inner class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public peek() : EventFactHandle extracted from public assertFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : boolean in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "It is extract and move since the method is moved to the inner class",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public peek() : EventFactHandle extracted from public retractFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "It is extract and move since the method is moved to the inner class",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public peek() : EventFactHandle extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "<p>Extract and Move to the inner class.</p><p>Since RefDiff does not detect 'Extract and Move refactoring' we accept it as CTP.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public poll() : EventFactHandle extracted from public retractFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "It is extract and move since the method is moved to the inner class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public remove() : EventFactHandle extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "It is extract and move since the method is moved to the inner class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public remove(handle EventFactHandle) : void extracted from public retractFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "It is extract and move since the method is moved to the inner class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public notifyHalt() : void extracted from public queueWorkingMemoryAction(action WorkingMemoryAction) : void in class org.drools.reteoo.common.ReteWorkingMemory & moved to class org.drools.core.impl.StatefulKnowledgeSessionImpl",
    "comment" : "<p>added</p><p>The extracted method does not have anything to do with the original method! Should be FP. TO BE CHECKED WITH LALEH</p><p>Laleh:</p><p>in the base version we have this.agenda.notifyHalt(); agenda is of type&nbsp; InternalAgenda. In the refactored version we have notifyHalt().<br />notifyHalt() is defied (in the refactored version) in the parent of class ReteWorkingMemory which is StatefulKnowledgeSessionImpl<br />the body of notifyHalt() in StatefulKnowledgeSessionImpl we have: propagationList.notifyHalt();<br />knowing that InternalAgenda has no type relation with PropagationList =&gt; it is FP</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setExpiringHandle(expiringHandle EventFactHandle) : void extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private haltRuleFiring(fireCount int, fireLimit int, localFireCount int, agenda InternalAgenda) : boolean extracted from private fire(wm InternalWorkingMemory, filter AgendaFilter, fireCount int, fireLimit int, outerStack LinkedList<StackEntry>, agenda InternalAgenda) : int in class org.drools.core.phreak.RuleExecutor",
    "comment" : "<p>There exists&nbsp; method haltRuleFiring(..) in the before refactoring version, only one parameter is added to this method in the after refactoring version and its body is modified. </p>",
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter arg0 : Activation to existing : Activation in method public compare(existing Activation, adding Activation) : int from class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter arg1 : Activation to adding : Activation in method public compare(existing Activation, adding Activation) : int from class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PropagationEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type a : Object to a : T in method public compare(a T, b T) : int from class org.drools.core.util.NaturalComparator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type b : Object to b : T in method public compare(a T, b T) : int from class org.drools.core.util.NaturalComparator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type queries : ConcurrentMap<QueryImpl,RuleAgendaItem> to queries : Map<QueryImpl,RuleAgendaItem> in class org.drools.core.common.DefaultAgenda",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type comparator : Comparator to comparator : Comparator<Activation> in class org.drools.core.util.BinaryHeapQueue",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute halt : AtomicBoolean to currentState : ExecutionState in class org.drools.core.common.DefaultAgenda",
    "comment" : "<p>The logic based on halt has been replacement with new logic based on <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>enum</span> <span class='pl-en'>ExecutionState</span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter notify : boolean to firing : boolean in method package ExecutionState(firing boolean) in class org.drools.core.common.DefaultAgenda.ExecutionState",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void from class org.drools.core.common.InternalAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void from class org.drools.reteoo.common.ReteAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public executeIfNotFiring(task Runnable) : boolean renamed to public executeTask(executable ExecutableEntry) : void in class org.drools.core.common.InternalAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public executeTask(executable ExecutableEntry) : void from class org.drools.reteoo.common.ReteAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public executeTask(executable ExecutableEntry) : void from class org.drools.core.common.InternalAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void from class org.drools.reteoo.common.ReteAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void from class org.drools.core.common.InternalAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type existing : Item to existing : Activation in method public compare(existing Activation, adding Activation) : int in class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver",
    "comment" : "<p>compare(Activation arg0, Activation arg1) becomes compare(Activation existing, Activation adding)</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type halt : AtomicBoolean to currentState : ExecutionState in class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public isFiring() : boolean extracted from public fireAllRules(agendaFilter AgendaFilter, fireLimit int) : int in class org.drools.core.common.DefaultAgenda & moved to class org.drools.core.common.DefaultAgenda.ExecutionState",
    "comment" : "<p>There is a local method isFiring() which returns !<span class='x'>halt</span><span class='pl-k x'>.</span><span class='x x-last'>get</span>() and then it returns currentState.isFiring()</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public notifyHalt() : void from class org.drools.core.common.InternalAgenda to public notifyHalt() : void from class org.drools.core.common.InternalWorkingMemory",
    "comment" : "<p>This is a abstract method which is moved.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "-this- has been added"
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable agenda : InternalAgenda in method public queueRuleAgendaItem(wm InternalWorkingMemory) : void from class org.drools.core.reteoo.PathMemory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deactivateIfEmpty() : void renamed to public setFocus() : void in class org.drools.core.common.AgendaGroupQueueImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public fireUntilHalt(agendaFilter AgendaFilter) : void renamed to private waitAndEnterExecutionState(newState ExecutionState) : void in class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public executeIfNotFiring(task Runnable) : boolean renamed to public executeTask(executable ExecutableEntry) : void in class org.drools.core.common.DefaultAgenda",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public notifyHalt() : void renamed to public halt() : void in class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public halt() : void renamed to private immediateHalt() : void in class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public halt() : void renamed to public flushPropagations() : void in class org.drools.core.impl.StatefulKnowledgeSessionImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public flushPropagations() : void renamed to public flushPropagationsOnFireUntilHalt(fired boolean) : void in class org.drools.core.impl.StatefulKnowledgeSessionImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public flush() : void renamed to public flushOnFireUntilHalt(fired boolean, currentHead PropagationEntry) : void in class org.drools.core.phreak.SynchronizedPropagationList",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getComponentFactory() : KieComponentFactory renamed to private configureReteComponentFactory() : void in class org.drools.core.RuleBaseConfiguration",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Ignore in method public testExecuteQueueActions() : void from class org.drools.core.reteoo.ReteooWorkingMemoryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public notifyHalt() : void from class org.drools.core.phreak.SynchronizedBypassPropagationList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Test to @Test(timeout = 10000) in method public testEventExpirationInSlidingWindow() : void from class org.drools.compiler.integrationtests.CepEspTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @Ignore in class org.drools.compiler.integrationtests.CepFireUntilHaltTimerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method public fire(wm InternalWorkingMemory, outerStack LinkedList<StackEntry>) : void from class org.drools.core.phreak.RuleExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method private fire(wm InternalWorkingMemory, filter AgendaFilter, fireCount int, fireLimit int, outerStack LinkedList<StackEntry>, agenda InternalAgenda) : int from class org.drools.core.phreak.RuleExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method public reEvaluateNetwork(wm InternalWorkingMemory, outerStack LinkedList<StackEntry>) : void from class org.drools.core.phreak.RuleExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method public evaluateNetwork(pmem PathMemory, outerStack LinkedList<StackEntry>, executor RuleExecutor, wm InternalWorkingMemory) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method public outerEval(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter visitedRules : Set<String> in method public outerEval(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method public evalStackEntry(entry StackEntry, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, executor RuleExecutor, wm InternalWorkingMemory) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method public innerEval(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter visitedRules : Set<String> in method public innerEval(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter visitedRules : Set<String> in method private evalQueryNode(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, visitedRules Set<String>, srcTuples LeftTupleSets, sink LeftTupleSinkNode, stagedLeftTuples LeftTupleSets) : boolean from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method private evalBetaNode(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor, srcTuples LeftTupleSets, stagedLeftTuples LeftTupleSets, sink LeftTupleSinkNode) : boolean from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter visitedRules : Set<String> in method private evalBetaNode(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor, srcTuples LeftTupleSets, stagedLeftTuples LeftTupleSets, sink LeftTupleSinkNode) : boolean from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter outerStack : LinkedList<StackEntry> in method private doRiaNode(wm InternalWorkingMemory, liaNode LeftInputAdapterNode, pmem PathMemory, srcTuples LeftTupleSets, betaNode BetaNode, sink LeftTupleSinkNode, smems SegmentMemory[], smemIndex int, nodeMem Memory, bm BetaMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter visitedRules : Set<String> in method private doRiaNode(wm InternalWorkingMemory, liaNode LeftInputAdapterNode, pmem PathMemory, srcTuples LeftTupleSets, betaNode BetaNode, sink LeftTupleSinkNode, smems SegmentMemory[], smemIndex int, nodeMem Memory, bm BetaMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter visitedRules : Set<String> in method public StackEntry(liaNode LeftInputAdapterNode, node NetworkNode, bit long, sink LeftTupleSinkNode, pmem PathMemory, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, visitedRules Set<String>, resumeFromNextNode boolean, processRian boolean) from class org.drools.core.phreak.StackEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pctx : PropagationContext in method protected updateNextExpiration(fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory, context Object, nodeId int) : void from class org.drools.core.rule.SlidingTimeWindow",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pctx : PropagationContext in method public BehaviorJobContext(nodeId int, workingMemory InternalWorkingMemory, behavior Behavior, behaviorContext Object, pctx PropagationContext) from class org.drools.core.rule.SlidingTimeWindow.BehaviorJobContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pctx : PropagationContext in method public BehaviorExpireWMAction(nodeId int, behavior Behavior, context Object, pctx PropagationContext) from class org.drools.core.rule.SlidingTimeWindow.BehaviorExpireWMAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter saveForLater : boolean in method public fireTimedActivation(activation Activation, saveForLater boolean) : boolean from class org.drools.reteoo.common.ReteAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pctx : PropagationContext in method protected updateNextExpiration(fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory, context Object, nodeId int) : void from class org.drools.reteoo.nodes.ReteSlidingTimeWindow",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter saveForLater : boolean in method public fireTimedActivation(activation Activation, saveForLater boolean) : boolean from class org.drools.core.common.InternalAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test(timeout = 10000) in method public testEventExpirationInSlidingWindow() : void from class org.drools.compiler.integrationtests.CepEspTest",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public execute(wm InternalWorkingMemory) : void from class org.drools.core.common.AgendaGroupQueueImpl.ClearAction",
    "comment" : "<p>execute() is extracted from clear() and moved to inner class ClearAction</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public execute(wm InternalWorkingMemory) : void from class org.drools.core.common.AgendaGroupQueueImpl.SetFocusAction",
    "comment" : "<p>setFocus() is renamed to execute() and moved to inner class SetFocusAction</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public flushOnFireUntilHalt(fired boolean, currentHead PropagationEntry) : void from class org.drools.core.phreak.SynchronizedPropagationList",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Test in method public testEventExpirationInSlidingWindow() : void from class org.drools.compiler.integrationtests.CepEspTest",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private isHigherSalience(nextRule RuleAgendaItem) : boolean from class org.drools.core.phreak.RuleExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected isExpired(currentTime long, handle EventFactHandle) : boolean from class org.drools.core.rule.SlidingTimeWindow",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected priorityQueue : BinaryHeapQueue from class org.drools.core.common.AgendaGroupQueueImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private queue : PriorityQueue<EventFactHandle> from class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private expiringHandle : EventFactHandle from class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private evaluatingActionQueue : AtomicBoolean from class org.drools.reteoo.common.ReteWorkingMemory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private expiringHandle : EventFactHandle from class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
    "comment" : "<p>The access modifier is changed to private</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier synchronized in method public isEmpty() : boolean from class org.drools.core.phreak.SynchronizedPropagationList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public compare(existing Activation, adding Activation) : int from class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public fireActivation(activation Activation) : void from class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method private fireActivationEvent(activation Activation, event Consequence) : void from class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public evaluateNetwork(wm InternalWorkingMemory) : void from class org.drools.core.phreak.RuleExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public evaluateNetworkAndFire(wm InternalWorkingMemory, filter AgendaFilter, fireCount int, fireLimit int) : int from class org.drools.core.phreak.RuleExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public fire(wm InternalWorkingMemory, outerStack LinkedList<StackEntry>) : void from class org.drools.core.phreak.RuleExecutor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public reEvaluateNetwork(wm InternalWorkingMemory, outerStack LinkedList<StackEntry>) : void from class org.drools.core.phreak.RuleExecutor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public addEntry(propagationEntry PropagationEntry) : void from class org.drools.core.phreak.SynchronizedBypassPropagationList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public getOrCreateRuleAgendaItem(wm InternalWorkingMemory) : RuleAgendaItem from class org.drools.core.reteoo.PathMemory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public doLinkRule(wm InternalWorkingMemory) : void from class org.drools.core.reteoo.PathMemory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public doUnlinkRule(wm InternalWorkingMemory) : void from class org.drools.core.reteoo.PathMemory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public clear() : void from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public isEmpty() : boolean from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public isFull() : boolean from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public size() : int from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public peek() : Activation from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public enqueue(element Activation) : void from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public dequeue() : Activation from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public dequeue(activation Activation) : Activation from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method package dequeue(index int) : Activation from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public toArray(a Object[]) : Object[] from class org.drools.core.util.BinaryHeapQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : NoClassDefFoundError to e : Throwable in method public testDynamicFunction() : void from class org.drools.compiler.integrationtests.DynamicRulesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void from class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void from class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public executeTask(executable ExecutableEntry) : void from class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter saveForLater : boolean in method public fireTimedActivation(activation Activation, saveForLater boolean) : boolean from class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public fireTimedActivation(activation Activation, saveForLater boolean) : boolean from class org.drools.core.common.DefaultAgenda",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter existing : Activation in method public compare(existing Activation, adding Activation) : int from class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter adding : Activation in method public compare(existing Activation, adding Activation) : int from class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable fired : boolean in method public fireUntilHalt(agendaFilter AgendaFilter) : void from class org.drools.core.common.DefaultAgenda",
    "comment" : "<p>boolean fired = fireNextItem( agendaFilter, 0, -1 ) &gt; 0;<br />inlined to<br />workingMemory.flushPropagationsOnFireUntilHalt( fireNextItem( agendaFilter, 0, -1 ) &gt; 0 );<br />and<br />workingMemory.flushPropagationsOnFireUntilHalt( fireNextItem( agendaFilter, 0, -1 ) &gt; 0, head );</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 13908
}, {
  "id" : 1112624,
  "repository" : "https://github.com/spring-projects/spring-boot.git",
  "sha1" : "1cfc6f64f64353bc5530a8ce8cdacfc3eba3e7b2",
  "url" : "https://github.com/spring-projects/spring-boot/commit/1cfc6f64f64353bc5530a8ce8cdacfc3eba3e7b2",
  "author" : "Oliver Gierke",
  "time" : "6/15/15 4:21 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private addEntityScanBeanPostProcessor(registry BeanDefinitionRegistry, packagesToScan Set<String>) : void extracted from public registerBeanDefinitions(importingClassMetadata AnnotationMetadata, registry BeanDefinitionRegistry) : void in class org.springframework.boot.orm.jpa.EntityScanRegistrar",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "toArray is added but there is no functionality change!"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private updateEntityScanBeanPostProcessor(registry BeanDefinitionRegistry, packagesToScan Set<String>) : void extracted from public registerBeanDefinitions(importingClassMetadata AnnotationMetadata, registry BeanDefinitionRegistry) : void in class org.springframework.boot.orm.jpa.EntityScanRegistrar",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String[] to Set<String> in method private getPackagesToScan(metadata AnnotationMetadata) : Set<String> from class org.springframework.boot.orm.jpa.EntityScanRegistrar",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public registerBeanDefinitions(importingClassMetadata AnnotationMetadata, registry BeanDefinitionRegistry) : void renamed to private addEntityScanBeanPostProcessor(registry BeanDefinitionRegistry, packagesToScan Set<String>) : void in class org.springframework.boot.orm.jpa.EntityScanRegistrar",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1019
}, {
  "id" : 1112627,
  "repository" : "https://github.com/spring-projects/spring-boot.git",
  "sha1" : "20d39f7af2165c67d5221f556f58820c992d2cc6",
  "url" : "https://github.com/spring-projects/spring-boot/commit/20d39f7af2165c67d5221f556f58820c992d2cc6",
  "author" : "Phillip Webb",
  "time" : "6/15/15 3:31 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getFullKey(path String, key String) : String extracted from private flatten(properties Properties, input Map<String,Object>, path String) : void in class org.springframework.boot.cloudfoundry.VcapApplicationListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "The way the code works are the same, although there are some slight changes"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable object : Object to item : Object in method private flatten(properties Properties, input Map<String,Object>, path String) : void from class org.springframework.boot.cloudfoundry.VcapApplicationListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable map : Map<String,Object> in method private flatten(properties Properties, input Map<String,Object>, path String) : void from class org.springframework.boot.cloudfoundry.VcapApplicationListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable itemKey : String in method private flatten(properties Properties, input Map<String,Object>, path String) : void from class org.springframework.boot.cloudfoundry.VcapApplicationListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method private flatten(properties Properties, input Map<String,Object>, path String) : void from class org.springframework.boot.cloudfoundry.VcapApplicationListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Variable Annotation",
    "description" : "Remove Variable Annotation @SuppressWarnings(\"unchecked\") in variable collection : Collection<Object> in method private flatten(properties Properties, input Map<String,Object>, path String) : void from class org.springframework.boot.cloudfoundry.VcapApplicationListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4633
}, {
  "id" : 1112638,
  "repository" : "https://github.com/CyanogenMod/android_frameworks_base.git",
  "sha1" : "658a918eebcbdeb4f920c2947ca8d0e79ad86d89",
  "url" : "https://github.com/CyanogenMod/android_frameworks_base/commit/658a918eebcbdeb4f920c2947ca8d0e79ad86d89",
  "author" : "Michael Bestas",
  "time" : "6/15/15 1:36 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private initTickerView() : void extracted from protected makeStatusBarView() : PhoneStatusBarView in class com.android.systemui.statusbar.phone.PhoneStatusBar",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "New conditions have been added"
    }
  } ],
  "refDiffExecutionTime" : 6868
}, {
  "id" : 1112642,
  "repository" : "https://github.com/orientechnologies/orientdb.git",
  "sha1" : "1089957b645bde069d3864563bbf1f7c7da8045c",
  "url" : "https://github.com/orientechnologies/orientdb/commit/1089957b645bde069d3864563bbf1f7c7da8045c",
  "author" : "Tglman",
  "time" : "6/16/15 7:33 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected rewriteLinksInDocument(document ODocument, rewrite OIndex<OIdentifiable>) : void extracted from private rewriteLinksInDocument(document ODocument) : void in class com.orientechnologies.orient.core.db.tool.ODatabaseImport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Attribute",
    "description" : "Parameterize Attribute exportImportHashTable : OIndex<OIdentifiable> to rewrite : OIndex<OIdentifiable> in method protected rewriteLinksInDocument(document ODocument, rewrite OIndex<OIdentifiable>) : void from class com.orientechnologies.orient.core.db.tool.ODatabaseImport",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1755
}, {
  "id" : 1112702,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "5f18bed8da4dda4fa516907ecbbe28f712e944f7",
  "url" : "https://github.com/JetBrains/intellij-community/commit/5f18bed8da4dda4fa516907ecbbe28f712e944f7",
  "author" : "Konstantin Bulenkov",
  "time" : "6/16/15 7:14 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class com.intellij.util.ui.components.JBPanel moved to com.intellij.ui.components.JBPanel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 18800
}, {
  "id" : 1116609,
  "repository" : "https://github.com/belaban/JGroups.git",
  "sha1" : "f1533756133dec84ce8218202585ac85904da7c9",
  "url" : "https://github.com/belaban/JGroups/commit/f1533756133dec84ce8218202585ac85904da7c9",
  "author" : "Bela Ban",
  "time" : "6/16/15 8:16 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public isInMembersList(sender IpAddress) : boolean extracted from public authenticate(token AuthToken, msg Message) : boolean in class org.jgroups.auth.FixedMembershipToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Some doubt about even accepting this as an Extract Method refactoring - Impure definitely"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable member : String to addr : InetSocketAddress in method public isInMembersList(sender IpAddress) : boolean from class org.jgroups.auth.FixedMembershipToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type member : String to addr : InetSocketAddress in method public isInMembersList(sender IpAddress) : boolean from class org.jgroups.auth.FixedMembershipToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type memberList : List<String> to memberList : List<InetSocketAddress> in class org.jgroups.auth.FixedMembershipToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public match(sender IpAddress, addr InetSocketAddress) : boolean extracted from public authenticate(token AuthToken, msg Message) : boolean in class org.jgroups.auth.FixedMembershipToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Some doubt about even accepting this as an Extract Method refactoring. Impure definitely"
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type UnknownHostException in method public setMemberList(list String) : void from class org.jgroups.auth.FixedMembershipToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private memberList : List<InetSocketAddress> from class org.jgroups.auth.FixedMembershipToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1121
}, {
  "id" : 1116627,
  "repository" : "https://github.com/hierynomus/sshj.git",
  "sha1" : "7c26ac669a4e17ca1d2319a5049a56424fd33104",
  "url" : "https://github.com/hierynomus/sshj/commit/7c26ac669a4e17ca1d2319a5049a56424fd33104",
  "author" : "Jeroen van Erp",
  "time" : "6/16/15 9:12 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class nl.javadude.sshj.connection.channel.ChannelCloseEofTest moved to com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass com.hierynomus.sshj.SshIntegrationTestBase from class nl.javadude.sshj.connection.channel.ChannelCloseEofTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public shouldCorrectlyHandleSessionChannelEof() : void from class nl.javadude.sshj.connection.channel.ChannelCloseEofTest to public shouldCorrectlyHandleSessionChannelEof() : void from class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
    "comment" : "<p>added</p><p>It is 'Move class' refacoting</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setUp() : void from class nl.javadude.sshj.connection.channel.ChannelCloseEofTest to public setUp() : void from class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
    "comment" : "<p>added</p><p>It is Move Class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public tearDown() : void from class nl.javadude.sshj.connection.channel.ChannelCloseEofTest to public tearDown() : void from class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
    "comment" : "<p>added</p><p>It is Move calss.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private sshClient : SSHClient from class nl.javadude.sshj.connection.channel.ChannelCloseEofTest to private sshClient : SSHClient from class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
    "comment" : "<p>added</p><p>It is Move class.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Package",
    "description" : "Move Package nl.javadude to com.hierynomus",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1116655,
  "repository" : "https://github.com/nutzam/nutz.git",
  "sha1" : "6599c748ef35d38085703cf3bd41b9b5b6af5f32",
  "url" : "https://github.com/nutzam/nutz/commit/6599c748ef35d38085703cf3bd41b9b5b6af5f32",
  "author" : "wendal",
  "time" : "6/16/15 10:47 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public from(dao Dao, obj Object, filter FieldFilter, ignoreNull boolean, ignoreZero boolean, ignoreDate boolean, ignoreId boolean, ignoreName boolean, ignorePk boolean) : Cnd extracted from public from(dao Dao, obj Object, filter FieldFilter) : Cnd in class org.nutz.dao.Cnd",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Lots of conditions have been added"
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings({\"rawtypes\",\"unchecked\"}) in method public from(dao Dao, obj Object, filter FieldFilter) : Cnd from class org.nutz.dao.Cnd",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1199
}, {
  "id" : 1116663,
  "repository" : "https://github.com/facebook/buck.git",
  "sha1" : "1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
  "url" : "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
  "author" : "Thomas Gummerer",
  "time" : "6/15/15 5:07 PM",
  "refactorings" : [ {
    "type" : "Rename Class",
    "description" : "Rename Class com.facebook.buck.cli.AdbOptions renamed to com.facebook.buck.cli.AdbCommandLineOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.facebook.buck.cli.TargetDeviceOptionsTest renamed to com.facebook.buck.cli.TargetDeviceCommandLineOptionsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.facebook.buck.cli.TargetDeviceOptions renamed to com.facebook.buck.cli.TargetDeviceCommandLineOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.buck.cli.InstallEvent moved to com.facebook.buck.event.InstallEvent",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.buck.cli.InstallEventTest moved to com.facebook.buck.event.InstallEventTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.buck.cli.StartActivityEvent moved to com.facebook.buck.event.StartActivityEvent",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.buck.cli.StartActivityEventTest moved to com.facebook.buck.event.StartActivityEventTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.buck.cli.TestDevice moved to com.facebook.buck.android.TestDevice",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.buck.cli.UninstallEvent moved to com.facebook.buck.event.UninstallEvent",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.buck.cli.UninstallEventTest moved to com.facebook.buck.event.UninstallEventTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.buck.cli.AdbHelper moved to com.facebook.buck.android.AdbHelper",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.buck.cli.AdbHelperTest moved to com.facebook.buck.android.AdbHelperTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldReturnAnAbsentOptionalIfNoTargetDeviceOptionsSet() : void renamed to public shouldReturnAnAbsentOptionalIfNoTargetDeviceCommandLineOptionsSet() : void in class com.facebook.buck.cli.TargetDeviceCommandLineOptionsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isMultiInstallModeEnabled() : boolean renamed to public getAdbOptions() : AdbOptions in class com.facebook.buck.cli.AdbCommandLineOptions",
    "comment" : "Second Opinion. Two method merged to one",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getAdbThreadCount() : int from class com.facebook.buck.cli.AdbOptions to public getAdbThreadCount() : int from class com.facebook.buck.android.AdbOptions",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter buckConfig : BuckConfig to restartAdbOnFailure : boolean in method public AdbHelper(adbOptions AdbOptions, deviceOptions TargetDeviceOptions, context ExecutionContext, console Console, buckEventBus BuckEventBus, restartAdbOnFailure boolean) from class com.facebook.buck.android.AdbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class com.facebook.buck.android.AdbOptions from class com.facebook.buck.cli.AdbOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public isMultiInstallModeEnabled() : boolean from class com.facebook.buck.cli.AdbOptions to public isMultiInstallModeEnabled() : boolean from class com.facebook.buck.android.AdbOptions",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute buckConfig : BuckConfig to restartAdbOnFailure : boolean in class com.facebook.buck.android.AdbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter uninstallOptions : UninstallCommand.UninstallOptions to shouldKeepUserData : boolean in method public uninstallApp(packageName String, shouldKeepUserData boolean) : boolean from class com.facebook.buck.android.AdbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type buckConfig : BuckConfig to restartAdbOnFailure : boolean in method public AdbHelper(adbOptions AdbOptions, deviceOptions TargetDeviceOptions, context ExecutionContext, console Console, buckEventBus BuckEventBus, restartAdbOnFailure boolean) from class com.facebook.buck.android.AdbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type uninstallOptions : UninstallCommand.UninstallOptions to shouldKeepUserData : boolean in method public uninstallApp(packageName String, shouldKeepUserData boolean) : boolean from class com.facebook.buck.android.AdbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type buckConfig : BuckConfig to restartAdbOnFailure : boolean in class com.facebook.buck.android.AdbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type adbOptions : AdbOptions to adbOptions : AdbCommandLineOptions in class com.facebook.buck.cli.InstallCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type deviceOptions : TargetDeviceOptions to deviceOptions : TargetDeviceCommandLineOptions in class com.facebook.buck.cli.InstallCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type targetDeviceOptions : TargetDeviceOptions to targetDeviceOptions : TargetDeviceCommandLineOptions in class com.facebook.buck.cli.TestCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type adbOptions : AdbOptions to adbOptions : AdbCommandLineOptions in class com.facebook.buck.cli.UninstallCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type deviceOptions : TargetDeviceOptions to deviceOptions : TargetDeviceCommandLineOptions in class com.facebook.buck.cli.UninstallCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type options : TargetDeviceOptions to options : TargetDeviceCommandLineOptions in method public shouldReturnAnEmulatorIfOnlyEmulatorFlagSet() : void from class com.facebook.buck.cli.TargetDeviceCommandLineOptionsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type options : TargetDeviceOptions to options : TargetDeviceCommandLineOptions in method public shouldReturnADeviceIfOnlyDeviceFlagSet() : void from class com.facebook.buck.cli.TargetDeviceCommandLineOptionsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type options : TargetDeviceOptions to options : TargetDeviceCommandLineOptions in method public onlySettingTheSerialFlagAssumesTheTargetIsARealDevice() : void from class com.facebook.buck.cli.TargetDeviceCommandLineOptionsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type options : TargetDeviceOptions to options : TargetDeviceCommandLineOptions in method public serialFlagOverridesEnvironment() : void from class com.facebook.buck.cli.TargetDeviceCommandLineOptionsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type options : TargetDeviceOptions to options : TargetDeviceCommandLineOptions in method private buildOptions(args String...) : TargetDeviceCommandLineOptions from class com.facebook.buck.cli.TargetDeviceCommandLineOptionsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type options : TargetDeviceOptions to options : TargetDeviceCommandLineOptions in method public shouldReturnAnAbsentOptionalIfNoTargetDeviceCommandLineOptionsSet() : void from class com.facebook.buck.cli.TargetDeviceCommandLineOptionsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TargetDeviceOptions to TargetDeviceCommandLineOptions in method private buildOptions(args String...) : TargetDeviceCommandLineOptions from class com.facebook.buck.cli.TargetDeviceCommandLineOptionsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Split Parameter",
    "description" : "Split Parameter args : String... to [targetDeviceOptions : TargetDeviceOptions, adbOptions : AdbOptions] in method private createAdbHelper(adbOptions AdbOptions, targetDeviceOptions TargetDeviceOptions) : AdbHelper from class com.facebook.buck.android.AdbHelperTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to public in attribute public PACKAGE_NAME_PATTERN : Pattern from class com.facebook.buck.android.AdbHelper",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable installViaSd : boolean to installViaSd : boolean in method public installApk(installableApk InstallableApk, installViaSd boolean) : boolean from class com.facebook.buck.android.AdbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter command : InstallCommand in method public installApk(installableApk InstallableApk, command InstallCommand) : boolean from class com.facebook.buck.cli.AdbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter adbOptions : AdbOptions in method private createAdbHelper(executionContext ExecutionContext, adbOptions AdbOptions, targetDeviceOptions TargetDeviceOptions) : AdbHelper from class com.facebook.buck.android.AdbHelperTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter targetDeviceOptions : TargetDeviceOptions in method private createAdbHelper(executionContext ExecutionContext, adbOptions AdbOptions, targetDeviceOptions TargetDeviceOptions) : AdbHelper from class com.facebook.buck.android.AdbHelperTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter args : String... in method private createAdbHelper(executionContext ExecutionContext, args String...) : AdbHelper from class com.facebook.buck.cli.AdbHelperTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 11495
}, {
  "id" : 1116686,
  "repository" : "https://github.com/processing/processing.git",
  "sha1" : "d7f781da42e54824c17875a6036d3448672637f5",
  "url" : "https://github.com/processing/processing/commit/d7f781da42e54824c17875a6036d3448672637f5",
  "author" : "Ben Fry",
  "time" : "6/16/15 10:03 AM",
  "refactorings" : [ {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute public ERROR_BACKGROUND_IMAGE_FORMAT : String from class processing.core.PConstants to protected ERROR_BACKGROUND_IMAGE_FORMAT : String from class processing.core.PGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute public ERROR_BACKGROUND_IMAGE_SIZE : String from class processing.core.PConstants to protected ERROR_BACKGROUND_IMAGE_SIZE : String from class processing.core.PGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute public ERROR_TEXTFONT_NULL_PFONT : String from class processing.core.PConstants to protected ERROR_TEXTFONT_NULL_PFONT : String from class processing.core.PGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute public ERROR_PUSHMATRIX_UNDERFLOW : String from class processing.core.PConstants to protected ERROR_PUSHMATRIX_UNDERFLOW : String from class processing.core.PGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute public ERROR_PUSHMATRIX_OVERFLOW : String from class processing.core.PConstants to protected ERROR_PUSHMATRIX_OVERFLOW : String from class processing.core.PGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public ERROR_PUSHMATRIX_OVERFLOW : String from class processing.core.PConstants to protected ERROR_PUSHMATRIX_OVERFLOW : String from class processing.core.PGraphics",
    "comment" : "<p>Push Down Attribute</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public ERROR_BACKGROUND_IMAGE_SIZE : String from class processing.core.PConstants to protected ERROR_BACKGROUND_IMAGE_SIZE : String from class processing.core.PGraphics",
    "comment" : "<p>Push Down Attribute</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public ERROR_PUSHMATRIX_UNDERFLOW : String from class processing.core.PConstants to protected ERROR_PUSHMATRIX_UNDERFLOW : String from class processing.core.PGraphics",
    "comment" : "<p>Push Down Attribute</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public ERROR_TEXTFONT_NULL_PFONT : String from class processing.core.PConstants to protected ERROR_TEXTFONT_NULL_PFONT : String from class processing.core.PGraphics",
    "comment" : "<p>Push Down Attribute</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public ERROR_BACKGROUND_IMAGE_FORMAT : String from class processing.core.PConstants to protected ERROR_BACKGROUND_IMAGE_FORMAT : String from class processing.core.PGraphics",
    "comment" : "<p>Push Down Attribute</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to protected in attribute protected ERROR_TEXTFONT_NULL_PFONT : String from class processing.core.PGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to protected in attribute protected ERROR_BACKGROUND_IMAGE_SIZE : String from class processing.core.PGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to protected in attribute protected ERROR_BACKGROUND_IMAGE_FORMAT : String from class processing.core.PGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to protected in attribute protected ERROR_PUSHMATRIX_OVERFLOW : String from class processing.core.PGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to protected in attribute protected ERROR_PUSHMATRIX_UNDERFLOW : String from class processing.core.PGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1544
}, {
  "id" : 1116704,
  "repository" : "https://github.com/linkedin/rest.li.git",
  "sha1" : "bd0d3bf75d31a8b5db34b8b66dfb28e5e1f492de",
  "url" : "https://github.com/linkedin/rest.li/commit/bd0d3bf75d31a8b5db34b8b66dfb28e5e1f492de",
  "author" : "Xiao Ma",
  "time" : "6/16/15 12:30 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected extendRecordBaseClass(templateClass JDefinedClass) : void extracted from protected generateRecord(templateClass JDefinedClass, recordSpec RecordTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Only one change, which has been justified with overlapped (Move Attribute) refactoring. The Move Attribute refactoring is not mentioned in the Oracle btw"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected extendWrappingMapBaseClass(valueJClass JClass, mapClass JDefinedClass) : void extracted from protected generateMap(mapClass JDefinedClass, mapSpec MapTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Only one change, which has been justified with overlapped (Move Attribute) refactoring. The Move Attribute refactoring is not mentioned in the Oracle btw"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected extendUnionBaseClass(unionClass JDefinedClass) : void extracted from protected generateUnion(unionClass JDefinedClass, unionSpec UnionTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Use the getter method instead of the actual variable"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected extendWrappingArrayBaseClass(itemJClass JClass, arrayClass JDefinedClass) : void extracted from protected generateArray(arrayClass JDefinedClass, arrayDataTemplateSpec ArrayTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Only one change, which has been justified with overlapped (Move Attribute) refactoring. The Move Attribute refactoring is not mentioned in the Oracle btw"
    }
  } ],
  "refDiffExecutionTime" : 1253
}, {
  "id" : 1116770,
  "repository" : "https://github.com/fabric8io/fabric8.git",
  "sha1" : "9e61a71540da58c3208fd2c7737f793c3f81e5ae",
  "url" : "https://github.com/fabric8io/fabric8/commit/9e61a71540da58c3208fd2c7737f793c3f81e5ae",
  "author" : "James Strachan",
  "time" : "6/15/15 4:16 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public createGogsWebhook(kubernetes KubernetesClient, log Log, gogsUser String, gogsPwd String, repoName String, webhookUrl String, webhookSecret String) : boolean extracted from public execute() : void in class io.fabric8.maven.CreateGogsWebhook",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Some code has been added which makes the refactoring totally impure"
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public createGogsWebhook(kubernetes KubernetesClient, log Log, gogsUser String, gogsPwd String, repoName String, webhookUrl String, webhookSecret String) : boolean in class io.fabric8.maven.CreateGogsWebhook",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public execute() : void renamed to public createGogsWebhook(kubernetes KubernetesClient, log Log, gogsUser String, gogsPwd String, repoName String, webhookUrl String, webhookSecret String) : boolean in class io.fabric8.maven.CreateGogsWebhook",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Modify Attribute Annotation",
    "description" : "Modify Attribute Annotation @Parameter(property = \"fabric8.username\") to @Parameter(property = \"fabric8.gogsUsername\") in attribute protected username : String from class io.fabric8.maven.CreateBuildConfigMojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Attribute",
    "description" : "Parameterize Attribute gogsUsername : String to gogsUser : String in method public createGogsWebhook(kubernetes KubernetesClient, log Log, gogsUser String, gogsPwd String, repoName String, webhookUrl String, webhookSecret String) : boolean from class io.fabric8.maven.CreateGogsWebhook",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Attribute",
    "description" : "Parameterize Attribute gogsPassword : String to gogsPwd : String in method public createGogsWebhook(kubernetes KubernetesClient, log Log, gogsUser String, gogsPwd String, repoName String, webhookUrl String, webhookSecret String) : boolean from class io.fabric8.maven.CreateGogsWebhook",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Attribute",
    "description" : "Parameterize Attribute repo : String to repoName : String in method public createGogsWebhook(kubernetes KubernetesClient, log Log, gogsUser String, gogsPwd String, repoName String, webhookUrl String, webhookSecret String) : boolean from class io.fabric8.maven.CreateGogsWebhook",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Attribute",
    "description" : "Parameterize Attribute secret : String to webhookSecret : String in method public createGogsWebhook(kubernetes KubernetesClient, log Log, gogsUser String, gogsPwd String, repoName String, webhookUrl String, webhookSecret String) : boolean from class io.fabric8.maven.CreateGogsWebhook",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1724
}, {
  "id" : 1116810,
  "repository" : "https://github.com/codinguser/gnucash-android.git",
  "sha1" : "bba4af3f52064b5a2de2c9a57f9d34ba67dcdd8c",
  "url" : "https://github.com/codinguser/gnucash-android/commit/bba4af3f52064b5a2de2c9a57f9d34ba67dcdd8c",
  "author" : "Ngewi Fet",
  "time" : "6/16/15 6:15 AM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getAllTransactionsCount() : long from class org.gnucash.android.db.TransactionsDbAdapter to public getRecordsCount() : long from class org.gnucash.android.db.DatabaseAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testDeletingAccountShouldDeleteSplits() : void renamed to public shouldDeleteSplitsWhenAccountDeleted() : void in class org.gnucash.android.test.unit.db.AccountsDbAdapterTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testAlphabeticalSorting() : void renamed to public shouldBeAlphabeticallySortedByDefault() : void in class org.gnucash.android.test.unit.db.AccountsDbAdapterTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testAddAccountWithTransaction() : void renamed to public shouldAddAccountsToDatabase() : void in class org.gnucash.android.test.unit.db.AccountsDbAdapterTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 766
}, {
  "id" : 1116953,
  "repository" : "https://github.com/eclipse/vert.x.git",
  "sha1" : "32a8c9086040fd6d6fa11a214570ee4f75a4301f",
  "url" : "https://github.com/eclipse/vert.x/commit/32a8c9086040fd6d6fa11a214570ee4f75a4301f",
  "author" : "purplefox",
  "time" : "6/16/15 6:37 AM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private handleHttp(conn ServerConnection, ch Channel, msg Object) : void inlined to protected doMessageReceived(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void in class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private handleExpectWebsockets(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void inlined to protected doMessageReceived(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void in class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter conn : ServerConnection to chctx : ChannelHandlerContext in method public channelRead(chctx ChannelHandlerContext, msg Object) : void in class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type conn : ServerConnection to chctx : ChannelHandlerContext in method public channelRead(chctx ChannelHandlerContext, msg Object) : void in class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type ch : Channel to connection : ServerConnection in method public channelRead(chctx ChannelHandlerContext, msg Object) : void in class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>Channel</span> ch <span class='pl-k'>=</span> ctx<span class='pl-k'>.</span>channel(); is inlined<br /></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected doMessageReceived(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void renamed to public channelRead(chctx ChannelHandlerContext, msg Object) : void in class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected doMessageReceived(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void from class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to public in method public startRead() : void from class io.vertx.core.net.impl.ConnectionBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method protected doMessageReceived(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void from class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method protected getConnection(channel Channel) : C from class io.vertx.core.http.impl.VertxHttpHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method protected removeConnection(channel Channel) : C from class io.vertx.core.http.impl.VertxHttpHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 783
}, {
  "id" : 1116963,
  "repository" : "https://github.com/Netflix/eureka.git",
  "sha1" : "1cacbe2ad700275bc575234ff2b32ee0d6493817",
  "url" : "https://github.com/Netflix/eureka/commit/1cacbe2ad700275bc575234ff2b32ee0d6493817",
  "author" : "Bertrand Renuart",
  "time" : "6/15/15 5:16 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected fireEvent(event DiscoveryEvent) : void extracted from protected onRemoteStatusChanged(oldStatus InstanceInfo.InstanceStatus, newStatus InstanceInfo.InstanceStatus) : void in class com.netflix.discovery.DiscoveryClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass com.netflix.discovery.DiscoveryEvent from class com.netflix.discovery.StatusChangeEvent",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable event : StatusChangeEvent in method protected onRemoteStatusChanged(oldStatus InstanceInfo.InstanceStatus, newStatus InstanceInfo.InstanceStatus) : void from class com.netflix.discovery.DiscoveryClient",
    "comment" : "<p>inlined to fireEvent(new StatusChangeEvent(oldStatus, newStatus));</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 432
}, {
  "id" : 1116967,
  "repository" : "https://github.com/Netflix/eureka.git",
  "sha1" : "f6212a7e474f812f31ddbce6d4f7a7a0d498b751",
  "url" : "https://github.com/Netflix/eureka/commit/f6212a7e474f812f31ddbce6d4f7a7a0d498b751",
  "author" : "Bertrand Renuart",
  "time" : "6/15/15 6:55 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected onRemoteStatusChanged(oldStatus InstanceInfo.InstanceStatus, newStatus InstanceInfo.InstanceStatus) : void extracted from private updateInstanceRemoteStatus() : void in class com.netflix.discovery.DiscoveryClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable currentRemoteInstanceStatus : InstanceInfo.InstanceStatus to newStatus : InstanceInfo.InstanceStatus in method protected onRemoteStatusChanged(oldStatus InstanceInfo.InstanceStatus, newStatus InstanceInfo.InstanceStatus) : void from class com.netflix.discovery.DiscoveryClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Attribute",
    "description" : "Parameterize Attribute lastRemoteInstanceStatus : InstanceInfo.InstanceStatus to oldStatus : InstanceInfo.InstanceStatus in method protected onRemoteStatusChanged(oldStatus InstanceInfo.InstanceStatus, newStatus InstanceInfo.InstanceStatus) : void from class com.netflix.discovery.DiscoveryClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2243
}, {
  "id" : 1116977,
  "repository" : "https://github.com/google/closure-compiler.git",
  "sha1" : "ba5e6d44526a2491a7004423ca2ad780c6992c46",
  "url" : "https://github.com/google/closure-compiler/commit/ba5e6d44526a2491a7004423ca2ad780c6992c46",
  "author" : "dimvar",
  "time" : "6/15/15 8:22 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private getRawTypeFromJSType(t JSType) : RawNominalType inlined to private visitOtherPropertyDeclaration(getProp Node) : void in class com.google.javascript.jscomp.GlobalTypeInfo.ProcessScope",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable rawType : RawNominalType to recvType : JSType in method private visitOtherPropertyDeclaration(getProp Node) : void in class com.google.javascript.jscomp.GlobalTypeInfo.ProcessScope",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '> rawType exists in child commit: <span class='pl-smi'>RawNominalType</span> rawType <span class='pl-k'>=</span> nt<span class='pl-k'>.</span>getRawNominalType();</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rawType : RawNominalType to recvType : JSType in method private visitOtherPropertyDeclaration(getProp Node) : void in class com.google.javascript.jscomp.GlobalTypeInfo.ProcessScope",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to package in method package getNominalType() : NominalType from class com.google.javascript.jscomp.newtypes.ObjectType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4222
}, {
  "id" : 1117005,
  "repository" : "https://github.com/crate/crate.git",
  "sha1" : "72b5348307d86b1a118e546c24d97f1ac1895bdb",
  "url" : "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
  "author" : "Sebastian Utz",
  "time" : "6/16/15 7:01 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private rightMergeNode : MergeNode from class io.crate.planner.node.dql.join.NestedLoop to private rightMergeNode : MergeNode from class io.crate.planner.node.dql.join.NestedLoopNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private downstreamNodes : List<String> from class io.crate.planner.node.dql.CollectNode to private downstreamNodes : List<String> from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private downstreamNodes : List<String> from class io.crate.planner.node.dql.join.NestedLoopNode to private downstreamNodes : List<String> from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private downstreamNodes : List<String> from class io.crate.planner.node.dql.MergeNode to private downstreamNodes : List<String> from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private downstreamExecutionNodeId : int from class io.crate.planner.node.dql.CollectNode to private downstreamExecutionNodeId : int from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private downstreamExecutionNodeId : int from class io.crate.planner.node.dql.join.NestedLoopNode to private downstreamExecutionNodeId : int from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private downstreamExecutionNodeId : int from class io.crate.planner.node.dql.MergeNode to private downstreamExecutionNodeId : int from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public downstreamNodes(nodes Set<String>) : void from class io.crate.planner.node.dql.MergeNode to public downstreamNodes(downStreamNodes Set<String>) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public downstreamNodes(nodes Set<String>) : void from class io.crate.planner.node.dql.join.NestedLoopNode to public downstreamNodes(downStreamNodes Set<String>) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private leftMergeNode : MergeNode from class io.crate.planner.node.dql.join.NestedLoop to private leftMergeNode : MergeNode from class io.crate.planner.node.dql.join.NestedLoopNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void from class io.crate.planner.node.dql.MergeNode to public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public downstreamNodes(downStreamNodes List<String>) : void from class io.crate.planner.node.dql.CollectNode to public downstreamNodes(downStreamNodes List<String>) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void from class io.crate.planner.node.dql.join.NestedLoopNode to public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public downstreamNodes() : List<String> from class io.crate.planner.node.dql.MergeNode to public downstreamNodes() : List<String> from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public downstreamNodes() : List<String> from class io.crate.planner.node.dql.CollectNode to public downstreamNodes() : List<String> from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public downstreamNodes() : List<String> from class io.crate.planner.node.dql.join.NestedLoopNode to public downstreamNodes() : List<String> from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public downstreamExecutionNodeId() : int from class io.crate.planner.node.dql.CollectNode to public downstreamExecutionNodeId() : int from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public downstreamExecutionNodeId() : int from class io.crate.planner.node.dql.MergeNode to public downstreamExecutionNodeId() : int from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public downstreamExecutionNodeId() : int from class io.crate.planner.node.dql.join.NestedLoopNode to public downstreamExecutionNodeId() : int from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public rightMergeNode(rightMergeNode MergeNode) : void from class io.crate.planner.node.dql.join.NestedLoop to public rightMergeNode(rightMergeNode MergeNode) : void from class io.crate.planner.node.dql.join.NestedLoopNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public leftMergeNode(leftMergeNode MergeNode) : void from class io.crate.planner.node.dql.join.NestedLoop to public leftMergeNode(leftMergeNode MergeNode) : void from class io.crate.planner.node.dql.join.NestedLoopNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public rightMergeNode() : MergeNode from class io.crate.planner.node.dql.join.NestedLoop to public rightMergeNode() : MergeNode from class io.crate.planner.node.dql.join.NestedLoopNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public leftMergeNode() : MergeNode from class io.crate.planner.node.dql.join.NestedLoop to public leftMergeNode() : MergeNode from class io.crate.planner.node.dql.join.NestedLoopNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public downstreamExecutionNodeId(executionNodeId int) : void from class io.crate.planner.node.dql.CollectNode to public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter killPlan : KillPlan to plan : KillPlan in method public visitKillPlan(plan KillPlan, context C) : R from class io.crate.planner.PlanVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter node : QueryThenFetch to plan : QueryThenFetch in method public visitQueryThenFetch(plan QueryThenFetch, context C) : R from class io.crate.planner.PlanVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter countPlan : CountPlan to plan : CountPlan in method public visitCountPlan(plan CountPlan, context C) : R from class io.crate.planner.PlanVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter node : QueryAndFetch to plan : QueryAndFetch in method public visitQueryAndFetch(plan QueryAndFetch, context C) : R from class io.crate.planner.PlanVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter node : InsertFromSubQuery to plan : InsertFromSubQuery in method public visitInsertByQuery(plan InsertFromSubQuery, context C) : R from class io.crate.planner.PlanVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter node : Upsert to plan : Upsert in method public visitUpsert(plan Upsert, context C) : R from class io.crate.planner.PlanVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter node : DistributedGroupBy to plan : DistributedGroupBy in method public visitDistributedGroupBy(plan DistributedGroupBy, context C) : R from class io.crate.planner.PlanVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter node : NonDistributedGroupBy to plan : NonDistributedGroupBy in method public visitNonDistributedGroupBy(plan NonDistributedGroupBy, context C) : R from class io.crate.planner.PlanVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nestedLoop : NestedLoop to plan : NestedLoop in method public visitNestedLoop(plan NestedLoop, context C) : R from class io.crate.planner.PlanVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nestedLoopNode : NestedLoopNode to node : NestedLoopNode in method public visitNestedLoopNode(node NestedLoopNode, context C) : R from class io.crate.planner.node.ExecutionNodeVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter countNode : CountNode to node : CountNode in method public visitCountNode(node CountNode, context PreparerContext) : Void from class io.crate.action.job.ContextPreparer.InnerPreparer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter countNode : CountNode to node : CountNode in method public visitCountNode(node CountNode, context C) : R from class io.crate.planner.node.ExecutionNodeVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute mergeNodes : List<MergeNode> to finalMergeNodes : List<MergeNode> in class io.crate.executor.transport.ExecutionNodesTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visitGlobalAggregate(plan GlobalAggregate, job Job) : List<Task> renamed to protected visitPlan(plan Plan, job Job) : List<? extends Task> in class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
    "comment" : "<p>There are 6 methods that could match with visitPlan, and were kind of merged into one.</p><p>@Override<br /> public List&lt;Task&gt; visitGlobalAggregate(GlobalAggregate plan, Job job) {<br /> return ImmutableList.of(createExecutableNodesTask(job, plan.collectNode(), plan.mergeNode()));<br /> }</p><p>@Override<br /> public List&lt;Task&gt; visitCollectAndMerge(CollectAndMerge plan, Job job) {<br /> return ImmutableList.of(createExecutableNodesTask(job, plan.collectNode(), plan.localMergeNode()));<br /> }</p><p>@Override<br /> public List&lt;Task&gt; visitQueryAndFetch(QueryAndFetch plan, Job job) {<br /> return ImmutableList.of(createExecutableNodesTask(job, plan.collectNode(), plan.localMergeNode()));<br /> }</p><p>@Override<br /> public List&lt;Task&gt; visitCountPlan(CountPlan countPlan, Job job) {<br /> return ImmutableList.of(createExecutableNodesTask(job, countPlan.countNode(), countPlan.mergeNode()));<br /> }<br /><br />@Override<br /> public List&lt;Task&gt; visitNonDistributedGroupBy(NonDistributedGroupBy plan, Job job) {<br /> return ImmutableList.of(createExecutableNodesTask(job, plan.collectNode(), plan.localMergeNode()));<br /> }<br /><br /> @Override<br /> public List&lt;Task&gt; visitQueryThenFetch(QueryThenFetch plan, Job job) {<br /> return ImmutableList.of(createExecutableNodesTask(job, plan.collectNode(), plan.mergeNode()));<br /> }</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nodes : Set<String> to downStreamNodes : Set<String> in method public downstreamNodes(downStreamNodes Set<String>) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : "<p>Pulled Up method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter executionNodeId : int to downstreamExecutionNodeId : int in method public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : "<p>Pulled Up method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type tasks : Collection<Task> to tasks : Collection<? extends Task> in method public addTasks(tasks Collection<? extends Task>) : void from class io.crate.executor.Job",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type plan : GlobalAggregate to plan : Plan in method protected visitPlan(plan Plan, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Task> to List<? extends Task> in method public visitUpsert(plan Upsert, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Task> to List<? extends Task> in method public visitInsertByQuery(node InsertFromSubQuery, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Task> to List<? extends Task> in method protected visitPlan(plan Plan, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tasks : List<Task> to tasks : List<? extends Task> in method public newJob(plan Plan) : Job from class io.crate.executor.transport.TransportExecutor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tasks : List<Task> to tasks : List<? extends Task> in method public visitInsertByQuery(node InsertFromSubQuery, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter mergeNodes : List<MergeNode> to finalMergeNode : MergeNode in method public addFinalMergeNode(finalMergeNode MergeNode) : void in class io.crate.executor.transport.ExecutionNodesTask",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter job : Job to plan : Plan in method public process(plan Plan, job Job) : ExecutionNodesTask in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter groupedExecutionNodes : List<List<ExecutionNode>> to context : Context in method public visitQueryAndFetch(plan QueryAndFetch, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter job : Job to context : Context in method public visitCollectAndMerge(plan CollectAndMerge, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter job : Job to context : Context in method public visitNestedLoop(plan NestedLoop, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter job : Job to context : Context in method protected visitPlan(plan Plan, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter countPlan : CountPlan to plan : CountPlan in method public visitCountPlan(plan CountPlan, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : "<p>The implementation of the methods has changed significantly although they have the same name.</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter job : Job to executionNodesTask : ExecutionNodesTask in method public Context(executionNodesTask ExecutionNodesTask) in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor.Context",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable numCols : int to numDownStreams : int in method public readFrom(in StreamInput) : void in class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>int</span> numCols <span class='pl-k'>=</span> in<span class='pl-k'>.</span>readVInt();</span> has been split to <span class='blob-code-inner blob-code-marker' data-code-marker=' '> <span class='pl-k'>int</span> numInputCols <span class='pl-k'>=</span> in<span class='pl-k'>.</span>readVInt();</span> and <span class='blob-code-inner blob-code-marker' data-code-marker=' '> <span class='pl-k'>int</span> numOutputCols <span class='pl-k'>=</span> in<span class='pl-k'>.</span>readVInt();</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter leftExecutionNodeId : int to executionNodeId : int in method public NestedLoopNode(executionNodeId int, name String) in class io.crate.planner.node.dql.join.NestedLoopNode",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'>leftExecutionNodeId</span> and <span class='blob-code-inner blob-code-marker' data-code-marker='-'>rightExecutionNodeId merged to executionNodeId</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nodes : Set<String> to leftMergeNode : MergeNode in method public leftMergeNode(leftMergeNode MergeNode) : void in class io.crate.planner.node.dql.join.NestedLoopNode",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type job : Job to plan : Plan in method public process(plan Plan, job Job) : ExecutionNodesTask in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type job : Job to context : Context in method public visitCollectAndMerge(plan CollectAndMerge, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type job : Job to context : Context in method public visitNestedLoop(plan NestedLoop, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type job : Job to context : Context in method protected visitPlan(plan Plan, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type job : Job to executionNodesTask : ExecutionNodesTask in method public Context(executionNodesTask ExecutionNodesTask) in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor.Context",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type executionNode : ExecutionNode to context : Context in method public visitDistributedGroupBy(plan DistributedGroupBy, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type localMergeNode : MergeNode to context : Context in method public visitNonDistributedGroupBy(plan NonDistributedGroupBy, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public process(plan Plan, job Job) : ExecutionNodesTask extracted from public visitUpsert(plan Upsert, job Job) : List<Task> in class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor & moved to class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public createDownstream(collectNode CollectNode) : ResultProvider moved from class io.crate.operation.collect.MapSideDataCollectOperation to class io.crate.action.job.ContextPreparer.InnerPreparer & inlined to public visitCollectNode(node CollectNode, context PreparerContext) : Void",
    "comment" : "<p>&nbsp;Move and Inline method from MapSideDataCollectOperation</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public downstreamExecutionNodeId() : int renamed to public rightMergeNode() : MergeNode in class io.crate.planner.node.dql.join.NestedLoopNode",
    "comment" : "<p>Pull Up Method</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public downstreamNodes() : List<String> renamed to public leftMergeNode() : MergeNode in class io.crate.planner.node.dql.join.NestedLoopNode",
    "comment" : "<p>Pull Up Method</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected ExecutionNodesTask(jobId UUID, clusterService ClusterService, contextPreparer ContextPreparer, jobContextService JobContextService, pageDownstreamFactory PageDownstreamFactory, threadPool ThreadPool, transportJobAction TransportJobAction, transportCloseContextNodeAction TransportCloseContextNodeAction, streamerVisitor StreamerVisitor, circuitBreaker CircuitBreaker, mergeNodes List<MergeNode>, groupedExecutionNodes List<List<ExecutionNode>>) renamed to public addFinalMergeNode(finalMergeNode MergeNode) : void in class io.crate.executor.transport.ExecutionNodesTask",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public downstreamNodes(nodes Set<String>) : void renamed to public leftMergeNode(leftMergeNode MergeNode) : void in class io.crate.planner.node.dql.join.NestedLoopNode",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void renamed to public rightMergeNode(rightMergeNode MergeNode) : void in class io.crate.planner.node.dql.join.NestedLoopNode",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visitCollectAndMerge(plan CollectAndMerge, job Job) : List<Task> renamed to public visitUpsert(plan Upsert, job Job) : List<? extends Task> in class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Nullable in method public localMergeNode() : MergeNode from class io.crate.planner.node.dql.QueryAndFetch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Nullable in method public downstreamNodes() : List<String> from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public downstreamExecutionNodeId() : int from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public downstreamNodes() : List<String> from class io.crate.planner.node.dql.MergeNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public downstreamNodes() : List<String> from class io.crate.planner.node.dql.join.NestedLoopNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Nullable in attribute private localMergeNode : MergeNode from class io.crate.planner.node.dql.QueryAndFetch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter executionNodeInputId : byte in method public DistributedResultRequest(jobId UUID, executionNodeId int, executionNodeInputId byte, bucketIdx int, streamers Streamer<?>[]) from class io.crate.executor.transport.distributed.DistributedResultRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter targetInputId : byte in method public DistributingDownstream(jobId UUID, targetExecutionNodeId int, targetInputId byte, bucketIdx int, downstreamNodeIds Collection<String>, transportDistributedResultAction TransportDistributedResultAction, streamers Streamer<?>[]) from class io.crate.executor.transport.distributed.DistributingDownstream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter targetInputId : byte in method public Downstream(node String, jobId UUID, targetExecutionNodeId int, targetInputId byte, bucketIdx int, streamers Streamer<?>[]) from class io.crate.executor.transport.distributed.DistributingDownstream.Downstream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter mergeNodes : List<MergeNode> in method protected ExecutionNodesTask(jobId UUID, clusterService ClusterService, contextPreparer ContextPreparer, jobContextService JobContextService, pageDownstreamFactory PageDownstreamFactory, threadPool ThreadPool, transportJobAction TransportJobAction, transportCloseContextNodeAction TransportCloseContextNodeAction, streamerVisitor StreamerVisitor, circuitBreaker CircuitBreaker, mergeNodes List<MergeNode>, groupedExecutionNodes List<List<ExecutionNode>>) from class io.crate.executor.transport.ExecutionNodesTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter groupedExecutionNodes : List<List<ExecutionNode>> in method protected ExecutionNodesTask(jobId UUID, clusterService ClusterService, contextPreparer ContextPreparer, jobContextService JobContextService, pageDownstreamFactory PageDownstreamFactory, threadPool ThreadPool, transportJobAction TransportJobAction, transportCloseContextNodeAction TransportCloseContextNodeAction, streamerVisitor StreamerVisitor, circuitBreaker CircuitBreaker, mergeNodes List<MergeNode>, groupedExecutionNodes List<List<ExecutionNode>>) from class io.crate.executor.transport.ExecutionNodesTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected visitPlan(plan Plan, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public visitNestedLoop(plan NestedLoop, context Context) : Void from class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : "<p>visitNestedLoop(plan NestedLoop, context Context) is a new method in a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected visitPlan(plan Plan, context Context) : Void from class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor",
    "comment" : "<p>visitPlan(plan Plan, context Context) is a new method in a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter Annotation",
    "description" : "Remove Parameter Annotation @Nullable in parameter mergeNodes : List<MergeNode> in method protected ExecutionNodesTask(jobId UUID, clusterService ClusterService, contextPreparer ContextPreparer, jobContextService JobContextService, pageDownstreamFactory PageDownstreamFactory, threadPool ThreadPool, transportJobAction TransportJobAction, transportCloseContextNodeAction TransportCloseContextNodeAction, streamerVisitor StreamerVisitor, circuitBreaker CircuitBreaker, mergeNodes List<MergeNode>, groupedExecutionNodes List<List<ExecutionNode>>) from class io.crate.executor.transport.ExecutionNodesTask",
    "comment" : "<p>removed parameter</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected visitPlan(plan Plan, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected inputTypes : List<DataType> from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Nullable in attribute private downstreamNodes : List<String> from class io.crate.planner.node.dql.AbstractDQLPlanNode",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private hasDirectResponse : boolean from class io.crate.executor.transport.ExecutionNodesTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private finalMergeNodes : List<MergeNode> from class io.crate.executor.transport.ExecutionNodesTask",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter node : MergeNode in method public visitMergeNode(node MergeNode, context PreparerContext) : Void from class io.crate.action.job.ContextPreparer.InnerPreparer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter context : PreparerContext in method public visitMergeNode(node MergeNode, context PreparerContext) : Void from class io.crate.action.job.ContextPreparer.InnerPreparer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter node : CollectNode in method public visitCollectNode(node CollectNode, context PreparerContext) : Void from class io.crate.action.job.ContextPreparer.InnerPreparer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter context : PreparerContext in method public visitCollectNode(node CollectNode, context PreparerContext) : Void from class io.crate.action.job.ContextPreparer.InnerPreparer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private createExecutableNodesTask(job Job, executionNode ExecutionNode, localMergeNode MergeNode) : Task inlined to protected visitPlan(plan Plan, job Job) : List<? extends Task> in class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable task : ExecutionNodesTask in method protected visitPlan(plan Plan, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1117151,
  "repository" : "https://github.com/wordpress-mobile/WordPress-Android.git",
  "sha1" : "2252ed3754bff8c39db48d172ac76ac5a4e15359",
  "url" : "https://github.com/wordpress-mobile/WordPress-Android/commit/2252ed3754bff8c39db48d172ac76ac5a4e15359",
  "author" : "Nick Bradbury",
  "time" : "6/15/15 3:08 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private shouldShowTagToolbar() : boolean inlined to public onCreateView(inflater LayoutInflater, container ViewGroup, savedInstanceState Bundle) : View in class org.wordpress.android.ui.reader.ReaderPostListFragment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1117171,
  "repository" : "https://github.com/infinispan/infinispan.git",
  "sha1" : "e3b0d87b3ca0fd27cec39937cb3dc3a05b0cfc4e",
  "url" : "https://github.com/infinispan/infinispan/commit/e3b0d87b3ca0fd27cec39937cb3dc3a05b0cfc4e",
  "author" : "Dan Berindei",
  "time" : "6/16/15 10:48 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected waitForCacheToStabilize(cache Cache<Object,Object>, cacheConfig Configuration) : void extracted from public perform(ctx InvocationContext) : Object in class org.infinispan.commands.CreateCacheCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Lots of changes happened"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public init(cacheManager EmbeddedCacheManager) : void extracted from public createCache(cacheName String, baseCacheName String) : void in class org.infinispan.cli.interpreter.session.SessionImpl & moved to class org.infinispan.commands.CreateCacheCommand",
    "comment" : "<p>The init() method has one parameter removed. It already existed in the previous commit.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable cacheTopology : CacheTopology in method protected waitForCacheToStabilize(cache Cache<Object,Object>, cacheConfig Configuration) : void from class org.infinispan.commands.CreateCacheCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter stateTransferManager : StateTransferManager in method public init(cacheManager EmbeddedCacheManager, stateTransferManager StateTransferManager) : void from class org.infinispan.commands.CreateCacheCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 7285
}, {
  "id" : 1117213,
  "repository" : "https://github.com/geoserver/geoserver.git",
  "sha1" : "182f4d1174036417aad9d6db908ceaf64234fd5f",
  "url" : "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
  "author" : "Andrea Aime",
  "time" : "6/17/15 6:09 AM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public pre(item ImportTask, data ImportData) : void from class org.geoserver.importer.transform.VectorTransformChain to public pre(item ImportTask, data ImportData) : void from class org.geoserver.importer.transform.TransformChain",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public post(task ImportTask, data ImportData) : void from class org.geoserver.importer.transform.VectorTransformChain to public post(task ImportTask, data ImportData) : void from class org.geoserver.importer.transform.TransformChain",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.geoserver.importer.transform.PostVectorTransform renamed to org.geoserver.importer.transform.PostTransform",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.geoserver.importer.transform.AbstractVectorTransform renamed to org.geoserver.importer.transform.AbstractTransform",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.geoserver.importer.transform.PreVectorTransform renamed to org.geoserver.importer.transform.PreTransform",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.geoserver.importer.transform.PostVectorTransform renamed to org.geoserver.importer.transform.PreTransform",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.geoserver.importer.transform.PreVectorTransform renamed to org.geoserver.importer.transform.PostTransform",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method package error(tx VectorTransform, e Exception) : void from class org.geoserver.importer.transform.VectorTransformChain to protected error(tx ImportTransform, e Exception) : void from class org.geoserver.importer.transform.TransformChain",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method package filter(transforms List<VectorTransform>, type Class<T>) : List<T> from class org.geoserver.importer.transform.VectorTransformChain to protected filter(transforms List<? extends ImportTransform>, type Class<T>) : List<T> from class org.geoserver.importer.transform.TransformChain",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable fileList : File[] in method public prepare(m ProgressMonitor) : void from class org.geoserver.importer.Directory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter task : ImportTask to item : ImportTask in method public pre(item ImportTask, data ImportData) : void in class org.geoserver.importer.transform.TransformChain",
    "comment" : "<p>Method pre(item ImportTask, data ImportData) has been pulled up from subclass org.geoserver.importer.transform.VectorTransformChain with the same parameter name for item.</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type tx : VectorTransform to tx : ImportTransform in method protected error(tx ImportTransform, e Exception) : void from class org.geoserver.importer.transform.TransformChain",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type transforms : List<VectorTransform> to transforms : List<? extends ImportTransform> in method protected filter(transforms List<? extends ImportTransform>, type Class<T>) : List<T> from class org.geoserver.importer.transform.TransformChain",
    "comment" : "<p>Similar to method 'error'&nbsp;</p><p>It is move and change paramter type. Is this what is expected?</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface org.geoserver.importer.transform.PostTransform from class org.geoserver.importer.transform.CreateIndexTransform",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package error(tx VectorTransform, e Exception) : void from class org.geoserver.importer.transform.VectorTransformChain to protected error(tx ImportTransform, e Exception) : void from class org.geoserver.importer.transform.TransformChain",
    "comment" : "<p>is pull up&nbsp;</p><p><a href='../../../commit-refactorings/1117213'>http://refactoring.encs.concordia.ca/oracle/commit-refactorings/1117213</a></p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to protected in method protected error(tx ImportTransform, e Exception) : void from class org.geoserver.importer.transform.TransformChain",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to protected in method protected filter(transforms List<? extends ImportTransform>, type Class<T>) : List<T> from class org.geoserver.importer.transform.TransformChain",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tx : VectorTransform to tx : ImportTransform in method protected filter(transforms List<? extends ImportTransform>, type Class<T>) : List<T> from class org.geoserver.importer.transform.TransformChain",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tx : PostVectorTransform to tx : PostTransform in method public post(task ImportTask, data ImportData) : void from class org.geoserver.importer.transform.TransformChain",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tx : PreVectorTransform to tx : PreTransform in method public pre(item ImportTask, data ImportData) : void from class org.geoserver.importer.transform.TransformChain",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6443
}, {
  "id" : 1117231,
  "repository" : "https://github.com/spring-projects/spring-boot.git",
  "sha1" : "cb98ee25ff52bf97faebe3f45cdef0ced9b4416e",
  "url" : "https://github.com/spring-projects/spring-boot/commit/cb98ee25ff52bf97faebe3f45cdef0ced9b4416e",
  "author" : "Stephane Nicoll",
  "time" : "6/17/15 4:27 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private load(config Class<?>, environment String...) : void extracted from public overrideMessageCodesFormat() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "It's pure even though there are some changes in the logic. The thing is one List has been added, and there are some changes for making the Extract Method kind of generic."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(config Class<?>, environment String...) : void extracted from public overrideLocale() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "It's pure even though there are some changes in the logic. The thing is one List has been added, and there are some changes for making the Extract Method kind of generic."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(config Class<?>, environment String...) : void extracted from public overrideDateFormat() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "It's pure even though there are some changes in the logic. The thing is one List has been added, and there are some changes for making the Extract Method kind of generic."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(environment String...) : void extracted from public resourceHandlerMappingDisabled() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "It's pure even though there are some changes in the logic. The thing is one List has been added, and there are some changes for making the Extract Method kind of generic."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(config Class<?>, environment String...) : void extracted from public noLocaleResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "addEnvironment method has not been called in the source method, but it's been called in the extracted method"
      }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(config Class<?>, environment String...) : void extracted from public resourceHandlerMappingOverrideAll() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "addEnvironment method has not been called in the source method, but it's been called in the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(config Class<?>, environment String...) : void extracted from public noDateFormat() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "addEnvironment method has not been called in the source method, but it's been called in the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(config Class<?>, environment String...) : void extracted from public customContentNegotiatingViewResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "addEnvironment method has not been called in the source method, but it's been called in the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(config Class<?>, environment String...) : void extracted from public customViewResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "addEnvironment method has not been called in the source method, but it's been called in the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(environment String...) : void extracted from public faviconMappingDisabled() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Kind of nested Extract Method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(config Class<?>, environment String...) : void extracted from public resourceHandlerMappingOverrideWebjars() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "addEnvironment method has not been called in the source method, but it's been called in the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(environment String...) : void extracted from public customAsyncRequestTimeout() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Kind of nested Extract Method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(config Class<?>, environment String...) : void extracted from public noMessageCodesResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "addEnvironment method has not been called in the source method, but it's been called in the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(environment String...) : void extracted from public ignoreDefaultModelOnRedirectIsTrue() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "addEnvironment method has not been called in the source method, but it's been called in the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(environment String...) : void extracted from public handerAdaptersCreated() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "addEnvironment method has not been called in the source method, but it's been called in the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(environment String...) : void extracted from public handerMappingsCreated() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "addEnvironment method has not been called in the source method, but it's been called in the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(environment String...) : void extracted from public resourceHandlerMapping() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "addEnvironment method has not been called in the source method, but it's been called in the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(environment String...) : void extracted from public faviconMapping() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "addEnvironment method has not been called in the source method, but it's been called in the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(environment String...) : void extracted from public defaultAsyncRequestTimeout() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "addEnvironment method has not been called in the source method, but it's been called in the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(config Class<?>, environment String...) : void extracted from public faviconMappingDisabled() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Just because the line sequence has been changed? I think it's Extract Method and it's pure also!"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(config Class<?>, environment String...) : void extracted from public resourceHandlerMappingDisabled() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Just because the line sequence has been changed? I think it's Extract Method and it's pure also!"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private load(config Class<?>, environment String...) : void extracted from public customAsyncRequestTimeout() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Just because the line sequence has been changed? I think it's Extract Method and it's pure also!"
    }
  } ],
  "refDiffExecutionTime" : 2439
}, {
  "id" : 1117232,
  "repository" : "https://github.com/spring-projects/spring-boot.git",
  "sha1" : "b47634176fa48ad925f79886c6aaca225cb9af64",
  "url" : "https://github.com/spring-projects/spring-boot/commit/b47634176fa48ad925f79886c6aaca225cb9af64",
  "author" : "izeye",
  "time" : "6/17/15 2:03 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private findAll(predicate Predicate<String>) : Iterable<Metric<?>> extracted from public findAll() : Iterable<Metric<?>> in class org.springframework.boot.actuate.metrics.buffer.BufferMetricReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private findAll(predicate Predicate<String>) : Iterable<Metric<?>> extracted from public findAll(prefix String) : Iterable<Metric<?>> in class org.springframework.boot.actuate.metrics.buffer.BufferMetricReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Attribute",
    "description" : "Parameterize Attribute all : Predicate<String> to predicate : Predicate<String> in method private findAll(predicate Predicate<String>) : Iterable<Metric<?>> from class org.springframework.boot.actuate.metrics.buffer.BufferMetricReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3235
}, {
  "id" : 1117296,
  "repository" : "https://github.com/VoltDB/voltdb.git",
  "sha1" : "c9b2006381301c99b66c50c4b31f329caac06137",
  "url" : "https://github.com/VoltDB/voltdb/commit/c9b2006381301c99b66c50c4b31f329caac06137",
  "author" : "Ning Shi",
  "time" : "6/16/15 3:01 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private open(forWrite boolean, truncate boolean) : void extracted from public open(forWrite boolean) : void in class org.voltdb.utils.PBDRegularSegment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Contains Add Parameter"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private open(forWrite boolean, truncate boolean) : void extracted from public open(forWrite boolean) : void in class org.voltdb.utils.PBDMMapSegment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "One new condition has been added"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter count : int in method private initNumEntries(count int, size int) : void from class org.voltdb.utils.PBDMMapSegment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter size : int in method private initNumEntries(count int, size int) : void from class org.voltdb.utils.PBDMMapSegment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter count : int in method private initNumEntries(count int, size int) : void from class org.voltdb.utils.PBDRegularSegment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter size : int in method private initNumEntries(count int, size int) : void from class org.voltdb.utils.PBDRegularSegment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1117304,
  "repository" : "https://github.com/graphhopper/graphhopper.git",
  "sha1" : "7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
  "url" : "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
  "author" : "Peter",
  "time" : "6/17/15 5:42 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected edgeCount : int from class com.graphhopper.storage.GraphHopperStorage to protected edgeCount : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private flagsSizeIsLong : boolean from class com.graphhopper.storage.GraphHopperStorage to package flagsSizeIsLong : boolean from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_ELE : int from class com.graphhopper.storage.GraphHopperStorage to protected N_ELE : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package internalEdgeDisconnect(edgeToRemove int, edgeToUpdatePointer long, baseNode int, adjNode int) : long from class com.graphhopper.storage.GraphHopperStorage to package internalEdgeDisconnect(edgeToRemove int, edgeToUpdatePointer long, baseNode int, adjNode int) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private removedNodes : GHBitSet from class com.graphhopper.storage.GraphHopperStorage to private removedNodes : GHBitSet from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_ADDITIONAL : int from class com.graphhopper.storage.GraphHopperStorage to protected E_ADDITIONAL : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private NO_NODE : int from class com.graphhopper.storage.GraphHopperStorage to private NO_NODE : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private initialized : boolean from class com.graphhopper.storage.GraphHopperStorage to private initialized : boolean from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_NODEA : int from class com.graphhopper.storage.GraphHopperStorage to protected E_NODEA : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package bounds : BBox from class com.graphhopper.storage.GraphHopperStorage to package bounds : BBox from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_ADDITIONAL : int from class com.graphhopper.storage.GraphHopperStorage to protected N_ADDITIONAL : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected nodes : DataAccess from class com.graphhopper.storage.GraphHopperStorage to protected nodes : DataAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private wayGeometry : DataAccess from class com.graphhopper.storage.GraphHopperStorage to package wayGeometry : DataAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getDebugInfo(node int, area int) : String from class com.graphhopper.storage.GraphHopperStorage to public getDebugInfo(node int, area int) : String from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_LAT : int from class com.graphhopper.storage.GraphHopperStorage to protected N_LAT : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private maxGeoRef : int from class com.graphhopper.storage.GraphHopperStorage to private maxGeoRef : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected createSingleEdge(edgeId int, nodeId int) : SingleEdge from class com.graphhopper.storage.GraphHopperStorage to protected createSingleEdge(edgeId int, nodeId int) : SingleEdge from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract class on top"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getDist(pointer long) : double from class com.graphhopper.storage.GraphHopperStorage to private getDist(pointer long) : double from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_LON : int from class com.graphhopper.storage.GraphHopperStorage to protected N_LON : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeAccess : NodeAccess from class com.graphhopper.storage.GraphHopperStorage to package nodeAccess : NodeAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected setNodesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setNodesHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected loadNodesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadNodesHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private nextEdge() : int from class com.graphhopper.storage.GraphHopperStorage to private nextEdge() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeCount : int from class com.graphhopper.storage.GraphHopperStorage to protected nodeCount : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_LINKB : int from class com.graphhopper.storage.GraphHopperStorage to protected E_LINKB : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected initStorage() : void from class com.graphhopper.storage.GraphHopperStorage to package initStorage() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private edgeEntryIndex : int from class com.graphhopper.storage.GraphHopperStorage to private edgeEntryIndex : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private MAX_EDGES : int from class com.graphhopper.storage.GraphHopperStorage to private MAX_EDGES : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package extStorage : GraphExtension from class com.graphhopper.storage.GraphHopperStorage to package extStorage : GraphExtension from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_LINKA : int from class com.graphhopper.storage.GraphHopperStorage to protected E_LINKA : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private ensureEdgeIndex(edgeIndex int) : void from class com.graphhopper.storage.GraphHopperStorage to private ensureEdgeIndex(edgeIndex int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "One line has been added to the child version"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private ensureGeometry(bytePos long, byteLength int) : void from class com.graphhopper.storage.GraphHopperStorage to private ensureGeometry(bytePos long, byteLength int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected setEdgesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setEdgesHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_EDGE_REF : int from class com.graphhopper.storage.GraphHopperStorage to protected N_EDGE_REF : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private nextGeoRef(arrayLength int) : int from class com.graphhopper.storage.GraphHopperStorage to private nextGeoRef(arrayLength int) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_FLAGS : int from class com.graphhopper.storage.GraphHopperStorage to protected E_FLAGS : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package setEdgeCount(cnt int) : void from class com.graphhopper.storage.GraphHopperStorage to package setEdgeCount(cnt int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private connectNewEdge(fromNode int, newOrExistingEdge int) : void from class com.graphhopper.storage.GraphHopperStorage to private connectNewEdge(fromNode int, newOrExistingEdge int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.GraphHopperStorage to package inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected setWayGeometryHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setWayGeometryHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected initNodeAndEdgeEntrySize() : void from class com.graphhopper.storage.GraphHopperStorage to protected initNodeAndEdgeEntrySize() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getOtherNode(nodeThis int, edgePointer long) : int from class com.graphhopper.storage.GraphHopperStorage to private getOtherNode(nodeThis int, edgePointer long) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.GraphHopperStorage to package initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_DIST : int from class com.graphhopper.storage.GraphHopperStorage to protected E_DIST : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package checkInit() : void from class com.graphhopper.storage.GraphHopperStorage to package checkInit() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private invalidateEdge(edgePointer long) : void from class com.graphhopper.storage.GraphHopperStorage to private invalidateEdge(edgePointer long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected nodeEntryBytes : int from class com.graphhopper.storage.GraphHopperStorage to protected nodeEntryBytes : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage to package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_NAME : int from class com.graphhopper.storage.GraphHopperStorage to protected E_NAME : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected getLinkPosInEdgeArea(nodeThis int, nodeOther int, edgePointer long) : long from class com.graphhopper.storage.GraphHopperStorage to protected getLinkPosInEdgeArea(nodeThis int, nodeOther int, edgePointer long) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private writeEdge(edge int, nodeThis int, nodeOther int, nextEdge int, nextEdgeOther int) : long from class com.graphhopper.storage.GraphHopperStorage to private writeEdge(edge int, nodeThis int, nodeOther int, nextEdge int, nextEdgeOther int) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected edges : DataAccess from class com.graphhopper.storage.GraphHopperStorage to protected edges : DataAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private distToInt(distance double) : int from class com.graphhopper.storage.GraphHopperStorage to private distToInt(distance double) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeEntryIndex : int from class com.graphhopper.storage.GraphHopperStorage to private nodeEntryIndex : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_GEO : int from class com.graphhopper.storage.GraphHopperStorage to protected E_GEO : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getRemovedNodes() : GHBitSet from class com.graphhopper.storage.GraphHopperStorage to package getRemovedNodes() : GHBitSet from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected loadEdgesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadEdgesHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected edgeEntryBytes : int from class com.graphhopper.storage.GraphHopperStorage to protected edgeEntryBytes : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private isTestingEnabled() : boolean from class com.graphhopper.storage.GraphHopperStorage to private isTestingEnabled() : boolean from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected nextNodeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.GraphHopperStorage to protected nextNodeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nameIndex : NameIndex from class com.graphhopper.storage.GraphHopperStorage to package nameIndex : NameIndex from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_NODEB : int from class com.graphhopper.storage.GraphHopperStorage to protected E_NODEB : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private trimToSize() : void from class com.graphhopper.storage.GraphHopperStorage to protected trimToSize() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package internalEdgeAdd(fromNodeId int, toNodeId int) : int from class com.graphhopper.storage.GraphHopperStorage to package internalEdgeAdd(fromNodeId int, toNodeId int) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private INT_DIST_FACTOR : double from class com.graphhopper.storage.GraphHopperStorage to private INT_DIST_FACTOR : double from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected nextEdgeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.GraphHopperStorage to protected nextEdgeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private stringHashCode(str String) : int from class com.graphhopper.storage.GraphHopperStorage to private stringHashCode(str String) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected loadWayGeometryHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadWayGeometryHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private bitUtil : BitUtil from class com.graphhopper.storage.GraphHopperStorage to package bitUtil : BitUtil from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package ensureNodeIndex(nodeIndex int) : void from class com.graphhopper.storage.GraphHopperStorage to package ensureNodeIndex(nodeIndex int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "One line has been added to the child version"
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.graphhopper.storage.LevelGraphStorageTest renamed to com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph(is3D boolean) : Graph renamed to protected createGHStorage(is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph(em EncodingManager, is3D boolean) : Graph renamed to protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package calcPathViaQuery(weighting String, graph Graph, fromLat double, fromLon double, toLat double, toLon double) : Path renamed to package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected newRAMGraph() : GraphStorage renamed to protected newRAMGHStorage() : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph() : GraphStorage renamed to protected createGHStorage() : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createTarjanTestGraph() : GraphStorage renamed to package createTarjanTestStorage() : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(eman EncodingManager) : GraphStorage renamed to package createStorage(eman EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createDeadEndUnvisitedNetworkGraph(em EncodingManager) : GraphStorage renamed to package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createSubnetworkTestGraph2(em EncodingManager) : GraphStorage renamed to package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createSubnetworkTestGraph() : GraphStorage renamed to package createSubnetworkTestStorage() : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createGraph(location String, enabled3D boolean) : GraphStorage renamed to public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected newGraph(dir Directory, enabled3D boolean) : GraphStorage renamed to protected newGHStorage(dir Directory, enabled3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getGraph() : GraphStorage renamed to public getGraphHopperStorage() : GraphHopperStorage in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setGraph(graph GraphStorage) : void renamed to public setGraphHopperStorage(ghStorage GraphHopperStorage) : void in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(dir Directory, encodingManager EncodingManager, is3D boolean) : Graph renamed to package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.index.AbstractLocationIndexTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected newGraph(dir Directory, is3D boolean) : GraphStorage renamed to protected newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph(em EncodingManager) : GraphStorage renamed to protected createStorage(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createGraph(location String, is3D boolean) : GraphStorage renamed to public createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphStorageViaMMapTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createTestGraph() : Graph renamed to protected createTestStorage() : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setAdditionalEdgeField(edgePointer long, value int) : void extracted from public setAdditionalEdgeField(edgePointer long, value int) : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.graphhopper.storage.LevelGraphStorage renamed to com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.graphhopper.storage.GraphExtension.NoExtendedStorage renamed to com.graphhopper.storage.GraphExtension.NoOpExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph(em EncodingManager, is3D boolean) : LevelGraph renamed to protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(dir Directory, encodingManager EncodingManager, is3D boolean) : LevelGraph renamed to package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package guessStorage(g Graph, outdir Directory, encodingManager EncodingManager) : GraphStorage renamed to public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, GumTreeDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph() : LevelGraph renamed to package createGHStorage() : GraphHopperStorage in class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public newGraph(dir Directory, is3D boolean) : GraphStorage renamed to public newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getAdjNode() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getAdjNode() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getBaseNode() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getBaseNode() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public toString() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getAdjNode() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getAdjNode() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getBaseNode() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getBaseNode() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getEdge() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getEdge() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getEdgePointer() : long from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to private getEdgePointer() : long from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public toString() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "original class moved to antoher class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public next() : boolean from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public next() : boolean from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected setEdgeId(edgeId int) : void from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to protected setEdgeId(edgeId int) : void from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "the original Class moved to another class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public next() : boolean from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public next() : boolean from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setBaseNode(baseNode int) : EdgeIterator from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setBaseNode(baseNode int) : EdgeIterator from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getEdge() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getEdge() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getName() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getName() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "In reality method getName() from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "<p>The inner class has moved and contains the method which is marked as moved</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getDistance() : double from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getDistance() : double from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getDistance() : double from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getDistance() : double from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "In reality method getDistance() from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getAdditionalField() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getAdditionalField() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getAdditionalField() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getAdditionalField() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "original class moved to another class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getCount() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getCount() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "In reality method copyPropertiesTo(edge EdgeIteratorState) from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public fetchWayGeometry(mode int) : PointList from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public fetchWayGeometry(mode int) : PointList from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public fetchWayGeometry(type int) : PointList from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public fetchWayGeometry(type int) : PointList from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "In reality method setWayGeometry(pillarNodes PointList) from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setFlags(fl long) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setFlags(fl long) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setFlags(flags long) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setFlags(flags long) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getGraph(ghStorage GraphHopperStorage) : Graph extracted from public testTwoWeightsPerEdge2() : void in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "Not Reported bt RM"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getGraph(ghStorage GraphHopperStorage) : Graph extracted from public testWithCoordinates() : void in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "Not Reported bt RM"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getGraph(ghStorage GraphHopperStorage) : LevelGraph extracted from public createFactory(g Graph, opts AlgorithmOptions) : RoutingAlgorithmFactory in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "It will be hard to detect, it needs semantic analysis.",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "Not Reported bt RM"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package close() : void extracted from public close() : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package create(initSize long) : void extracted from public create(byteCount long) : GraphStorage in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package flush() : void extracted from public flush() : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package loadExisting(dim String) : void extracted from public loadExisting() : boolean in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package setSegmentSize(bytes int) : void extracted from public setSegmentSize(bytes int) : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package toDetailsString() : String extracted from public toDetailsString() : String in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public isCHPossible() : boolean extracted from public toString() : String in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public isCHPossible() : boolean extracted from package _copyTo(clonedG GraphHopperStorage) : Graph in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "The  statement in isCHPossible() does not match to any statements in  _copyTo(clonedG GraphHopperStorage)",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeA : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to private nodeA : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeB : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to private nodeB : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package baseNode : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package baseNode : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package edgeId : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package edgeId : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package nextEdge : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package nextEdge : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private reverse : boolean from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to private reverse : boolean from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected edgePointer : long from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to protected edgePointer : long from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private maxEdges : long from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to private maxEdges : long from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package reverse : boolean from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package reverse : boolean from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package filter : EdgeFilter from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package filter : EdgeFilter from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package edgePointer : long from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package edgePointer : long from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package adjNode : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package adjNode : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package calcPathViaQuery(graph Graph, fromLat double, fromLon double, toLat double, toLon double) : Path renamed to package calcPathViaQuery_(ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.graphhopper.storage.GraphHopperStorage.EdgeIterable moved to com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator moved to com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testCalcShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testWeightLimit() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_FromEqualsTo() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graphShortest : Graph to ghStorage : GraphHopperStorage in method public testCalcFootPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_WithCoordinates() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testWikipediaShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter graph : Graph to ghStorage : GraphHopperStorage in method package calcPath(ghStorage GraphHopperStorage, fromNode1 int, fromNode2 int, toNode1 int, toNode2 int) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable g : LevelGraphStorage to lg : LevelGraphImpl in method public testGetWeightIfAdvancedEncoder() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable lg : LevelGraph to ghStorage : GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable g : Graph to ghStorage : GraphHopperStorage in method public testBaseGraph() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method public createFactory(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter tmpGraph : GraphStorage to ghStorage : GraphHopperStorage in method protected createReader(ghStorage GraphHopperStorage) : DataReader from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter graph : GraphStorage to ghStorage : GraphHopperStorage in method public setGraphHopperStorage(ghStorage GraphHopperStorage) : void from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : LevelGraph to baseGraph : Graph in method public PrepareContractionHierarchies(dir Directory, baseGraph Graph, levelGraph LevelGraph, encoder FlagEncoder, weighting Weighting, traversalMode TraversalMode) from class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : GraphStorage to ghStorage : GraphHopperStorage in method public testEstimatedCenter() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : GraphStorage to graph : GraphHopperStorage in method public TarjansStronglyConnectedComponentsAlgorithm(graph GraphHopperStorage, edgeFilter EdgeFilter) from class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : GraphStorage to ghStorage : GraphHopperStorage in method public testGetRestrictionAsEntries() : void from class com.graphhopper.reader.OSMTurnRelationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : GraphStorage to ghStorage : GraphHopperStorage in method public PrepareRoutingSubnetworks(ghStorage GraphHopperStorage, em EncodingManager) from class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute graph : GraphStorage to ghStorage : GraphHopperStorage in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute graphStorage : GraphStorage to graph : Graph in class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute g : GraphStorage to graph : GraphHopperStorage in class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute g : GraphStorage to baseGraph : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute level : boolean to levelGraph : boolean in class com.graphhopper.storage.GraphBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute graphStorage : GraphStorage to ghStorage : GraphStorage in class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable ghStorage : GraphHopperStorage in method public testRelation() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable ghStorage : GraphHopperStorage in method public testTurnFlagCombination() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter bothDirections : boolean to bothDirection : boolean in method public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph",
    "comment" : "<p>Move Method public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph to public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage<br /><br /> Move Method public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage to public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package abstract createGraph(location String, is3D boolean) : GraphStorage renamed to package abstract createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method public abstract createFactory(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : LevelGraph to levelGraph : LevelGraph in method public PrepareContractionHierarchies(dir Directory, baseGraph Graph, levelGraph LevelGraph, encoder FlagEncoder, weighting Weighting, traversalMode TraversalMode) from class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter storage : GraphStorage to ghStorage : GraphHopperStorage in method public OSMReader(ghStorage GraphHopperStorage) from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method package createAlgos(ghStorage GraphHopperStorage, idx LocationIndex, encoder FlagEncoder, withCh boolean, tMode TraversalMode, weighting Weighting, manager EncodingManager) : List<AlgoHelperEntry> from class com.graphhopper.routing.RoutingAlgorithmIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : GraphStorage to g : GraphHopperStorage in method protected loadGraph(g GraphHopperStorage) : GraphHopper from class com.graphhopper.GraphHopper",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : GraphStorage to ghStorage : GraphHopperStorage in method public setGraphHopperStorage(ghStorage GraphHopperStorage) : void from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type tmpGraph : GraphStorage to ghStorage : GraphHopperStorage in method protected createReader(ghStorage GraphHopperStorage) : DataReader from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type storage : GraphStorage to ghStorage : GraphHopperStorage in method public OSMReader(ghStorage GraphHopperStorage) from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : GraphStorage to ghStorage : GraphHopperStorage in method public PrepareRoutingSubnetworks(ghStorage GraphHopperStorage, em EncodingManager) from class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : GraphStorage to graph : GraphHopperStorage in method public TarjansStronglyConnectedComponentsAlgorithm(graph GraphHopperStorage, edgeFilter EdgeFilter) from class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type that : GraphHopperStorage to that : BaseGraph in method public GHNodeAccess(that BaseGraph, withElevation boolean) from class com.graphhopper.storage.GHNodeAccess",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : GraphStorage to graph : Graph in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.TurnCostExtension",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected createReader(tmpGraph GraphHopperStorage) : DataReader from class com.graphhopper.reader.OSMReaderTest.GraphHopperTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.AStarBidirectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.AStarTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to g : GraphHopperStorage in method protected createAlgo(g GraphHopperStorage) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : Graph to ghStorage : GraphHopperStorage in method package calcPath(ghStorage GraphHopperStorage, fromNode1 int, fromNode2 int, toNode1 int, toNode2 int) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.DijkstraBidirectionRefTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.DijkstraOneToManyTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.DijkstraTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method package createAlgos(ghStorage GraphHopperStorage, idx LocationIndex, encoder FlagEncoder, withCh boolean, tMode TraversalMode, weighting Weighting, manager EncodingManager) : List<AlgoHelperEntry> from class com.graphhopper.routing.RoutingAlgorithmIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method public createFactory(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : LevelGraphStorage to g : LevelGraph in method package initUnpackingGraph(g LevelGraph, w Weighting) : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : GraphStorage to g : GraphHopperStorage in method private printGraphDetails(g GraphHopperStorage, vehicleStr String) : void from class com.graphhopper.tools.Measurement",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : GraphStorage to graph : Graph in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method public abstract createFactory(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public getGraphHopperStorage() : GraphHopperStorage from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraphStorage to LevelGraph in method public levelGraphBuild() : LevelGraph from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraphStorage to LevelGraph in method public levelGraphCreate() : LevelGraph from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public build() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public create() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public load() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public create(byteCount long) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package newGraph(directory String, encodingManager EncodingManager, is3D boolean, turnRestrictionsImport boolean) : GraphHopperStorage from class com.graphhopper.reader.OSMReaderTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method protected createWikipediaTestGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method public getMatrixAlikeGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method private createMatrixAlikeGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method protected createGHStorage(is3D boolean) : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method protected createTestStorage() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected createStorage(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraph to GraphHopperStorage in method protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraph to GraphHopperStorage in method package createExampleGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraph to GraphHopperStorage in method package createGHStorage() : GraphHopperStorage from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createStorage(eman EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createSubnetworkTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createTarjanTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected createGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected newRAMGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected newGHStorage(dir Directory, enabled3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public createGHStorage(location String, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphStorageViaMMapTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.index.AbstractLocationIndexTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraph to GraphHopperStorage in method package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package abstract createGHStorage(location String, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type graph : GraphStorage to ghStorage : GraphHopperStorage in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type graphStorage : GraphStorage to graph : Graph in class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : LevelGraph to baseGraph : Graph in method public PrepareContractionHierarchies(dir Directory, baseGraph Graph, levelGraph LevelGraph, encoder FlagEncoder, weighting Weighting, traversalMode TraversalMode) from class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type g : GraphStorage to baseGraph : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type g : GraphStorage to graph : GraphHopperStorage in class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to ghStorage : GraphHopperStorage in method public testEstimatedCenter() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to ghStorage : GraphHopperStorage in method public testGetRestrictionAsEntries() : void from class com.graphhopper.reader.OSMTurnRelationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testCalcShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testWeightLimit() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graphShortest : Graph to ghStorage : GraphHopperStorage in method public testCalcFootPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testWikipediaShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_FromEqualsTo() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_WithCoordinates() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : Graph to ghStorage : GraphHopperStorage in method public testBaseGraph() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type lg : LevelGraph to ghStorage : GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to lg : LevelGraphImpl in method public testGetWeightIfAdvancedEncoder() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type newGraph : GraphStorage to newGraph : GraphHopperStorage in method protected optimize() : void from class com.graphhopper.GraphHopper",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type prepareGraph : LevelGraph to prepareGraph : LevelGraphImpl in class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type that : GraphHopperStorage to that : BaseGraph in class com.graphhopper.storage.GHNodeAccess",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public build() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public load() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public testLoad() : void from class com.graphhopper.GraphHopperAPITest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public testDisconnected179() : void from class com.graphhopper.GraphHopperAPITest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public testMain() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : Graph in method public testTurnRestrictions() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected importData() : DataReader from class com.graphhopper.reader.OSMReaderTest.GraphHopperTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type matrixGraph : Graph to matrixGraph : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testWeightLimit_issue380() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graphShortest : Graph to graphShortest : GraphHopperStorage in method public testCalcFastestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graphFastest : Graph to graphFastest : GraphHopperStorage in method public testCalcFastestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testNoPathFound() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testBidirectional() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testBidirectional2() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testCannotCalculateSP() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testDirectedGraphBug1() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testDirectedGraphBug2() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testWithCoordinates() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testViaEdges_BiGraph() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testViaEdges_SpecialCases() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testQueryGraphAndFastest() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public test0SpeedButUnblocked_Issue242() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method protected createWikipediaTestGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method protected createTestStorage() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : Graph to g : GraphHopperStorage in method public testIssue239_and362() : void from class com.graphhopper.routing.DijkstraOneToManyTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testBasicTurnRestriction() : void from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testUTurns() : void from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testBasicTurnCosts() : void from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testFound() : void from class com.graphhopper.routing.PathTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testTime() : void from class com.graphhopper.routing.PathTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testWayList() : void from class com.graphhopper.routing.PathTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type g : GraphStorage to g : GraphHopperStorage in class com.graphhopper.routing.QueryGraphTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type preparedMatrixGraph : Graph to preparedMatrixGraph : GraphHopperStorage in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : Graph to g : GraphHopperStorage in method public testBaseGraphMultipleVehicles() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testShortestPathSkipNode() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testShortestPathSkipNode2() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testShortestPathLimit() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testAddShortcuts() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testDirectedGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testDirectedGraph2() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testDirectedGraph3() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testRoundaboutUnpacking() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : GraphHopperStorage in method public testFindShortcuts_Roundabout() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : GraphHopperStorage in method public testUnpackingOrder() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : GraphHopperStorage in method public testUnpackingOrder_Fastest() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testCircleBug() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testBug178() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method package createExampleGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testFindSubnetworks() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testKeepLargestNetworks() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testRemoveSubnetworkIfOnlyOneVehicle() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testRemoveDeadEndUnvisitedNetworks() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testTarjan() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testNodeOrderingRegression() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createSubnetworkTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createTarjanTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type graph : GraphStorage to graph : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public testCopyTo() : void from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public createGHStorage(location String, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphStorageViaMMapTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testLevelGraph() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package start(args CmdArgs) : void from class com.graphhopper.tools.Measurement",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type baseGraph : Graph to baseGraph : BaseGraph in class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testCannotBeLoadedWithNormalGraphHopperStorageClass() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable queryGraph : QueryGraph to routingGraph : Graph in method protected getPaths(request GHRequest, rsp GHResponse) : List<Path> in class com.graphhopper.GraphHopper",
    "comment" : "<p>queryGraph is composed of routingGraph<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>QueryGraph</span> queryGraph <span class='pl-k'>=</span> <span class='pl-k'>new</span> <span class='pl-smi'>QueryGraph</span>(routingGraph);</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute lg : LevelGraph to listener : InternalGraphEventListener in class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter lg : LevelGraph to listener : InternalGraphEventListener in method public BaseGraph(dir Directory, encodingManager EncodingManager, withElevation boolean, listener InternalGraphEventListener, internalPropAccess InternalGraphPropertyAccess, extendedStorage GraphExtension) in class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter edgeIterState : EdgeIteratorState to from : EdgeIteratorState in method package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState in class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter edgeIterState : EdgeIteratorState to to : EdgeIteratorState in method package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState in class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter list : PointList to pillarNodes : PointList in method public setWayGeometry(pillarNodes PointList) : EdgeIteratorState in class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "<p>method&nbsp;setWayGeometry() is moved from&nbsp;GraphHopperStorage to BaseGraph with the same parameter name</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute bitUtil : BitUtil to baseGraph : BaseGraph in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "<p>GraphHopperStorage has a containment relationship with BaseGraph after refactoring, and bitUtil is moved to BaseGraph</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter sizeInBytes : int to enableCH : boolean in method public GraphHopperStorage(enableCH boolean, dir Directory, encodingManager EncodingManager, withElevation boolean, extendedStorage GraphExtension) in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter name : String to clazz : Class<T> in method public getGraph(clazz Class<T>) : T in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to store : GraphHopperStorage in method public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method protected getGraph(ghStorage GraphHopperStorage) : LevelGraph in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "<p>getGraph() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable g : LevelGraph to lg : LevelGraph in method public testMoreComplexGraph() : void in class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "<p>lg is created through g<br /><span class='pl-smi'>LevelGraph</span> lg <span class='pl-k'>=</span> g<span class='pl-k'>.</span>getGraph(<span class='pl-smi'>LevelGraph</span><span class='pl-k'>.</span>class);</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable lg : LevelGraph to g : GraphHopperStorage in method public testSortHighLevelFirst() : void in class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : "<p>lg is created through g<br /><span class='pl-k'>final</span> <span class='pl-smi'>LevelGraph</span> lg <span class='pl-k'>=</span> g<span class='pl-k'>.</span>getGraph(<span class='pl-smi'>LevelGraph</span><span class='pl-k'>.</span>class);</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type lg : LevelGraph to listener : InternalGraphEventListener in method public BaseGraph(dir Directory, encodingManager EncodingManager, withElevation boolean, listener InternalGraphEventListener, internalPropAccess InternalGraphPropertyAccess, extendedStorage GraphExtension) in class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type sizeInBytes : int to enableCH : boolean in method public GraphHopperStorage(enableCH boolean, dir Directory, encodingManager EncodingManager, withElevation boolean, extendedStorage GraphExtension) in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to store : GraphHopperStorage in method public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method createAlgos(ghStorage GraphHopperStorage, idx LocationIndex, encoder FlagEncoder, withCh boolean, tMode TraversalMode, weighting Weighting, manager EncodingManager) : List<AlgoHelperEntry> in class com.graphhopper.routing.RoutingAlgorithmIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method protected getGraph(ghStorage GraphHopperStorage) : LevelGraph in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tmpGraph : Graph to tmpGraph : GraphHopperStorage in method private createMatrixAlikeGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testPerformance() : void from class com.graphhopper.routing.RoutingAlgorithmIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraphStorage to LevelGraph in method public create(bytes long) : LevelGraph from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nodeCount : long to bytes : long in method public create(bytes long) : LevelGraph from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to double in method public getDistance() : double in class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to long in method public getFlags() : long in class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to double in method public getDistance() : double in class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type EdgeIteratorState to T in method public getGraph(clazz Class<T>) : T in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public isCHPossible() : boolean in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type PointList to GraphHopperStorage in method public create(byteCount long) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to long in method public getCapacity() : long in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type EdgeIteratorState to BaseGraph.SingleEdge in method public createSingleEdge(edgeId int, nodeId int) : BaseGraph.SingleEdge in class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type EdgeIteratorState to BaseGraph.SingleEdge in method public createSingleEdge(edgeId int, nodeId int) : BaseGraph.SingleEdge in class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.chPropAccess",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type long to void in method public initStorage() : void in class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.listener",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method abstract createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type queryGraph : QueryGraph to routingGraph : Graph in method protected getPaths(request GHRequest, rsp GHResponse) : List<Path> in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type lg : LevelGraph to listener : InternalGraphEventListener in class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type bitUtil : BitUtil to baseGraph : BaseGraph in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type nodeAccess : NodeAccess to chGraph : LevelGraphImpl in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type hash : int to cnt : long in method public getCapacity() : long in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type iter : EdgeIterable to chPropAccess : InternalGraphPropertyAccess in method public GraphHopperStorage(enableCH boolean, dir Directory, encodingManager EncodingManager, withElevation boolean, extendedStorage GraphExtension) in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type edgePointer : long to isShortcut : boolean in method public reverseFlags(edgePointer long, flags long...) : long in class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.chPropAccess",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testTwoWeightsPerEdge() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testTwoWeightsPerEdge2() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : Graph to g : GraphHopperStorage in method public testDifferentEdgeFilter() : void from class com.graphhopper.routing.DijkstraOneToManyTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graphWithTurnCosts : GraphStorage to graphWithTurnCosts : GraphHopperStorage in method public testTurnCostsProperlyPropagated_Issue282() : void from class com.graphhopper.routing.QueryGraphTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g2 : LevelGraphStorage to g2 : LevelGraphImpl in method public testPathRecursiveUnpacking() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method private initExampleGraph() : Graph from class com.graphhopper.routing.util.Bike2WeightFlagEncoderTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method protected createGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package getCapacity() : long extracted from public getCapacity() : long in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public loadExisting() : boolean extracted from public loadExisting() : boolean in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package toDetailsString() : String extracted from public toDetailsString() : String in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(encodingManager EncodingManager) : Graph renamed to package createGHStorage(encodingManager EncodingManager) : GraphHopperStorage in class com.graphhopper.storage.index.AbstractLocationIndexTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.graphhopper.storage.GraphHopperStorage.SingleEdge moved to com.graphhopper.storage.BaseGraph.SingleEdge",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private getFlags(edgePointer long, reverse boolean) : long from class com.graphhopper.storage.GraphHopperStorage to package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private setFlags(edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.GraphHopperStorage to package setFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private setWayGeometry(pillarNodes PointList, edgePointer long, reverse boolean) : void from class com.graphhopper.storage.GraphHopperStorage to private setWayGeometry_(pillarNodes PointList, edgePointer long, reverse boolean) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private fetchWayGeometry(edgePointer long, reverse boolean, mode int, baseNode int, adjNode int) : PointList from class com.graphhopper.storage.GraphHopperStorage to private fetchWayGeometry_(edgePointer long, reverse boolean, mode int, baseNode int, adjNode int) : PointList from class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter edge : int to edgeId : int in method public SingleLevelEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.LevelGraphImpl.SingleLevelEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(location String, is3D boolean) : GraphStorage renamed to package createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "<p>abstract methods</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getNodes() : int extracted from package contractNodes() : void in class com.graphhopper.routing.ch.PrepareContractionHierarchies & moved to class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setGraphHopperStorage(ghStorage GraphHopperStorage) : void extracted from protected importData() : DataReader in class com.graphhopper.reader.OSMReaderTest.GraphHopperTest & moved to class com.graphhopper.GraphHopper",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNodeAccess() : NodeAccess renamed to protected setNodesHeader() : int in class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getBounds() : BBox renamed to protected loadEdgesHeader() : int in class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public copyTo(g Graph) : Graph renamed to public setAdditionalEdgeField(edgePointer long, value int) : void in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private inPlaceNodeRemove(removeNodeCount int) : void renamed to private _copyTo(clonedG GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected initStorage() : void renamed to public flush() : void in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected loadNodesHeader() : int renamed to public getCapacity() : long in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected setNodesHeader() : int renamed to public toString() : String in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected loadEdgesHeader() : int renamed to public getNodes() : int in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected setEdgesHeader() : int renamed to public getNodeAccess() : NodeAccess in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected loadWayGeometryHeader() : int renamed to public getBounds() : BBox in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected setWayGeometryHeader() : int renamed to public edge(a int, b int) : EdgeIteratorState in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public close() : void renamed to public getEdgeProps(edgeId int, adjNode int) : EdgeIteratorState in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isClosed() : boolean renamed to public getAllEdges() : AllEdgesIterator in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getExtension() : GraphExtension renamed to public createEdgeExplorer(filter EdgeFilter) : EdgeExplorer in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCapacity() : long renamed to public createEdgeExplorer() : EdgeExplorer in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private stringHashCode(str String) : int renamed to public getExtension() : GraphExtension in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public toString() : String renamed to public getBaseGraph() : Graph in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public reverseFlags(edgePointer long, flags long) : long from class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess.new InternalGraphPropertyAccess",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected initStorage() : void from class com.graphhopper.storage.LevelGraphStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected createSingleEdge(edge int, nodeId int) : SingleEdge from class com.graphhopper.storage.LevelGraphStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected loadEdgesHeader() : int from class com.graphhopper.storage.LevelGraphStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected setEdgesHeader() : int from class com.graphhopper.storage.LevelGraphStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : Graph in method public PrepareContractionHierarchies(dir Directory, baseGraph Graph, levelGraph LevelGraph, encoder FlagEncoder, weighting Weighting, traversalMode TraversalMode) from class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : Graph in method public AlgoHelperEntry(g Graph, baseGraph Graph, opts AlgorithmOptions, idx LocationIndex) from class com.graphhopper.routing.util.TestAlgoCollector.AlgoHelperEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter dir : Directory in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.TurnCostExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : BaseGraph in method public EdgeIterable(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, filter EdgeFilter) from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter propAccess : InternalGraphPropertyAccess in method public EdgeIterable(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, filter EdgeFilter) from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : BaseGraph in method public EdgeSkipIteratorImpl(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, filter EdgeFilter) from class com.graphhopper.storage.LevelGraphImpl.EdgeSkipIteratorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter propAccess : InternalGraphPropertyAccess in method public EdgeSkipIteratorImpl(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, filter EdgeFilter) from class com.graphhopper.storage.LevelGraphImpl.EdgeSkipIteratorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : BaseGraph in method public SingleLevelEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.LevelGraphImpl.SingleLevelEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter propAccess : InternalGraphPropertyAccess in method public SingleLevelEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.LevelGraphImpl.SingleLevelEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter tmpPropAccess : InternalGraphPropertyAccess in method package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter tmpPropAccess : InternalGraphPropertyAccess in method package setFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter dir : Directory in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getFlags() : long from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "<p>new method in new inner class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "<p>new method in new inner class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getName() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "<p>new method in new inner class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public markNodeRemoved(index int) : void from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public isNodeRemoved(index int) : boolean from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public isClosed() : boolean from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public getExtension() : GraphExtension from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toDetailsString() : String from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public reverseFlags(edgePointer long, flags long) : long from class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess.new InternalGraphPropertyAccess",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected createAlgo(g GraphHopperStorage) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package initStorage() : void from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package setFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package getRemovedNodes() : GHBitSet from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected trimToSize() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package initStorage() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter propAccess : InternalGraphPropertyAccess in method public SingleEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.BaseGraph.SingleEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : BaseGraph in method public SingleEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.BaseGraph.SingleEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package lastEdgeIndex : int from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package scDirMask : long from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected nodeCount : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package wayGeometry : DataAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package nameIndex : NameIndex from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package bitUtil : BitUtil from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package flagsSizeIsLong : boolean from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package nodeAccess : NodeAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getNodes() : int from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getNodeAccess() : NodeAccess from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getBounds() : BBox from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public edge(a int, b int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getAllEdges() : AllEdgesIterator from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getEdgeProps(edgeId int, adjNode int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public createEdgeExplorer(filter EdgeFilter) : EdgeExplorer from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public createEdgeExplorer() : EdgeExplorer from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public copyTo(g Graph) : Graph from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getExtension() : GraphExtension from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method protected newRAMGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method package setFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method protected createAlgo(g GraphHopperStorage) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public reverseFlags(edgePointer long, flags long) : long from class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess.new InternalGraphPropertyAccess",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private exitOnlyPillarNodeException : boolean from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private outExplorerMap : Map<FlagEncoder,EdgeExplorer> from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private inExplorerMap : Map<FlagEncoder,EdgeExplorer> from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type grap : GraphStorage to grap : Graph in method public init(grap Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension.NoOpExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter dir : Directory in method public init(grap Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension.NoOpExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter g : GraphStorage in method public TarjansStronglyConnectedComponentsAlgorithm(g GraphStorage, edgeFilter EdgeFilter) from class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter filter : EdgeFilter in method public createEdgeExplorer(filter EdgeFilter) : EdgeExplorer from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier final in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method package createGHStorage(encodingManager EncodingManager) : GraphHopperStorage from class com.graphhopper.storage.index.AbstractLocationIndexTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : LevelGraphImpl in method public testDisconnectEdge() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : LevelGraphImpl in method public testGetWeight() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testMoreComplexGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testFindShortcuts_Roundabout() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testLevelGraph() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testDirectedGraph2() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testAddShortcuts() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testUnpackingOrder_Fastest() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testRoundaboutUnpacking() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testDirectedGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testUnpackingOrder() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : GraphHopperStorage to storage : GraphHopperStorage in method public internalDisconnect() : void from class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable lg : LevelGraphStorage to g : GraphHopperStorage in method public testLevelGraphBug() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable g : LevelGraphStorage to storage : GraphHopperStorage in method public testPriosWhileDeleting() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to storage : GraphHopperStorage in method public testPriosWhileDeleting() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type lg : LevelGraphStorage to g : GraphHopperStorage in method public testLevelGraphBug() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected createReader(tmpGraph GraphHopperStorage) : DataReader from class com.graphhopper.reader.OSMReaderTest.testWithBounds.hopper.new GraphHopperTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected createReader(tmpGraph GraphHopperStorage) : DataReader from class com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM.hopper.importOrLoad.setElevation.new GraphHopperTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable res : long to resFlags : long in method package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class com.graphhopper.storage.BaseGraph.SingleEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method package guessStorage(g Graph, outdir Directory, encodingManager EncodingManager) : GraphStorage inlined to public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type store : GraphStorage to store : GraphHopperStorage in method public newStorage(store GraphHopperStorage) : GraphHopperStorage from class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public newStorage(store GraphHopperStorage) : GraphHopperStorage from class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph to public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage to public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testMoreComplexGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3012
}, {
  "id" : 1117448,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "5ff305abb3068e420d8e54a796591d75acc8b8be",
  "url" : "https://github.com/SonarSource/sonarqube/commit/5ff305abb3068e420d8e54a796591d75acc8b8be",
  "author" : "Duarte Meneses",
  "time" : "6/15/15 12:04 PM",
  "refactorings" : [ {
    "type" : "Extract Interface",
    "description" : "Extract Interface org.sonar.api.utils.ProjectTempFolder from class org.sonar.api.utils.internal.DefaultTempFolder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface org.sonar.api.utils.ProjectTempFolder from class org.sonar.api.utils.internal.JUnitTempFolder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1117550,
  "repository" : "https://github.com/brianfrankcooper/YCSB.git",
  "sha1" : "0b024834549c53512ef18bce89f60ef9225d4819",
  "url" : "https://github.com/brianfrankcooper/YCSB/commit/0b024834549c53512ef18bce89f60ef9225d4819",
  "author" : "nitsanw",
  "time" : "6/17/15 1:00 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private throttle(currTimeMillis long) : void extracted from public run() : void in class com.yahoo.ycsb.ClientThread",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable st : long to currTimeMillis : long in method private throttle(currTimeMillis long) : void from class com.yahoo.ycsb.ClientThread",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Attribute",
    "description" : "Extract Attribute public DEFAULT_RECORD_COUNT : String in class com.yahoo.ycsb.Client",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 320
}, {
  "id" : 1117602,
  "repository" : "https://github.com/bennidi/mbassador.git",
  "sha1" : "40e41d11d7847d660bba6691859b0506514bd0ac",
  "url" : "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
  "author" : "bennidi",
  "time" : "6/17/15 7:55 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public SyncAsync() : IBusConfiguration extracted from public testHandleMethodAccessEL() : void in class net.engio.mbassy.ConditionalHandlerTest",
    "comment" : "<p>SyncAsync(false) was extracted to<br />MessageBusTest.SyncAsync(false).addPublicationErrorHandler(new EmptyErrorHandler());</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class net.engio.mbassy.ConditionalHandlers renamed to net.engio.mbassy.ConditionalHandlerTest",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public SyncAsync() : IBusConfiguration extracted from public testSimpleStringCondition() : void in class net.engio.mbassy.ConditionalHandlerTest",
    "comment" : "<p>ex N move</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public SyncAsync() : IBusConfiguration extracted from public testNotMatchingAnyCondition() : void in class net.engio.mbassy.ConditionalHandlerTest",
    "comment" : "<p>ex and Move</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public SyncAsync() : IBusConfiguration extracted from public testHandleCombinedEL() : void in class net.engio.mbassy.ConditionalHandlerTest",
    "comment" : "<p>Extract and move</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public SyncAsync() : IBusConfiguration extracted from public testSimpleNumberCondition() : void in class net.engio.mbassy.ConditionalHandlerTest",
    "comment" : "<p>added</p><p>Extract and move to other class. Since RefdDiff does not detect extract and move we consider it as CTP.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable publishAndCheck : Runnable to asynchronousPublication : Runnable in method public testExceptionInHandlerInvocation() : void from class net.engio.mbassy.SyncAsyncTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute PublicationError : String to PublicationErrorHandlers : String in class net.engio.mbassy.bus.common.Properties.Handler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type message : StandardMessage to message : Object in method public handle(message Object) : void from class net.engio.mbassy.listeners.ExceptionThrowingListener",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public testSimpleStringCondition() : void from class net.engio.mbassy.ConditionalHandlers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public testSimpleNumberCondition() : void from class net.engio.mbassy.ConditionalHandlers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public testHandleCombinedEL() : void from class net.engio.mbassy.ConditionalHandlers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public testNotMatchingAnyCondition() : void from class net.engio.mbassy.ConditionalHandlers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public testHandleMethodAccessEL() : void from class net.engio.mbassy.ConditionalHandlers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected handlePublicationError(error PublicationError) : void from class net.engio.mbassy.bus.AbstractPubSubSupport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @Suite.SuiteClasses({StrongConcurrentSetTest.class,WeakConcurrentSetTest.class,SyncAsyncTest.class,SyncBusTest.MBassadorTest.class,SyncBusTest.SyncMessageBusTest.class,FilterTest.class,MetadataReaderTest.class,MethodDispatchTest.class,DeadMessageTest.class,SynchronizedHandlerTest.class,SubscriptionManagerTest.class,AsyncFIFOBusTest.class,ConditionalHandlers.class}) to @Suite.SuiteClasses({StrongConcurrentSetTest.class,WeakConcurrentSetTest.class,SyncAsyncTest.class,SyncBusTest.MBassadorTest.class,SyncBusTest.SyncMessageBusTest.class,FilterTest.class,MetadataReaderTest.class,MethodDispatchTest.class,DeadMessageTest.class,SynchronizedHandlerTest.class,SubscriptionManagerTest.class,AsyncFIFOBusTest.class,ConditionalHandlerTest.class}) in class net.engio.mbassy.AllTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1117635,
  "repository" : "https://github.com/facebook/buck.git",
  "sha1" : "f26d234e8d3458f34454583c22e3bd5f4b2a5da8",
  "url" : "https://github.com/facebook/buck/commit/f26d234e8d3458f34454583c22e3bd5f4b2a5da8",
  "author" : "Thomas Gummerer",
  "time" : "6/16/15 4:56 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public getDevices() : List<IDevice> extracted from public adbCall(adbCallable AdbCallable) : boolean in class com.facebook.buck.android.AdbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Combining two if conditions."
    }
  } ],
  "refDiffExecutionTime" : 2012
}, {
  "id" : 1117640,
  "repository" : "https://github.com/facebook/buck.git",
  "sha1" : "0f8a0af934f09deef1b58e961ffe789c7299bcc1",
  "url" : "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
  "author" : "Andrew Gallagher",
  "time" : "6/16/15 4:55 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class com.facebook.buck.cxx.AbstractCxxPreprocessorInput.ConflictingHeadersException moved to com.facebook.buck.cxx.AbstractCxxHeaders.ConflictingHeadersException",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private addAllEntriesToIncludeMap(destination Map<Path,SourcePath>, source Map<Path,SourcePath>) : void from class com.facebook.buck.cxx.AbstractCxxPreprocessorInput to public addAllEntriesToIncludeMap(destination Map<Path,SourcePath>, source Map<Path,SourcePath>) : void from class com.facebook.buck.cxx.AbstractCxxHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public combineCxxPreprocessorInput(params BuildRuleParams, cxxPlatform CxxPlatform, preprocessorFlags ImmutableMultimap<CxxSource.Type,String>, prefixHeaders ImmutableList<SourcePath>, headerSymlinkTrees ImmutableList<SymlinkTree>, frameworkSearchPaths ImmutableList<Path>, cxxPreprocessorInputFromDeps Iterable<CxxPreprocessorInput>) : CxxPreprocessorInput renamed to public collectCxxPreprocessorInput(params BuildRuleParams, cxxPlatform CxxPlatform, preprocessorFlags ImmutableMultimap<CxxSource.Type,String>, prefixHeaders ImmutableList<SourcePath>, headerSymlinkTrees ImmutableList<SymlinkTree>, frameworkSearchPaths ImmutableList<Path>, cxxPreprocessorInputFromDeps Iterable<CxxPreprocessorInput>) : ImmutableList<CxxPreprocessorInput> in class com.facebook.buck.cxx.CxxDescriptionEnhancer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type includes : CxxHeaders to includes : ImmutableList<CxxHeaders> in method package CxxPreprocessAndCompile(params BuildRuleParams, resolver SourcePathResolver, operation CxxPreprocessAndCompileStep.Operation, preprocessor Optional<Tool>, preprocessorFlags Optional<ImmutableList<String>>, compiler Optional<Tool>, compilerFlags Optional<ImmutableList<String>>, output Path, input SourcePath, inputType CxxSource.Type, includeRoots ImmutableList<Path>, systemIncludeRoots ImmutableList<Path>, frameworkRoots ImmutableList<Path>, includes ImmutableList<CxxHeaders>, sanitizer DebugPathSanitizer) from class com.facebook.buck.cxx.CxxPreprocessAndCompile",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type includes : CxxHeaders to includes : ImmutableList<CxxHeaders> in method public preprocess(params BuildRuleParams, resolver SourcePathResolver, preprocessor Tool, flags ImmutableList<String>, output Path, input SourcePath, inputType CxxSource.Type, includeRoots ImmutableList<Path>, systemIncludeRoots ImmutableList<Path>, frameworkRoots ImmutableList<Path>, includes ImmutableList<CxxHeaders>, sanitizer DebugPathSanitizer) : CxxPreprocessAndCompile from class com.facebook.buck.cxx.CxxPreprocessAndCompile",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type includes : CxxHeaders to includes : ImmutableList<CxxHeaders> in method public preprocessAndCompile(params BuildRuleParams, resolver SourcePathResolver, preprocessor Tool, preprocessorFlags ImmutableList<String>, compiler Tool, compilerFlags ImmutableList<String>, output Path, input SourcePath, inputType CxxSource.Type, includeRoots ImmutableList<Path>, systemIncludeRoots ImmutableList<Path>, frameworkRoots ImmutableList<Path>, includes ImmutableList<CxxHeaders>, sanitizer DebugPathSanitizer, strategy CxxPreprocessMode) : CxxPreprocessAndCompile from class com.facebook.buck.cxx.CxxPreprocessAndCompile",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type cxxPreprocessorInput : CxxPreprocessorInput to cxxPreprocessorInput : ImmutableList<CxxPreprocessorInput> in method public CxxSourceRuleFactory(params BuildRuleParams, resolver BuildRuleResolver, pathResolver SourcePathResolver, cxxPlatform CxxPlatform, cxxPreprocessorInput ImmutableList<CxxPreprocessorInput>, compilerFlags ImmutableList<String>) from class com.facebook.buck.cxx.CxxSourceRuleFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type cxxPreprocessorInput : CxxPreprocessorInput to cxxPreprocessorInput : ImmutableList<CxxPreprocessorInput> in method public requirePreprocessAndCompileRules(params BuildRuleParams, resolver BuildRuleResolver, pathResolver SourcePathResolver, cxxPlatform CxxPlatform, cxxPreprocessorInput ImmutableList<CxxPreprocessorInput>, compilerFlags ImmutableList<String>, strategy CxxPreprocessMode, sources ImmutableMap<String,CxxSource>, pic PicType) : ImmutableMap<CxxPreprocessAndCompile,SourcePath> from class com.facebook.buck.cxx.CxxSourceRuleFactory",
    "comment" : "<p>This was so hard to find. I almost marked it FP.&nbsp; Phew!&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type CxxPreprocessorInput to ImmutableList<CxxPreprocessorInput> in method public collectCxxPreprocessorInput(params BuildRuleParams, cxxPlatform CxxPlatform, preprocessorFlags ImmutableMultimap<CxxSource.Type,String>, prefixHeaders ImmutableList<SourcePath>, headerSymlinkTrees ImmutableList<SymlinkTree>, frameworkSearchPaths ImmutableList<Path>, cxxPreprocessorInputFromDeps Iterable<CxxPreprocessorInput>) : ImmutableList<CxxPreprocessorInput> from class com.facebook.buck.cxx.CxxDescriptionEnhancer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type CxxHeaders to ImmutableList<CxxHeaders> in method public getIncludes() : ImmutableList<CxxHeaders> from class com.facebook.buck.cxx.CxxPreprocessAndCompile",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type includes : CxxHeaders to includes : ImmutableList<CxxHeaders> in class com.facebook.buck.cxx.CxxPreprocessAndCompile",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type cxxPreprocessorInput : CxxPreprocessorInput to cxxPreprocessorInput : ImmutableList<CxxPreprocessorInput> in class com.facebook.buck.cxx.CxxSourceRuleFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type DEFAULT_INCLUDES : CxxHeaders to DEFAULT_INCLUDES : ImmutableList<CxxHeaders> in class com.facebook.buck.cxx.CxxPreprocessAndCompileTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable entry : Map.Entry<Path,SourcePath> to input : CxxPreprocessorInput in method public apply(input CxxPreprocessorInput) : CxxHeaders in class com.facebook.buck.cxx.AbstractCxxPreprocessorInput.GET_INCLUDES",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter value1 : SourcePath to input : CxxPreprocessorInput in method public apply(input CxxPreprocessorInput) : ImmutableList<Path> in class com.facebook.buck.cxx.AbstractCxxPreprocessorInput.GET_SYSTEM_INCLUDE_ROOTS",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter buildTarget : BuildTarget to input : CxxPreprocessorInput in method public apply(input CxxPreprocessorInput) : ImmutableList<Path> in class com.facebook.buck.cxx.AbstractCxxPreprocessorInput.GET_FRAMEWORK_ROOTS",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type value1 : SourcePath to input : CxxPreprocessorInput in method public apply(input CxxPreprocessorInput) : ImmutableList<Path> in class com.facebook.buck.cxx.AbstractCxxPreprocessorInput.GET_SYSTEM_INCLUDE_ROOTS",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type buildTarget : BuildTarget to input : CxxPreprocessorInput in method public apply(input CxxPreprocessorInput) : ImmutableList<Path> in class com.facebook.buck.cxx.AbstractCxxPreprocessorInput.GET_FRAMEWORK_ROOTS",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type otherInput : CxxPreprocessorInput to otherInput : ImmutableList<CxxPreprocessorInput> in method public nonTestLibraryDepDoesNotIncludePrivateHeadersOfLibrary() : void from class com.facebook.buck.cxx.CxxDescriptionEnhancerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type combinedInput : CxxPreprocessorInput to combinedInput : ImmutableList<CxxPreprocessorInput> in method public libraryTestIncludesPrivateHeadersOfLibraryUnderTest() : void from class com.facebook.buck.cxx.CxxDescriptionEnhancerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cxxPreprocessorInputFromDependencies : CxxPreprocessorInput to cxxPreprocessorInputFromDependencies : ImmutableList<CxxPreprocessorInput> in method private requireObjects(params BuildRuleParams, ruleResolver BuildRuleResolver, pathResolver SourcePathResolver, cxxPlatform CxxPlatform, lexSources ImmutableMap<String,SourcePath>, yaccSources ImmutableMap<String,SourcePath>, preprocessorFlags ImmutableMultimap<CxxSource.Type,String>, exportedPreprocessorFlags ImmutableMultimap<CxxSource.Type,String>, prefixHeaders ImmutableList<SourcePath>, headers ImmutableMap<Path,SourcePath>, exportedHeaders ImmutableMap<Path,SourcePath>, compilerFlags ImmutableList<String>, sources ImmutableMap<String,CxxSource>, frameworkSearchPaths ImmutableList<Path>, preprocessMode CxxPreprocessMode, pic CxxSourceRuleFactory.PicType) : ImmutableMap<CxxPreprocessAndCompile,SourcePath> from class com.facebook.buck.cxx.CxxLibraryDescription",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cxxPreprocessorInput : CxxPreprocessorInput to cxxPreprocessorInput : ImmutableList<CxxPreprocessorInput> in method public createBuildRulesForCxxBinaryDescriptionArg(params BuildRuleParams, resolver BuildRuleResolver, cxxPlatform CxxPlatform, args CxxBinaryDescription.Arg, preprocessMode CxxPreprocessMode) : CxxLinkAndCompileRules from class com.facebook.buck.cxx.CxxDescriptionEnhancer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cxxPreprocessorInput : CxxPreprocessorInput to cxxPreprocessorInput : ImmutableList<CxxPreprocessorInput> in method private createExtensionBuildRule(params BuildRuleParams, ruleResolver BuildRuleResolver, cxxPlatform CxxPlatform, args A) : BuildRule from class com.facebook.buck.cxx.CxxPythonExtensionDescription",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ConflictingHeadersException to CxxHeaders in method public apply(input CxxPreprocessorInput) : CxxHeaders in class com.facebook.buck.cxx.AbstractCxxPreprocessorInput.GET_INCLUDES",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @Nonnull in parameter type : CxxSource.Type in method public load(type CxxSource.Type) : ImmutableList<String> from class com.facebook.buck.cxx.CxxSourceRuleFactory.preprocessorFlags.build",
    "comment" : "<p>load(type CxxSource.Type) is a new method in a newly added anonymous class declaration</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type ConflictingHeadersException to AbstractCxxHeaders.ConflictingHeadersException in method public concat(inputs Iterable<CxxPreprocessorInput>) : CxxPreprocessorInput from class com.facebook.buck.cxx.AbstractCxxPreprocessorInput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type Exception in method public libraryTestIncludesPrivateHeadersOfLibraryUnderTest() : void from class com.facebook.buck.cxx.CxxDescriptionEnhancerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type Exception in method public nonTestLibraryDepDoesNotIncludePrivateHeadersOfLibrary() : void from class com.facebook.buck.cxx.CxxDescriptionEnhancerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public addAllEntriesToIncludeMap(destination Map<Path,SourcePath>, source Map<Path,SourcePath>) : void from class com.facebook.buck.cxx.AbstractCxxHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : CxxPreprocessorInput.ConflictingHeadersException to e : CxxHeaders.ConflictingHeadersException in method private generateMakefile(params BuildRuleParams, resolver BuildRuleResolver) : Pair<BuildRule,Iterable<BuildRule>> from class com.facebook.buck.android.NdkLibraryDescription",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : CxxPreprocessorInput.ConflictingHeadersException to e : CxxHeaders.ConflictingHeadersException in method public createBulkBuildRule(ocamlBuckConfig OCamlBuckConfig, params BuildRuleParams, resolver BuildRuleResolver, srcs ImmutableList<OCamlSource>, isLibrary boolean, argFlags ImmutableList<String>, linkerFlags ImmutableList<String>) : AbstractBuildRule from class com.facebook.buck.ocaml.OCamlRuleBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : CxxPreprocessorInput.ConflictingHeadersException to e : CxxHeaders.ConflictingHeadersException in method public createFineGrainedBuildRule(ocamlBuckConfig OCamlBuckConfig, params BuildRuleParams, resolver BuildRuleResolver, srcs ImmutableList<OCamlSource>, isLibrary boolean, argFlags ImmutableList<String>, linkerFlags ImmutableList<String>) : AbstractBuildRule from class com.facebook.buck.ocaml.OCamlRuleBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3919
}, {
  "id" : 1117698,
  "repository" : "https://github.com/real-logic/Aeron.git",
  "sha1" : "35893c115ba23bd62a7036a33390420f074ce660",
  "url" : "https://github.com/real-logic/Aeron/commit/35893c115ba23bd62a7036a33390420f074ce660",
  "author" : "Todd L. Montgomery",
  "time" : "6/16/15 9:43 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private verifyPublicationClosed(times VerificationMode) : void inlined to public shouldErrorOnRemoveChannelOnUnknownStreamId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifyPublicationClosed(times VerificationMode) : void inlined to public shouldNotTimeoutPublicationOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifyPublicationClosed(times VerificationMode) : void inlined to public shouldTimeoutPublication() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifyExceptionLogged() : void inlined to public shouldErrorOnRemoveChannelOnUnknownSessionId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifyExceptionLogged() : void inlined to public shouldErrorOnAddSubscriptionWithInvalidUri() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifyExceptionLogged() : void inlined to public shouldErrorOnRemoveChannelOnUnknownStreamId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifyNeverSucceeds() : void inlined to public shouldErrorOnRemoveChannelOnUnknownStreamId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifyNeverSucceeds() : void inlined to public shouldErrorOnRemoveChannelOnUnknownSessionId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifyNeverSucceeds() : void inlined to public shouldErrorOnAddSubscriptionWithInvalidUri() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifySenderNotifiedOfNewPublication() : void inlined to public shouldBeAbleToAddSinglePublication() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifySenderNotifiedOfNewPublication() : void inlined to public shouldNotTimeoutPublicationOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifySenderNotifiedOfNewPublication() : void inlined to public shouldTimeoutPublication() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifyReceiverRemovesSubscription(times VerificationMode) : void inlined to public shouldNotTimeoutSubscriptionOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifyReceiverRemovesSubscription(times VerificationMode) : void inlined to public shouldTimeoutSubscription() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifyReceiverSubscribes() : void inlined to public shouldNotTimeoutSubscriptionOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private verifyReceiverSubscribes() : void inlined to public shouldTimeoutSubscription() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private processTimersUntil(condition BooleanSupplier) : long renamed to private doWorkUntil(condition BooleanSupplier) : long in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable receiveChannelEndpoint : ReceiveChannelEndpoint in method public shouldTimeoutSubscription() : void from class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable receiveChannelEndpoint : ReceiveChannelEndpoint in method public shouldNotTimeoutSubscriptionOnKeepAlive() : void from class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private verifySenderNotifiedOfNewPublication() : void renamed to public shouldBeAbleToAddSinglePublication() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldBeAbleToAddSinglePublication() : void renamed to public shouldErrorOnRemoveChannelOnUnknownStreamId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldTimeoutSubscription() : void renamed to public shouldNotTimeoutPublicationOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldNotTimeoutSubscriptionOnKeepAlive() : void renamed to public shouldTimeoutSubscription() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private verifyPublicationClosed(times VerificationMode...) : void renamed to public shouldNotTimeoutSubscriptionOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 764
}, {
  "id" : 1117765,
  "repository" : "https://github.com/GoClipse/goclipse.git",
  "sha1" : "851ab757698304e9d8d4ae24ab75be619ddae31a",
  "url" : "https://github.com/GoClipse/goclipse/commit/851ab757698304e9d8d4ae24ab75be619ddae31a",
  "author" : "Bruno Medeiros",
  "time" : "6/16/15 2:13 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public contains(otherOffset int) : boolean extracted from public inclusiveContains(otherOffset int) : boolean in class melnorme.lang.tooling.ast.SourceRange",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public contains(other SourceRange) : boolean extracted from public inclusiveContains(other SourceRange) : boolean in class melnorme.lang.tooling.ast.SourceRange",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "If we accept that inclusiveContains(other SourceRange) and contains(other SourceRange) are the same(renamed), we can say that it's pure. But, we don't have this infomation from RMiner"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getInvocationOffest() : int renamed to public getInvocationOffset() : int in class melnorme.lang.ide.ui.editor.actions.AbstractOpenElementOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute UKKNOWN : ImageHandle to UNKNOWN : ImageHandle in class melnorme.lang.ide.ui.LangElementImages",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public inclusiveContains(other SourceRange) : boolean renamed to public contains(other SourceRange) : boolean in class melnorme.lang.tooling.ast.SourceRange",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "The -contains- and -inclusiveContains- methods are exact the same (renames). We do not have this information from RMiner, so we cannot catch the purity"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public inclusiveContains(otherOffset int) : boolean renamed to public contains(otherOffset int) : boolean in class melnorme.lang.tooling.ast.SourceRange",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type CommonException in method public executeOperation() : void from class melnorme.lang.ide.ui.actions.AbstractUIOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type CommonException in method protected prepareOperation() : void from class melnorme.lang.ide.ui.actions.AbstractUIOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type CommonException in method public executeAndGetValidatedResult() : VALUE from class melnorme.lang.ide.ui.actions.CalculateValueUIOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type CommonException in method protected prepareOperation() : void from class melnorme.lang.ide.ui.editor.actions.AbstractEditorOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type CommonException in method protected prepareOperation() : void from class melnorme.lang.ide.ui.editor.actions.AbstractOpenElementOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type CommonException in method protected prepareOperation() : void from class com.googlecode.goclipse.ui.actions.GoOracleOpenDefinitionOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 902
}, {
  "id" : 1117817,
  "repository" : "https://github.com/FasterXML/jackson-databind.git",
  "sha1" : "da29a040ebae664274b28117b157044af0f525fa",
  "url" : "https://github.com/FasterXML/jackson-databind/commit/da29a040ebae664274b28117b157044af0f525fa",
  "author" : "Tatu Saloranta",
  "time" : "6/17/15 3:02 AM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private _writeCloseableValue(gen JsonGenerator, value Object, cfg SerializationConfig) : void inlined to public writeValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from protected _configAndWriteValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "It is moved to the inner class, it should be extract and move",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from private _writeCloseable(gen JsonGenerator, value Object, cfg SerializationConfig) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "It is extract and move since the method is moved to the inner class",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from public writeValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "It is moved to the inner class, it should be extract and move",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable ser : JsonSerializer<Object> to valueSer : JsonSerializer<Object> in method public serializePolymorphic(gen JsonGenerator, value Object, rootType JavaType, valueSer JsonSerializer<Object>, typeSer TypeSerializer) : void from class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter type : JavaType to rootT : JavaType in method private Prefetch(rootT JavaType, baseT JavaType, ser JsonSerializer<Object>, typeSer TypeSerializer) from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter valueType : JavaType to rootT : JavaType in method private Prefetch(rootT JavaType, baseT JavaType, ser JsonSerializer<Object>, typeSer TypeSerializer) in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter cfg : SerializationConfig to baseT : JavaType in method private Prefetch(rootT JavaType, baseT JavaType, ser JsonSerializer<Object>, typeSer TypeSerializer) in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter type : JavaType to parent : ObjectWriter in method public withBaseType(parent ObjectWriter, newType JavaType) : Prefetch in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter type : JavaType to newType : JavaType in method public withBaseType(parent ObjectWriter, newType JavaType) : Prefetch in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter typeSer : TypeSerializer to prov : DefaultSerializerProvider in method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type cfg : SerializationConfig to baseT : JavaType in method private Prefetch(rootT JavaType, baseT JavaType, ser JsonSerializer<Object>, typeSer TypeSerializer) in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type type : JavaType to parent : ObjectWriter in method public withBaseType(parent ObjectWriter, newType JavaType) : Prefetch in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type typeSer : TypeSerializer to prov : DefaultSerializerProvider in method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getValueSerializer() : JsonSerializer<Object> extracted from public SequenceWriter(prov DefaultSerializerProvider, gen JsonGenerator, closeGenerator boolean, prefetch ObjectWriter.Prefetch) in class com.fasterxml.jackson.databind.SequenceWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "<p>field access replaced with getter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getTypeSerializer() : TypeSerializer extracted from public SequenceWriter(prov DefaultSerializerProvider, gen JsonGenerator, closeGenerator boolean, prefetch ObjectWriter.Prefetch) in class com.fasterxml.jackson.databind.SequenceWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "<p>field access replaced with getter</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private Prefetch(type JavaType, ser JsonSerializer<Object>, typeSer TypeSerializer) renamed to public withBaseType(parent ObjectWriter, newType JavaType) : Prefetch in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public construct(type JavaType, typeSer TypeSerializer) : Prefetch renamed to public getValueSerializer() : JsonSerializer<Object> in class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getActiveView() : Class<?> from class com.fasterxml.jackson.databind.cfg.MapperConfigBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public toString() : String from class com.fasterxml.jackson.databind.seq.PolyMapWriter827Test.CustomKey",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter cfg : SerializationConfig in method private _writeCloseable(gen JsonGenerator, value Object, cfg SerializationConfig) : void from class com.fasterxml.jackson.databind.ObjectWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private rootType : JavaType from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private valueSerializer : JsonSerializer<Object> from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private typeSerializer : TypeSerializer from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private valueSerializer : JsonSerializer<Object> from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "<p>public final JsonSerializer&lt;Object&gt; getValueSerializer()<br />called in<br />public SequenceWriter(DefaultSerializerProvider prov, JsonGenerator gen,<br />boolean closeGenerator, ObjectWriter.Prefetch prefetch)<br />src/main/java/com/fasterxml/jackson/databind/SequenceWriter.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private typeSerializer : TypeSerializer from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : "<p>public final TypeSerializer getTypeSerializer()<br />called in<br />public SequenceWriter(DefaultSerializerProvider prov, JsonGenerator gen,<br />boolean closeGenerator, ObjectWriter.Prefetch prefetch)<br />src/main/java/com/fasterxml/jackson/databind/SequenceWriter.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseT : JavaType in method private Prefetch(rootT JavaType, baseT JavaType, ser JsonSerializer<Object>, typeSer TypeSerializer) from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter config : SerializationConfig in method protected _serializerProvider(config SerializationConfig) : DefaultSerializerProvider from class com.fasterxml.jackson.databind.ObjectWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute config : SerializationConfig to _config : SerializationConfig in method protected _serializerProvider() : DefaultSerializerProvider from class com.fasterxml.jackson.databind.ObjectWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1433
}, {
  "id" : 1117822,
  "repository" : "https://github.com/restlet/restlet-framework-java.git",
  "sha1" : "e4de9513d0a06d381b4521211cf688b77379c39d",
  "url" : "https://github.com/restlet/restlet-framework-java/commit/e4de9513d0a06d381b4521211cf688b77379c39d",
  "author" : "quilicicf",
  "time" : "6/17/15 6:09 AM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method private computeSectionName(apiDeclarationPath String) : String from class org.restlet.ext.apispark.internal.conversion.swagger.v1_2.SwaggerReader to public computeSectionName(apiDeclarationPath String) : String from class org.restlet.ext.apispark.internal.conversion.swagger.v1_2.SwaggerUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public computeSectionName(apiDeclarationPath String) : String from class org.restlet.ext.apispark.internal.conversion.swagger.v1_2.SwaggerUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1739
}, {
  "id" : 1117830,
  "repository" : "https://github.com/BuildCraft/BuildCraft.git",
  "sha1" : "6abc40ed4850d74ee6c155f5a28f8b34881a0284",
  "url" : "https://github.com/BuildCraft/BuildCraft/commit/6abc40ed4850d74ee6c155f5a28f8b34881a0284",
  "author" : "Adrian",
  "time" : "6/16/15 12:06 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private initTemplate() : void extracted from public initialize() : void in class buildcraft.builders.TileFiller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "excavate statement has been added to the extracted method and condition has been modified"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private initTemplate() : void extracted from public updateEntity() : void in class buildcraft.builders.TileFiller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "excavate statement has been added to the extracted method and condition has been modified"
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to GuiBetterButton in method public setToolTip(tips ToolTip) : GuiBetterButton from class buildcraft.core.lib.gui.buttons.GuiBetterButton",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public BUTTON_TEXTURES : ResourceLocation from class buildcraft.core.lib.gui.buttons.GuiBetterButton to public BUTTON_TEXTURES : ResourceLocation from class buildcraft.core.lib.gui.buttons.StandardButtonTextureSets",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1694
}, {
  "id" : 1117840,
  "repository" : "https://github.com/bumptech/glide.git",
  "sha1" : "0d4b27952751de0caab01774048c3e0ec74824ce",
  "url" : "https://github.com/bumptech/glide/commit/0d4b27952751de0caab01774048c3e0ec74824ce",
  "author" : "judds",
  "time" : "6/16/15 10:48 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method package clearCallbacksAndListener() : void extracted from private checkCurrentDimens() : void in class com.bumptech.glide.request.target.ViewTarget.SizeDeterminer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "cbs.clear() statement has been added. Other than that, there is no changes. Note that cbs.clear() has been omitted from the notify method. Still, this is not pure."
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to package in method package getSize(cb SizeReadyCallback) : void from class com.bumptech.glide.request.target.ViewTarget.SizeDeterminer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 460
}, {
  "id" : 1117875,
  "repository" : "https://github.com/Netflix/eureka.git",
  "sha1" : "457a7f637ddb226acf477cae0b04c8ff16ec9a50",
  "url" : "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
  "author" : "David Liu",
  "time" : "6/15/15 10:22 PM",
  "refactorings" : [ {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass com.netflix.discovery.BaseDiscoveryClientTester from class com.netflix.discovery.AbstractDiscoveryClientTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected newInstanceInfoBuilder(renewalIntervalInSecs int) : InstanceInfo.Builder from class com.netflix.discovery.AbstractDiscoveryClientTester to protected newInstanceInfoBuilder(renewalIntervalInSecs int) : InstanceInfo.Builder from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private createRemoteApps() : List<Application> from class com.netflix.discovery.AbstractDiscoveryClientTester to protected createRemoteApps() : List<Application> from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private createInstance(appName String, vipAddress String, instanceHostName String, zone String) : InstanceInfo from class com.netflix.discovery.AbstractDiscoveryClientTester to protected createInstance(appName String, vipAddress String, instanceHostName String, zone String) : InstanceInfo from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private populateRemoteRegistryAtStartup() : void from class com.netflix.discovery.AbstractDiscoveryClientTester to protected populateRemoteRegistryAtStartup() : void from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private createLocalApps() : List<Application> from class com.netflix.discovery.AbstractDiscoveryClientTester to protected createLocalApps() : List<Application> from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private getAmazonInfo(availabilityZone String, instanceHostName String) : AmazonInfo from class com.netflix.discovery.AbstractDiscoveryClientTester to protected getAmazonInfo(availabilityZone String, instanceHostName String) : AmazonInfo from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected setupDiscoveryClient(renewalIntervalInSecs int) : void from class com.netflix.discovery.AbstractDiscoveryClientTester to protected setupDiscoveryClient(renewalIntervalInSecs int) : void from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected setupProperties() : void from class com.netflix.discovery.AbstractDiscoveryClientTester to protected setupProperties() : void from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private createRemoteAppsDelta() : List<Application> from class com.netflix.discovery.AbstractDiscoveryClientTester to protected createRemoteAppsDelta() : List<Application> from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private populateLocalRegistryAtStartup() : void from class com.netflix.discovery.AbstractDiscoveryClientTester to protected populateLocalRegistryAtStartup() : void from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private createLocalAppsDelta() : List<Application> from class com.netflix.discovery.AbstractDiscoveryClientTester to protected createLocalAppsDelta() : List<Application> from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected addLocalAppDelta() : void from class com.netflix.discovery.AbstractDiscoveryClientTester to protected addLocalAppDelta() : void from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected shutdownDiscoveryClient() : void from class com.netflix.discovery.AbstractDiscoveryClientTester to protected shutdownDiscoveryClient() : void from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public REMOTE_REGION_APP2_INSTANCE1_HOSTNAME : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public REMOTE_REGION_APP2_INSTANCE1_HOSTNAME : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public REMOTE_ZONE : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public REMOTE_ZONE : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public LOCAL_REGION_APP1_NAME : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public LOCAL_REGION_APP1_NAME : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public ALL_REGIONS_VIP3_ADDR : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public ALL_REGIONS_VIP3_ADDR : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public REMOTE_REGION : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public REMOTE_REGION : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public REMOTE_REGION_APP1_INSTANCE2_HOSTNAME : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public REMOTE_REGION_APP1_INSTANCE2_HOSTNAME : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public REMOTE_REGION_APP2_INSTANCE2_HOSTNAME : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public REMOTE_REGION_APP2_INSTANCE2_HOSTNAME : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public REMOTE_REGION_APP1_INSTANCE1_HOSTNAME : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public REMOTE_REGION_APP1_INSTANCE1_HOSTNAME : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public REMOTE_REGION_APP1_NAME : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public REMOTE_REGION_APP1_NAME : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public ALL_REGIONS_VIP2_ADDR : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public ALL_REGIONS_VIP2_ADDR : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public LOCAL_REGION_APP3_NAME : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public LOCAL_REGION_APP3_NAME : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public LOCAL_REGION_APP1_INSTANCE2_HOSTNAME : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public LOCAL_REGION_APP1_INSTANCE2_HOSTNAME : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute protected client : EurekaClient from class com.netflix.discovery.AbstractDiscoveryClientTester to protected client : EurekaClient from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public REMOTE_REGION_APP2_NAME : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public REMOTE_REGION_APP2_NAME : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public mockLocalEurekaServer : MockRemoteEurekaServer from class com.netflix.discovery.AbstractDiscoveryClientTester to public mockLocalEurekaServer : MockRemoteEurekaServer from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public LOCAL_REGION_APP2_INSTANCE2_HOSTNAME : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public LOCAL_REGION_APP2_INSTANCE2_HOSTNAME : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public ALL_REGIONS_VIP1_ADDR : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public ALL_REGIONS_VIP1_ADDR : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public LOCAL_REGION_APP1_INSTANCE1_HOSTNAME : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public LOCAL_REGION_APP1_INSTANCE1_HOSTNAME : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public LOCAL_REGION_APP2_INSTANCE1_HOSTNAME : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public LOCAL_REGION_APP2_INSTANCE1_HOSTNAME : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public LOCAL_REGION_APP2_NAME : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public LOCAL_REGION_APP2_NAME : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public LOCAL_REGION_APP3_INSTANCE1_HOSTNAME : String from class com.netflix.discovery.AbstractDiscoveryClientTester to public LOCAL_REGION_APP3_INSTANCE1_HOSTNAME : String from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute public CLIENT_REFRESH_RATE : int from class com.netflix.discovery.AbstractDiscoveryClientTester to public CLIENT_REFRESH_RATE : int from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected setupDiscoveryClient() : void from class com.netflix.discovery.AbstractDiscoveryClientTester to protected setupDiscoveryClient() : void from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setupDiscoveryClient(clientInstanceInfo InstanceInfo) : EurekaClient renamed to public setupInjector(clientInstanceInfo InstanceInfo) : EurekaClient in class com.netflix.discovery.DiscoveryClientRule",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public DiscoveryClient(myInfo InstanceInfo, config EurekaClientConfig) from class com.netflix.discovery.DiscoveryClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public DiscoveryClient(myInfo InstanceInfo, config EurekaClientConfig, args DiscoveryClientOptionalArgs) from class com.netflix.discovery.DiscoveryClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected populateLocalRegistryAtStartup() : void from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected populateRemoteRegistryAtStartup() : void from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected createRemoteApps() : List<Application> from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected createRemoteAppsDelta() : List<Application> from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected createLocalApps() : List<Application> from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected createLocalAppsDelta() : List<Application> from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected createInstance(appName String, vipAddress String, instanceHostName String, zone String) : InstanceInfo from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected getAmazonInfo(availabilityZone String, instanceHostName String) : AmazonInfo from class com.netflix.discovery.BaseDiscoveryClientTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier abstract in class com.netflix.discovery.AbstractDiscoveryClientTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable applicationInfoManager : ApplicationInfoManager in method public setUp(enableRemote boolean) : void from class com.netflix.discovery.BackUpRegistryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable applicationInfoManager : ApplicationInfoManager in method public setupDiscoveryClient(clientInstanceInfo InstanceInfo) : EurekaClient from class com.netflix.discovery.DiscoveryClientRule",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable applicationInfoManager : ApplicationInfoManager in method public setUp() : void from class com.netflix.eureka.AbstractTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter applicationInfoManager : ApplicationInfoManager in method package DiscoveryClient(applicationInfoManager ApplicationInfoManager, config EurekaClientConfig, args DiscoveryClientOptionalArgs, backupRegistryProvider Provider<BackupRegistry>) from class com.netflix.discovery.DiscoveryClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter myInfo : InstanceInfo to myInfo : InstanceInfo in method package DiscoveryClient(applicationInfoManager ApplicationInfoManager, config EurekaClientConfig, args DiscoveryClientOptionalArgs, backupRegistryProvider Provider<BackupRegistry>) from class com.netflix.discovery.DiscoveryClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter myInfo : InstanceInfo to applicationInfoManager : ApplicationInfoManager in method package DiscoveryClient(applicationInfoManager ApplicationInfoManager, config EurekaClientConfig, args DiscoveryClientOptionalArgs, backupRegistryProvider Provider<BackupRegistry>) from class com.netflix.discovery.DiscoveryClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type myInfo : InstanceInfo to applicationInfoManager : ApplicationInfoManager in method package DiscoveryClient(applicationInfoManager ApplicationInfoManager, config EurekaClientConfig, args DiscoveryClientOptionalArgs, backupRegistryProvider Provider<BackupRegistry>) from class com.netflix.discovery.DiscoveryClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 766
}, {
  "id" : 1117885,
  "repository" : "https://github.com/apache/cassandra.git",
  "sha1" : "ec52e77ecde749e7c5a483b26cbd8041f2a5a33c",
  "url" : "https://github.com/apache/cassandra/commit/ec52e77ecde749e7c5a483b26cbd8041f2a5a33c",
  "author" : "Benedict Elliott Smith",
  "time" : "6/16/15 12:28 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public submitBackground(cfs ColumnFamilyStore, autoFill boolean) : List<Future<?>> extracted from public submitBackground(cfs ColumnFamilyStore) : List<Future<?>> in class org.apache.cassandra.db.compaction.CompactionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "condition has been changed. According to the argument passed, it's a pure refactoring. But, I cannot evaluate the condition."
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getBackgroundCompactionTaskSubmitter() : Runnable extracted from protected setup() : void in class org.apache.cassandra.service.CassandraDaemon & moved to class org.apache.cassandra.db.ColumnFamilyStore",
    "comment" : "<p>Extract and Move to other class.</p><p>Since RefDiff does not support 'Extract and Move' refactoring we consider it as CTP.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6099
}, {
  "id" : 1117895,
  "repository" : "https://github.com/google/closure-compiler.git",
  "sha1" : "ea96643364e91125f560e9508a5cbcdb776bde64",
  "url" : "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
  "author" : "moz",
  "time" : "6/16/15 8:22 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private parseFormalParameterList(inTypeExpression boolean) : FormalParameterListTree extracted from private parseFormalParameterList() : FormalParameterListTree in class com.google.javascript.jscomp.parsing.parser.Parser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public restParams(type Node) : TypeDeclarationNode renamed to private maybeAddType(node Node, type TypeDeclarationNode) : Node in class com.google.javascript.rhino.TypeDeclarationsIR",
    "comment" : "<p>Second Opiniton. Seems FP</p><p>Davood: The bodies are quite different</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable stringKey2 : Node to p2 : Node in method public testConvertVariableParameters() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable stringKey1 : Node to p2 : Node in method public testConvertFunctionType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable stringKey : Node to p1 : Node in method public testConvertFunctionType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable stringKey1 : Node to p1 : Node in method public testConvertFunctionNewType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable stringKey1 : Node to p1 : Node in method public testConvertVariableParameters() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable stringKey1 : Node to p1 : Node in method public testConvertFunctionThisType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable type : TypeDeclarationNode in method package processFunctionType(tree FunctionTypeTree) : Node from class com.google.javascript.jscomp.parsing.IRFactory.TransformDispatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable restType : TypeDeclarationNode in method package processFunctionType(tree FunctionTypeTree) : Node from class com.google.javascript.jscomp.parsing.IRFactory.TransformDispatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Split Variable",
    "description" : "Split Variable parameters : LinkedHashMap<String,TypeDeclarationNode> to [optionalParams : LinkedHashMap<String,TypeDeclarationNode>, requiredParams : LinkedHashMap<String,TypeDeclarationNode>] in method public convertTypeNodeAST(n Node) : TypeDeclarationNode from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable parameters : LinkedHashMap<String,TypeDeclarationNode> to requiredParams : LinkedHashMap<String,TypeDeclarationNode> in method package processFunctionType(tree FunctionTypeTree) : Node from class com.google.javascript.jscomp.parsing.IRFactory.TransformDispatcher",
    "comment" : "<p>Split Variable parameters : LinkedHashMap&lt;String,TypeDeclarationNode&gt; to [optionalParams : LinkedHashMap&lt;String,TypeDeclarationNode&gt;, requiredParams : LinkedHashMap&lt;String,TypeDeclarationNode&gt;]</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable parameters : LinkedHashMap<String,TypeDeclarationNode> to optionalParams : LinkedHashMap<String,TypeDeclarationNode> in method public convertTypeNodeAST(n Node) : TypeDeclarationNode from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactory",
    "comment" : "<p>Split Variable parameters : LinkedHashMap&lt;String,TypeDeclarationNode&gt; to [optionalParams : LinkedHashMap&lt;String,TypeDeclarationNode&gt;, requiredParams : LinkedHashMap&lt;String,TypeDeclarationNode&gt;]</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter parameters : LinkedHashMap<String,TypeDeclarationNode> to requiredParams : LinkedHashMap<String,TypeDeclarationNode> in method public functionType(returnType Node, requiredParams LinkedHashMap<String,TypeDeclarationNode>, optionalParams LinkedHashMap<String,TypeDeclarationNode>, restName String, restType TypeDeclarationNode) : TypeDeclarationNode from class com.google.javascript.rhino.TypeDeclarationsIR",
    "comment" : "<p>Split Variable parameters : LinkedHashMap&lt;String,TypeDeclarationNode&gt; to [optionalParams : LinkedHashMap&lt;String,TypeDeclarationNode&gt;, requiredParams : LinkedHashMap&lt;String,TypeDeclarationNode&gt;]</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable parameter : Map.Entry<String,TypeDeclarationNode> to param : Map.Entry<String,TypeDeclarationNode> in method public functionType(returnType Node, requiredParams LinkedHashMap<String,TypeDeclarationNode>, optionalParams LinkedHashMap<String,TypeDeclarationNode>, restName String, restType TypeDeclarationNode) : TypeDeclarationNode from class com.google.javascript.rhino.TypeDeclarationsIR",
    "comment" : "<p>a single for loop is split to two loops where both are using param as the current element name</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable stringKey : Node to name : Node in method public functionType(returnType Node, requiredParams LinkedHashMap<String,TypeDeclarationNode>, optionalParams LinkedHashMap<String,TypeDeclarationNode>, restName String, restType TypeDeclarationNode) : TypeDeclarationNode from class com.google.javascript.rhino.TypeDeclarationsIR",
    "comment" : "<p>a single for loop is split to two loops where in both variable stringKey is replaced with name</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable parameters : LinkedHashMap<String,TypeDeclarationNode> to optionalParams : LinkedHashMap<String,TypeDeclarationNode> in method public testConvertOptionalFunctionParameters() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest",
    "comment" : "<p>Split Variable parameters : LinkedHashMap&lt;String,TypeDeclarationNode&gt; to [optionalParams : LinkedHashMap&lt;String,TypeDeclarationNode&gt;, requiredParams : LinkedHashMap&lt;String,TypeDeclarationNode&gt;]<br />parameters.put('p1', optionalParameter(stringType())); -&gt; optionalParams.put('p1', stringType());<br />parameters.put('p2', optionalParameter(numberType())); -&gt; optionalParams.put('p2', numberType());</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseParameter(inTypeExpression boolean) : ParseTree extracted from private parseFormalParameterList() : FormalParameterListTree in class com.google.javascript.jscomp.parsing.parser.Parser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Lots of changes"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private peekParameter(inTypeExpression boolean) : boolean extracted from private parseFormalParameterList() : FormalParameterListTree in class com.google.javascript.jscomp.parsing.parser.Parser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Lots of changes"
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable typeStart : SourcePosition in method private parseFormalParameterList() : FormalParameterListTree from class com.google.javascript.jscomp.parsing.parser.Parser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testFunctionParamDeclaration_destructuringArray() : void renamed to public testFunctionType_illegalParam() : void in class com.google.javascript.jscomp.parsing.TypeSyntaxTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testFunctionParamDeclaration_destructuringObject() : void renamed to public testFunctionType_bothRestAndOptionalParam() : void in class com.google.javascript.jscomp.parsing.TypeSyntaxTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter inTypeExpression : boolean in method private peekArrowFunctionWithParenthesizedParameterList(inTypeExpression boolean) : boolean from class com.google.javascript.jscomp.parsing.parser.Parser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute TYPE_ANNOTATION : ParseTreeType to TYPED_PARAMETER : ParseTreeType in class com.google.javascript.jscomp.parsing.parser.trees.ParseTreeType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3462
}, {
  "id" : 1117916,
  "repository" : "https://github.com/robovm/robovm.git",
  "sha1" : "bf5ee44b3b576e01ab09cae9f50300417b01dc07",
  "url" : "https://github.com/robovm/robovm/commit/bf5ee44b3b576e01ab09cae9f50300417b01dc07",
  "author" : "BlueRiverInteractive",
  "time" : "6/16/15 1:58 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getMakerOlympusData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public shouldExcludeXMP() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getMakerPentaxData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public getSolicitedServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getMakerNikonData() : CGImagePropertyNikonData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public shouldCreateThumbnailFromImageIfAbsent() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public shouldCacheImmediately() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public shouldCreateThumbnailWithTransform() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public shouldExcludeGPS() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getOrientation() : CGImagePropertyOrientation in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getMakerMinoltaData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getThumbnailMaxPixelSize() : long in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getLossyCompressionQuality() : double in class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getMakerCanonData() : CGImagePropertyCanonData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public getSolicitedServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public getOverflowServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getFileSize() : long in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getRawData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getPixelHeight() : long in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getBackgroundColor() : CGColor in class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public getPeripherals() : NSArray<CBPeripheral> in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getDPIHeight() : long in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getDepth() : int in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getDNGData() : CGImagePropertyDNGData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getTypeIdentifierHint() : String in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getGPSData() : CGImagePropertyGPSData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getGIFData() : CGImagePropertyGIFData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getColorModel() : CGImagePropertyColorModel in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getOrientation() : CGImagePropertyOrientation in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public shouldCache() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getPNGData() : CGImagePropertyPNGData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getMakerFujiData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getCIFFData() : CGImagePropertyCIFFData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getExifAuxData() : CGImagePropertyExifAuxData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getExifData() : CGImagePropertyExifData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getIPTCData() : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public getRestoreIdentifier() : String in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getICCProfile() : String in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public getManufacturerData() : NSData in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public isConnectable() : boolean in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public getScanOptions() : CBCentralManagerScanOptions in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getDateTime() : String in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getJFIFData() : CGImagePropertyJFIFData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public getLocalName() : String in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getMetadata() : CGImageMetadata in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public getScanServices() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getTIFFData() : CGImagePropertyTIFFData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public getAdvertisementData() : CBAdvertisementData in class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public getRestoreIdentifier() : String in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public isIndexed() : boolean in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public hasAlphaChannel() : boolean in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getMaxPixelSize() : long in class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getDPIWidth() : long in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public shouldAllowFloat() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public getTxPowerLevel() : double in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public getPixelWidth() : long in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public getServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public getServices() : NSArray<CBMutableService> in class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public get8BIMData() : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public isContainingFloatingPointPixels() : boolean in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public isEmbeddingThumbnail() : boolean in class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public isEnumeratingRecursively() : boolean in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key CFString) : boolean extracted from public isMergingMetadata() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public isAllowingDuplicates() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public isNotifyingOnConnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public isNotifyingOnDisconnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public isNotifyingOnNotification() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public isShowingPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public has(key NSString) : boolean extracted from public isShowingPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract Class on top of the extracted method"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public get8BIMData() : CGImageProperty8BIMData renamed to public getData() : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isAllowingDuplicates() : boolean renamed to public allowsDuplicates() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isContainingFloatingPointPixels() : boolean renamed to public containsFloatingPointPixels() : boolean in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isEmbeddingThumbnail() : boolean renamed to public embedsThumbnail() : boolean in class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isEnumeratingRecursively() : boolean renamed to public enumeratesRecursively() : boolean in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isMergingMetadata() : boolean renamed to public mergesMetadata() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isNotifyingOnConnection() : boolean renamed to public notifiesOnConnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isNotifyingOnDisconnection() : boolean renamed to public notifiesOnDisconnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isNotifyingOnNotification() : boolean renamed to public notifiesOnNotification() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isShowingPowerAlert() : boolean renamed to public showsPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isShowingPowerAlert() : boolean renamed to public showsPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setContactInfo(contactInfo CGImagePropertyIPTCContactInfoData) : CGImagePropertyIPTCData renamed to public setCreatorContactInfo(creatorContactInfo CGImagePropertyIPTCContactInfoData) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getContactInfo() : CGImagePropertyIPTCContactInfoData renamed to public getCreatorContactInfo() : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNotifyOnDisconnection(notify boolean) : CBConnectPeripheralOptions renamed to public setNotifiesOnDisconnection(notifiesOnDisconnection boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNotifyOnNotification(notify boolean) : CBConnectPeripheralOptions renamed to public setNotifiesOnNotification(notifiesOnNotification boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNotifyOnConnection(notify boolean) : CBConnectPeripheralOptions renamed to public setNotifiesOnConnection(notifiesOnConnection boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMergeMetadata(merge boolean) : CGImageDestinationCopySourceOptions renamed to public setMergesMetadata(mergesMetadata boolean) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setShowPowerAlert(showAlert boolean) : CBCentralManagerOptions renamed to public setShowsPowerAlert(showsPowerAlert boolean) : CBCentralManagerOptions in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIndexed(isIndexed boolean) : CGImageProperties renamed to public setIsIndexed(isIndexed boolean) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setEmbedThumbnail(embed boolean) : CGImageDestinationProperties renamed to public setEmbedsThumbnail(embedsThumbnail boolean) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setEnumerateRecursively(recursive boolean) : CGImageMetadataEnumerationOptions renamed to public setEnumeratesRecursively(enumeratesRecursively boolean) : CGImageMetadataEnumerationOptions in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setShowPowerAlert(showAlert boolean) : CBPeripheralManagerOptions renamed to public setShowsPowerAlert(showsPowerAlert boolean) : CBPeripheralManagerOptions in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImageProperty8BIM, value NativeObject) : CGImageProperty8BIMData extracted from public set(property CGImageProperty8BIM, value String) : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperty8BIMData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyIPTC, value NativeObject) : CGImagePropertyIPTCData extracted from public set(property CGImagePropertyIPTC, value double) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyDNG, value NativeObject) : CGImagePropertyDNGData extracted from public set(property CGImagePropertyDNG, value String) : CGImagePropertyDNGData in class org.robovm.apple.imageio.CGImagePropertyDNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyNikon, value NativeObject) : CGImagePropertyNikonData extracted from public set(property CGImagePropertyNikon, value String) : CGImagePropertyNikonData in class org.robovm.apple.imageio.CGImagePropertyNikonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImageProperty8BIM, value NativeObject) : CGImageProperty8BIMData extracted from public set(property CGImageProperty8BIM, value double) : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperty8BIMData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyExifAux, value NativeObject) : CGImagePropertyExifAuxData extracted from public set(property CGImagePropertyExifAux, value double) : CGImagePropertyExifAuxData in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyIPTC, value NativeObject) : CGImagePropertyIPTCData extracted from public set(property CGImagePropertyIPTC, value String) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyExif, value NativeObject) : CGImagePropertyExifData extracted from public set(property CGImagePropertyExif, value String) : CGImagePropertyExifData in class org.robovm.apple.imageio.CGImagePropertyExifData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyDNG, value NativeObject) : CGImagePropertyDNGData extracted from public set(property CGImagePropertyDNG, value double) : CGImagePropertyDNGData in class org.robovm.apple.imageio.CGImagePropertyDNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyCanon, value NativeObject) : CGImagePropertyCanonData extracted from public set(property CGImagePropertyCanon, value double) : CGImagePropertyCanonData in class org.robovm.apple.imageio.CGImagePropertyCanonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyIPTCContactInfo, value NativeObject) : CGImagePropertyIPTCContactInfoData extracted from public set(property CGImagePropertyIPTCContactInfo, value String) : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyGIF, value NativeObject) : CGImagePropertyGIFData extracted from public set(property CGImagePropertyGIF, value double) : CGImagePropertyGIFData in class org.robovm.apple.imageio.CGImagePropertyGIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyCIFF, value NativeObject) : CGImagePropertyCIFFData extracted from public set(property CGImagePropertyCIFF, value double) : CGImagePropertyCIFFData in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyPNG, value NativeObject) : CGImagePropertyPNGData extracted from public set(property CGImagePropertyPNG, value double) : CGImagePropertyPNGData in class org.robovm.apple.imageio.CGImagePropertyPNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyTIFF, value NativeObject) : CGImagePropertyTIFFData extracted from public set(property CGImagePropertyTIFF, value double) : CGImagePropertyTIFFData in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyGPS, value NativeObject) : CGImagePropertyGPSData extracted from public set(property CGImagePropertyGPS, value String) : CGImagePropertyGPSData in class org.robovm.apple.imageio.CGImagePropertyGPSData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyPNG, value NativeObject) : CGImagePropertyPNGData extracted from public set(property CGImagePropertyPNG, value String) : CGImagePropertyPNGData in class org.robovm.apple.imageio.CGImagePropertyPNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyJFIF, value NativeObject) : CGImagePropertyJFIFData extracted from public set(property CGImagePropertyJFIF, value double) : CGImagePropertyJFIFData in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyTIFF, value NativeObject) : CGImagePropertyTIFFData extracted from public set(property CGImagePropertyTIFF, value String) : CGImagePropertyTIFFData in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyCIFF, value NativeObject) : CGImagePropertyCIFFData extracted from public set(property CGImagePropertyCIFF, value String) : CGImagePropertyCIFFData in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyJFIF, value NativeObject) : CGImagePropertyJFIFData extracted from public set(property CGImagePropertyJFIF, value String) : CGImagePropertyJFIFData in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyExif, value NativeObject) : CGImagePropertyExifData extracted from public set(property CGImagePropertyExif, value double) : CGImagePropertyExifData in class org.robovm.apple.imageio.CGImagePropertyExifData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyNikon, value NativeObject) : CGImagePropertyNikonData extracted from public set(property CGImagePropertyNikon, value double) : CGImagePropertyNikonData in class org.robovm.apple.imageio.CGImagePropertyNikonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyGIF, value NativeObject) : CGImagePropertyGIFData extracted from public set(property CGImagePropertyGIF, value String) : CGImagePropertyGIFData in class org.robovm.apple.imageio.CGImagePropertyGIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyExifAux, value NativeObject) : CGImagePropertyExifAuxData extracted from public set(property CGImagePropertyExifAux, value String) : CGImagePropertyExifAuxData in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyGPS, value NativeObject) : CGImagePropertyGPSData extracted from public set(property CGImagePropertyGPS, value double) : CGImagePropertyGPSData in class org.robovm.apple.imageio.CGImagePropertyGPSData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyCanon, value NativeObject) : CGImagePropertyCanonData extracted from public set(property CGImagePropertyCanon, value String) : CGImagePropertyCanonData in class org.robovm.apple.imageio.CGImagePropertyCanonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyIPTCContactInfo, value NativeObject) : CGImagePropertyIPTCContactInfoData extracted from public set(property CGImagePropertyIPTCContactInfo, value double) : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setOrientation(orientation CGImagePropertyOrientation) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setGIFData(metadata CGImagePropertyGIFData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setDepth(depth int) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setExifAuxData(metadata CGImagePropertyExifAuxData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldCache(cache boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setHasAlphaChannel(alphaChannel boolean) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerMinoltaData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerOlympusData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setDateTime(dateTime String) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key NSString, value NSObject) : CBCentralManagerScanOptions extracted from public setAllowsDuplicates(allowDuplicates boolean) : CBCentralManagerScanOptions in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key NSString, value NSObject) : CBConnectPeripheralOptions extracted from public setNotifyOnConnection(notify boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldAllowFloat(allowFloat boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setTypeIdentifierHint(typeIdentifier String) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationProperties extracted from public setMaxPixelSize(size long) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setCIFFData(metadata CGImagePropertyCIFFData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key NSString, value NSObject) : CBCentralManagerOptions extracted from public setRestoreIdentifier(identifier String) : CBCentralManagerOptions in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setColorModel(colorModel CGImagePropertyColorModel) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public set8BIMData(metadata CGImageProperty8BIMData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setDPIWidth(dpi long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key NSString, value NSObject) : CBCentralManagerScanOptions extracted from public setSolicitedServiceUUIDs(uuids NSArray<CBUUID>) : CBCentralManagerScanOptions in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setShouldExcludeGPS(exclude boolean) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key NSString, value NSObject) : CBConnectPeripheralOptions extracted from public setNotifyOnNotification(notify boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setIPTCData(metadata CGImagePropertyIPTCData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationProperties extracted from public setLossyCompressionQuality(quality double) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerFujiData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key NSString, value NSObject) : CBCentralManagerOptions extracted from public setShowPowerAlert(showAlert boolean) : CBCentralManagerOptions in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setGPSData(metadata CGImagePropertyGPSData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setIndexed(isIndexed boolean) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key NSString, value NSObject) : CBPeripheralManagerOptions extracted from public setShowPowerAlert(showAlert boolean) : CBPeripheralManagerOptions in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setContainsFloatingPointPixels(isFloat boolean) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldCreateThumbnailWithTransform(transform boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerNikonData(metadata CGImagePropertyNikonData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setRawData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerPentaxData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setJFIFData(metadata CGImagePropertyJFIFData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setFileSize(fileSize long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setTIFFData(metadata CGImagePropertyTIFFData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key NSString, value NSObject) : CBConnectPeripheralOptions extracted from public setNotifyOnDisconnection(notify boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageMetadataEnumerationOptions extracted from public setEnumerateRecursively(recursive boolean) : CGImageMetadataEnumerationOptions in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setThumbnailMaxPixelSize(maxSize long) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setDNGData(metadata CGImagePropertyDNGData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setDPIHeight(dpi long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setShouldExcludeXMP(exclude boolean) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setOrientation(orientation CGImagePropertyOrientation) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setICCProfile(profile String) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setPNGData(metadata CGImagePropertyPNGData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setExifData(metadata CGImagePropertyExifData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldCacheImmediately(cache boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerCanonData(metadata CGImagePropertyCanonData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key NSString, value NSObject) : CBPeripheralManagerOptions extracted from public setRestoreIdentifier(identifier String) : CBPeripheralManagerOptions in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldCreateThumbnailFromImageIfAbsent(createThumbnail boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setPixelHeight(height long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setPixelWidth(width long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationProperties extracted from public setEmbedThumbnail(embed boolean) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setMergeMetadata(merge boolean) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationProperties extracted from public setBackgroundColor(color CGColor) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setMetadata(metadata CGImageMetadata) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImageProperty8BIM, type Class<T>) : T extracted from public getString(property CGImageProperty8BIM) : String in class org.robovm.apple.imageio.CGImageProperty8BIMData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImageProperty8BIM, type Class<T>) : T extracted from public getNumber(property CGImageProperty8BIM) : double in class org.robovm.apple.imageio.CGImageProperty8BIMData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyCIFF, type Class<T>) : T extracted from public getString(property CGImagePropertyCIFF) : String in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyCIFF, type Class<T>) : T extracted from public getNumber(property CGImagePropertyCIFF) : double in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyCanon, type Class<T>) : T extracted from public getString(property CGImagePropertyCanon) : String in class org.robovm.apple.imageio.CGImagePropertyCanonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyCanon, type Class<T>) : T extracted from public getNumber(property CGImagePropertyCanon) : double in class org.robovm.apple.imageio.CGImagePropertyCanonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyDNG, type Class<T>) : T extracted from public getString(property CGImagePropertyDNG) : String in class org.robovm.apple.imageio.CGImagePropertyDNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyDNG, type Class<T>) : T extracted from public getNumber(property CGImagePropertyDNG) : double in class org.robovm.apple.imageio.CGImagePropertyDNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyExifAux, type Class<T>) : T extracted from public getNumber(property CGImagePropertyExifAux) : double in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyExifAux, type Class<T>) : T extracted from public getString(property CGImagePropertyExifAux) : String in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyExif, type Class<T>) : T extracted from public getNumber(property CGImagePropertyExif) : double in class org.robovm.apple.imageio.CGImagePropertyExifData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyExif, type Class<T>) : T extracted from public getString(property CGImagePropertyExif) : String in class org.robovm.apple.imageio.CGImagePropertyExifData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyGIF, type Class<T>) : T extracted from public getString(property CGImagePropertyGIF) : String in class org.robovm.apple.imageio.CGImagePropertyGIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyGIF, type Class<T>) : T extracted from public getNumber(property CGImagePropertyGIF) : double in class org.robovm.apple.imageio.CGImagePropertyGIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyGPS, type Class<T>) : T extracted from public getNumber(property CGImagePropertyGPS) : double in class org.robovm.apple.imageio.CGImagePropertyGPSData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyGPS, type Class<T>) : T extracted from public getString(property CGImagePropertyGPS) : String in class org.robovm.apple.imageio.CGImagePropertyGPSData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyIPTCContactInfo, type Class<T>) : T extracted from public getString(property CGImagePropertyIPTCContactInfo) : String in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyIPTCContactInfo, type Class<T>) : T extracted from public getNumber(property CGImagePropertyIPTCContactInfo) : double in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyIPTC, type Class<T>) : T extracted from public getString(property CGImagePropertyIPTC) : String in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyIPTC, type Class<T>) : T extracted from public getNumber(property CGImagePropertyIPTC) : double in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyJFIF, type Class<T>) : T extracted from public getString(property CGImagePropertyJFIF) : String in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyJFIF, type Class<T>) : T extracted from public getNumber(property CGImagePropertyJFIF) : double in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyNikon, type Class<T>) : T extracted from public getString(property CGImagePropertyNikon) : String in class org.robovm.apple.imageio.CGImagePropertyNikonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyNikon, type Class<T>) : T extracted from public getNumber(property CGImagePropertyNikon) : double in class org.robovm.apple.imageio.CGImagePropertyNikonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyPNG, type Class<T>) : T extracted from public getString(property CGImagePropertyPNG) : String in class org.robovm.apple.imageio.CGImagePropertyPNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyPNG, type Class<T>) : T extracted from public getNumber(property CGImagePropertyPNG) : double in class org.robovm.apple.imageio.CGImagePropertyPNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyTIFF, type Class<T>) : T extracted from public getString(property CGImagePropertyTIFF) : String in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyTIFF, type Class<T>) : T extracted from public getNumber(property CGImagePropertyTIFF) : double in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getDNGData() : CGImagePropertyDNGData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public hasAlphaChannel() : boolean in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getMakerPentaxData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public getOverflowServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public isAllowingDuplicates() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getIPTCData() : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getRawData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getICCProfile() : String in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public isShowingPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public getPeripherals() : NSArray<CBPeripheral> in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getPNGData() : CGImagePropertyPNGData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public isConnectable() : boolean in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public isNotifyingOnNotification() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getGIFData() : CGImagePropertyGIFData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public getSolicitedServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getMakerOlympusData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getExifData() : CGImagePropertyExifData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public getSolicitedServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public get8BIMData() : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public isMergingMetadata() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getDPIHeight() : long in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public getRestoreIdentifier() : String in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getDateTime() : String in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public getLocalName() : String in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getMakerFujiData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getPixelHeight() : long in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getBackgroundColor() : CGColor in class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "The new condition doesn't change the behavior and logic of the code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getLossyCompressionQuality() : double in class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "The new condition doesn't change the behavior and logic of the code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public shouldCreateThumbnailFromImageIfAbsent() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public getScanOptions() : CBCentralManagerScanOptions in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public isEmbeddingThumbnail() : boolean in class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "The new condition doesn't change the behavior and logic of the code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public shouldAllowFloat() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public getAdvertisementData() : CBAdvertisementData in class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public getTxPowerLevel() : double in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public isShowingPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getMaxPixelSize() : long in class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "The new condition doesn't change the behavior and logic of the code"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public shouldCreateThumbnailWithTransform() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getDepth() : int in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getGPSData() : CGImagePropertyGPSData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public isNotifyingOnConnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getMakerCanonData() : CGImagePropertyCanonData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getDPIWidth() : long in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public shouldExcludeXMP() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public shouldCacheImmediately() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public getServices() : NSArray<CBMutableService> in class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getThumbnailMaxPixelSize() : long in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public getScanServices() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public isContainingFloatingPointPixels() : boolean in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getCIFFData() : CGImagePropertyCIFFData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getMetadata() : CGImageMetadata in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public getManufacturerData() : NSData in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getTIFFData() : CGImagePropertyTIFFData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getTypeIdentifierHint() : String in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public getServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public isNotifyingOnDisconnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getMakerMinoltaData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getPixelWidth() : long in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getExifAuxData() : CGImagePropertyExifAuxData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getJFIFData() : CGImagePropertyJFIFData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public isIndexed() : boolean in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getColorModel() : CGImagePropertyColorModel in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key NSString) : NSObject extracted from public getRestoreIdentifier() : String in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getFileSize() : long in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public shouldExcludeGPS() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public shouldCache() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getOrientation() : CGImagePropertyOrientation in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getMakerNikonData() : CGImagePropertyNikonData in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public isEnumeratingRecursively() : boolean in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CFString, type Class<T>) : T extracted from public getOrientation() : CGImagePropertyOrientation in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key CGImagePropertyIPTC, type Class<T>) : T extracted from public getContactInfo() : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyPNG to key : CGImagePropertyPNG in method public get(key CGImagePropertyPNG, type Class<T>) : T from class org.robovm.apple.imageio.CGImagePropertyPNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyNikon to key : CGImagePropertyNikon in method public get(key CGImagePropertyNikon, type Class<T>) : T from class org.robovm.apple.imageio.CGImagePropertyNikonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyCanon to key : CGImagePropertyCanon in method public has(key CGImagePropertyCanon) : boolean from class org.robovm.apple.imageio.CGImagePropertyCanonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyJFIF to key : CGImagePropertyJFIF in method public get(key CGImagePropertyJFIF, type Class<T>) : T from class org.robovm.apple.imageio.CGImagePropertyJFIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyJFIF to key : CGImagePropertyJFIF in method public set(key CGImagePropertyJFIF, value NativeObject) : CGImagePropertyJFIFData from class org.robovm.apple.imageio.CGImagePropertyJFIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyIPTCContactInfo to key : CGImagePropertyIPTCContactInfo in method public has(key CGImagePropertyIPTCContactInfo) : boolean from class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyIPTC to key : CGImagePropertyIPTC in method public get(key CGImagePropertyIPTC, type Class<T>) : T from class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyCanon to key : CGImagePropertyCanon in method public set(key CGImagePropertyCanon, value NativeObject) : CGImagePropertyCanonData from class org.robovm.apple.imageio.CGImagePropertyCanonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyGPS to key : CGImagePropertyGPS in method public set(key CGImagePropertyGPS, value NativeObject) : CGImagePropertyGPSData from class org.robovm.apple.imageio.CGImagePropertyGPSData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyDNG to key : CGImagePropertyDNG in method public set(key CGImagePropertyDNG, value NativeObject) : CGImagePropertyDNGData from class org.robovm.apple.imageio.CGImagePropertyDNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyCIFF to key : CGImagePropertyCIFF in method public has(key CGImagePropertyCIFF) : boolean from class org.robovm.apple.imageio.CGImagePropertyCIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyGIF to key : CGImagePropertyGIF in method public get(key CGImagePropertyGIF, type Class<T>) : T from class org.robovm.apple.imageio.CGImagePropertyGIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyExif to key : CGImagePropertyExif in method public get(key CGImagePropertyExif, type Class<T>) : T from class org.robovm.apple.imageio.CGImagePropertyExifData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyExifAux to key : CGImagePropertyExifAux in method public get(key CGImagePropertyExifAux, type Class<T>) : T from class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyIPTCContactInfo to key : CGImagePropertyIPTCContactInfo in method public get(key CGImagePropertyIPTCContactInfo, type Class<T>) : T from class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyIPTC to key : CGImagePropertyIPTC in method public set(key CGImagePropertyIPTC, value NativeObject) : CGImagePropertyIPTCData from class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyGPS to key : CGImagePropertyGPS in method public has(key CGImagePropertyGPS) : boolean from class org.robovm.apple.imageio.CGImagePropertyGPSData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyPNG to key : CGImagePropertyPNG in method public has(key CGImagePropertyPNG) : boolean from class org.robovm.apple.imageio.CGImagePropertyPNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyGIF to key : CGImagePropertyGIF in method public set(key CGImagePropertyGIF, value NativeObject) : CGImagePropertyGIFData from class org.robovm.apple.imageio.CGImagePropertyGIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyCanon to key : CGImagePropertyCanon in method public get(key CGImagePropertyCanon, type Class<T>) : T from class org.robovm.apple.imageio.CGImagePropertyCanonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImageProperty8BIM to key : CGImageProperty8BIM in method public get(key CGImageProperty8BIM, type Class<T>) : T from class org.robovm.apple.imageio.CGImageProperty8BIMData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyIPTCContactInfo to key : CGImagePropertyIPTCContactInfo in method public set(key CGImagePropertyIPTCContactInfo, value NativeObject) : CGImagePropertyIPTCContactInfoData from class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyCIFF to key : CGImagePropertyCIFF in method public get(key CGImagePropertyCIFF, type Class<T>) : T from class org.robovm.apple.imageio.CGImagePropertyCIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyNikon to key : CGImagePropertyNikon in method public set(key CGImagePropertyNikon, value NativeObject) : CGImagePropertyNikonData from class org.robovm.apple.imageio.CGImagePropertyNikonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyGPS to key : CGImagePropertyGPS in method public get(key CGImagePropertyGPS, type Class<T>) : T from class org.robovm.apple.imageio.CGImagePropertyGPSData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyExifAux to key : CGImagePropertyExifAux in method public has(key CGImagePropertyExifAux) : boolean from class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyExif to key : CGImagePropertyExif in method public has(key CGImagePropertyExif) : boolean from class org.robovm.apple.imageio.CGImagePropertyExifData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImageProperty8BIM to key : CGImageProperty8BIM in method public set(key CGImageProperty8BIM, value NativeObject) : CGImageProperty8BIMData from class org.robovm.apple.imageio.CGImageProperty8BIMData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyNikon to key : CGImagePropertyNikon in method public has(key CGImagePropertyNikon) : boolean from class org.robovm.apple.imageio.CGImagePropertyNikonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyTIFF to key : CGImagePropertyTIFF in method public set(key CGImagePropertyTIFF, value NativeObject) : CGImagePropertyTIFFData from class org.robovm.apple.imageio.CGImagePropertyTIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyDNG to key : CGImagePropertyDNG in method public get(key CGImagePropertyDNG, type Class<T>) : T from class org.robovm.apple.imageio.CGImagePropertyDNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyCIFF to key : CGImagePropertyCIFF in method public set(key CGImagePropertyCIFF, value NativeObject) : CGImagePropertyCIFFData from class org.robovm.apple.imageio.CGImagePropertyCIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyJFIF to key : CGImagePropertyJFIF in method public has(key CGImagePropertyJFIF) : boolean from class org.robovm.apple.imageio.CGImagePropertyJFIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyTIFF to key : CGImagePropertyTIFF in method public get(key CGImagePropertyTIFF, type Class<T>) : T from class org.robovm.apple.imageio.CGImagePropertyTIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyTIFF to key : CGImagePropertyTIFF in method public has(key CGImagePropertyTIFF) : boolean from class org.robovm.apple.imageio.CGImagePropertyTIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyDNG to key : CGImagePropertyDNG in method public has(key CGImagePropertyDNG) : boolean from class org.robovm.apple.imageio.CGImagePropertyDNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImageProperty8BIM to key : CGImageProperty8BIM in method public has(key CGImageProperty8BIM) : boolean from class org.robovm.apple.imageio.CGImageProperty8BIMData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyGIF to key : CGImagePropertyGIF in method public has(key CGImagePropertyGIF) : boolean from class org.robovm.apple.imageio.CGImagePropertyGIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyExifAux to key : CGImagePropertyExifAux in method public set(key CGImagePropertyExifAux, value NativeObject) : CGImagePropertyExifAuxData from class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyIPTC to key : CGImagePropertyIPTC in method public has(key CGImagePropertyIPTC) : boolean from class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyExif to key : CGImagePropertyExif in method public set(key CGImagePropertyExif, value NativeObject) : CGImagePropertyExifData from class org.robovm.apple.imageio.CGImagePropertyExifData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter property : CGImagePropertyPNG to key : CGImagePropertyPNG in method public set(key CGImagePropertyPNG, value NativeObject) : CGImagePropertyPNGData from class org.robovm.apple.imageio.CGImagePropertyPNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.corebluetooth.CBAdvertisementData.Keys from class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImagePropertyDNG.Values from class org.robovm.apple.imageio.CGImagePropertyDNG",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfo.Values from class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImagePropertyCanon.Values from class org.robovm.apple.imageio.CGImagePropertyCanon",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImageMetadataNamespace.Values from class org.robovm.apple.imageio.CGImageMetadataNamespace",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImagePropertyIPTC.Values from class org.robovm.apple.imageio.CGImagePropertyIPTC",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values from class org.robovm.apple.corebluetooth.CBUUIDIdentifier",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImageMetadataPrefix.Values from class org.robovm.apple.imageio.CGImageMetadataPrefix",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions.Keys from class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImagePropertyExifAux.Values from class org.robovm.apple.imageio.CGImagePropertyExifAux",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImageProperties.Keys from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState.Keys from class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.corebluetooth.CBCentralManagerOptions.Keys from class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImageSourceOptions.Keys from class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImagePropertyGPS.Values from class org.robovm.apple.imageio.CGImagePropertyGPS",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImageProperty8BIM.Values from class org.robovm.apple.imageio.CGImageProperty8BIM",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImagePropertyPNG.Values from class org.robovm.apple.imageio.CGImagePropertyPNG",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions.Keys from class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImagePropertyTIFF.Values from class org.robovm.apple.imageio.CGImagePropertyTIFF",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions.Keys from class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImagePropertyCIFF.Values from class org.robovm.apple.imageio.CGImagePropertyCIFF",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImagePropertyExif.Values from class org.robovm.apple.imageio.CGImagePropertyExif",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImagePropertyColorModel.Values from class org.robovm.apple.imageio.CGImagePropertyColorModel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImagePropertyJFIF.Values from class org.robovm.apple.imageio.CGImagePropertyJFIF",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImagePropertyGIF.Values from class org.robovm.apple.imageio.CGImagePropertyGIF",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions.Keys from class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImagePropertyNikon.Values from class org.robovm.apple.imageio.CGImagePropertyNikon",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState.Keys from class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.robovm.apple.imageio.CGImageDestinationProperties.Keys from class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected IsConnectable() : NSString from class org.robovm.apple.corebluetooth.CBAdvertisementData to public IsConnectable() : NSString from class org.robovm.apple.corebluetooth.CBAdvertisementData.Keys",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CGImagePropertyIPTC, value NativeObject) : CGImagePropertyIPTCData extracted from public setContactInfo(contactInfo CGImagePropertyIPTCContactInfoData) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : ".value() has beed added in the extracted method and this makes the extract method impure."
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CGImagePropertyTIFFData to tIFFData : CGImagePropertyTIFFData in method public setTIFFData(tIFFData CGImagePropertyTIFFData) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CFDictionary to makerMinoltaData : CFDictionary in method public setMakerMinoltaData(makerMinoltaData CFDictionary) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CGImagePropertyJFIFData to jFIFData : CGImagePropertyJFIFData in method public setJFIFData(jFIFData CGImagePropertyJFIFData) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CGImagePropertyGPSData to gPSData : CGImagePropertyGPSData in method public setGPSData(gPSData CGImagePropertyGPSData) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CFDictionary to makerFujiData : CFDictionary in method public setMakerFujiData(makerFujiData CFDictionary) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CGImagePropertyExifData to exifData : CGImagePropertyExifData in method public setExifData(exifData CGImagePropertyExifData) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CGImagePropertyCIFFData to cIFFData : CGImagePropertyCIFFData in method public setCIFFData(cIFFData CGImagePropertyCIFFData) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CFDictionary to rawData : CFDictionary in method public setRawData(rawData CFDictionary) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CGImagePropertyPNGData to pNGData : CGImagePropertyPNGData in method public setPNGData(pNGData CGImagePropertyPNGData) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CGImagePropertyDNGData to dNGData : CGImagePropertyDNGData in method public setDNGData(dNGData CGImagePropertyDNGData) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CGImagePropertyIPTCData to iPTCData : CGImagePropertyIPTCData in method public setIPTCData(iPTCData CGImagePropertyIPTCData) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CFDictionary to makerPentaxData : CFDictionary in method public setMakerPentaxData(makerPentaxData CFDictionary) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CGImagePropertyGIFData to gIFData : CGImagePropertyGIFData in method public setGIFData(gIFData CGImagePropertyGIFData) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CGImageProperty8BIMData to data : CGImageProperty8BIMData in method public set8BIMData(data CGImageProperty8BIMData) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CFDictionary to makerOlympusData : CFDictionary in method public setMakerOlympusData(makerOlympusData CFDictionary) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CGImagePropertyNikonData to makerNikonData : CGImagePropertyNikonData in method public setMakerNikonData(makerNikonData CGImagePropertyNikonData) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CGImagePropertyCanonData to makerCanonData : CGImagePropertyCanonData in method public setMakerCanonData(makerCanonData CGImagePropertyCanonData) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metadata : CGImagePropertyExifAuxData to exifAuxData : CGImagePropertyExifAuxData in method public setExifAuxData(exifAuxData CGImagePropertyExifAuxData) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter maxSize : long to thumbnailMaxPixelSize : long in method public setThumbnailMaxPixelSize(thumbnailMaxPixelSize long) : CGImageSourceOptions from class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter merge : boolean to mergesMetadata : boolean in method public setMergesMetadata(mergesMetadata boolean) : CGImageDestinationCopySourceOptions from class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter notify : boolean to notifiesOnDisconnection : boolean in method public setNotifiesOnDisconnection(notifiesOnDisconnection boolean) : CBConnectPeripheralOptions from class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter exclude : boolean to shouldExcludeXMP : boolean in method public setShouldExcludeXMP(shouldExcludeXMP boolean) : CGImageDestinationCopySourceOptions from class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter uuids : NSArray<CBUUID> to solicitedServiceUUIDs : NSArray<CBUUID> in method public setSolicitedServiceUUIDs(solicitedServiceUUIDs NSArray<CBUUID>) : CBCentralManagerScanOptions from class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter typeIdentifier : String to typeIdentifierHint : String in method public setTypeIdentifierHint(typeIdentifierHint String) : CGImageSourceOptions from class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter contactInfo : CGImagePropertyIPTCContactInfoData to creatorContactInfo : CGImagePropertyIPTCContactInfoData in method public setCreatorContactInfo(creatorContactInfo CGImagePropertyIPTCContactInfoData) : CGImagePropertyIPTCData from class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter transform : boolean to shouldCreateThumbnailWithTransform : boolean in method public setShouldCreateThumbnailWithTransform(shouldCreateThumbnailWithTransform boolean) : CGImageSourceOptions from class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter notify : boolean to notifiesOnNotification : boolean in method public setNotifiesOnNotification(notifiesOnNotification boolean) : CBConnectPeripheralOptions from class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter alphaChannel : boolean to hasAlphaChannel : boolean in method public setHasAlphaChannel(hasAlphaChannel boolean) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter dpi : long to dPIHeight : long in method public setDPIHeight(dPIHeight long) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter allowDuplicates : boolean to allowsDuplicates : boolean in method public setAllowsDuplicates(allowsDuplicates boolean) : CBCentralManagerScanOptions from class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter dpi : long to dPIWidth : long in method public setDPIWidth(dPIWidth long) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter profile : String to iCCProfile : String in method public setICCProfile(iCCProfile String) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter showAlert : boolean to showsPowerAlert : boolean in method public setShowsPowerAlert(showsPowerAlert boolean) : CBCentralManagerOptions from class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter identifier : String to restoreIdentifier : String in method public setRestoreIdentifier(restoreIdentifier String) : CBPeripheralManagerOptions from class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter exclude : boolean to shouldExcludeGPS : boolean in method public setShouldExcludeGPS(shouldExcludeGPS boolean) : CGImageDestinationCopySourceOptions from class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter height : long to pixelHeight : long in method public setPixelHeight(pixelHeight long) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter isFloat : boolean to containsFloatingPointPixels : boolean in method public setContainsFloatingPointPixels(containsFloatingPointPixels boolean) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter createThumbnail : boolean to shouldCreateThumbnailFromImageIfAbsent : boolean in method public setShouldCreateThumbnailFromImageIfAbsent(shouldCreateThumbnailFromImageIfAbsent boolean) : CGImageSourceOptions from class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter showAlert : boolean to showsPowerAlert : boolean in method public setShowsPowerAlert(showsPowerAlert boolean) : CBPeripheralManagerOptions from class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter notify : boolean to notifiesOnConnection : boolean in method public setNotifiesOnConnection(notifiesOnConnection boolean) : CBConnectPeripheralOptions from class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter width : long to pixelWidth : long in method public setPixelWidth(pixelWidth long) : CGImageProperties from class org.robovm.apple.imageio.CGImageProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter color : CGColor to backgroundColor : CGColor in method public setBackgroundColor(backgroundColor CGColor) : CGImageDestinationProperties from class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter embed : boolean to embedsThumbnail : boolean in method public setEmbedsThumbnail(embedsThumbnail boolean) : CGImageDestinationProperties from class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter cache : boolean to shouldCache : boolean in method public setShouldCache(shouldCache boolean) : CGImageSourceOptions from class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter allowFloat : boolean to shouldAllowFloat : boolean in method public setShouldAllowFloat(shouldAllowFloat boolean) : CGImageSourceOptions from class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter recursive : boolean to enumeratesRecursively : boolean in method public setEnumeratesRecursively(enumeratesRecursively boolean) : CGImageMetadataEnumerationOptions from class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter cache : boolean to shouldCacheImmediately : boolean in method public setShouldCacheImmediately(shouldCacheImmediately boolean) : CGImageSourceOptions from class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter size : long to maxPixelSize : long in method public setMaxPixelSize(maxPixelSize long) : CGImageDestinationProperties from class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter identifier : String to restoreIdentifier : String in method public setRestoreIdentifier(restoreIdentifier String) : CBCentralManagerOptions from class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter quality : double to lossyCompressionQuality : double in method public setLossyCompressionQuality(lossyCompressionQuality double) : CGImageDestinationProperties from class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter allowFloat : boolean to shouldCacheImmediately : boolean in method public setShouldCacheImmediately(shouldCacheImmediately boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter createThumbnail : boolean to shouldAllowFloat : boolean in method public setShouldAllowFloat(shouldAllowFloat boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type value : String to value : NSString in method public valueOf(value NSString) : CBUUIDIdentifier from class org.robovm.apple.corebluetooth.CBUUIDIdentifier",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type NSArray<CBUUID> to NSArray in method public getServiceUUIDs() : NSArray from class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to NSString in method public CharacteristicExtendedProperties() : NSString in class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to NSString in method public CharacteristicUserDescription() : NSString in class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to NSString in method public ClientCharacteristicConfiguration() : NSString in class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to NSString in method public ServerCharacteristicConfiguration() : NSString in class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to NSString in method public CharacteristicFormat() : NSString in class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to NSString in method public CharacteristicAggregateFormat() : NSString in class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to NSString in method public GenericAccessProfile() : NSString in class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to NSString in method public GenericAttributeProfile() : NSString in class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to NSString in method public DeviceName() : NSString in class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to NSString in method public Appearance() : NSString in class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to NSString in method public PeripheralPrivacyFlag() : NSString in class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to NSString in method public ReconnectionAddress() : NSString in class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to NSString in method public PeripheralPreferredConnectionParameters() : NSString in class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to NSString in method public ServiceChanged() : NSString in class org.robovm.apple.corebluetooth.CBUUIDIdentifier.Values",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setDateTime(dateTime NSDate) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : NSDictionary<NSString,NSObject> renamed to public get(key NSString) : NSObject in class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : NSDictionary<NSString,NSObject> renamed to public get(key NSString) : NSObject in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public getDictionary() : CFDictionary inlined to public set8BIMData(data CGImageProperty8BIMData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to package CGImagePropertyDNGData(data CFDictionary) in class org.robovm.apple.imageio.CGImagePropertyDNGData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(property CGImagePropertyDNG) : String renamed to public get(key CGImagePropertyDNG, type Class<T>) : T in class org.robovm.apple.imageio.CGImagePropertyDNGData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumber(property CGImagePropertyDNG) : double renamed to public getString(property CGImagePropertyDNG) : String in class org.robovm.apple.imageio.CGImagePropertyDNGData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImagePropertyDNG, value String) : CGImagePropertyDNGData renamed to public getNumber(property CGImagePropertyDNG) : double in class org.robovm.apple.imageio.CGImagePropertyDNGData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to package CGImagePropertyJFIFData(data CFDictionary) in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(property CGImagePropertyJFIF) : String renamed to public get(key CGImagePropertyJFIF, type Class<T>) : T in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumber(property CGImagePropertyJFIF) : double renamed to public getString(property CGImagePropertyJFIF) : String in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImagePropertyJFIF, value String) : CGImagePropertyJFIFData renamed to public getNumber(property CGImagePropertyJFIF) : double in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to package CGImagePropertyTIFFData(data CFDictionary) in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(property CGImagePropertyTIFF) : String renamed to public get(key CGImagePropertyTIFF, type Class<T>) : T in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumber(property CGImagePropertyTIFF) : double renamed to public getString(property CGImagePropertyTIFF) : String in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImagePropertyTIFF, value String) : CGImagePropertyTIFFData renamed to public getNumber(property CGImagePropertyTIFF) : double in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : NSDictionary<NSString,NSObject> renamed to public get(key NSString) : NSObject in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to package CGImagePropertyCanonData(data CFDictionary) in class org.robovm.apple.imageio.CGImagePropertyCanonData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(property CGImagePropertyCanon) : String renamed to public get(key CGImagePropertyCanon, type Class<T>) : T in class org.robovm.apple.imageio.CGImagePropertyCanonData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumber(property CGImagePropertyCanon) : double renamed to public getString(property CGImagePropertyCanon) : String in class org.robovm.apple.imageio.CGImagePropertyCanonData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImagePropertyCanon, value String) : CGImagePropertyCanonData renamed to public getNumber(property CGImagePropertyCanon) : double in class org.robovm.apple.imageio.CGImagePropertyCanonData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(property CGImagePropertyIPTC) : String renamed to public get(key CGImagePropertyIPTC, type Class<T>) : T in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumber(property CGImagePropertyIPTC) : double renamed to public getCreatorContactInfo() : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImagePropertyIPTC, value String) : CGImagePropertyIPTCData renamed to public setCreatorContactInfo(creatorContactInfo CGImagePropertyIPTCContactInfoData) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImagePropertyIPTC, value double) : CGImagePropertyIPTCData renamed to public getString(property CGImagePropertyIPTC) : String in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getContactInfo() : CGImagePropertyIPTCContactInfoData renamed to public getNumber(property CGImagePropertyIPTC) : double in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setContactInfo(contactInfo CGImagePropertyIPTCContactInfoData) : CGImagePropertyIPTCData renamed to public set(property CGImagePropertyIPTC, value String) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to package CGImageProperty8BIMData(data CFDictionary) in class org.robovm.apple.imageio.CGImageProperty8BIMData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(property CGImageProperty8BIM) : String renamed to public get(key CGImageProperty8BIM, type Class<T>) : T in class org.robovm.apple.imageio.CGImageProperty8BIMData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumber(property CGImageProperty8BIM) : double renamed to public getString(property CGImageProperty8BIM) : String in class org.robovm.apple.imageio.CGImageProperty8BIMData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImageProperty8BIM, value String) : CGImageProperty8BIMData renamed to public getNumber(property CGImageProperty8BIM) : double in class org.robovm.apple.imageio.CGImageProperty8BIMData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to public get(key CFString, type Class<T>) : T in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to package CGImagePropertyPNGData(data CFDictionary) in class org.robovm.apple.imageio.CGImagePropertyPNGData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(property CGImagePropertyPNG) : String renamed to public get(key CGImagePropertyPNG, type Class<T>) : T in class org.robovm.apple.imageio.CGImagePropertyPNGData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumber(property CGImagePropertyPNG) : double renamed to public getString(property CGImagePropertyPNG) : String in class org.robovm.apple.imageio.CGImagePropertyPNGData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImagePropertyPNG, value String) : CGImagePropertyPNGData renamed to public getNumber(property CGImagePropertyPNG) : double in class org.robovm.apple.imageio.CGImagePropertyPNGData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLocalName() : String renamed to public get(key NSString) : NSObject in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getTxPowerLevel() : double renamed to public getLocalName() : String in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getServiceUUIDs() : NSArray<CBUUID> renamed to public getTxPowerLevel() : double in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getServiceData() : NSDictionary<CBUUID,NSData> renamed to public getServiceUUIDs() : NSArray in class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to package CGImagePropertyExifAuxData(data CFDictionary) in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(property CGImagePropertyExifAux) : String renamed to public get(key CGImagePropertyExifAux, type Class<T>) : T in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumber(property CGImagePropertyExifAux) : double renamed to public getString(property CGImagePropertyExifAux) : String in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImagePropertyExifAux, value String) : CGImagePropertyExifAuxData renamed to public getNumber(property CGImagePropertyExifAux) : double in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : NSDictionary<NSString,NSObject> renamed to public get(key NSString) : NSObject in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : NSDictionary<NSString,NSObject> renamed to public get(key NSString) : NSObject in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to package CGImagePropertyExifData(data CFDictionary) in class org.robovm.apple.imageio.CGImagePropertyExifData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(property CGImagePropertyExif) : String renamed to public get(key CGImagePropertyExif, type Class<T>) : T in class org.robovm.apple.imageio.CGImagePropertyExifData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumber(property CGImagePropertyExif) : double renamed to public getString(property CGImagePropertyExif) : String in class org.robovm.apple.imageio.CGImagePropertyExifData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImagePropertyExif, value String) : CGImagePropertyExifData renamed to public getNumber(property CGImagePropertyExif) : double in class org.robovm.apple.imageio.CGImagePropertyExifData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to package CGImagePropertyGPSData(data CFDictionary) in class org.robovm.apple.imageio.CGImagePropertyGPSData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(property CGImagePropertyGPS) : String renamed to public get(key CGImagePropertyGPS, type Class<T>) : T in class org.robovm.apple.imageio.CGImagePropertyGPSData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumber(property CGImagePropertyGPS) : double renamed to public getString(property CGImagePropertyGPS) : String in class org.robovm.apple.imageio.CGImagePropertyGPSData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImagePropertyGPS, value String) : CGImagePropertyGPSData renamed to public getNumber(property CGImagePropertyGPS) : double in class org.robovm.apple.imageio.CGImagePropertyGPSData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : NSDictionary<NSString,NSObject> renamed to public get(key NSString) : NSObject in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to package CGImagePropertyGIFData(data CFDictionary) in class org.robovm.apple.imageio.CGImagePropertyGIFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(property CGImagePropertyGIF) : String renamed to public get(key CGImagePropertyGIF, type Class<T>) : T in class org.robovm.apple.imageio.CGImagePropertyGIFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumber(property CGImagePropertyGIF) : double renamed to public getString(property CGImagePropertyGIF) : String in class org.robovm.apple.imageio.CGImagePropertyGIFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImagePropertyGIF, value String) : CGImagePropertyGIFData renamed to public getNumber(property CGImagePropertyGIF) : double in class org.robovm.apple.imageio.CGImagePropertyGIFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getTypeIdentifierHint() : String renamed to public get(key CFString, type Class<T>) : T in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setTypeIdentifierHint(typeIdentifier String) : CGImageSourceOptions renamed to public set(key CFString, value NativeObject) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldCache() : boolean renamed to public getTypeIdentifierHint() : String in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setShouldCache(cache boolean) : CGImageSourceOptions renamed to public setTypeIdentifierHint(typeIdentifierHint String) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldCacheImmediately() : boolean renamed to public shouldCache() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setShouldCacheImmediately(cache boolean) : CGImageSourceOptions renamed to public setShouldCache(shouldCache boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldAllowFloat() : boolean renamed to public shouldCacheImmediately() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setShouldAllowFloat(allowFloat boolean) : CGImageSourceOptions renamed to public setShouldCacheImmediately(shouldCacheImmediately boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldCreateThumbnailFromImageIfAbsent() : boolean renamed to public shouldAllowFloat() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setShouldCreateThumbnailFromImageIfAbsent(createThumbnail boolean) : CGImageSourceOptions renamed to public setShouldAllowFloat(shouldAllowFloat boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldCreateThumbnailFromImageAlways() : boolean renamed to public shouldCreateThumbnailFromImageIfAbsent() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setShouldCreateThumbnailFromImageAlways(createThumbnail boolean) : CGImageSourceOptions renamed to public setShouldCreateThumbnailFromImageIfAbsent(shouldCreateThumbnailFromImageIfAbsent boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to package CGImagePropertyIPTCContactInfoData(data CFDictionary) in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(property CGImagePropertyIPTCContactInfo) : String renamed to public get(key CGImagePropertyIPTCContactInfo, type Class<T>) : T in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumber(property CGImagePropertyIPTCContactInfo) : double renamed to public getString(property CGImagePropertyIPTCContactInfo) : String in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImagePropertyIPTCContactInfo, value String) : CGImagePropertyIPTCContactInfoData renamed to public getNumber(property CGImagePropertyIPTCContactInfo) : double in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to package CGImagePropertyCIFFData(data CFDictionary) in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(property CGImagePropertyCIFF) : String renamed to public get(key CGImagePropertyCIFF, type Class<T>) : T in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumber(property CGImagePropertyCIFF) : double renamed to public getString(property CGImagePropertyCIFF) : String in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImagePropertyCIFF, value String) : CGImagePropertyCIFFData renamed to public getNumber(property CGImagePropertyCIFF) : double in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to public get(key CFString, type Class<T>) : T in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDictionary() : CFDictionary renamed to package CGImagePropertyNikonData(data CFDictionary) in class org.robovm.apple.imageio.CGImagePropertyNikonData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getString(property CGImagePropertyNikon) : String renamed to public get(key CGImagePropertyNikon, type Class<T>) : T in class org.robovm.apple.imageio.CGImagePropertyNikonData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumber(property CGImagePropertyNikon) : double renamed to public getString(property CGImagePropertyNikon) : String in class org.robovm.apple.imageio.CGImagePropertyNikonData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public set(property CGImagePropertyNikon, value String) : CGImagePropertyNikonData renamed to public getNumber(property CGImagePropertyNikon) : double in class org.robovm.apple.imageio.CGImagePropertyNikonData",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public getOverflowServiceUUIDs() : NSArray<CBUUID> from class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public getSolicitedServiceUUIDs() : NSArray<CBUUID> from class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public getServiceUUIDs() : NSArray<CBUUID> from class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public toObject(cls Class<CBAdvertisementData>, handle long, flags long) : CBAdvertisementData from class org.robovm.apple.corebluetooth.CBAdvertisementData.Marshaler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public toObject(cls Class<CBCentralManagerOptions>, handle long, flags long) : CBCentralManagerOptions from class org.robovm.apple.corebluetooth.CBCentralManagerOptions.Marshaler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public getPeripherals() : NSArray<CBPeripheral> from class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public getScanServices() : NSArray<CBUUID> from class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public getScanOptions() : CBCentralManagerScanOptions from class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public toObject(cls Class<CBCentralManagerRestoredState>, handle long, flags long) : CBCentralManagerRestoredState from class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState.Marshaler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public getSolicitedServiceUUIDs() : NSArray<CBUUID> from class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public toObject(cls Class<CBCentralManagerScanOptions>, handle long, flags long) : CBCentralManagerScanOptions from class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions.Marshaler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public toObject(cls Class<CBConnectPeripheralOptions>, handle long, flags long) : CBConnectPeripheralOptions from class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions.Marshaler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public toObject(cls Class<CBPeripheralManagerOptions>, handle long, flags long) : CBPeripheralManagerOptions from class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions.Marshaler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public getServices() : NSArray<CBMutableService> from class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public getAdvertisementData() : CBAdvertisementData from class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public toObject(cls Class<CBPeripheralManagerRestoredState>, handle long, flags long) : CBPeripheralManagerRestoredState from class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState.Marshaler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.corebluetooth.CBUUIDIdentifier",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImageMetadataNamespace",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImageMetadataPrefix",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImageProperty8BIM",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImagePropertyCIFF",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImagePropertyCanon",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImagePropertyColorModel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImagePropertyDNG",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImagePropertyExif",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImagePropertyExifAux",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImagePropertyGIF",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImagePropertyGPS",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImagePropertyIPTC",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImagePropertyJFIF",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImagePropertyNikon",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImagePropertyPNG",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @StronglyLinked in class org.robovm.apple.imageio.CGImagePropertyTIFF",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toObject(cls Class<? extends NSObject>, handle long, flags long) : List<CBAdvertisementData> from class org.robovm.apple.corebluetooth.CBAdvertisementData.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toObject(cls Class<? extends NSObject>, handle long, flags long) : List<CBCentralManagerOptions> from class org.robovm.apple.corebluetooth.CBCentralManagerOptions.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toNative(l List<CBCentralManagerOptions>, flags long) : long from class org.robovm.apple.corebluetooth.CBCentralManagerOptions.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toObject(cls Class<? extends NSObject>, handle long, flags long) : List<CBCentralManagerRestoredState> from class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toObject(cls Class<? extends NSObject>, handle long, flags long) : List<CBCentralManagerScanOptions> from class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toNative(l List<CBCentralManagerScanOptions>, flags long) : long from class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toObject(cls Class<? extends NSObject>, handle long, flags long) : List<CBConnectPeripheralOptions> from class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toNative(l List<CBConnectPeripheralOptions>, flags long) : long from class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toObject(cls Class<? extends NSObject>, handle long, flags long) : List<CBPeripheralManagerOptions> from class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toNative(l List<CBPeripheralManagerOptions>, flags long) : long from class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toObject(cls Class<? extends NSObject>, handle long, flags long) : List<CBPeripheralManagerRestoredState> from class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toNative(l List<CGImageDestinationCopySourceOptions>, flags long) : long from class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toObject(cls Class<? extends CFType>, handle long, flags long) : List<CGImageDestinationProperties> from class org.robovm.apple.imageio.CGImageDestinationProperties.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toNative(l List<CGImageDestinationProperties>, flags long) : long from class org.robovm.apple.imageio.CGImageDestinationProperties.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @MarshalsPointer in method public toNative(l List<CGImageMetadataEnumerationOptions>, flags long) : long from class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions.AsListMarshaler",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public getServiceData() : NSDictionary<CBUUID,NSData> from class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImageProperty8BIMData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImagePropertyCIFFData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImagePropertyCanonData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImagePropertyDNGData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImagePropertyExifData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImagePropertyGIFData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImagePropertyGPSData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImagePropertyJFIFData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImagePropertyNikonData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImagePropertyPNGData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toString() : String from class org.robovm.apple.imageio.CGImagePropertyTIFFData",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @Library(\"ImageIO\") in class org.robovm.apple.imageio.CGImagePropertyExif",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CBAdvertisementData(data NSDictionary<NSString,NSObject>) from class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CBCentralManagerOptions(data NSDictionary<NSString,NSObject>) from class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CBCentralManagerRestoredState(data NSDictionary<NSString,NSObject>) from class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CBCentralManagerScanOptions(data NSDictionary<NSString,NSObject>) from class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CBConnectPeripheralOptions(data NSDictionary<NSString,NSObject>) from class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CBPeripheralManagerOptions(data NSDictionary<NSString,NSObject>) from class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CBPeripheralManagerRestoredState(data NSDictionary<NSString,NSObject>) from class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CBUUIDIdentifier(getterName String) from class org.robovm.apple.corebluetooth.CBUUIDIdentifier",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImageDestinationCopySourceOptions(data CFDictionary) from class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to package in method package CGImageDestinationProperties(data CFDictionary) from class org.robovm.apple.imageio.CGImageDestinationProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImageMetadataEnumerationOptions(data CFDictionary) from class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImageMetadataNamespace(getterName String) from class org.robovm.apple.imageio.CGImageMetadataNamespace",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImageMetadataPrefix(getterName String) from class org.robovm.apple.imageio.CGImageMetadataPrefix",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImageProperty8BIM(getterName String) from class org.robovm.apple.imageio.CGImageProperty8BIM",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImageProperty8BIMData(data CFDictionary) from class org.robovm.apple.imageio.CGImageProperty8BIMData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImagePropertyCIFF(getterName String) from class org.robovm.apple.imageio.CGImagePropertyCIFF",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImagePropertyCIFFData(data CFDictionary) from class org.robovm.apple.imageio.CGImagePropertyCIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImagePropertyCanon(getterName String) from class org.robovm.apple.imageio.CGImagePropertyCanon",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImagePropertyCanonData(data CFDictionary) from class org.robovm.apple.imageio.CGImagePropertyCanonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImagePropertyColorModel(getterName String) from class org.robovm.apple.imageio.CGImagePropertyColorModel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImagePropertyDNG(getterName String) from class org.robovm.apple.imageio.CGImagePropertyDNG",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImagePropertyDNGData(data CFDictionary) from class org.robovm.apple.imageio.CGImagePropertyDNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImagePropertyExif(getterName String) from class org.robovm.apple.imageio.CGImagePropertyExif",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImagePropertyExifAux(getterName String) from class org.robovm.apple.imageio.CGImagePropertyExifAux",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImagePropertyExifAuxData(data CFDictionary) from class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImagePropertyExifData(data CFDictionary) from class org.robovm.apple.imageio.CGImagePropertyExifData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImagePropertyGIF(getterName String) from class org.robovm.apple.imageio.CGImagePropertyGIF",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImagePropertyGIFData(data CFDictionary) from class org.robovm.apple.imageio.CGImagePropertyGIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImagePropertyGPS(getterName String) from class org.robovm.apple.imageio.CGImagePropertyGPS",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImagePropertyGPSData(data CFDictionary) from class org.robovm.apple.imageio.CGImagePropertyGPSData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImagePropertyIPTC(getterName String) from class org.robovm.apple.imageio.CGImagePropertyIPTC",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImagePropertyIPTCContactInfo(getterName String) from class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImagePropertyIPTCContactInfoData(data CFDictionary) from class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImagePropertyIPTCData(data CFDictionary) from class org.robovm.apple.imageio.CGImagePropertyIPTCData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImagePropertyJFIF(getterName String) from class org.robovm.apple.imageio.CGImagePropertyJFIF",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImagePropertyJFIFData(data CFDictionary) from class org.robovm.apple.imageio.CGImagePropertyJFIFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImagePropertyNikon(getterName String) from class org.robovm.apple.imageio.CGImagePropertyNikon",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImagePropertyNikonData(data CFDictionary) from class org.robovm.apple.imageio.CGImagePropertyNikonData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImagePropertyPNG(getterName String) from class org.robovm.apple.imageio.CGImagePropertyPNG",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImagePropertyPNGData(data CFDictionary) from class org.robovm.apple.imageio.CGImagePropertyPNGData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package CGImagePropertyTIFF(getterName String) from class org.robovm.apple.imageio.CGImagePropertyTIFF",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImagePropertyTIFFData(data CFDictionary) from class org.robovm.apple.imageio.CGImagePropertyTIFFData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package CGImageSourceOptions(data CFDictionary) from class org.robovm.apple.imageio.CGImageSourceOptions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to public in method public IsConnectable() : NSString from class org.robovm.apple.corebluetooth.CBAdvertisementData.Keys",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type val : NSArray<CBUUID> to val : NSArray in method public getServiceUUIDs() : NSArray from class org.robovm.apple.corebluetooth.CBAdvertisementData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 11040
}, {
  "id" : 1117922,
  "repository" : "https://github.com/netty/netty.git",
  "sha1" : "303cb535239a6f07cbe24a033ef965e2f55758eb",
  "url" : "https://github.com/netty/netty/commit/303cb535239a6f07cbe24a033ef965e2f55758eb",
  "author" : "Norman Maurer",
  "time" : "6/17/15 1:35 AM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private principal(certs Certificate[]) : Principal inlined to public getLocalPrincipal() : Principal in class io.netty.handler.ssl.OpenSslEngine.OpenSslSession",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private principal(certs Certificate[]) : Principal inlined to public getPeerPrincipal() : Principal in class io.netty.handler.ssl.OpenSslEngine.OpenSslSession",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3334
}, {
  "id" : 1117938,
  "repository" : "https://github.com/crate/crate.git",
  "sha1" : "c7b6a7aa878aabd6400d2df0490e1eb2b810c8f9",
  "url" : "https://github.com/crate/crate/commit/c7b6a7aa878aabd6400d2df0490e1eb2b810c8f9",
  "author" : "Mathias Fussenegger",
  "time" : "6/16/15 12:04 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public plan(relation AnalyzedRelation, consumerContext ConsumerContext) : PlannedAnalyzedRelation extracted from public plan(rootRelation AnalyzedRelation, plannerContext Planner.Context) : Plan in class io.crate.planner.consumer.ConsumingPlanner",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "The non-mapped inner node - extra if condition - cannot be justified."
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public plan(relation AnalyzedRelation, consumerContext ConsumerContext) : PlannedAnalyzedRelation extracted from public visitInsertFromQuery(insertFromSubQueryAnalyzedStatement InsertFromSubQueryAnalyzedStatement, context Context) : AnalyzedRelation in class io.crate.planner.consumer.InsertFromSubQueryConsumer.Visitor & moved to class io.crate.planner.consumer.ConsumingPlanner",
    "comment" : "<p>The functionality calling the plan() method inside visitInsertFromQuery() is new<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>PlannedAnalyzedRelation</span> plannedSubQuery <span class='pl-k'>=</span> consumingPlanner<span class='pl-k'>.</span>plan(statement<span class='pl-k'>.</span>subQueryRelation(), context);</span></p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public rootRelation(relation AnalyzedRelation) : void inlined to public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.QueryAndFetchConsumer",
    "comment" : "<p>Matin: we need to show the inlined method class in result so that we can validate this</p><p>Laleh: for me this is FP. The method public rootRelation(relation AnalyzedRelation) : void is in class <span class='pl-smi'>io.crate.planner.consumer.<span class='blob-code-inner'><span class='pl-en'>ConsumerContext</span></span>.java. It is a setter method with the following body:</span></p><table class='diff-table tab-size  file-diff-split' data-tab-size='8'><tbody><tr><td class='code-review blob-code blob-code-deletion'><span class='blob-code-inner'><span class='pl-k'>public</span> <span class='pl-k'>void</span> <span class='pl-en'>rootRelation</span>(<span class='pl-smi'>AnalyzedRelation</span> <span class='pl-v'>relation</span>) {</span></td></tr></tbody></table><table class='diff-table tab-size  file-diff-split' data-tab-size='8'><tbody><tr><td class='blob-code blob-code-empty empty-cell'>&nbsp;</td></tr></tbody></table><table class='diff-table tab-size  file-diff-split' data-tab-size='8'><tbody><tr><td class='code-review blob-code blob-code-deletion'><span class='blob-code-inner'>- <span class='pl-c1'>this</span><span class='pl-k'>.</span>rootRelation <span class='pl-k'>=</span> relation;</span></td></tr></tbody></table><table class='diff-table tab-size  file-diff-split' data-tab-size='8'><tbody><tr><td class='blob-code blob-code-empty empty-cell'>&nbsp;</td></tr></tbody></table><p><span class='pl-smi'><span class='blob-code-inner'>- }</span><br /></span></p><p><span class='pl-smi'><span class='blob-code-inner'>It is not an inline to me, and Davood.<br /></span></span></p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public rootRelation(relation AnalyzedRelation) : void inlined to public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer",
    "comment" : "<p>Same case as refactoring with ID=373, same comments is valid here.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public rootRelation(relation AnalyzedRelation) : void inlined to public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.DistributedGroupByConsumer",
    "comment" : "<p>Same as refactoring with ID= 373.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public rootRelation(relation AnalyzedRelation) : void inlined to public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.NonDistributedGroupByConsumer",
    "comment" : "<p>Same as refactoring with ID= 373</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public rootRelation(relation AnalyzedRelation) : void inlined to public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.QueryThenFetchConsumer",
    "comment" : "<p>Same as refactoring with ID= 373.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public rootRelation(relation AnalyzedRelation) : void inlined to public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.InsertFromSubQueryConsumer",
    "comment" : "<p>Same as refactoring with ID= 373.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter insertFromSubQueryAnalyzedStatement : InsertFromSubQueryAnalyzedStatement to statement : InsertFromSubQueryAnalyzedStatement in method public visitInsertFromQuery(statement InsertFromSubQueryAnalyzedStatement, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.InsertFromSubQueryConsumer.Visitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable analyzedRelation : PlannedAnalyzedRelation to plannedSubQuery : PlannedAnalyzedRelation in method public visitInsertFromQuery(statement InsertFromSubQueryAnalyzedStatement, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.InsertFromSubQueryConsumer.Visitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.QueryThenFetchConsumer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable plannedAnalyzedRelation : PlannedAnalyzedRelation in method public plan(relation AnalyzedRelation, consumerContext ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.ConsumingPlanner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.InsertFromSubQueryConsumer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.QueryAndFetchConsumer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.ESGetConsumer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.NonDistributedGroupByConsumer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.DistributedGroupByConsumer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.Consumer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : Context to context : ConsumerContext in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.DistributedGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : Context to context : ConsumerContext in method public visitInsertFromQuery(statement InsertFromSubQueryAnalyzedStatement, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.InsertFromSubQueryConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : Context to context : ConsumerContext in method private nonDistributedGroupBy(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.NonDistributedGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : Context to context : ConsumerContext in method private normalSelect(table QueriedTable, whereClause WhereClause, tableRelation TableRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.QueryAndFetchConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to PlannedAnalyzedRelation in method public consume(rootRelation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.CountConsumer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.DistributedGroupByConsumer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.DistributedGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.ESGetConsumer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to PlannedAnalyzedRelation in method public consume(rootRelation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.GlobalAggregateConsumer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.InsertFromSubQueryConsumer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method public visitInsertFromQuery(statement InsertFromSubQueryAnalyzedStatement, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.InsertFromSubQueryConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.NonDistributedGroupByConsumer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method private nonDistributedGroupBy(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.NonDistributedGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.QueryAndFetchConsumer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method private normalSelect(table QueriedTable, whereClause WhereClause, tableRelation TableRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.QueryAndFetchConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.QueryThenFetchConsumer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method private optimizedReduceOnCollectorGroupBy(table QueriedTable, tableRelation TableRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to PlannedAnalyzedRelation in method public consume(rootRelation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.UpdateConsumer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.Consumer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable plan : Plan to plannedAnalyzedRelation : PlannedAnalyzedRelation in method public plan(relation AnalyzedRelation, consumerContext ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ConsumingPlanner",
    "comment" : "<p>plannedAnalyzedRelation contains plan: <span class='blob-code-inner blob-code-marker' data-code-marker=' '>plannedAnalyzedRelation<span class='pl-k'>.</span>plan();</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute consumerContext : ConsumerContext to consumingPlanner : ConsumingPlanner in class io.crate.planner.consumer.InsertFromSubQueryConsumer.Visitor",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>private</span> <span class='pl-k'>static</span> <span class='pl-k'>class</span> <span class='pl-en'>Context</span></span> does not exist any more.</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : Context to context : ConsumerContext in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.QueryAndFetchConsumer.Visitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.QueryAndFetchConsumer.Visitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : Context to context : ConsumerContext in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.DistributedGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : Context to context : ConsumerContext in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.InsertFromSubQueryConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : Context to context : ConsumerContext in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.NonDistributedGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : Context to context : ConsumerContext in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.QueryAndFetchConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : Context to context : ConsumerContext in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public plan(relation AnalyzedRelation, consumerContext ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.ConsumingPlanner",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.DistributedGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.NonDistributedGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.NonDistributedGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.QueryAndFetchConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer.Visitor",
    "comment" : "<p>Same case. Detected by RMiner as Change Return Type but it is still here.&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : Context to context : ConsumerContext in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.NonDistributedGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type context : Context to context : ConsumerContext in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation from class io.crate.planner.consumer.InsertFromSubQueryConsumer.Visitor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter consumingPlanner : ConsumingPlanner in method public InsertFromSubQueryConsumer(consumingPlanner ConsumingPlanner) from class io.crate.planner.consumer.InsertFromSubQueryConsumer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected visitAnalyzedRelation(relation AnalyzedRelation, context Context) : AnalyzedRelation from class io.crate.planner.consumer.DistributedGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected visitAnalyzedRelation(relation AnalyzedRelation, context Context) : AnalyzedRelation from class io.crate.planner.consumer.NonDistributedGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected visitAnalyzedRelation(relation AnalyzedRelation, context Context) : AnalyzedRelation from class io.crate.planner.consumer.QueryAndFetchConsumer.Visitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected visitAnalyzedRelation(relation AnalyzedRelation, context Context) : AnalyzedRelation from class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer.Visitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private rootRelation : AnalyzedRelation from class io.crate.planner.consumer.ConsumerContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private plannerContext : Planner.Context from class io.crate.planner.consumer.ConsumerContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3234
}, {
  "id" : 1118012,
  "repository" : "https://github.com/killbill/killbill.git",
  "sha1" : "66901e86e8bea2b999ed9f33e013fa5ed21507c7",
  "url" : "https://github.com/killbill/killbill/commit/66901e86e8bea2b999ed9f33e013fa5ed21507c7",
  "author" : "stephane brossier",
  "time" : "6/16/15 8:32 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private sanityOnPaymentInfoPlugin(paymentInfoPlugin PaymentTransactionInfoPlugin) : void inlined to private doOperation() : OperationResult in class org.killbill.billing.payment.core.sm.payments.PaymentOperation",
    "comment" : "<p>The thrown exception changes from<br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>throw</span> <span class='pl-k'>new</span> <span class='pl-smi'>PaymentApiException</span>(<span class='pl-smi'>ErrorCode</span><span class='pl-c1'><span class='pl-k'>.</span>PAYMENT_PLUGIN_EXCEPTION</span>, <span class='pl-s'><span class='pl-pds'>'</span>Payment plugin returned a null result<span class='pl-pds'>'</span></span>);</span><br />to<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>throw</span> <span class='pl-k'>new</span> <span class='pl-smi'>IllegalStateException</span>(<span class='pl-s'><span class='pl-pds'>'</span>Payment plugin returned a null result<span class='pl-pds'>'</span></span>);</span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable realException : Throwable in method protected rewrapExecutionException(paymentStateContext PaymentStateContext, e ExecutionException) : OperationException from class org.killbill.billing.payment.core.sm.payments.PaymentOperation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1091
}, {
  "id" : 1118051,
  "repository" : "https://github.com/eclipse/jetty.project.git",
  "sha1" : "1f3be625e62f44d929c01f6574678eea05754474",
  "url" : "https://github.com/eclipse/jetty.project/commit/1f3be625e62f44d929c01f6574678eea05754474",
  "author" : "Jan Bartel",
  "time" : "6/17/15 12:18 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public gatherScannables() : void extracted from public configureScanner() : void in class org.eclipse.jetty.maven.plugin.JettyRunMojo",
    "comment" : "<p>There is a very small number of common statements between the original and the extracted method,<br />while a very big number of new statements in the extracted method.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public isScanningEnabled() : boolean extracted from private startScanner() : void in class org.eclipse.jetty.maven.plugin.AbstractJettyMojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public stopScanner() : void extracted from public restartWebApp(reconfigureScanner boolean) : void in class org.eclipse.jetty.maven.plugin.JettyRunWarExplodedMojo & moved to class org.eclipse.jetty.maven.plugin.AbstractJettyMojo",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public stopScanner() : void extracted from public restartWebApp(reconfigureScanner boolean) : void in class org.eclipse.jetty.maven.plugin.JettyRunMojo & moved to class org.eclipse.jetty.maven.plugin.AbstractJettyMojo",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private _excludes : List from class org.eclipse.jetty.maven.plugin.ScanTargetPattern to private _excludes : List<String> from class org.eclipse.jetty.maven.plugin.ScanPattern",
    "comment" : "it is an Extract Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private _includes : List from class org.eclipse.jetty.maven.plugin.ScanTargetPattern to private _includes : List<String> from class org.eclipse.jetty.maven.plugin.ScanPattern",
    "comment" : "it is an Extract Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.eclipse.jetty.maven.plugin.ScanPattern from class org.eclipse.jetty.maven.plugin.ScanTargetPattern",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List to List<String> in method public getIncludes() : List<String> from class org.eclipse.jetty.maven.plugin.ScanTargetPattern",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List to List<String> in method public getExcludes() : List<String> from class org.eclipse.jetty.maven.plugin.ScanTargetPattern",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type scanner : Scanner to scanner : PathWatcher in class org.eclipse.jetty.maven.plugin.AbstractJettyMojo",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable files : List<File> to config : PathWatcher.Config in method public gatherScannables() : void in class org.eclipse.jetty.maven.plugin.JettyRunMojo",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter changes : List to events : List<PathWatchEvent> in method public onPathWatchEvents(events List<PathWatchEvent>) : void in class org.eclipse.jetty.maven.plugin.JettyRunWarExplodedMojo.configureScanner.scanner",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>public</span> <span class='pl-k'>void</span> filesChanged(<span class='pl-smi'>List</span> changes)</span> -&gt; <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>public</span> <span class='pl-k'>void</span> onPathWatchEvents(<span class='pl-k'>List&lt;<span class='pl-smi'>PathWatchEvent</span>&gt;</span> events)</span></p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter changes : List to events : List<PathWatchEvent> in method public onPathWatchEvents(events List<PathWatchEvent>) : void in class org.eclipse.jetty.maven.plugin.JettyRunWarMojo.configureScanner.scanner",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>public void filesChanged(<span class='pl-smi'>List</span> changes) -&gt; public</span> <span class='pl-k'>void</span> onPathWatchEvents(<span class='pl-k'>List&lt;<span class='pl-smi'>PathWatchEvent</span>&gt;</span> events)</span></p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute _includes : List to _pattern : ScanPattern in class org.eclipse.jetty.maven.plugin.ScanTargetPattern",
    "comment" : "<p>_includes has been extracted to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>ScanPattern</span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setIncludes(includes List) : void from class org.eclipse.jetty.maven.plugin.ScanTargetPattern to public setIncludes(includes List<String>) : void from class org.eclipse.jetty.maven.plugin.ScanPattern",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setExcludes(excludes List) : void from class org.eclipse.jetty.maven.plugin.ScanTargetPattern to public setExcludes(excludes List<String>) : void from class org.eclipse.jetty.maven.plugin.ScanPattern",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type includes : List to includes : List<String> in method public setIncludes(includes List<String>) : void from class org.eclipse.jetty.maven.plugin.ScanPattern",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type excludes : List to excludes : List<String> in method public setExcludes(excludes List<String>) : void from class org.eclipse.jetty.maven.plugin.ScanPattern",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type _includes : List to _pattern : ScanPattern in class org.eclipse.jetty.maven.plugin.ScanTargetPattern",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setIncludes(includes List<String>) : void extracted from public setIncludes(includes List) : void in class org.eclipse.jetty.maven.plugin.ScanTargetPattern & moved to class org.eclipse.jetty.maven.plugin.ScanPattern",
    "comment" : "<p>Its a move method</p><p><a href='../refactoring-details/1118051/8269'>http://refactoring.encs.concordia.ca/oracle/refactoring-details/1118051/8269</a></p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setExcludes(excludes List<String>) : void extracted from public setExcludes(excludes List) : void in class org.eclipse.jetty.maven.plugin.ScanTargetPattern & moved to class org.eclipse.jetty.maven.plugin.ScanPattern",
    "comment" : "<p>Is move method</p><p><a href='8270'>http://refactoring.encs.concordia.ca/oracle/refactoring-details/1118051/8270</a></p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getIncludes() : List<String> extracted from public getIncludes() : List in class org.eclipse.jetty.maven.plugin.ScanTargetPattern & moved to class org.eclipse.jetty.maven.plugin.ScanPattern",
    "comment" : "<p>its a move method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getExcludes() : List<String> extracted from public getExcludes() : List in class org.eclipse.jetty.maven.plugin.ScanTargetPattern & moved to class org.eclipse.jetty.maven.plugin.ScanPattern",
    "comment" : "<p>Same pattern its actually a move method</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public onPathWatchEvents(events List<PathWatchEvent>) : void from class org.eclipse.jetty.maven.plugin.JettyRunWarExplodedMojo.configureScanner.scanner",
    "comment" : "<p>different listener is implemented</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public onPathWatchEvents(events List<PathWatchEvent>) : void from class org.eclipse.jetty.maven.plugin.JettyRunWarMojo.configureScanner.scanner",
    "comment" : "<p>different listener is implemented</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public startScanner() : void from class org.eclipse.jetty.maven.plugin.AbstractJettyMojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 7248
}, {
  "id" : 1118067,
  "repository" : "https://github.com/Graylog2/graylog2-server.git",
  "sha1" : "2ef067fc70055fc4d55c75937303414ddcf07e0e",
  "url" : "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
  "author" : "Dennis Oelkers",
  "time" : "6/17/15 8:59 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class integration.BaseRestTest.KeysPresentMatcher moved to integration.BaseRestTestHelper.KeysPresentMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass integration.BaseRestTestHelper from class integration.BaseRestTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getServerUrl() : URL renamed to private getDefaultServerUrl() : URL in class integration.util.graylog.GraylogControl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public containsAllKeys(keys String...) : ResponseAwareMatcher<Response> from class integration.BaseRestTest to public containsAllKeys(keys String...) : ResponseAwareMatcher<Response> from class integration.BaseRestTestHelper",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected jsonResourceForMethod() : byte[] from class integration.BaseRestTest to protected jsonResourceForMethod() : byte[] from class integration.BaseRestTestHelper",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected jsonResource(relativeFileName String) : byte[] from class integration.BaseRestTest to protected jsonResource(relativeFileName String) : byte[] from class integration.BaseRestTestHelper",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class integration.RestAssuredSetupRule from class integration.BaseRestTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class integration.RequiredVersionRule from class integration.BaseRestTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private log : Logger from class integration.BaseRestTest to private log : Logger from class integration.RequiredVersionRule",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private serverUnderTestVersion : Version from class integration.BaseRestTest to private serverUnderTestVersion : Version from class integration.RestAssuredSetupRule",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public setupTestSuite() : void from class integration.BaseRestTest to protected before() : void from class integration.RestAssuredSetupRule",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public onTestStart(iTestResult ITestResult) : void from class integration.SeedListener to public apply(base Statement, method FrameworkMethod, target Object) : Statement from class integration.MongoDbSeedRule",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public run(callBack IHookCallBack, testResult ITestResult) : void from class integration.BaseRestTest to public apply(base Statement, method FrameworkMethod, target Object) : Statement from class integration.RequiredVersionRule",
    "comment" : "<p>its associated with Extract class refactoring: Extract Class integration.RequiredVersionRule from class integration.BaseRestTest</p>",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected before() : void from class integration.RestAssuredSetupRule",
    "comment" : "<p>@BeforeSuite public void setupTestSuite() -&gt; @Override protected void before()</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @BeforeSuite in method public setupTestSuite() : void from class integration.BaseRestTest",
    "comment" : "<p>@BeforeSuite public void setupTestSuite() -&gt; @Override protected void before()</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Test(dependsOnMethods = \"createGrokPattern\") to @Test in method public listPatterns() : void from class integration.system.grok.GrokTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Test(dependsOnMethods = \"listPatterns\") to @Test in method public deletePattern() : void from class integration.system.grok.GrokTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Test(dependsOnMethods = \"createInputTest\") to @Test in method public listInput() : void from class integration.system.inputs.InputsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @Listeners({BaseRestTest.class,SeedListener.class}) in class integration.BaseRestTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public listPatterns() : void from class integration.system.grok.GrokTests",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public deletePattern() : void from class integration.system.grok.GrokTests",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public listInput() : void from class integration.system.inputs.InputsTest",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Test(dependsOnMethods = \"createGrokPattern\") in method public listPatterns() : void from class integration.system.grok.GrokTests",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Test(dependsOnMethods = \"listPatterns\") in method public deletePattern() : void from class integration.system.grok.GrokTests",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Test(dependsOnMethods = \"createInputTest\") in method public listInput() : void from class integration.system.inputs.InputsTest",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type Throwable in method protected before() : void from class integration.RestAssuredSetupRule",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private getDefaultServerUrl() : URL from class integration.util.graylog.GraylogControl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected before() : void from class integration.RestAssuredSetupRule",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private url : URL from class integration.util.graylog.GraylogControl",
    "comment" : "<p>public URL getUrl()<br />called in file<br />integration-tests/src/test/java/integration/RestAssuredSetupRule.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : URISyntaxException to e : URISyntaxException|MalformedURLException in method private getDefaultServerUrl() : URL from class integration.util.graylog.GraylogControl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable uriBuilder : URIBuilder in method private getDefaultServerUrl() : URL from class integration.util.graylog.GraylogControl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable graylogController : GraylogControl in method protected before() : void from class integration.RestAssuredSetupRule",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable url : URL in method protected before() : void from class integration.RestAssuredSetupRule",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1118131,
  "repository" : "https://github.com/CyanogenMod/android_frameworks_base.git",
  "sha1" : "15fd4f9caea01e53725086e290d3b35ec4bd4cd9",
  "url" : "https://github.com/CyanogenMod/android_frameworks_base/commit/15fd4f9caea01e53725086e290d3b35ec4bd4cd9",
  "author" : "jie.liu",
  "time" : "6/17/15 11:39 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected reset(animateTransition boolean) : void extracted from public reset() : void in class com.android.keyguard.KeyguardAbsKeyInputView",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6165
}, {
  "id" : 1118145,
  "repository" : "https://github.com/rstudio/rstudio.git",
  "sha1" : "9a581e07cb6381d70f3fd9bb2055e810e2a682a9",
  "url" : "https://github.com/rstudio/rstudio/commit/9a581e07cb6381d70f3fd9bb2055e810e2a682a9",
  "author" : "Kevin Ushey",
  "time" : "6/17/15 9:52 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getBoolean(key String) : boolean extracted from public init(widget AceEditorWidget, position Position) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private has(key String) : boolean extracted from public init(widget AceEditorWidget, position Position) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private addCheckboxController(optionName String, label String) : void renamed to private makeTriStateCheckBox(label String, option String) : TriStateCheckBox in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : "The changes in the code is huge. Nikos: not rename. Davood and Matin: rename",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setValue(value boolean) : void extracted from public init(widget AceEditorWidget, position Position) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel & moved to class org.rstudio.core.client.widget.TriStateCheckBox",
    "comment" : "<p>Extract and Move to the other class.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public get(key String) : String extracted from public init(widget AceEditorWidget, position Position) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private set(key String, value String) : void extracted from private addCheckboxController(optionName String, label String) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : "The method addCheckboxController(..) is deleted in the base version, though one statement of addCheckboxController is in method set(..) that is added in the refactored version, we cannot say it is an extract method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private unset(key String) : void extracted from private addCheckboxController(optionName String, label String) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : "The method addCheckboxController(..) is deleted in the base version, though one statement of addCheckboxController is in method unset(..) that is added in the refactored version, we cannot say it is an extract method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute BOOLEAN_CHUNK_OPTIONS : HashMap<String,String> to outputComboBox_ : SelectWidget in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type state : TriStateCheckBox.State to state : State in method public onValueChange(event ValueChangeEvent<State>) : void from class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel.makeTriStateCheckBox.checkBox",
    "comment" : "<p>makeTriStateCheckBox() seems to be extracted from <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-en'>addCheckboxController</span></span>()</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private addCheckboxController(optionName String, label String) : void renamed to private revert(key String) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2636
}, {
  "id" : 1118292,
  "repository" : "https://github.com/open-keychain/open-keychain.git",
  "sha1" : "c11fef6e7c80681ce69e5fdc7f4796b0b7a18e2b",
  "url" : "https://github.com/open-keychain/open-keychain/commit/c11fef6e7c80681ce69e5fdc7f4796b0b7a18e2b",
  "author" : "Vincent Breitmoser",
  "time" : "6/17/15 10:10 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public displayInputFragment(showOpenDialog boolean) : void extracted from private handleActions(savedInstanceState Bundle, intent Intent) : void in class org.sufficientlysecure.keychain.ui.DecryptFilesActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Remove Parameter on top"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected cryptoOperation(cryptoInput CryptoInputParcel, showProgress boolean) : void extracted from protected cryptoOperation(cryptoInput CryptoInputParcel) : void in class org.sufficientlysecure.keychain.ui.base.CryptoOperationFragment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "The one added condition does not change the behavior of the code!"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public displayListFragment(inputUri Uri) : void renamed to public displayInputFragment(showOpenDialog boolean) : void in class org.sufficientlysecure.keychain.ui.DecryptFilesActivity",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public displayListFragment(inputUris ArrayList<Uri>) : void extracted from private handleActions(savedInstanceState Bundle, intent Intent) : void in class org.sufficientlysecure.keychain.ui.DecryptFilesActivity",
    "comment" : "The code of displayListFragment(inputUris ArrayList) is taken from displayListFragment(inputUri Uri). Temporary variables were introduced to break the long chain of method calls.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter uri : Uri in method public newInstance(uri Uri, openDirectly boolean) : DecryptFilesInputFragment from class org.sufficientlysecure.keychain.ui.DecryptFilesInputFragment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable fragMan : FragmentManager in method public displayListFragment(inputUris ArrayList<Uri>) : void from class org.sufficientlysecure.keychain.ui.DecryptFilesActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable uris : ArrayList<Uri> to inputUris : ArrayList<Uri> in method public displayListFragment(inputUris ArrayList<Uri>) : void from class org.sufficientlysecure.keychain.ui.DecryptFilesActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1261
}, {
  "id" : 1118338,
  "repository" : "https://github.com/open-keychain/open-keychain.git",
  "sha1" : "49d544d558e9c7f1106b5923204b1fbec2696cf7",
  "url" : "https://github.com/open-keychain/open-keychain/commit/49d544d558e9c7f1106b5923204b1fbec2696cf7",
  "author" : "Dominik Schürmann",
  "time" : "6/17/15 10:26 AM",
  "refactorings" : [ {
    "type" : "Rename Package",
    "description" : "Rename Package org.sufficientlysecure.keychain.util.orbot to org.sufficientlysecure.keychain.util.tor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sufficientlysecure.keychain.util.orbot.TorServiceUtils moved to org.sufficientlysecure.keychain.util.tor.TorServiceUtils",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sufficientlysecure.keychain.util.orbot.OrbotHelper moved to org.sufficientlysecure.keychain.util.tor.OrbotHelper",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1118362,
  "repository" : "https://github.com/hazelcast/hazelcast.git",
  "sha1" : "e66e49cd4a9dd8027204f712f780170a5c129f5b",
  "url" : "https://github.com/hazelcast/hazelcast/commit/e66e49cd4a9dd8027204f712f780170a5c129f5b",
  "author" : "alarmnummer",
  "time" : "6/17/15 9:05 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class com.hazelcast.spi.ServiceInfo moved to com.hazelcast.spi.impl.servicemanager.ServiceInfo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 8786
}, {
  "id" : 1118403,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "021bf45623b748e70f20d956e86d595191241786",
  "url" : "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
  "author" : "Simon Brandhof",
  "time" : "6/18/15 6:52 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method package register(metrics Iterable<Metric>) : void extracted from public start() : void in class org.sonar.server.startup.RegisterMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Lots of changes"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package getMetricsRepositories() : List<Metric> renamed to package getPluginMetrics() : List<Metric> in class org.sonar.server.startup.RegisterMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public disable(session DbSession, ids List<Integer>) : void renamed to public disableByIds(session DbSession, ids List<Integer>) : void in class org.sonar.server.metric.persistence.MetricDao",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.sonar.core.metric.DefaultMetricFinderTest moved to org.sonar.server.metric.DefaultMetricFinderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private removeExistingUserManagedMetrics(metrics List<Metric>) : List<Metric> inlined to package getPluginMetrics() : List<Metric> in class org.sonar.server.startup.RegisterMetrics",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldSaveIfNew() : void renamed to public insert_new_metrics() : void in class org.sonar.server.startup.RegisterMetricsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, GumTreeDiff",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldUpdateIfAlreadyExists() : void renamed to public update_non_custom_metrics() : void in class org.sonar.server.startup.RegisterMetricsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, GumTreeDiff",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public shouldFindAll() : void from class org.sonar.core.metric.DefaultMetricFinderTest to public shouldFindAll() : void from class org.sonar.server.metric.DefaultMetricFinderTest",
    "comment" : "It is like rename package refactroing, but since RefDiff does not detetc package level refactroing, I was expecting a move class refactroing at least. But since the class body is changed as well, it is really hard to decide which type of refactoring it is",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public shouldFindById() : void from class org.sonar.core.metric.DefaultMetricFinderTest to public shouldFindById() : void from class org.sonar.server.metric.DefaultMetricFinderTest",
    "comment" : "It is like rename package refactroing, but since RefDiff does not detetc package level refactroing, I was expecting a move class refactroing at least. But since the class body is changed as well, it is really hard to decide which type of refactoring it is",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public shouldFindByKey() : void from class org.sonar.core.metric.DefaultMetricFinderTest to public shouldFindByKey() : void from class org.sonar.server.metric.DefaultMetricFinderTest",
    "comment" : "It is like rename package refactroing, but since RefDiff does not detetc package level refactroing, I was expecting a move class refactroing at least. But since the class body is changed as well, it is really hard to decide which type of refactoring it is",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public shouldFindByKeys() : void from class org.sonar.core.metric.DefaultMetricFinderTest to public shouldFindByKeys() : void from class org.sonar.server.metric.DefaultMetricFinderTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private dbClient() : DbClient extracted from public shouldSaveIfNew() : void in class org.sonar.server.startup.RegisterMetricsTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private finder : DefaultMetricFinder from class org.sonar.core.metric.DefaultMetricFinderTest to package finder : DefaultMetricFinder from class org.sonar.server.metric.DefaultMetricFinderTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [measuresDao : MeasuresDao, conditionDao : QualityGateConditionDao] to dbClient : DbClient in method public RegisterMetrics(dbClient DbClient) from class org.sonar.server.startup.RegisterMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Merge Attribute",
    "description" : "Merge Attribute [measuresDao : MeasuresDao, conditionDao : QualityGateConditionDao] to dbClient : DbClient in class org.sonar.server.startup.RegisterMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute measuresDao : MeasuresDao to dbClient : DbClient in class org.sonar.server.startup.RegisterMetrics",
    "comment" : "<p>Merge Attribute [measuresDao : MeasuresDao, conditionDao : QualityGateConditionDao] to dbClient : DbClient</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter measuresDao : MeasuresDao to dbClient : DbClient in method public RegisterMetrics(dbClient DbClient, metricsRepositories Metrics[]) in class org.sonar.server.startup.RegisterMetrics",
    "comment" : "<p>Merge Parameter [measuresDao : MeasuresDao, conditionDao : QualityGateConditionDao] to dbClient : DbClient</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter measuresDao : MeasuresDao to dbClient : DbClient in method public RegisterMetrics(dbClient DbClient) in class org.sonar.server.startup.RegisterMetrics",
    "comment" : "<p>Merge Parameter [measuresDao : MeasuresDao, conditionDao : QualityGateConditionDao] to dbClient : DbClient</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter metrics : List<Metric> to metric : Metric in method public apply(metric Metric) : MetricDto in class org.sonar.server.startup.RegisterMetrics.MetricToDto",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable metric1 : Metric to m1 : Metric in method public insert_new_metrics() : void in class org.sonar.server.startup.RegisterMetricsTest",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable metric2 : Metric to custom : Metric in method public insert_new_metrics() : void in class org.sonar.server.startup.RegisterMetricsTest",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable synchronizer : RegisterMetrics to register : RegisterMetrics in method public insert_new_metrics() : void in class org.sonar.server.startup.RegisterMetricsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable synchronizer : RegisterMetrics to register : RegisterMetrics in method public update_non_custom_metrics() : void in class org.sonar.server.startup.RegisterMetricsTest",
    "comment" : "<p>The functionality of method <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-en x x-first x-last'>shouldUpdateIfAlreadyExists</span></span>() does not match with update_non_custom_metrics()</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type measuresDao : MeasuresDao to dbClient : DbClient in method public RegisterMetrics(dbClient DbClient, metricsRepositories Metrics[]) in class org.sonar.server.startup.RegisterMetrics",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type measuresDao : MeasuresDao to dbClient : DbClient in method public RegisterMetrics(dbClient DbClient) in class org.sonar.server.startup.RegisterMetrics",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type measuresDao : MeasuresDao to dbClient : DbClient in class org.sonar.server.startup.RegisterMetrics",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package disable(ids List<Integer>) : void renamed to package disableByIds(ids List<Integer>) : void in class org.sonar.core.metric.db.MetricMapper",
    "comment" : "<p>abstract method rename.<br />The call sites have also been updated.</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public disable(ids List<Integer>) : void renamed to public disableByIds(ids List<Integer>) : void in class org.sonar.core.metric.db.MetricMapper",
    "comment" : "<p>It seems to be correct based on references<br />https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786?diff=split#diff-9408722b579c28940b764844fb498732R119</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldNotUpdateUserManagesMetricIfAlreadyExists() : void renamed to public disable_undefined_metrics() : void in class org.sonar.server.startup.RegisterMetricsTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldEnableOnlyLoadedMetrics() : void renamed to public fail_if_duplicated_plugin_metrics() : void in class org.sonar.server.startup.RegisterMetricsTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @Category(DbTests.class) in class org.sonar.server.startup.RegisterMetricsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @Category(DbTests.class) in class org.sonar.server.metric.DefaultMetricFinderTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package finder : DefaultMetricFinder from class org.sonar.server.metric.DefaultMetricFinderTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [measuresDao : MeasuresDao, conditionDao : QualityGateConditionDao] to dbClient : DbClient in method public RegisterMetrics(dbClient DbClient, metricsRepositories Metrics[]) from class org.sonar.server.startup.RegisterMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4571
}, {
  "id" : 1118473,
  "repository" : "https://github.com/jfinal/jfinal.git",
  "sha1" : "881baed894540031bd55e402933bcad28b74ca88",
  "url" : "https://github.com/jfinal/jfinal/commit/881baed894540031bd55e402933bcad28b74ca88",
  "author" : "James",
  "time" : "6/18/15 5:57 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private validateLongValue(value String, min long, max long, errorKey String, errorMessage String) : void extracted from protected validateLong(field String, min long, max long, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Lots of changes - Also trim() has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private validateIntegerValue(value String, min int, max int, errorKey String, errorMessage String) : void extracted from protected validateInteger(field String, min int, max int, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Lots of changes - Also trim() has been added"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private validateLongValue(value String, errorKey String, errorMessage String) : void extracted from protected validateLong(field String, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Lots of changes - Also trim() has been added"
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.jfinal.plugin.activerecord.tx.TxByActionMethods renamed to com.jfinal.plugin.activerecord.tx.TxByMethods",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public findById(id Object, columns String) : M renamed to public findByIdLoadColumns(idValues Object[], columns String) : M in class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.jfinal.core.InterceptorBuilder renamed to com.jfinal.core.ActionInterceptorBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.jfinal.kit.EncryptionKit renamed to com.jfinal.kit.HashKit",
    "comment" : "The classes are so similar. the only difference is that the mehtods are renamed too",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public encrypt(algorithm String, srcStr String) : String renamed to public hash(algorithm String, srcStr String) : String in class com.jfinal.kit.HashKit",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public sha1Encrypt(srcStr String) : String renamed to public sha1(srcStr String) : String in class com.jfinal.kit.HashKit",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public sha256Encrypt(srcStr String) : String renamed to public sha256(srcStr String) : String in class com.jfinal.kit.HashKit",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public sha384Encrypt(srcStr String) : String renamed to public sha384(srcStr String) : String in class com.jfinal.kit.HashKit",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public sha512Encrypt(srcStr String) : String renamed to public sha512(srcStr String) : String in class com.jfinal.kit.HashKit",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public md5Encrypt(srcStr String) : String renamed to public md5(srcStr String) : String in class com.jfinal.kit.HashKit",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected validateString(field String, notBlank boolean, minLen int, maxLen int, errorKey String, errorMessage String) : void renamed to private validateStringValue(value String, minLen int, maxLen int, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private warnning(actionKey String, controllerClass Class<? extends Controller>, method Method) : void renamed to private buildMsg(actionKey String, controllerClass Class<? extends Controller>, method Method) : String in class com.jfinal.core.ActionMapping",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getController() : Controller from class com.jfinal.core.ActionInvocation to protected getController() : Controller from class com.jfinal.validate.Validator",
    "comment" : "Class ActionInvocation in base version is deleted, thus it does not total comply with the defenition of move method. Morover it seems that com.jfinal.core.ActionInvocation is moved and rename to class com.jfinal.aop.InvocationWrapper ",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.jfinal.aop.ActionInvocationWrapper renamed to com.jfinal.aop.InvocationWrapper",
    "comment" : "<p>The new name is&nbsp;com.jfinal.aop.InvocationWrapper (in the dataset one r is missing)</p><p>There is another parent class where Action is removed from the name. It seems to be a consistent renaming of a class while new functionality is also added</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.jfinal.core.ActionInvocation moved and renamed to com.jfinal.aop.Invocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public invoke() : void from class com.jfinal.aop.ActionInvocationWrapper to public invoke() : void from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public invoke() : void from class com.jfinal.core.ActionInvocation to public invoke() : void from class com.jfinal.aop.Invocation",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getControllerKey() : String from class com.jfinal.core.ActionInvocation to public getControllerKey() : String from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getViewPath() : String from class com.jfinal.core.ActionInvocation to public getViewPath() : String from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getMethodName() : String from class com.jfinal.core.ActionInvocation to public getMethodName() : String from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getActionKey() : String from class com.jfinal.core.ActionInvocation to public getActionKey() : String from class com.jfinal.aop.InvocationWrapper",
    "comment" : "ActionInvocation is deleted in base version and InvocationWrapper is added in the refactored version. Thus it is Move and rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getControllerKey() : String from class com.jfinal.aop.ActionInvocationWrapper to public getControllerKey() : String from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getMethod() : Method from class com.jfinal.core.ActionInvocation to public getMethod() : Method from class com.jfinal.aop.InvocationWrapper",
    "comment" : "ActionInvocation is deleted in base version and InvocationWrapper is added in the refactored version. Thus it is Move and rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getViewPath() : String from class com.jfinal.aop.ActionInvocationWrapper to public getViewPath() : String from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getMethodName() : String from class com.jfinal.aop.ActionInvocationWrapper to public getMethodName() : String from class com.jfinal.aop.InvocationWrapper",
    "comment" : "ActionInvocation is deleted in base version and InvocationWrapper is added in the refactored version. Thus it is Move and rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getActionKey() : String extracted from public getActionKey() : String in class com.jfinal.core.ActionInvocation & moved to class com.jfinal.aop.Invocation",
    "comment" : "<p>Extract and Move to other class</p><p>Same as: <small> http://refactoring.encs.concordia.ca/oracle/refactoring-details/1118473/935</small></p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getControllerKey() : String extracted from public getControllerKey() : String in class com.jfinal.core.ActionInvocation & moved to class com.jfinal.aop.Invocation",
    "comment" : "<p>Extract and Move to other class.</p><p>Same as <small>: http://refactoring.encs.concordia.ca/oracle/refactoring-details/1118473/935</small></p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getMethod() : Method extracted from public getMethod() : Method in class com.jfinal.core.ActionInvocation & moved to class com.jfinal.aop.Invocation",
    "comment" : "<p>Extract and Move to other class.</p><p>Same case as: Same as : http://refactoring.encs.concordia.ca/oracle/refactoring-details/1118473/935</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getMethodName() : String extracted from public getMethodName() : String in class com.jfinal.core.ActionInvocation & moved to class com.jfinal.aop.Invocation",
    "comment" : "<p>Extract and Move to the inner class.</p><p>Same as : http://refactoring.encs.concordia.ca/oracle/refactoring-details/1118473/935</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getViewPath() : String extracted from public getViewPath() : String in class com.jfinal.core.ActionInvocation & moved to class com.jfinal.aop.Invocation",
    "comment" : "<p>Extract and Move to the inner class.</p><p>The class ActionInvocation is renamed to Invocation which is TP. However, this extract method is FP.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean' is added to superclass&nbsp; of AnsiSqlDialect.</p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean'&nbsp; is added to the superClass PostgreSqlDialect.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.OracleDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to the other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean' is moved to the superClass&nbsp; of OracleDialect.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.MysqlDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to other class.</p><p>&nbsp;The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean'&nbsp;&nbsp; is added to the superclass of MysqlDialect.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to&nbsp; other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean' is added to the superclass of Sqlite3Dialect</p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forModelSave(table Table, attrs Map<String,Object>, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.OracleDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean' is added in superClass of com.jfinal.plugin.activerecord.dialect.OracleDialect .java</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.MysqlDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to other class.</p><p>Same as refactoring with ID= 946.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to other class.</p><p>Same as refactoring with ID = 946.</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to other class.</p><p>Same as refactoring with ID =946.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to the other class.</p><p>Same as refactoring with ID = 946.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect & moved to class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "<p>Extract and Move to the other class.</p><p>We cannot even consider it as Extract and Move.</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private inters : Interceptor[] from class com.jfinal.aop.ActionInvocationWrapper to private inters : Interceptor[] from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private index : int from class com.jfinal.aop.ActionInvocationWrapper to private index : int from class com.jfinal.aop.InvocationWrapper",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private index : int from class com.jfinal.core.ActionInvocation to private index : int from class com.jfinal.aop.Invocation",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private inters : Interceptor[] from class com.jfinal.core.ActionInvocation to private inters : Interceptor[] from class com.jfinal.aop.Invocation",
    "comment" : "It seems that we have rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable colName : String in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method private buildCacheName(inv Invocation, controller Controller) : String from class com.jfinal.plugin.ehcache.CacheInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.ehcache.EvictInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.POST",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.NotAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValue : Object... in method public deleteById(tableName String, primaryKey String, idValue Object...) : boolean from class com.jfinal.plugin.activerecord.Db",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.TxByMethods",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.aop.PrototypeInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method private buildCacheName(inv Invocation) : String from class com.jfinal.plugin.ehcache.EvictInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter actionInvocation : ActionInvocation to invocation : Invocation in method package InvocationWrapper(invocation Invocation, inters Interceptor[]) from class com.jfinal.aop.InvocationWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.SessionInViewInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.TxByActionKeys",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.GET",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.Restful",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public getConfigWithTxConfig(inv Invocation) : Config from class com.jfinal.plugin.activerecord.tx.Tx",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.Tx",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.ehcache.CacheInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.aop.InterceptorStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method private buildCacheKey(inv Invocation, controller Controller) : String from class com.jfinal.plugin.ehcache.CacheInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValue : Object in method public deleteById(tableName String, idValue Object) : boolean from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValue : Object... in method public deleteById(tableName String, primaryKey String, idValue Object...) : boolean from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.TxByRegex",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValue : Object in method public deleteById(tableName String, idValue Object) : boolean from class com.jfinal.plugin.activerecord.Db",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter globalInterceptor : Interceptor to globalActionInterceptor : Interceptor in method public add(globalActionInterceptor Interceptor) : Interceptors from class com.jfinal.config.Interceptors",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter invocation : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.NoUrlPara",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValue : Object in method public deleteById(idValue Object) : boolean from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValues : Object[] in method public findByIdLoadColumns(idValues Object[], columns String) : M from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValues : Object... in method private deleteById(table Table, idValues Object...) : boolean from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to arr : String[] in method public forModelFindById(table Table, columns String) : String from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to arr : String[] in method public forModelFindById(table Table, columns String) : String from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable pKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable pKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable primaryKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable pKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable primaryKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to pKeys : String[] in method public forModelFindById(table Table, columns String) : String from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to pKeys : String[] in method public forModelFindById(table Table, columns String) : String from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to pKeys : String[] in method public forModelFindById(table Table, columns String) : String from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable pKey : String to pKeys : String[] in method public forModelSave(table Table, attrs Map<String,Object>, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable id : Object to ids : Object[] in method public delete() : boolean from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable id : Object to ids : Object[] in method package update(config Config, conn Connection, tableName String, primaryKey String, record Record) : boolean from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable cause : Throwable to t : Throwable in method public invoke() : void from class com.jfinal.aop.Invocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable defaultInters : Interceptor[] to globalInters : Interceptor[] in method package buildActionMapping() : void from class com.jfinal.core.ActionMapping",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute actionInvocation : ActionInvocation to invocation : Invocation in class com.jfinal.aop.InvocationWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute controller : Controller to target : Object in class com.jfinal.aop.Invocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute interceptorList : List<Interceptor> to globalActionInterceptor : List<Interceptor> in class com.jfinal.config.Interceptors",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable uploadedFileSaveDirectory : String in method private initOreillyCos() : void from class com.jfinal.core.JFinal",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable ct : Constants in method private initOreillyCos() : void from class com.jfinal.core.JFinal",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getUsefulClass() : Class<? extends Model> extracted from private find(conn Connection, sql String, paras Object...) : List<M> in class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Change has happened in the return statement"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable modelClass : Class<? extends Model> to c : Class in method private getUsefulClass() : Class<? extends Model> from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getDatePattern() : String extracted from protected validateDate(field String, min Date, max Date, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "Not detected by RM, which I agree btw"
    }
  }, {
    "type" : "Merge Variable",
    "description" : "Merge Variable [primaryKey : String, columns : String] to pKeys : String[] in method public findById(tableName String, primaryKey String, idValue Object...) : Record from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValue : Object in method public findById(idValue Object) : M from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.aop.Interceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.LogInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.aop.InterceptorStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.aop.PrototypeInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type maxPostSize : Integer to maxPostSize : int in method public setMaxPostSize(maxPostSize int) : void from class com.jfinal.config.Constants",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.GET",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.LogInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type invocation : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.NoUrlPara",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.NotAction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.POST",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.Restful",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.ext.interceptor.SessionInViewInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type idValue : Number to idValue : Object... in method public findById(tableName String, primaryKey String, idValue Object...) : Record from class com.jfinal.plugin.activerecord.Db",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to idValue : Object... in method public deleteById(tableName String, primaryKey String, idValue Object...) : boolean from class com.jfinal.plugin.activerecord.Db",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type idValue : Object to idValue : Object... in method public findById(tableName String, primaryKey String, idValue Object...) : Record from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to idValue : Object... in method public deleteById(tableName String, primaryKey String, idValue Object...) : boolean from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to idValues : Object... in method private deleteById(table Table, idValues Object...) : boolean from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to idValues : Object[] in method public findByIdLoadColumns(idValues Object[], columns String) : M from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public getConfigWithTxConfig(inv Invocation) : Config from class com.jfinal.plugin.activerecord.tx.Tx",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.Tx",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.TxByActionKeys",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.TxByRegex",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.ehcache.CacheInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method private buildCacheName(inv Invocation, controller Controller) : String from class com.jfinal.plugin.ehcache.CacheInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method private buildCacheKey(inv Invocation, controller Controller) : String from class com.jfinal.plugin.ehcache.CacheInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.ehcache.EvictInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method private buildCacheName(inv Invocation) : String from class com.jfinal.plugin.ehcache.EvictInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type invocation : ActionInvocation to invocation : Invocation in method public intercept(invocation Invocation) : void from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.tx.TxByMethods",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type actionInvocation : ActionInvocation to invocation : Invocation in method package InvocationWrapper(invocation Invocation, inters Interceptor[]) from class com.jfinal.aop.InvocationWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.aop.Interceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Integer to int in method public getMaxPostSize() : int from class com.jfinal.config.Constants",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to String[] in method public getPrimaryKey() : String[] from class com.jfinal.plugin.activerecord.Table",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method package build(tableList List<Table>, config Config) : void from class com.jfinal.plugin.activerecord.TableBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type id : Object to ids : Object[] in method package update(config Config, conn Connection, tableName String, primaryKey String, record Record) : boolean from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type modelClass : Class<? extends Model> to c : Class in method private getUsefulClass() : Class<? extends Model> from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type id : Object to ids : Object[] in method public delete() : boolean from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type primaryKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pKey : String to pKeys : String[] in method public forModelSave(table Table, attrs Map<String,Object>, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type primaryKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pKey : String to pKeys : String[] in method public forModelDeleteById(table Table) : String from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type actionInvocation : ActionInvocation to invocation : Invocation in class com.jfinal.aop.InvocationWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type controller : Controller to target : Object in class com.jfinal.aop.Invocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type maxPostSize : Integer to maxPostSize : int in class com.jfinal.config.Constants",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type interceptorBuilder : InterceptorBuilder to interceptorBuilder : ActionInterceptorBuilder in method package buildActionMapping() : void from class com.jfinal.core.ActionMapping",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type primaryKey : String to primaryKey : String[] in class com.jfinal.plugin.activerecord.Table",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type fileRenamePolicy : DefaultFileRenamePolicy to fileRenamePolicy : FileRenamePolicy in class com.jfinal.upload.MultipartRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type invocation : ActionInvocation to invocation : Invocation in class com.jfinal.validate.Validator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ai : ActionInvocation to inv : Invocation in method public abstract doIntercept(inv Invocation) : void in class com.jfinal.aop.PrototypeInterceptor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter i18nResourceBaseName : String to defaultBaseName : String in method public setI18nDefaultBaseName(defaultBaseName String) : void in class com.jfinal.config.Constants",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter i18nResourceBaseName : String to defaultLocale : String in method public setI18nDefaultLocale(defaultLocale String) : void in class com.jfinal.config.Constants",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter defaultValue : String to singletonKey : String in method public enhance(singletonKey String, targetClass Class<T>) : T in class com.jfinal.core.Controller",
    "comment" : "<p>enhance(singletonKey String, targetClass Class&lt;T&gt;) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter key : String to singletonKey : String in method public enhance(singletonKey String, targetClass Class<T>, injectInters Interceptor...) : T in class com.jfinal.core.Controller",
    "comment" : "<p>enhance(singletonKey String, targetClass Class&lt;T&gt;, injectInters Interceptor...) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter key : String to singletonKey : String in method public enhance(singletonKey String, targetClass Class<T>, injectIntersClasses Class<? extends Interceptor>...) : T in class com.jfinal.core.Controller",
    "comment" : "<p>enhance(singletonKey String, targetClass Class&lt;T&gt;, injectIntersClasses Class&lt;? extends Interceptor&gt;...) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter columns : String to cacheName : String in method public findFirstByCache(cacheName String, key Object, sql String, paras Object...) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : "<p>findFirstByCache(cacheName String, key Object, sql String, paras Object...) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to key : Object in method public findFirstByCache(cacheName String, key Object, sql String, paras Object...) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : "<p>findFirstByCache(cacheName String, key Object, sql String, paras Object...) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter tableName : String to sql : String in method public findFirstByCache(cacheName String, key Object, sql String, paras Object...) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : "<p>findFirstByCache(cacheName String, key Object, sql String, paras Object...) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter tableName : String to cacheName : String in method public findFirstByCache(cacheName String, key Object, sql String) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : "<p>findFirstByCache(cacheName String, key Object, sql String) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to key : Object in method public findFirstByCache(cacheName String, key Object, sql String) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : "<p>findFirstByCache(cacheName String, key Object, sql String) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter tableName : String to cacheName : String in method public findFirstByCache(cacheName String, key Object, sql String, paras Object...) : Record in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "<p>findFirstByCache(cacheName String, key Object, sql String, paras Object...) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to sql : String in method public findFirstByCache(cacheName String, key Object, sql String, paras Object...) : Record in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "<p>findFirstByCache(cacheName String, key Object, sql String, paras Object...) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to idValues : Object... in method public findById(idValues Object...) : M in class com.jfinal.plugin.activerecord.Model",
    "comment" : "<p>method <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>findByIdLoadColumns</span>(<span class='pl-k'>Object</span>[] <span class='pl-v'>idValues</span>, <span class='pl-smi'>String</span> <span class='pl-v'>columns</span>)</span> is renamed from <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-en'>findById</span>(<span class='pl-smi'>Object</span> <span class='pl-v'>id</span>, <span class='pl-smi'>String</span> <span class='pl-v'>columns</span>)<br /><span class='pl-en'>findById</span>(<span class='pl-smi'>Object</span>... <span class='pl-v'>idValues</span>) appears to be a new method<br /></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable pKey : String to pKeys : String[] in method private getGeneratedKey(pst PreparedStatement, table Table, config Config) : void from class com.jfinal.plugin.activerecord.Model",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable pKey : String to pKeys : String[] in method public delete() : boolean in class com.jfinal.plugin.activerecord.Model",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to sql : StringBuilder in method public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to sql : StringBuilder in method public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public abstract forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public abstract forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public abstract forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to ids : Object[] in method public abstract forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to sql : StringBuilder in method public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to sql : StringBuilder in method public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to sql : StringBuilder in method public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable columnsArray : String[] to sql : StringBuilder in method public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter notBlank : boolean to index : int in method protected validateString(index int, minLen int, maxLen int, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter id : Object to ids : Object[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public abstract forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type id : Object to ids : Object[] in method public abstract forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable pKey : String to pKeys : String[] in method public update() : boolean from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pKey : String to pKeys : String[] in method private getGeneratedKey(pst PreparedStatement, table Table, config Config) : void from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pKey : String to pKeys : String[] in method public update() : boolean from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ai : ActionInvocation to inv : Invocation in method public abstract doIntercept(inv Invocation) : void in class com.jfinal.aop.PrototypeInterceptor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type idValue : Number to idValue : Object in method public deleteById(tableName String, idValue Object) : boolean in class com.jfinal.plugin.activerecord.Db",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to key : Object in method public findFirstByCache(cacheName String, key Object, sql String) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type idValue : Number to idValue : Object in method public deleteById(tableName String, idValue Object) : boolean in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type notBlank : boolean to index : int in method protected validateString(index int, minLen int, maxLen int, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Locale to T in method public enhance(singletonKey String, targetClass Class<T>, injectIntersClasses Class<? extends Interceptor>...) : T in class com.jfinal.core.Controller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method private getGeneratedKey(pst PreparedStatement, record Record, pKeys String[]) : void in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method build(tableList List<Table>, config Config) : void in class com.jfinal.plugin.activerecord.TableBuilder",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>private</span> <span class='pl-k'>static</span> <span class='pl-k'>final</span> <span class='pl-k'>Map&lt;<span class='pl-smi'>String</span>, Class&lt;?&gt;&gt;</span> strToType</span> has been extracted from <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>static</span> <span class='pl-k'>boolean</span> <span class='pl-en'>build</span>(<span class='pl-k'>List&lt;<span class='pl-smi'>Table</span>&gt;</span> <span class='pl-v'>tableList</span>, <span class='pl-smi'>Config</span> <span class='pl-v'>config</span>)</span></p>",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public setFileRenamePolicy(fileRenamePolicy FileRenamePolicy) : void in class com.jfinal.upload.OreillyCos",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method private isAbsolutelyPath(saveDirectory String) : boolean in class com.jfinal.upload.OreillyCos",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package addToInterceptorsMap(defaultInters Interceptor[]) : void from class com.jfinal.core.InterceptorBuilder to package addToInterceptorsMap(globalInters Interceptor[]) : void from class com.jfinal.core.ActionInterceptorBuilder",
    "comment" : "<p>Rename Class com.jfinal.core.InterceptorBuilder renamed to com.jfinal.core.ActionInterceptorBuilder</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createInterceptors(beforeAnnotation Before) : Interceptor[] from class com.jfinal.core.InterceptorBuilder to private createInterceptors(beforeAnnotation Before) : Interceptor[] from class com.jfinal.aop.InterceptorBuilder",
    "comment" : "<p>Rename Class com.jfinal.core.InterceptorBuilder renamed to com.jfinal.core.ActionInterceptorBuilder</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private intersMap : Map<Class<Interceptor>,Interceptor> from class com.jfinal.core.InterceptorBuilder to private intersMap : Map<Class<? extends Interceptor>,Interceptor> from class com.jfinal.core.ActionInterceptorBuilder",
    "comment" : "<p>Rename Class com.jfinal.core.InterceptorBuilder renamed to com.jfinal.core.ActionInterceptorBuilder</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public isOracle() : boolean inlined to private batch(config Config, conn Connection, sql String, paras Object[][], batchSize int) : int[] in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public encrypt(algorithm String, srcStr String) : String from class com.jfinal.kit.EncryptionKit to public hash(algorithm String, srcStr String) : String from class com.jfinal.kit.HashKit",
    "comment" : "<p>EncryptionKit is renamed to HashKit</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Davood, Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public isOracle() : boolean inlined to private batch(config Config, conn Connection, sql String, columns String, list List, batchSize int) : int[] in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private detectOreillyCos() : void inlined to public init(saveDirectory String, maxPostSize int, encoding String) : void in class com.jfinal.upload.OreillyCos",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isMultipartSupported() : boolean renamed to public setFileRenamePolicy(fileRenamePolicy FileRenamePolicy) : void in class com.jfinal.upload.OreillyCos",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public init(saveDirectory String, maxPostSize int, encoding String) : void renamed to private doInit(saveDirectory String, maxPostSize int, encoding String) : void in class com.jfinal.upload.OreillyCos",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String...) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String...) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public findById(tableName String, primaryKey String, idValue Number) : Record renamed to public deleteById(tableName String, idValue Object) : boolean in class com.jfinal.plugin.activerecord.Db",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public findById(tableName String, primaryKey String, idValue Object, columns String...) : Record renamed to public deleteById(tableName String, primaryKey String, idValue Object) : boolean in class com.jfinal.plugin.activerecord.Db",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteById(tableName String, id Object) : boolean renamed to public findFirstByCache(cacheName String, key Object, sql String, paras Object...) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteById(tableName String, primaryKey String, id Object) : boolean renamed to public findFirstByCache(cacheName String, key Object, sql String) : Record in class com.jfinal.plugin.activerecord.Db",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public findById(id Object, columns String...) : M renamed to public findByIdLoadColumns(idValue Object, columns String...) : M in class com.jfinal.plugin.activerecord.Model",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbFindById(tableName String, primaryKey String, columns String...) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getInterceptorArray() : Interceptor[] renamed to public addGlobalActionInterceptor(globalActionInterceptor Interceptor) : void in class com.jfinal.config.Interceptors",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public findById(tableName String, primaryKey String, idValue Number) : Record renamed to public deleteById(tableName String, idValue Object) : boolean in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public findById(tableName String, primaryKey String, idValue Object, columns String...) : Record renamed to public deleteById(tableName String, primaryKey String, idValue Object) : boolean in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteById(tableName String, id Object) : boolean renamed to private getGeneratedKey(pst PreparedStatement, record Record, pKeys String[]) : void in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteById(tableName String, primaryKey String, id Object) : boolean renamed to public findFirstByCache(cacheName String, key Object, sql String, paras Object...) : Record in class com.jfinal.plugin.activerecord.DbPro",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setI18n(i18nResourceBaseName String, defaultLocale Locale, i18nMaxAgeOfCookie Integer) : void renamed to public setI18nDefaultBaseName(defaultBaseName String) : void in class com.jfinal.config.Constants",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setI18n(i18nResourceBaseName String) : void renamed to public setI18nDefaultLocale(defaultLocale String) : void in class com.jfinal.config.Constants",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @SuppressWarnings(\"unchecked\") in class com.jfinal.aop.Invocation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter config : Config in method private getGeneratedKey(pst PreparedStatement, table Table, config Config) : void from class com.jfinal.plugin.activerecord.Model",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pKeys : String[] in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pKeys : String[] in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pKeys : String[] in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pKeys : String[] in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pKeys : String[] in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pKeys : String[] in method public abstract forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter columns : String in method public findById(tableName String, primaryKey String, idValue Object, columns String) : Record from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pKey : String in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter id : Object in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter primaryKey : String in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, primaryKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter id : Object in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, primaryKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pKey : String in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter id : Object in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter primaryKey : String in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, primaryKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter id : Object in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, primaryKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pKey : String in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter id : Object in method public forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter notBlank : boolean in method protected validateString(field String, notBlank boolean, minLen int, maxLen int, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pKey : String in method public abstract forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter id : Object in method public abstract forModelUpdate(table Table, attrs Map<String,Object>, modifyFlag Set<String>, pKey String, id Object, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public getConfigWithTxConfig(inv Invocation) : Config from class com.jfinal.plugin.activerecord.tx.Tx",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to private in method private validateStringValue(value String, minLen int, maxLen int, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public Invocation(action Action, controller Controller) from class com.jfinal.aop.Invocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method package addToInterceptorsMap(defaultInters Interceptor[]) : void from class com.jfinal.core.InterceptorBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter defaultInters : Interceptor[] to globalInters : Interceptor[] in method package addToInterceptorsMap(globalInters Interceptor[]) : void from class com.jfinal.core.ActionInterceptorBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type interceptorClasses : Class<Interceptor>[] to interceptorClasses : Class<? extends Interceptor>[] in method private createInterceptors(beforeAnnotation Before) : Interceptor[] from class com.jfinal.core.ActionInterceptorBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type intersMap : Map<Class<Interceptor>,Interceptor> to intersMap : Map<Class<? extends Interceptor>,Interceptor> in class com.jfinal.core.ActionInterceptorBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package fileRenamePolicy : FileRenamePolicy from class com.jfinal.upload.MultipartRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pKeys : String[] in method private getGeneratedKey(pst PreparedStatement, record Record, pKeys String[]) : void from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter record : Record in method private getGeneratedKey(pst PreparedStatement, record Record, pKeys String[]) : void from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Object to void in method private getGeneratedKey(pst PreparedStatement, record Record, pKeys String[]) : void from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private rootClassPath : String from class com.jfinal.kit.PathKit",
    "comment" : "<p>public void setRootClassPath(String rootClassPath) is not called in the commit</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private jsonText : String from class com.jfinal.render.JsonRender",
    "comment" : "<p>called in file<br />src/com/jfinal/plugin/ehcache/RenderInfo.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private attrs : String[] from class com.jfinal.render.JsonRender",
    "comment" : "<p>called in file<br />src/com/jfinal/plugin/ehcache/RenderInfo.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private controller : Controller from class com.jfinal.validate.Validator",
    "comment" : "<p>String value = controller.getPara(field);<br />is called estensively withing the Validator class</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private datePattern : String from class com.jfinal.validate.Validator",
    "comment" : "<p>self-encapsulate field</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private forIE : boolean from class com.jfinal.render.JsonRender",
    "comment" : "<p>called in file<br />src/com/jfinal/plugin/ehcache/RenderInfo.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier final in method package init(encoding String, devMode boolean) : void from class com.jfinal.render.Render",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier final in method public getEncoding() : String from class com.jfinal.render.Render",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier final in method public getDevMode() : boolean from class com.jfinal.render.Render",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier final in method public setContext(request HttpServletRequest, response HttpServletResponse) : Render from class com.jfinal.render.Render",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier final in method public setContext(request HttpServletRequest, response HttpServletResponse, viewPath String) : Render from class com.jfinal.render.Render",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier volatile in attribute private lockMap : ConcurrentHashMap<String,ReentrantLock> from class com.jfinal.plugin.ehcache.CacheInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier volatile in attribute private cacheManager : CacheManager from class com.jfinal.plugin.ehcache.CacheKit",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private fileRenamePolicy : DefaultFileRenamePolicy from class com.jfinal.upload.MultipartRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private datePattern : String from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private datePattern : String from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Variable Annotation",
    "description" : "Remove Variable Annotation @SuppressWarnings(\"unchecked\") in variable interceptorClasses : Class<Interceptor>[] in method private createInterceptors(beforeAnnotation Before) : Interceptor[] from class com.jfinal.core.InterceptorBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : ParseException to e : Exception in method protected validateDate(field String, min String, max String, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : ParseException to e : Exception in method private toDate(value String, defaultValue Date) : Date from class com.jfinal.core.Controller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter invocation : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.OneConnectionPerThread",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type invocation : ActionInvocation to inv : Invocation in method public intercept(inv Invocation) : void from class com.jfinal.plugin.activerecord.OneConnectionPerThread",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter errorCode : int in method public ActionException(errorCode int, errorRender Render) from class com.jfinal.core.ActionException",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter errorRender : Render in method public ActionException(errorCode int, errorRender Render) from class com.jfinal.core.ActionException",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class com.jfinal.core.Action",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable keyArr : String[] to arr : String[] in method package setPrimaryKey(primaryKey String) : void from class com.jfinal.plugin.activerecord.Table",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable pKeys : String[] in method public deleteById(tableName String, primaryKey String, idValue Object...) : boolean from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable pKeys : String[] in method package update(config Config, conn Connection, tableName String, primaryKey String, record Record) : boolean from class com.jfinal.plugin.activerecord.DbPro",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbUpdate(tableName String, pKeys String[], ids Object[], record Record, sql StringBuilder, paras List<Object>) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable tableName : String in method public forDbSave(sql StringBuilder, paras List<Object>, tableName String, pKeys String[], record Record) : void from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable value : String to value : String in method private validateStringValue(value String, minLen int, maxLen int, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter field : String in method protected validateString(field String, notBlank boolean, minLen int, maxLen int, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public abstract forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.Dialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.OracleDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type primaryKey : String to pKeys : String[] in method public forDbDeleteById(tableName String, pKeys String[]) : String from class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to String in method private buildMsg(actionKey String, controllerClass Class<? extends Controller>, method Method) : String from class com.jfinal.core.ActionMapping",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable value : String in method protected validateLong(field String, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : "<p>inlined to validateLongValue(controller.getPara(field), errorKey, errorMessage);</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable value : String in method protected validateInteger(field String, min int, max int, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : "<p>inlined to validateIntegerValue(controller.getPara(field), min, max, errorKey, errorMessage);</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable value : String in method protected validateLong(field String, min long, max long, errorKey String, errorMessage String) : void from class com.jfinal.validate.Validator",
    "comment" : "<p>inlined to validateLongValue(controller.getPara(field), min, max, errorKey, errorMessage);</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1822
}, {
  "id" : 1118508,
  "repository" : "https://github.com/jberkel/sms-backup-plus.git",
  "sha1" : "c265bde2ace252bc1e1c65c6af93520e5994edd2",
  "url" : "https://github.com/jberkel/sms-backup-plus/commit/c265bde2ace252bc1e1c65c6af93520e5994edd2",
  "author" : "Jan Berkel",
  "time" : "6/18/15 8:52 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public getTokenForLogging() : String extracted from public toString() : String in class com.zegoggles.smssync.auth.OAuth2Token",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "String concatenation and replacement happened"
    }
  } ],
  "refDiffExecutionTime" : 250
}, {
  "id" : 1118568,
  "repository" : "https://github.com/AsyncHttpClient/async-http-client.git",
  "sha1" : "f01d8610b9ceebc1de59d42f569b8af3efbe0a0f",
  "url" : "https://github.com/AsyncHttpClient/async-http-client/commit/f01d8610b9ceebc1de59d42f569b8af3efbe0a0f",
  "author" : "Stephane Landelle",
  "time" : "6/17/15 6:11 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method package signatureBaseString(method String, uri Uri, oauthTimestamp long, nonce String, formParams List<Param>, queryParams List<Param>) : StringBuilder extracted from public calculateSignature(method String, uri Uri, oauthTimestamp long, nonce String, formParams List<Param>, queryParams List<Param>) : String in class org.asynchttpclient.oauth.OAuthSignatureCalculator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "All mapped"
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method protected generateNonce() : String from class org.asynchttpclient.oauth.OAuthSignatureCalculator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 548
}, {
  "id" : 1118645,
  "repository" : "https://github.com/square/okhttp.git",
  "sha1" : "c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
  "url" : "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
  "author" : "Jake Wharton",
  "time" : "6/17/15 7:40 PM",
  "refactorings" : [ {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.squareup.okhttp.internal.spdy.SpdyConnection moved and renamed to com.squareup.okhttp.internal.framed.FramedConnection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSource moved and renamed to com.squareup.okhttp.internal.framed.FramedStream.FramedDataSource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.squareup.okhttp.internal.spdy.SpdyStream.SpdyTimeout moved and renamed to com.squareup.okhttp.internal.framed.FramedStream.StreamTimeout",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSink moved and renamed to com.squareup.okhttp.internal.framed.FramedStream.FramedDataSink",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.squareup.okhttp.internal.spdy.SpdyStream moved and renamed to com.squareup.okhttp.internal.framed.FramedStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.squareup.okhttp.internal.spdy.SpdyServer moved and renamed to com.squareup.okhttp.internal.framed.FramedServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.squareup.okhttp.internal.http.SpdyTransport renamed to com.squareup.okhttp.internal.http.FramedTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.squareup.okhttp.mockwebserver.MockWebServer.SpdySocketHandler renamed to com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package isSpdy() : boolean renamed to package isFramed() : boolean in class com.squareup.okhttp.Connection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.hpackjson.Story moved to com.squareup.okhttp.internal.framed.hpackjson.Story",
    "comment" : "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div></div><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.FrameReader moved to com.squareup.okhttp.internal.framed.FrameReader",
    "comment" : "<div><div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p><p>&nbsp;</p></div></div>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.HpackDecodeTestBase moved to com.squareup.okhttp.internal.framed.HpackDecodeTestBase",
    "comment" : "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div></div><p style='color: gray;'>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.Spdy3ConnectionTest moved to com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div></div><p style='color: gray;'>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.Http2ConnectionTest moved to com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div></div><p style='color: gray;'>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.HuffmanTest moved to com.squareup.okhttp.internal.framed.HuffmanTest",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.hpackjson.HpackJsonUtil moved to com.squareup.okhttp.internal.framed.hpackjson.HpackJsonUtil",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.HpackDecodeInteropTest moved to com.squareup.okhttp.internal.framed.HpackDecodeInteropTest",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.Spdy3Test moved to com.squareup.okhttp.internal.framed.Spdy3Test",
    "comment" : "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div></div>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.Http2 moved to com.squareup.okhttp.internal.framed.Http2",
    "comment" : "<div><div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div><p style='color: gray;'>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.PushObserver moved to com.squareup.okhttp.internal.framed.PushObserver",
    "comment" : "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div></div><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.SettingsTest moved to com.squareup.okhttp.internal.framed.SettingsTest",
    "comment" : "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div></div><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.Spdy3 moved to com.squareup.okhttp.internal.framed.Spdy3",
    "comment" : "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p></div><p style='color: gray;'>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.Variant moved to com.squareup.okhttp.internal.framed.Variant",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.Settings moved to com.squareup.okhttp.internal.framed.Settings",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span>.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.Ping moved to com.squareup.okhttp.internal.framed.Ping",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.ErrorCode moved to com.squareup.okhttp.internal.framed.ErrorCode",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span>.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.Huffman moved to com.squareup.okhttp.internal.framed.Huffman",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span>.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.HpackTest moved to com.squareup.okhttp.internal.framed.HpackTest",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.FrameWriter moved to com.squareup.okhttp.internal.framed.FrameWriter",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.MockSpdyPeer moved to com.squareup.okhttp.internal.framed.MockSpdyPeer",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.Header moved to com.squareup.okhttp.internal.framed.Header",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.HpackRoundTripTest moved to com.squareup.okhttp.internal.framed.HpackRoundTripTest",
    "comment" : "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.Http2FrameLoggerTest moved to com.squareup.okhttp.internal.framed.Http2FrameLoggerTest",
    "comment" : "<p>I<small></small>t is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.HeadersMode moved to com.squareup.okhttp.internal.framed.HeadersMode",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.hpackjson.Case moved to com.squareup.okhttp.internal.framed.hpackjson.Case",
    "comment" : "<p>I<small></small>t is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.BaseTestHandler moved to com.squareup.okhttp.internal.framed.BaseTestHandler",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.Http2Test moved to com.squareup.okhttp.internal.framed.Http2Test",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.NameValueBlockReader moved to com.squareup.okhttp.internal.framed.NameValueBlockReader",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.Hpack moved to com.squareup.okhttp.internal.framed.Hpack",
    "comment" : "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.squareup.okhttp.internal.spdy.IncomingStreamHandler moved to com.squareup.okhttp.internal.framed.IncomingStreamHandler",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Package",
    "description" : "Rename Package com.squareup.okhttp.internal.spdy to com.squareup.okhttp.internal.framed",
    "comment" : "<p>Package com.squareup.okhttp.internal.spdy no longer exists in child commit after refactoring</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable spdyConnection : SpdyConnection to framedConnection : FramedConnection in method public processConnection() : void from class com.squareup.okhttp.mockwebserver.MockWebServer.serveConnection.execute.new NamedRunnable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable spdySocketHandler : SpdySocketHandler to framedSocketHandler : FramedSocketHandler in method public processConnection() : void from class com.squareup.okhttp.mockwebserver.MockWebServer.serveConnection.execute.new NamedRunnable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable spdyHeaders : List<Header> to streamHeaders : List<Header> in method private readRequest(stream FramedStream) : RecordedRequest from class com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable spdyConnection : SpdyConnection to framedConnection : FramedConnection in method private run() : void from class com.squareup.okhttp.internal.framed.FramedServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable spdyStream : SpdyStream to framedStream : FramedStream in method public goAway(lastGoodStreamId int, errorCode ErrorCode, debugData ByteString) : void from class com.squareup.okhttp.internal.framed.FramedConnection.Reader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter spdyConnection : SpdyConnection to framedConnection : FramedConnection in method public FramedTransport(httpEngine HttpEngine, framedConnection FramedConnection) from class com.squareup.okhttp.internal.http.FramedTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute openSpdyConnections : Set<SpdyConnection> to openFramedConnections : Set<FramedConnection> in class com.squareup.okhttp.mockwebserver.MockWebServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute spdyConnection : SpdyConnection to framedConnection : FramedConnection in class com.squareup.okhttp.Connection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute spdyProtocols : List<Protocol> to framedProtocols : List<Protocol> in class com.squareup.okhttp.internal.framed.FramedServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute spdyConnection : SpdyConnection to framedConnection : FramedConnection in class com.squareup.okhttp.internal.http.FramedTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type spdyConnection : SpdyConnection to framedConnection : FramedConnection in method public FramedTransport(httpEngine HttpEngine, framedConnection FramedConnection) from class com.squareup.okhttp.internal.http.FramedTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type spdySocketHandler : SpdySocketHandler to framedSocketHandler : FramedSocketHandler in method public processConnection() : void from class com.squareup.okhttp.mockwebserver.MockWebServer.serveConnection.execute.new NamedRunnable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type spdyConnection : SpdyConnection to framedConnection : FramedConnection in method public processConnection() : void from class com.squareup.okhttp.mockwebserver.MockWebServer.serveConnection.execute.new NamedRunnable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type openSpdyConnections : Set<SpdyConnection> to openFramedConnections : Set<FramedConnection> in class com.squareup.okhttp.mockwebserver.MockWebServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type spdyConnection : SpdyConnection to framedConnection : FramedConnection in class com.squareup.okhttp.Connection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type spdyStream : SpdyStream to framedStream : FramedStream in method public goAway(lastGoodStreamId int, errorCode ErrorCode, debugData ByteString) : void from class com.squareup.okhttp.internal.framed.FramedConnection.Reader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type spdyConnection : SpdyConnection to framedConnection : FramedConnection in method private run() : void from class com.squareup.okhttp.internal.framed.FramedServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type spdyConnection : SpdyConnection to framedConnection : FramedConnection in class com.squareup.okhttp.internal.http.FramedTransport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type s : Iterator<SpdyConnection> to s : Iterator<FramedConnection> in method protected execute() : void from class com.squareup.okhttp.mockwebserver.MockWebServer.start.execute.new NamedRunnable",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public clientPingsServerHttp2() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public peerHttp2ServerLowersInitialWindowSize() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public peerHttp2ServerLowersInitialWindowSize() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public peerHttp2ServerZerosCompressionTable() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public peerHttp2ClientDisablesPush() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public peerIncreasesMaxFrameSize() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public receiveGoAwayHttp2() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream1 : SpdyStream to stream1 : FramedStream in method public receiveGoAwayHttp2() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream2 : SpdyStream to stream2 : FramedStream in method public receiveGoAwayHttp2() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public readSendsWindowUpdateHttp2() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public readSendsWindowUpdateHttp2() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public serverSendsEmptyDataClientDoesntSendWindowUpdateHttp2() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type client : SpdyStream to client : FramedStream in method public serverSendsEmptyDataClientDoesntSendWindowUpdateHttp2() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public clientSendsEmptyDataServerDoesntSendWindowUpdateHttp2() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type client : SpdyStream to client : FramedStream in method public clientSendsEmptyDataServerDoesntSendWindowUpdateHttp2() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public maxFrameSizeHonored() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public maxFrameSizeHonored() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public pushPromiseStream() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type client : SpdyStream to client : FramedStream in method public pushPromiseStream() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public doublePushPromise() : void from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method private sendHttp2SettingsAndCheckForAck(client boolean, settings Settings) : FramedConnection from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public clientCreatesStreamAndServerReplies() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public clientCreatesStreamAndServerReplies() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public headersOnlyStreamIsClosedAfterReplyHeaders() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public headersOnlyStreamIsClosedAfterReplyHeaders() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public clientPingsServer() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public serverSendsSettingsToClient() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public multipleSettingsFramesAreMerged() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public clearSettingsBeforeMerge() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public clientClosesClientOutputStream() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public clientClosesClientOutputStream() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public serverClosesClientOutputStream() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public serverClosesClientOutputStream() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public clientClosesClientInputStream() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public clientClosesClientInputStream() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public serverClosesClientInputStream() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public serverClosesClientInputStream() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public remoteDoubleSynReply() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public remoteDoubleSynReply() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public remoteSendsDataAfterInFinished() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public remoteSendsDataAfterInFinished() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public clientDoesNotLimitFlowControl() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public clientDoesNotLimitFlowControl() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public remoteSendsRefusedStreamBeforeReplyHeaders() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public remoteSendsRefusedStreamBeforeReplyHeaders() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public receiveGoAway() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream1 : SpdyStream to stream1 : FramedStream in method public receiveGoAway() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream2 : SpdyStream to stream2 : FramedStream in method public receiveGoAway() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public sendGoAway() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public noPingsAfterShutdown() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public close() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public close() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public closeCancelsPings() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public getResponseHeadersTimesOut() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public getResponseHeadersTimesOut() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public readTimesOut() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public readTimesOut() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public writeTimesOutAwaitingStreamWindow() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public writeTimesOutAwaitingStreamWindow() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public writeTimesOutAwaitingConnectionWindow() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public writeTimesOutAwaitingConnectionWindow() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public outgoingWritesAreBatched() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public outgoingWritesAreBatched() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public headers() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public headers() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public headersBeforeReply() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public headersBeforeReply() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public readSendsWindowUpdate() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public readSendsWindowUpdate() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public serverSendsEmptyDataClientDoesntSendWindowUpdate() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type client : SpdyStream to client : FramedStream in method public serverSendsEmptyDataClientDoesntSendWindowUpdate() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public clientSendsEmptyDataServerDoesntSendWindowUpdate() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type client : SpdyStream to client : FramedStream in method public clientSendsEmptyDataServerDoesntSendWindowUpdate() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public testTruncatedDataFrame() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public testTruncatedDataFrame() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public blockedStreamDoesntStarveNewStream() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream1 : SpdyStream to stream1 : FramedStream in method public blockedStreamDoesntStarveNewStream() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream2 : SpdyStream to stream2 : FramedStream in method public blockedStreamDoesntStarveNewStream() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method private headerBlockHasTrailingCompressedBytes(frame String, length int) : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method private headerBlockHasTrailingCompressedBytes(frame String, length int) : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type dataStream : SpdyStream to dataStream : FramedStream in method public data(inFinished boolean, streamId int, source BufferedSource, length int) : void from class com.squareup.okhttp.internal.framed.FramedConnection.Reader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public headers(outFinished boolean, inFinished boolean, streamId int, associatedStreamId int, headerBlock List<Header>, headersMode HeadersMode) : void from class com.squareup.okhttp.internal.framed.FramedConnection.Reader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type newStream : SpdyStream to newStream : FramedStream in method public headers(outFinished boolean, inFinished boolean, streamId int, associatedStreamId int, headerBlock List<Header>, headersMode HeadersMode) : void from class com.squareup.okhttp.internal.framed.FramedConnection.Reader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type rstStream : SpdyStream to rstStream : FramedStream in method public rstStream(streamId int, errorCode ErrorCode) : void from class com.squareup.okhttp.internal.framed.FramedConnection.Reader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type streamsToNotify : SpdyStream[] to streamsToNotify : FramedStream[] in method public settings(clearPrevious boolean, newSettings Settings) : void from class com.squareup.okhttp.internal.framed.FramedConnection.Reader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type streamsCopy : SpdyStream[] to streamsCopy : FramedStream[] in method public goAway(lastGoodStreamId int, errorCode ErrorCode, debugData ByteString) : void from class com.squareup.okhttp.internal.framed.FramedConnection.Reader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public windowUpdate(streamId int, windowSizeIncrement long) : void from class com.squareup.okhttp.internal.framed.FramedConnection.Reader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type server : SpdyServer to server : FramedServer in method public main(args String...) : void from class com.squareup.okhttp.internal.framed.FramedServer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type pushedStream : SpdyStream to pushedStream : FramedStream in method private pushPromises(stream FramedStream, promises List<PushPromise>) : void from class com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type stream : SpdyStream to stream : FramedStream in class com.squareup.okhttp.internal.http.FramedTransport",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type streams : Map<Integer,SpdyStream> to streams : Map<Integer,FramedStream> in class com.squareup.okhttp.internal.framed.FramedConnection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method package removeStream(streamId int) : FramedStream from class com.squareup.okhttp.internal.framed.FramedConnection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method private newStream(associatedStreamId int, requestHeaders List<Header>, out boolean, in boolean) : FramedStream from class com.squareup.okhttp.internal.framed.FramedConnection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type streamsToClose : SpdyStream[] to streamsToClose : FramedStream[] in method private close(connectionCode ErrorCode, streamCode ErrorCode) : void from class com.squareup.okhttp.internal.framed.FramedConnection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type connection : SpdyConnection to connection : FramedConnection in class com.squareup.okhttp.internal.framed.FramedStream",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type source : SpdyDataSource to source : FramedDataSource in class com.squareup.okhttp.internal.framed.FramedStream",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type sink : SpdyDataSink to sink : FramedDataSink in class com.squareup.okhttp.internal.framed.FramedStream",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type readTimeout : SpdyTimeout to readTimeout : StreamTimeout in class com.squareup.okhttp.internal.framed.FramedStream",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type writeTimeout : SpdyTimeout to writeTimeout : StreamTimeout in class com.squareup.okhttp.internal.framed.FramedStream",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type stream : SpdyStream to stream : FramedStream in method public receive(stream FramedStream) : void from class com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type stream : SpdyStream to stream : FramedStream in method private readRequest(stream FramedStream) : RecordedRequest from class com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type stream : SpdyStream to stream : FramedStream in method private writeResponse(stream FramedStream, response MockResponse) : void from class com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type stream : SpdyStream to stream : FramedStream in method private pushPromises(stream FramedStream, promises List<PushPromise>) : void from class com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public settings(clearPrevious boolean, newSettings Settings) : void from class com.squareup.okhttp.internal.framed.FramedConnection.Reader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method private close(connectionCode ErrorCode, streamCode ErrorCode) : void from class com.squareup.okhttp.internal.framed.FramedConnection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type stream : SpdyStream to stream : FramedStream in method public receive(stream FramedStream) : void from class com.squareup.okhttp.internal.framed.IncomingStreamHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type stream : SpdyStream to stream : FramedStream in method public receive(stream FramedStream) : void from class com.squareup.okhttp.internal.framed.FramedServer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type stream : SpdyStream to stream : FramedStream in method private send404(stream FramedStream, path String) : void from class com.squareup.okhttp.internal.framed.FramedServer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type stream : SpdyStream to stream : FramedStream in method private serveDirectory(stream FramedStream, files File[]) : void from class com.squareup.okhttp.internal.framed.FramedServer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type stream : SpdyStream to stream : FramedStream in method private serveFile(stream FramedStream, file File) : void from class com.squareup.okhttp.internal.framed.FramedServer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type connection : SpdyConnection to connection : FramedConnection in method package FramedStream(id int, connection FramedConnection, outFinished boolean, inFinished boolean, requestHeaders List<Header>) from class com.squareup.okhttp.internal.framed.FramedStream",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type SpdyConnection to FramedConnection in method private sendHttp2SettingsAndCheckForAck(client boolean, settings Settings) : FramedConnection from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type SpdyConnection to FramedConnection in method private connection(peer MockSpdyPeer, variant Variant) : FramedConnection from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type SpdyConnection to FramedConnection in method private connection(peer MockSpdyPeer, variant Variant) : FramedConnection from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type SpdyConnection to FramedConnection in method public build() : FramedConnection from class com.squareup.okhttp.internal.framed.FramedConnection.Builder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type SpdyStream to FramedStream in method package getStream(id int) : FramedStream from class com.squareup.okhttp.internal.framed.FramedConnection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type SpdyStream to FramedStream in method package removeStream(streamId int) : FramedStream from class com.squareup.okhttp.internal.framed.FramedConnection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type SpdyStream to FramedStream in method public pushStream(associatedStreamId int, requestHeaders List<Header>, out boolean) : FramedStream from class com.squareup.okhttp.internal.framed.FramedConnection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type SpdyStream to FramedStream in method public newStream(requestHeaders List<Header>, out boolean, in boolean) : FramedStream from class com.squareup.okhttp.internal.framed.FramedConnection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type SpdyStream to FramedStream in method private newStream(associatedStreamId int, requestHeaders List<Header>, out boolean, in boolean) : FramedStream from class com.squareup.okhttp.internal.framed.FramedConnection",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type SpdyConnection to FramedConnection in method public getConnection() : FramedConnection from class com.squareup.okhttp.internal.framed.FramedStream",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public clientCreatesStreamAndServerRepliesWithFin() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type connection : SpdyConnection to connection : FramedConnection in method public clientClosesClientInputStreamIfOutputStreamIsClosed() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type stream : SpdyStream to stream : FramedStream in method public clientClosesClientInputStreamIfOutputStreamIsClosed() : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type SpdyConnection.Builder to FramedConnection.Builder in method private connectionBuilder(peer MockSpdyPeer, variant Variant) : FramedConnection.Builder from class com.squareup.okhttp.internal.framed.Http2ConnectionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type SpdyConnection.Builder to FramedConnection.Builder in method private connectionBuilder(peer MockSpdyPeer, variant Variant) : FramedConnection.Builder from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type stream : SpdyStream to stream : FramedStream in method public receive(stream FramedStream) : void from class com.squareup.okhttp.internal.framed.IncomingStreamHandler.REFUSE_INCOMING_STREAMS.new IncomingStreamHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type stream : SpdyStream to stream : FramedStream in method public receive(stream FramedStream) : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest.serverCreatesStreamAndClientReplies.handler.new IncomingStreamHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type stream : SpdyStream to stream : FramedStream in method public receive(stream FramedStream) : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest.remoteDoubleSynStream.handler.new IncomingStreamHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type stream : SpdyStream to stream : FramedStream in method public receive(stream FramedStream) : void from class com.squareup.okhttp.internal.framed.Spdy3ConnectionTest.replyWithNoData.handler.new IncomingStreamHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1118798,
  "repository" : "https://github.com/spring-projects/spring-integration.git",
  "sha1" : "247232bdde24b81814a82100743f77d881aaf06b",
  "url" : "https://github.com/spring-projects/spring-integration/commit/247232bdde24b81814a82100743f77d881aaf06b",
  "author" : "Gunnar Hillert",
  "time" : "6/17/15 9:57 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File extracted from private handleFileMessage(sourceFile File, tempFile File, resultFile File) : File in class org.springframework.integration.file.FileWritingMessageHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "this. has been added, which doesn't make the refactoring impure"
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable bis : BufferedInputStream to sourceFileInputStream : InputStream in method private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File from class org.springframework.integration.file.FileWritingMessageHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type bis : BufferedInputStream to sourceFileInputStream : InputStream in method private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File from class org.springframework.integration.file.FileWritingMessageHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private handleFileMessage(sourceFile File, tempFile File, resultFile File) : File renamed to private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File in class org.springframework.integration.file.FileWritingMessageHandler",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter sourceFileInputStream : InputStream in method private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File from class org.springframework.integration.file.FileWritingMessageHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2664
}, {
  "id" : 1118835,
  "repository" : "https://github.com/grails/grails-core.git",
  "sha1" : "480537e0f8aaf50a7648bf445b33230aa32a9b44",
  "url" : "https://github.com/grails/grails-core/commit/480537e0f8aaf50a7648bf445b33230aa32a9b44",
  "author" : "graemerocher",
  "time" : "6/18/15 5:02 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public weaveTestMixins(classNode ClassNode, values ListExpression, applicationClassNode ClassNode) : void extracted from public weaveTestMixins(classNode ClassNode, values ListExpression) : void in class org.grails.compiler.injection.test.TestMixinTransformation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "The replacement is about a method invocation to an extracted method. I consider this as a pure change"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public weaveMixinsIntoClass(classNode ClassNode, values ListExpression, applicationClassNode ClassNode) : void extracted from public weaveMixinsIntoClass(classNode ClassNode, values ListExpression) : void in class org.grails.compiler.injection.test.TestMixinTransformation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Add parameter on the top of the extracted method"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter applicationClassNode : ClassNode in method protected weaveMixinIntoClass(classNode ClassNode, mixinClassNode ClassNode, junit3MethodHandler Junit3TestFixtureMethodHandler, applicationClassNode ClassNode) : void from class org.grails.compiler.injection.test.TestMixinTransformation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1177
}, {
  "id" : 1119037,
  "repository" : "https://github.com/apache/pig.git",
  "sha1" : "7a1659c12d76b510809dea1dea1f5100bcf4cd60",
  "url" : "https://github.com/apache/pig/commit/7a1659c12d76b510809dea1dea1f5100bcf4cd60",
  "author" : "Xuefu Zhang",
  "time" : "6/18/15 1:08 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private initialize() : void extracted from public launchPig(physicalPlan PhysicalPlan, grpName String, pigContext PigContext) : PigStats in class org.apache.pig.backend.hadoop.executionengine.spark.SparkLauncher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "One line has beed added which changes the behavior of the extracted code (new method)"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private startSparkJob() : void renamed to private addFilesToSparkJob() : void in class org.apache.pig.backend.hadoop.executionengine.spark.SparkLauncher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter pigContext : PigContext in method private saveUdfImportList(pigContext PigContext) : void from class org.apache.pig.backend.hadoop.executionengine.spark.SparkLauncher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2060
}, {
  "id" : 1119082,
  "repository" : "https://github.com/wordpress-mobile/WordPress-Android.git",
  "sha1" : "ab298886b59f4ad0235cd6d5764854189eb59eb6",
  "url" : "https://github.com/wordpress-mobile/WordPress-Android/commit/ab298886b59f4ad0235cd6d5764854189eb59eb6",
  "author" : "Danilo Ercoli",
  "time" : "6/18/15 8:36 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public openPostInReaderOrInAppWebview(ctx Context, remoteBlogID String, remoteItemID String, itemType String, itemURL String) : void extracted from public openPostInReaderOrInAppWebview(ctx Context, post PostModel) : void in class org.wordpress.android.ui.stats.StatsUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "null check has been added and the behavior and functionality is the same as the parent version, so it's pure"
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.wordpress.android.ui.stats.StatsSinglePostDetailsActivity renamed to org.wordpress.android.ui.stats.StatsSingleItemDetailsActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable url : String to itemURL : String in method public openPostInReaderOrInAppWebview(ctx Context, remoteBlogID String, remoteItemID String, itemType String, itemURL String) : void from class org.wordpress.android.ui.stats.StatsUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable postType : String to itemType : String in method public openPostInReaderOrInAppWebview(ctx Context, remoteBlogID String, remoteItemID String, itemType String, itemURL String) : void from class org.wordpress.android.ui.stats.StatsUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute blogId : String to mRemoteBlogID : String in method private refreshStats() : void from class org.wordpress.android.ui.stats.StatsSingleItemDetailsActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute remotePostID : String to mRemoteItemID : String in method private refreshStats() : void from class org.wordpress.android.ui.stats.StatsSingleItemDetailsActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Split Attribute",
    "description" : "Split Attribute mRemotePostItem : PostModel to [mRemoteBlogID : String, mRemoteItemID : String, mRemoteItemType : String, mItemURL : String, mItemTitle : String] in class org.wordpress.android.ui.stats.StatsSingleItemDetailsActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type blogID : long to blogID : String in method public openPostInReaderOrInAppWebview(ctx Context, post PostModel) : void from class org.wordpress.android.ui.stats.StatsUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type itemID : long to itemID : String in method public openPostInReaderOrInAppWebview(ctx Context, post PostModel) : void from class org.wordpress.android.ui.stats.StatsUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1502
}, {
  "id" : 1119086,
  "repository" : "https://github.com/wordpress-mobile/WordPress-Android.git",
  "sha1" : "f8d5cf01f123a1d0a65857aa2db0571fe9cd1911",
  "url" : "https://github.com/wordpress-mobile/WordPress-Android/commit/f8d5cf01f123a1d0a65857aa2db0571fe9cd1911",
  "author" : "Oguz Kocer",
  "time" : "6/18/15 7:25 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private getIconImageURL(size int, iconUrl String, blogUrl String) : String extracted from public getIconImageURL(size int) : String in class org.wordpress.android.models.Blog",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "All mapped"
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private isPhotonURL(url String) : boolean from class org.wordpress.android.models.Blog",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private isBlavatarURL(url String) : boolean from class org.wordpress.android.models.Blog",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private isPhotonURL(url String) : boolean from class org.wordpress.android.models.Blog",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private isBlavatarURL(url String) : boolean from class org.wordpress.android.models.Blog",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1995
}, {
  "id" : 1119109,
  "repository" : "https://github.com/infinispan/infinispan.git",
  "sha1" : "ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
  "url" : "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
  "author" : "Pedro Ruivo",
  "time" : "6/18/15 3:08 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private replayRemoteTransactionIfNeeded(ctx RemoteTxInvocationContext, topologyId int) : void extracted from public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object in class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public throwRollbackExceptionIfAny() : void extracted from public commit() : void in class org.infinispan.transaction.tm.DummyTransaction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected assertNoTransactions(cacheName String) : void extracted from protected assertNoTransactions() : void in class org.infinispan.test.MultipleCacheManagersTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "The log message has been changed. Also, the regular for implementation has been changed to forEach. Also. String literall has been added. All the changes are not behavioral."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected eventually(message String, ec Condition, timeout long, pollInterval long, unit TimeUnit) : void extracted from protected eventually(ec Condition, timeout long, pollInterval long, unit TimeUnit) : void in class org.infinispan.test.AbstractInfinispanTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Assert message has been added. This will not change the behavior of the program in my opinion"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected eventually(message String, ec Condition, timeoutMillis long, loops int) : void extracted from protected eventually(ec Condition, timeoutMillis long, loops int) : void in class org.infinispan.test.AbstractInfinispanTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Extract method on the top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void extracted from private invokeNextInterceptorAndVerifyTransaction(ctx TxInvocationContext, command AbstractTransactionBoundaryCommand) : Object in class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "if condition has been changed"
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method protected lockAndWrap(ctx InvocationContext, key Object, ice InternalCacheEntry, command FlagAffectedCommand) : void inlined to private localGet(ctx InvocationContext, key Object, isWrite boolean, command FlagAffectedCommand, isGetCacheEntry boolean) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method protected lockAndWrap(ctx InvocationContext, key Object, ice InternalCacheEntry, command FlagAffectedCommand) : void inlined to private remoteGet(ctx InvocationContext, key Object, isWrite boolean, command FlagAffectedCommand) : InternalCacheEntry in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private sendCommitCommand(ctx TxInvocationContext, command CommitCommand) : void inlined to public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createRollbackRpcOptions() : RpcOptions extracted from public visitRollbackCommand(ctx TxInvocationContext, command RollbackCommand) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "I don't believe this is even an extract method"
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private configuration : Configuration from class org.infinispan.tx.TransactionXaAdapterTmIntegrationTest to class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public removeRecoveryInformationFromCluster(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.tx.recovery.PostCommitRecoveryStateTest.RecoveryManagerDelegate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public removeRecoveryInformationFromCluster(lockOwners Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(lockOwners Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.transaction.xa.recovery.RecoveryManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected assertNotLocked(cache Cache, key Object) : void renamed to protected assertEventuallyNotLocked(cache Cache, key Object) : void in class org.infinispan.test.AbstractCacheTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected createPrepareRpcOptions() : RpcOptions extracted from protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, ignored boolean) : void in class org.infinispan.interceptors.distribution.VersionedDistributionInterceptor & moved to class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : "<p>Extract and Move to the other class. Moved to class <span class='blob-code-inner'><span class='pl-smi'>org.infinispan.interceptors.distribution</span>.<a class='link-gray-dark' title='core/src/main/java/org/infinispan/interceptors/distribution/TxDistributionInterceptor.java' href='https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c#diff-1f89fae5cdc8e35ed85504c05f20d66e'>TxDistributionInterceptor.java<br /></a></span>The method was locally extracted in TxDistributionInterceptor<br />Extract Method protected createPrepareRpcOptions() : RpcOptions extracted from protected prepareOnAffectedNodes(ctx TxInvocationContext&lt;?&gt;, command PrepareCommand, recipients Collection&lt;Address&gt;, sync boolean) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptor</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private extractJGroupsTransport(transport Transport) : JGroupsTransport extracted from private channel(cache Cache<Object,Object>) : Channel in class org.infinispan.partitionhandling.BasePartitionHandlingTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable globalTransaction : GlobalTransaction in method private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void from class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable k : Object to key : Object in method protected remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void from class org.infinispan.interceptors.distribution.NonTxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable k : Object to key : Object in method protected remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter recipientGenerator : RecipientGenerator to key : Object in method private handleTxWriteCommand(ctx InvocationContext, command WriteCommand, key Object, skipRemoteGet boolean) : Object from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable cache : Cache<Object,Object> in method private channel(i int) : Channel from class org.infinispan.partitionhandling.BasePartitionHandlingTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable lockManager : LockManager in method protected checkLocked(cache Cache, key Object) : boolean from class org.infinispan.test.AbstractCacheTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute txCoordinator : TransactionCoordinator to partitionHandlingManager : PartitionHandlingManager in class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Merge Variable",
    "description" : "Merge Variable [localTxCount : int, remoteTxCount : int] to transactionTable : TransactionTable in method public isSatisfied() : boolean from class org.infinispan.test.MultipleCacheManagersTest.assertNoTransactions.eventually.new Condition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public removeRecoveryInformationFromCluster(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.transaction.xa.recovery.RecoveryManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter keygen : RecipientGenerator to key : Object in method protected abstract remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void from class org.infinispan.interceptors.distribution.BaseDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type recipientGenerator : RecipientGenerator to key : Object in method private handleTxWriteCommand(ctx InvocationContext, command WriteCommand, key Object, skipRemoteGet boolean) : Object from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type cache : Cache<Object,Object> to cache : Cache<?,?> in method private channel(cache Cache<?,?>) : Channel from class org.infinispan.partitionhandling.BasePartitionHandlingTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type keygen : RecipientGenerator to key : Object in method protected abstract remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void from class org.infinispan.interceptors.distribution.BaseDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Cache> to List<Cache<K,V>> in method private cachesInThisPartition() : List<Cache<K,V>> from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Cache<?,?> to Cache<K,V> in method private getCache(index int, name String) : Cache<K,V> from class org.infinispan.test.MultipleCacheManagersTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type txCoordinator : TransactionCoordinator to partitionHandlingManager : PartitionHandlingManager in class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type it : Iterator<Address> to it : Iterator<Map.Entry<Address,List<InboundTransferTask>>> in method private restartBrokenTransfers(cacheTopology CacheTopology, addedSegments Set<Integer>) : void from class org.infinispan.statetransfer.StateConsumerImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type advancedCache : AdvancedCache to advancedCache : AdvancedCache<String,String> in class org.infinispan.api.ForceWriteLockTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cache1 : Cache to cache1 : Cache<String,String> in method public testWithNoTx() : void from class org.infinispan.replication.AsyncReplTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cache2 : Cache to cache2 : Cache<String,String> in method public testWithNoTx() : void from class org.infinispan.replication.AsyncReplTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cache1 : Cache to cache1 : Cache<String,String> in method public testWithTx() : void from class org.infinispan.replication.AsyncReplTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cache2 : Cache to cache2 : Cache<String,String> in method public testWithTx() : void from class org.infinispan.replication.AsyncReplTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cache1 : Cache to cache1 : Cache<String,String> in method public simpleTest() : void from class org.infinispan.replication.AsyncReplTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter txCoordinator : TransactionCoordinator to partitionHandlingManager : PartitionHandlingManager in method public init(txTable TransactionTable, configuration Configuration, rpcManager RpcManager, recoveryManager RecoveryManager, commandsFactory CommandsFactory, cache Cache, partitionHandlingManager PartitionHandlingManager) : void in class org.infinispan.interceptors.TxInterceptor",
    "comment" : "<p>There are not replacements of the two variables in the body of the method.</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable k : Object to key : Object in method protected remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void in class org.infinispan.interceptors.distribution.NonTxDistributionInterceptor",
    "comment" : "<p>k is the current element in a for loop and becomes parameter key</p>",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter ctx : TxInvocationContext to context : LocalTxInvocationContext in method protected checkTxCommandResponses(responseMap Map<Address,Response>, command TransactionBoundaryCommand, context LocalTxInvocationContext, recipients Collection<Address>) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : "<p>checkTxCommandResponses(responseMap Map&lt;Address,Response&gt;, command TransactionBoundaryCommand, context LocalTxInvocationContext, recipients Collection&lt;Address&gt;) : void exists with the same parameters in the parent commit</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected createPrepareRpcOptions() : RpcOptions extracted from protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, sync boolean) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "I don't believe this is even an extract method"
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type txCoordinator : TransactionCoordinator to partitionHandlingManager : PartitionHandlingManager in method public init(txTable TransactionTable, configuration Configuration, rpcManager RpcManager, recoveryManager RecoveryManager, commandsFactory CommandsFactory, cache Cache, partitionHandlingManager PartitionHandlingManager) : void in class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type ctx : TxInvocationContext to context : LocalTxInvocationContext in method protected checkTxCommandResponses(responseMap Map<Address,Response>, command TransactionBoundaryCommand, context LocalTxInvocationContext, recipients Collection<Address>) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type caches : List<Cache> to caches : List<Cache<K,V>> in method private cachesInThisPartition() : List<Cache<K,V>> from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type c : Cache to c : Cache<Object,Object> in method public assertKeyAvailableForWrite(k Object, newValue Object) : void from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type c : Cache to c : Cache<Object,?> in method protected assertKeyNotAvailableForRead(key Object) : void from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type c : Cache to c : Cache<Object,Object> in method public assertKeyNotAvailableForWrite(key Object) : void from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type c : Cache to c : Cache<K,V> in method private cachesInThisPartition() : List<Cache<K,V>> from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cache : Cache<?,?> to cache : Cache<K,V> in method protected getLockOwner(key Object, cacheName String) : Cache<K,V> from class org.infinispan.test.MultipleCacheManagersTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable rpcOptions : RpcOptions in method public forwardCommandIfNeeded(command TopologyAffectedCommand, affectedKeys Set<Object>, origin Address) : Map<Address,Response> from class org.infinispan.statetransfer.StateTransferManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable availabilityMode : AvailabilityMode in method public handleStatusRequest(viewId int) : ManagerStatusResponse from class org.infinispan.topology.LocalTopologyManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private channel(cache Cache<Object,Object>) : Channel renamed to private extractJGroupsTransport(transport Transport) : JGroupsTransport in class org.infinispan.partitionhandling.BasePartitionHandlingTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private invokeNextInterceptorAndVerifyTransaction(ctx TxInvocationContext, command AbstractTransactionBoundaryCommand) : Object renamed to private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void in class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visitEntryRetrievalCommand(ctx InvocationContext, command EntryRetrievalCommand) : EntryIterable renamed to private replayRemoteTransactionIfNeeded(ctx RemoteTxInvocationContext, topologyId int) : void in class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private sendCommitCommand(ctx TxInvocationContext, command CommitCommand) : void renamed to protected checkTxCommandResponses(responseMap Map<Address,Response>, command TransactionBoundaryCommand, context LocalTxInvocationContext, recipients Collection<Address>) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public getLastStableTopology() : CacheTopology from class org.infinispan.partitionhandling.impl.PartitionHandlingManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unused\") in method public setDependencies(txTable TransactionTable, rpcManager RpcManager, timeService TimeService) : void from class org.infinispan.interceptors.locking.AbstractTxLockingInterceptor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public setDependencies(txTable TransactionTable, rpcManager RpcManager, timeService TimeService, partitionHandlingManager PartitionHandlingManager, commandsFactory CommandsFactory) : void from class org.infinispan.interceptors.locking.AbstractTxLockingInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter commandsFactory : CommandsFactory in method public setDependencies(txTable TransactionTable, rpcManager RpcManager, timeService TimeService, partitionHandlingManager PartitionHandlingManager, commandsFactory CommandsFactory) : void from class org.infinispan.interceptors.locking.AbstractTxLockingInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter commandsFactory : CommandsFactory in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter configuration : Configuration in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter rpcManager : RpcManager in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter lockManager : LockManager in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public AbstractEnlistmentAdapter(cacheTransaction CacheTransaction, commandsFactory CommandsFactory, rpcManager RpcManager, txTable TransactionTable, clusteringLogic ClusteringDependentLogic, configuration Configuration, txCoordinator TransactionCoordinator, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.impl.AbstractEnlistmentAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public AbstractEnlistmentAdapter(commandsFactory CommandsFactory, rpcManager RpcManager, txTable TransactionTable, clusteringLogic ClusteringDependentLogic, configuration Configuration, txCoordinator TransactionCoordinator, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.impl.AbstractEnlistmentAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public initialize(rpcManager RpcManager, configuration Configuration, icf InvocationContextFactory, invoker InterceptorChain, notifier CacheNotifier, gtf TransactionFactory, txCoordinator TransactionCoordinator, transactionSynchronizationRegistry TransactionSynchronizationRegistry, commandsFactory CommandsFactory, clusteringDependentLogic ClusteringDependentLogic, cache Cache, timeService TimeService, cacheManagerNotifier CacheManagerNotifier, partitionHandlingManager PartitionHandlingManager) : void from class org.infinispan.transaction.impl.TransactionTable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public SynchronizationAdapter(localTransaction LocalTransaction, txCoordinator TransactionCoordinator, commandsFactory CommandsFactory, rpcManager RpcManager, transactionTable TransactionTable, clusteringLogic ClusteringDependentLogic, configuration Configuration, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.synchronization.SynchronizationAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public TransactionXaAdapter(localTransaction LocalXaTransaction, txTable TransactionTable, rm RecoveryManager, txCoordinator TransactionCoordinator, commandsFactory CommandsFactory, rpcManager RpcManager, clusteringDependentLogic ClusteringDependentLogic, configuration Configuration, cacheName String, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.xa.TransactionXaAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public TransactionXaAdapter(txTable TransactionTable, rm RecoveryManager, txCoordinator TransactionCoordinator, commandsFactory CommandsFactory, rpcManager RpcManager, clusteringDependentLogic ClusteringDependentLogic, configuration Configuration, cacheName String, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.xa.TransactionXaAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter fromCluster : boolean in method public removeRecoveryInformation(lockOwners Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void from class org.infinispan.transaction.xa.recovery.RecoveryManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter fromCluster : boolean in method public removeRecoveryInformation(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void from class org.infinispan.tx.recovery.PostCommitRecoveryStateTest.RecoveryManagerDelegate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter fromCluster : boolean in method public removeRecoveryInformation(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void from class org.infinispan.transaction.xa.recovery.RecoveryManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter sync : boolean in method protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, sync boolean) : void from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter ignored : boolean in method protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, ignored boolean) : void from class org.infinispan.interceptors.distribution.VersionedDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter sync : boolean in method protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, sync boolean) : void from class org.infinispan.interceptors.totalorder.TotalOrderDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter sync : boolean in method protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, sync boolean) : void from class org.infinispan.interceptors.totalorder.TotalOrderVersionedDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter componentRegistry : ComponentRegistry in method public init(stateTransferManager StateTransferManager, transport Transport, componentRegistry ComponentRegistry) : void from class org.infinispan.statetransfer.StateTransferInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter ctx : InvocationContext in method private isLocalOnly(ctx InvocationContext, command VisitableCommand) : boolean from class org.infinispan.statetransfer.StateTransferInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter sync : boolean in method public forwardCommandIfNeeded(command TopologyAffectedCommand, affectedKeys Set<Object>, origin Address, sync boolean) : Map<Address,Response> from class org.infinispan.statetransfer.StateTransferManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter sync : boolean in method public forwardCommandIfNeeded(command TopologyAffectedCommand, affectedKeys Set<Object>, origin Address, sync boolean) : Map<Address,Response> from class org.infinispan.statetransfer.StateTransferManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Inject in method public inject(partitionHandlingManager PartitionHandlingManager) : void from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : "<p>inject(partitionHandlingManager PartitionHandlingManager) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private rpcManager : RpcManager from class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to private in attribute private partitionHandlingManager : PartitionHandlingManager from class org.infinispan.interceptors.TxInterceptor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute protected actual : Transport from class org.infinispan.remoting.transport.AbstractDelegatingTransport",
    "comment" : "<p>public Transport getDelegate()<br />called in method private static JGroupsTransport extractJGroupsTransport(Transport transport)<br />core/src/test/java/org/infinispan/partitionhandling/BasePartitionHandlingTest.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public start() : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable origin : Address in method private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void from class org.infinispan.interceptors.TxInterceptor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable cacheTopology : CacheTopology in method public forwardCommandIfNeeded(command TopologyAffectedCommand, affectedKeys Set<Object>, origin Address) : Map<Address,Response> from class org.infinispan.statetransfer.StateTransferManagerImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public init(txTable TransactionTable, configuration Configuration, rpcManager RpcManager, recoveryManager RecoveryManager, commandsFactory CommandsFactory, cache Cache, partitionHandlingManager PartitionHandlingManager) : void from class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter txCoordinator : TransactionCoordinator in method public init(txTable TransactionTable, configuration Configuration, txCoordinator TransactionCoordinator, rpcManager RpcManager, recoveryManager RecoveryManager, commandsFactory CommandsFactory, cache Cache) : void from class org.infinispan.interceptors.TxInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.infinispan.test.AbstractCacheTest.CleanupPhase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable recipientGenerator : RecipientGenerator in method protected handleNonTxWriteCommand(ctx InvocationContext, command DataWriteCommand) : Object from class org.infinispan.interceptors.distribution.BaseDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable skrg : SingleKeyRecipientGenerator in method public visitPutKeyValueCommand(ctx InvocationContext, command PutKeyValueCommand) : Object from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable entry : Map.Entry<Address,List<InboundTransferTask>> in method private restartBrokenTransfers(cacheTopology CacheTopology, addedSegments Set<Integer>) : void from class org.infinispan.statetransfer.StateConsumerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createCommitRpcOptions() : RpcOptions extracted from public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
    "comment" : "<p>private void sendCommitCommand(TxInvocationContext ctx, CommitCommand command) is inlined to<br />visitCommitCommand(TxInvocationContext ctx, CommitCommand command)<br />and then statement<br />boolean syncCommitPhase = cacheConfiguration.transaction().syncCommitPhase();<br />is extracted to private RpcOptions createCommitRpcOptions() as part of statement<br />return createRpcOptionsFor2ndPhase(cacheConfiguration.transaction().syncCommitPhase());</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "The behavior is totally different"
    }
  } ],
  "refDiffExecutionTime" : 7011
},
{
  "id" : 1156578,
  "repository" : "https://github.com/infinispan/infinispan.git",
  "sha1" : "043030723632627b0908dca6b24dae91d3dfd938",
  "url" : "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
  "author" : "gustavonalle",
  "time" : "8/3/15 1:16 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private rehashAwareIteration(complete AtomicBoolean, consumer Consumer<R>, supplier IteratorSupplier<R>, iteratorParallelDistribute boolean) : void extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "It has two nested extract method operation inside. The most complicated case indeed! The else block after the finally has been added and changed the logic"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private ignoreRehashIteration(consumer Consumer<R>, supplier IteratorSupplier<R>, iteratorParallelDistribute boolean) : void extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "if statement staylocal has been added. Also, contains one nonMappedLeave which is not reported by RM"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOwnerOnly boolean) : Supplier<Stream<CacheEntry>> extracted from protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>) : Supplier<Stream<CacheEntry>> in class org.infinispan.stream.impl.AbstractCacheStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "The value of the -segmenst- variable can be different"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private segmentsToProcess(supplier IteratorSupplier<R>, results KeyTrackingConsumer<Object,R>, segmentsToProcess Set<Integer>, id UUID) : Set<Integer> extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "The nested one, one line has beed added that can change the strid value, but this only changed the log or print lines, so it's pure!"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private performLocalRehashAwareOperation(results KeyTrackingConsumer<Object,R>, segmentsToProcess Set<Integer>, ch ConsistentHash, segments Set<Integer>, op KeyTrackingTerminalOperation<Object,R,Object>, ownedSegmentsSupplier Supplier<Set<Integer>>, id UUID) : void extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "The nested one"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter primaryOnly : boolean in method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOnly boolean) : Supplier<Stream<CacheEntry>> from class org.infinispan.stream.impl.tx.TxDistributedCacheStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter primaryOnly : boolean in method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOnly boolean) : Supplier<Stream<CacheEntry>> from class org.infinispan.stream.impl.tx.TxDistributedDoubleCacheStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter primaryOnly : boolean in method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOnly boolean) : Supplier<Stream<CacheEntry>> from class org.infinispan.stream.impl.tx.TxDistributedIntCacheStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter primaryOnly : boolean in method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOnly boolean) : Supplier<Stream<CacheEntry>> from class org.infinispan.stream.impl.tx.TxDistributedLongCacheStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable strId : String in method private segmentsToProcess(supplier IteratorSupplier<R>, results KeyTrackingConsumer<Object,R>, segmentsToProcess Set<Integer>, id UUID) : Set<Integer> from class org.infinispan.stream.impl.DistributedCacheStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 5287
},
{
  "id" : 1119473,
  "repository" : "https://github.com/SonarSource/sonarqube.git",
  "sha1" : "0eaa5217883cfeca688aad1d462192c194741827",
  "url" : "https://github.com/SonarSource/sonarqube/commit/0eaa5217883cfeca688aad1d462192c194741827",
  "author" : "Jean-Baptiste Lievremont",
  "time" : "6/19/15 9:57 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private userWriter : UserJsonWriter from class org.sonar.server.issue.ws.IssueJsonWriter to private userWriter : UserJsonWriter from class org.sonar.server.issue.InternalRubyIssueService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private userWriter : UserJsonWriter from class org.sonar.server.issue.ws.IssueJsonWriter to package userWriter : UserJsonWriter from class org.sonar.server.issue.InternalRubyIssueServiceTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable reporter : String in method private getIssueUsersByLogin(issue Issue) : Map<String,User> from class org.sonar.server.issue.InternalRubyIssueService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable assignee : String in method private getIssueUsersByLogin(issue Issue) : Map<String,User> from class org.sonar.server.issue.InternalRubyIssueService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter userWriter : UserJsonWriter in method public InternalRubyIssueService(issueService IssueService, issueQueryService IssueQueryService, commentService IssueCommentService, changelogService IssueChangelogService, actionPlanService ActionPlanService, resourceDao ResourceDao, actionService ActionService, issueFilterService IssueFilterService, issueBulkChangeService IssueBulkChangeService, issueWriter IssueJsonWriter, issueComponentHelper IssueComponentHelper, userIndex UserIndex, dbClient DbClient, userSession UserSession, userWriter UserJsonWriter) from class org.sonar.server.issue.InternalRubyIssueService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter userWriter : UserJsonWriter in method public IssueJsonWriter(i18n I18n, durations Durations, userSession UserSession, userWriter UserJsonWriter, actionsWriter IssueActionsWriter) from class org.sonar.server.issue.ws.IssueJsonWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @Nullable in parameter issue : Issue in method public writeIssueJson(issue Issue) : String from class org.sonar.server.issue.InternalRubyIssueService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package userWriter : UserJsonWriter from class org.sonar.server.issue.InternalRubyIssueServiceTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private userWriter : UserJsonWriter from class org.sonar.server.issue.ws.IssueJsonWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2767
}, {
  "id" : 1119504,
  "repository" : "https://github.com/neo4j/neo4j.git",
  "sha1" : "b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
  "url" : "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
  "author" : "Mats Rydberg",
  "time" : "6/18/15 7:27 AM",
  "refactorings" : [ {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest from class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest from class org.neo4j.kernel.api.impl.index.LuceneUniqueIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected query(query Query) : PrimitiveLongIterator extracted from public lookup(value Object) : PrimitiveLongIterator in class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected query(query Query) : PrimitiveLongIterator extracted from public scan() : PrimitiveLongIterator in class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public newMatchAllQuery() : Query renamed to public newAllQuery() : Query in class org.neo4j.kernel.api.impl.index.LuceneDocumentStructure",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public newQuery(value Object) : Query renamed to public newValueQuery(value Object) : Query in class org.neo4j.kernel.api.impl.index.LuceneDocumentStructure",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected getAllNodes(propertyValue String) : List<Long> renamed to protected getAllNodesWithProperty(propertyValue String) : List<Long> in class org.neo4j.kernel.api.index.IndexAccessorCompatibility",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public newQueryForChangeOrRemove(nodeId long) : Term renamed to public newTermForChangeOrRemove(nodeId long) : Term in class org.neo4j.kernel.api.impl.index.LuceneDocumentStructure",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private reader : IndexReader from class org.neo4j.kernel.api.impl.index.LuceneUniqueIndexAccessorReaderTest to protected reader : IndexReader from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private terms : TermEnum from class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReaderTest to protected terms : TermEnum from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private searcher : IndexSearcher from class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReaderTest to protected searcher : IndexSearcher from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private documentLogic : LuceneDocumentStructure from class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReaderTest to protected documentLogic : LuceneDocumentStructure from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private documentLogic : LuceneDocumentStructure from class org.neo4j.kernel.api.impl.index.LuceneUniqueIndexAccessorReaderTest to protected documentLogic : LuceneDocumentStructure from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private closeable : Closeable from class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReaderTest to protected closeable : Closeable from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private BUFFER_SIZE_LIMIT : int from class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReaderTest to protected BUFFER_SIZE_LIMIT : int from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private reader : IndexReader from class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReaderTest to protected reader : IndexReader from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private closeable : Closeable from class org.neo4j.kernel.api.impl.index.LuceneUniqueIndexAccessorReaderTest to protected closeable : Closeable from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private searcher : IndexSearcher from class org.neo4j.kernel.api.impl.index.LuceneUniqueIndexAccessorReaderTest to protected searcher : IndexSearcher from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Exception to PrimitiveLongIterator in method public query(query Query) : PrimitiveLongIterator in class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReaderTest.setup",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public lookupByPrefixSearch(prefix String) : PrimitiveLongIterator renamed to public scan() : PrimitiveLongIterator in class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier abstract in class org.neo4j.kernel.api.index.IndexAccessorCompatibility",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected BUFFER_SIZE_LIMIT : int from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected closeable : Closeable from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected documentLogic : LuceneDocumentStructure from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected searcher : IndexSearcher from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected reader : IndexReader from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected terms : TermEnum from class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 8600
}, {
  "id" : 1119656,
  "repository" : "https://github.com/rackerlabs/blueflood.git",
  "sha1" : "c76e6e1f27a6697b3b88ad4ed710441b801afb3b",
  "url" : "https://github.com/rackerlabs/blueflood/commit/c76e6e1f27a6697b3b88ad4ed710441b801afb3b",
  "author" : "Tilottama Gaat",
  "time" : "6/18/15 3:41 PM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler to public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.http.DefaultHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private sendResponseTimer : Timer from class com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler to private sendResponseTimer : Timer from class com.rackspacecloud.blueflood.http.DefaultHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.inputs.handlers.HttpEventsIngestionHandler to public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.http.DefaultHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 617
}, {
  "id" : 1119661,
  "repository" : "https://github.com/antlr/antlr4.git",
  "sha1" : "a9ca2efae56815dc464189b055ffe9da23766f7f",
  "url" : "https://github.com/antlr/antlr4/commit/a9ca2efae56815dc464189b055ffe9da23766f7f",
  "author" : "parrt",
  "time" : "6/18/15 9:25 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public getDescendants(t ParseTree) : List<ParseTree> extracted from public descendants(t ParseTree) : List<ParseTree> in class org.antlr.v4.runtime.tree.Trees",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "It's a recursive function and the replacement came back to the extracted method itself. It's more of a like a Rename Method instead of Extract Method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public getAmbuityParserInterpreter(g Grammar, originalParser Parser, tokens TokenStream) : ParserInterpreter extracted from public getAllPossibleParseTrees(g Grammar, originalParser Parser, tokens TokenStream, decision int, alts BitSet, startIndex int, stopIndex int, startRuleIndex int) : List<ParserRuleContext> in class org.antlr.v4.tool.GrammarParserInterpreter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Return expression has been added within the Mechanics of Extract Method Refactoring"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterp(lg LexerGrammar, g Grammar, startRule String, input String, decision int, expectedAmbigAlts String, overallTree String, expectedParseTrees String[]) : void renamed to public testAmbiguousTrees(lg LexerGrammar, g Grammar, startRule String, input String, decision int, expectedAmbigAlts String, overallTree String, expectedParseTrees String[]) : void in class org.antlr.v4.test.tool.TestAmbigParseTrees",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public descendants(t ParseTree) : List<ParseTree> renamed to public getDescendants(t ParseTree) : List<ParseTree> in class org.antlr.v4.runtime.tree.Trees",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1313
}, {
  "id" : 1119677,
  "repository" : "https://github.com/k9mail/k-9.git",
  "sha1" : "23c49d834d3859fc76a604da32d1789d2e863303",
  "url" : "https://github.com/k9mail/k-9/commit/23c49d834d3859fc76a604da32d1789d2e863303",
  "author" : "Marcus Wolschon",
  "time" : "6/18/15 9:19 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private setNotificationContent(context Context, message Message, sender CharSequence, subject CharSequence, builder NotificationCompat.Builder, accountDescr String) : NotificationCompat.Builder extracted from private notifyAccountWithDataLocked(context Context, account Account, message LocalMessage, data NotificationData) : void in class com.fsck.k9.controller.MessagingController",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private buildNotificationNavigationStack(context Context, account Account, message LocalMessage, newMessages int, unreadCount int, allRefs ArrayList<MessageReference>) : TaskStackBuilder extracted from private notifyAccountWithDataLocked(context Context, account Account, message LocalMessage, data NotificationData) : void in class com.fsck.k9.controller.MessagingController",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Return expression has been added within the Mechanics of Extract Method Refactoring"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private addWearActions(builder NotificationCompat.Builder, totalMsgCount int, msgCount int, account Account, allRefs ArrayList<MessageReference>, messages List<? extends Message>, notificationID int) : void extracted from private notifyAccountWithDataLocked(context Context, account Account, message LocalMessage, data NotificationData) : void in class com.fsck.k9.controller.MessagingController",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "ic_action_archive_dark has been used instead of ic_action_delete_dark, and there is no refactorings related to this change. So, it's impure!"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable notifMgr : NotificationManager to notificationManager : NotificationManager in method public notifyAccountCancel(context Context, account Account) : void from class com.fsck.k9.controller.MessagingController",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type messages : LinkedList<LocalMessage> to messages : List<? extends Message> in method public isArchiveAllMessagesWearAvaliable(context Context, account Account, messages List<? extends Message>) : boolean from class com.fsck.k9.service.NotificationActionService",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type messages : LinkedList<LocalMessage> to messages : List<? extends Message> in method public isSpamAllMessagesWearAvaliable(context Context, account Account, messages List<? extends Message>) : boolean from class com.fsck.k9.service.NotificationActionService",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type messages : List<LocalMessage> to messages : List<? extends Message> in method private isMovePossible(controller MessagingController, account Account, dstFolder String, messages List<? extends Message>) : boolean from class com.fsck.k9.service.NotificationActionService",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type messageToMove : LocalMessage to messageToMove : Message in method private isMovePossible(controller MessagingController, account Account, dstFolder String, messages List<? extends Message>) : boolean from class com.fsck.k9.service.NotificationActionService",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getStackedChildNotification(ref MessageReference) : Integer extracted from private notifyAccountWithDataLocked(context Context, account Account, message LocalMessage, data NotificationData) : void in class com.fsck.k9.controller.MessagingController & moved to class com.fsck.k9.controller.MessagingController.NotificationData",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addStackedChildNotification(ref MessageReference, notificationId int) : void extracted from private notifyAccountWithDataLocked(context Context, account Account, message LocalMessage, data NotificationData) : void in class com.fsck.k9.controller.MessagingController & moved to class com.fsck.k9.controller.MessagingController.NotificationData",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private notifyAccountWithDataLocked(context Context, account Account, message LocalMessage, data NotificationData) : void renamed to private addWearActions(builder NotificationCompat.Builder, totalMsgCount int, account Account, message Message, notificationID int) : void in class com.fsck.k9.controller.MessagingController",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter notificationID : int in method public getIntent(context Context, account Account, refs Serializable, notificationID int) : PendingIntent from class com.fsck.k9.activity.NotificationDeleteConfirmation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter notificationID : int in method private triggerDelete(notificationID int) : void from class com.fsck.k9.activity.NotificationDeleteConfirmation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter notificationID : int in method public getReplyIntent(context Context, account Account, ref MessageReference, notificationID int) : PendingIntent from class com.fsck.k9.service.NotificationActionService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter notificationID : int in method public getReadAllMessagesIntent(context Context, account Account, refs Serializable, notificationID int) : PendingIntent from class com.fsck.k9.service.NotificationActionService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter notificationID : int in method public getAcknowledgeIntent(context Context, account Account, notificationID int) : PendingIntent from class com.fsck.k9.service.NotificationActionService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter notificationID : int in method public getDeleteAllMessagesIntent(context Context, account Account, refs Serializable, notificationID int) : Intent from class com.fsck.k9.service.NotificationActionService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter dontCancel : boolean in method public getArchiveAllMessagesIntent(context Context, account Account, refs Serializable, dontCancel boolean, notificationID int) : PendingIntent from class com.fsck.k9.service.NotificationActionService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter notificationID : int in method public getArchiveAllMessagesIntent(context Context, account Account, refs Serializable, dontCancel boolean, notificationID int) : PendingIntent from class com.fsck.k9.service.NotificationActionService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter dontCancel : boolean in method public getSpamAllMessagesIntent(context Context, account Account, refs Serializable, dontCancel boolean, notificationID int) : PendingIntent from class com.fsck.k9.service.NotificationActionService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter notificationID : int in method public getSpamAllMessagesIntent(context Context, account Account, refs Serializable, dontCancel boolean, notificationID int) : PendingIntent from class com.fsck.k9.service.NotificationActionService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter context : Context in method public getIntent(context Context, account Account, refs Serializable, notificationID int) : PendingIntent from class com.fsck.k9.activity.NotificationDeleteConfirmation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter account : Account in method private notifyAccountWithDataLocked(context Context, account Account, message LocalMessage, data NotificationData) : void from class com.fsck.k9.controller.MessagingController",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter context : Context in method public notifyAccountCancel(context Context, account Account) : void from class com.fsck.k9.controller.MessagingController",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter account : Account in method public notifyAccountCancel(context Context, account Account) : void from class com.fsck.k9.controller.MessagingController",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable wearableExtender : NotificationCompat.WearableExtender in method private addWearActions(builder NotificationCompat.Builder, totalMsgCount int, msgCount int, account Account, allRefs ArrayList<MessageReference>, messages List<? extends Message>, notificationID int) : void from class com.fsck.k9.controller.MessagingController",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1119732,
  "repository" : "https://github.com/processing/processing.git",
  "sha1" : "8707194f003444a9fb8e00bffa2893ef0c2492c6",
  "url" : "https://github.com/processing/processing/commit/8707194f003444a9fb8e00bffa2893ef0c2492c6",
  "author" : "codeanticode",
  "time" : "6/18/15 1:03 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private setFrameCentered() : void inlined to public placeWindow(location int[], editorLocation int[]) : void in class processing.opengl.PSurfaceJOGL",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable w : int in method private setFrameCentered() : void from class processing.opengl.PSurfaceJOGL",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable h : int in method private setFrameCentered() : void from class processing.opengl.PSurfaceJOGL",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 703
}, {
  "id" : 1119758,
  "repository" : "https://github.com/baasbox/baasbox.git",
  "sha1" : "d949fe9079a82ee31aa91244aa67baaf56b7e28f",
  "url" : "https://github.com/baasbox/baasbox/commit/d949fe9079a82ee31aa91244aa67baaf56b7e28f",
  "author" : "Claudio",
  "time" : "6/18/15 7:33 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public execMultiLineCommands(db ODatabaseRecordTx, log boolean, stopOnException boolean, commands String...) : void extracted from public execMultiLineCommands(db ODatabaseRecordTx, log boolean, commands String...) : void in class com.baasbox.db.DbHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "throw a new exception in the extracted method"
    }
  } ],
  "refDiffExecutionTime" : 638
}, {
  "id" : 1119833,
  "repository" : "https://github.com/fabric8io/fabric8.git",
  "sha1" : "07807aed847e1d0589c094461544e54a2677cbf5",
  "url" : "https://github.com/fabric8io/fabric8/commit/07807aed847e1d0589c094461544e54a2677cbf5",
  "author" : "Ioannis Canellos",
  "time" : "6/18/15 11:29 AM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected isKubernetesJsonArtifact(classifier String, type String) : boolean from class io.fabric8.maven.JsonMojo to package isKubernetesJsonArtifact(classifier String, type String) : boolean from class io.fabric8.maven.AbstractFabric8Mojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private DEFAULT_CONFIG_FILE_NAME : String from class io.fabric8.maven.ApplyMojo to private DEFAULT_CONFIG_FILE_NAME : String from class io.fabric8.maven.AbstractFabric8Mojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private hasKubernetesJson(f File) : boolean from class io.fabric8.maven.ApplyMojo to package hasKubernetesJson(f File) : boolean from class io.fabric8.maven.AbstractFabric8Mojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private combineDependencies : boolean from class io.fabric8.maven.JsonMojo to protected combineDependencies : boolean from class io.fabric8.maven.AbstractFabric8Mojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private getDependencies() : Set<File> from class io.fabric8.maven.ApplyMojo to package getDependencies() : Set<File> from class io.fabric8.maven.AbstractFabric8Mojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @Mojo(name = \"apply\", defaultPhase = LifecyclePhase.INSTALL) to @Mojo(name = \"apply\", requiresDependencyResolution = ResolutionScope.RUNTIME, defaultPhase = LifecyclePhase.INSTALL) in class io.fabric8.maven.ApplyMojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package getDependencies() : Set<File> from class io.fabric8.maven.AbstractFabric8Mojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package isKubernetesJsonArtifact(classifier String, type String) : boolean from class io.fabric8.maven.AbstractFabric8Mojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package hasKubernetesJson(f File) : boolean from class io.fabric8.maven.AbstractFabric8Mojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected combineDependencies : boolean from class io.fabric8.maven.AbstractFabric8Mojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable dependency : Artifact to candidate : Artifact in method package getDependencies() : Set<File> from class io.fabric8.maven.AbstractFabric8Mojo",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 5272
}, {
  "id" : 1119965,
  "repository" : "https://github.com/Netflix/eureka.git",
  "sha1" : "5103ace802b2819438318dd53b5b07512aae0d25",
  "url" : "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
  "author" : "Tomasz Bak",
  "time" : "6/17/15 1:22 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public fillUpRegistryOfServer(serverIdx int, count int, instanceTemplate InstanceInfo) : void extracted from public fillUpRegistry(count int, instanceTemplate InstanceInfo) : void in class com.netflix.eureka2.integration.EurekaDeploymentClients",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Functionality has been changed. Different values for serverIDX variable would result in different outputs!"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testRegistrationAndDiscoveryServices() : void renamed to public testRegistrationAndInterestServices() : void in class com.netflix.eureka2.testkit.embedded.server.EmbeddedWriteServerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type writeServerResource : WriteServerResource to eurekaDeploymentResource : EurekaDeploymentResource in class com.netflix.eureka2.testkit.embedded.server.EmbeddedWriteServerTest",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>EurekaDeploymentResource</span></span> wraps <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-smi'>WriteServerResource</span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public fillUpRegistry(count int, instanceTemplate InstanceInfo) : void renamed to public fillUpRegistryOfServer(serverIdx int, count int, instanceTemplate InstanceInfo) : void in class com.netflix.eureka2.integration.EurekaDeploymentClients",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public EurekaDeploymentResource(writeClusterSize int, readClusterSize int) from class com.netflix.eureka2.testkit.junit.resources.EurekaDeploymentResource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Deprecated in method public EurekaDeploymentResource(writeClusterSize int, readClusterSize int, transportConfig EurekaTransportConfig) from class com.netflix.eureka2.testkit.junit.resources.EurekaDeploymentResource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @Category(IntegrationTest.class) to @Category({IntegrationTest.class,ExperimentalTest.class}) in class com.netflix.eureka2.integration.server.batching.ReadServerNotificationBatchingTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @Category(IntegrationTest.class) to @Category({IntegrationTest.class,ExperimentalTest.class}) in class com.netflix.eureka2.integration.server.batching.WriteServerNotificationBatchingTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter networkRouter : NetworkRouter in method protected EurekaDeployment(transportConfig EurekaTransportConfig, writeCluster EmbeddedWriteCluster, readCluster EmbeddedReadCluster, bridgeServer EmbeddedBridgeServer, dashboardServer EmbeddedDashboardServer, networkRouter NetworkRouter, viewEnabled boolean) from class com.netflix.eureka2.testkit.embedded.EurekaDeployment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter networkRouter : NetworkRouter in method public EmbeddedReadCluster(registrationResolver ServerResolver, discoveryResolver ServerResolver, withExt boolean, withAdminUI boolean, ephemeralPorts boolean, networkRouter NetworkRouter) from class com.netflix.eureka2.testkit.embedded.cluster.EmbeddedReadCluster",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter networkRouter : NetworkRouter in method public EmbeddedReadCluster(registrationResolver ServerResolver, discoveryResolver ServerResolver, withExt boolean, withAdminUI boolean, ephemeralPorts boolean, codec CodecType, networkRouter NetworkRouter) from class com.netflix.eureka2.testkit.embedded.cluster.EmbeddedReadCluster",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter networkRouter : NetworkRouter in method public EmbeddedWriteCluster(withExt boolean, withAdminUI boolean, ephemeralPorts boolean, networkRouter NetworkRouter) from class com.netflix.eureka2.testkit.embedded.cluster.EmbeddedWriteCluster",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter networkRouter : NetworkRouter in method public EmbeddedWriteCluster(withExt boolean, withAdminUI boolean, ephemeralPorts boolean, codec CodecType, networkRouter NetworkRouter) from class com.netflix.eureka2.testkit.embedded.cluster.EmbeddedWriteCluster",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter networkRouter : NetworkRouter in method public EmbeddedReadServer(serverId String, config EurekaServerConfig, registrationResolver ServerResolver, discoveryResolver ServerResolver, networkRouter NetworkRouter, withExt boolean, withDashboard boolean) from class com.netflix.eureka2.testkit.embedded.server.EmbeddedReadServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter networkRouter : NetworkRouter in method public EmbeddedWriteServer(config WriteServerConfig, interestPeers Observable<ChangeNotification<Server>>, replicationPeers Observable<ChangeNotification<Server>>, networkRouter NetworkRouter, withExt boolean, withDashboards boolean) from class com.netflix.eureka2.testkit.embedded.server.EmbeddedWriteServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Replace Attribute With Variable",
    "description" : "Replace Attribute With Variable writeServerResource : WriteServerResource to writeServer : EmbeddedWriteServer in method public testRegistrationAndInterestServices() : void from class com.netflix.eureka2.testkit.embedded.server.EmbeddedWriteServerTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2659
}, {
  "id" : 1119978,
  "repository" : "https://github.com/google/closure-compiler.git",
  "sha1" : "5a853a60f93e09c446d458673bc7a2f6bb26742c",
  "url" : "https://github.com/google/closure-compiler/commit/5a853a60f93e09c446d458673bc7a2f6bb26742c",
  "author" : "blickly",
  "time" : "6/18/15 2:34 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactory moved to com.google.javascript.jscomp.JsdocToEs6TypedConverter.TypeDeclarationsIRFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private assertParseTypeAndConvert(typeExpr String) : NodeSubject from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to private assertParseTypeAndConvert(typeExpr String) : NodeSubject from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Class TypeDeclarationsIRFactoryTest is deleted in the base version and class JsdocToEs6TypedConverterTest is added in the refactored version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class renaming and thus not move method",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testConvertFunctionNewType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertFunctionNewType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Class TypeDeclarationsIRFactoryTest is deleted in the base version and class JsdocToEs6TypedConverterTest is added in the refactored version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class renaming and thus not move method",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testConvertFunctionReturnType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertFunctionReturnType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Possible merge class with the JsdocToEs6TypedConverterTest",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testConvertFunctionThisType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertFunctionThisType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Possible merge class with the JsdocToEs6TypedConverterTest",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testConvertFunctionType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertFunctionType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "<p>Class TypeDeclarationsIRFactoryTest is deleted in the base version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class merging and thus not move method</p><p>Davood &amp; Matin: It is move method even though the base class is deleted</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testConvertNamedTypes() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertNamedTypes() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Possible merge class with the JsdocToEs6TypedConverterTest",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testConvertNonNullableType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertNonNullableType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Possible merge class with the JsdocToEs6TypedConverterTest",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testConvertNullableType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertNullableType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Class TypeDeclarationsIRFactoryTest is deleted in the base version and class JsdocToEs6TypedConverterTest is added in the refactored version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class renaming and thus not move method",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testConvertOptionalFunctionParameters() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertOptionalFunctionParameters() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Possible merge class with the JsdocToEs6TypedConverterTest",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testConvertRecordType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertRecordType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Class TypeDeclarationsIRFactoryTest is deleted in the base version and class JsdocToEs6TypedConverterTest is added in the refactored version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class renaming and thus not move method",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testConvertRecordTypeWithTypeApplication() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertRecordTypeWithTypeApplication() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Class TypeDeclarationsIRFactoryTest is deleted in the base version and class JsdocToEs6TypedConverterTest is added in the refactored version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class renaming and thus not move method",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testConvertSimpleTypes() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertSimpleTypes() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Class TypeDeclarationsIRFactoryTest is deleted in the base version and class JsdocToEs6TypedConverterTest is added in the refactored version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class renaming and thus not move method",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testConvertTypeApplication() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertTypeApplication() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Possible merge class with the JsdocToEs6TypedConverterTest",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testConvertTypeUnion() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertTypeUnion() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Class TypeDeclarationsIRFactoryTest is deleted in the base version and class JsdocToEs6TypedConverterTest is added in the refactored version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class renaming and thus not move method",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testConvertVariableParameters() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertVariableParameters() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Possible merge class with the JsdocToEs6TypedConverterTest",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCreateRecordType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testCreateRecordType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
    "comment" : "Possible merge class with the JsdocToEs6TypedConverterTest",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class com.google.javascript.jscomp.JsdocToEs6TypedConverter.TypeDeclarationsIRFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1865
}, {
  "id" : 1120023,
  "repository" : "https://github.com/Alluxio/alluxio.git",
  "sha1" : "ed966510ccf8441115614e2258aea61df0ea55f5",
  "url" : "https://github.com/Alluxio/alluxio/commit/ed966510ccf8441115614e2258aea61df0ea55f5",
  "author" : "Bin Fan",
  "time" : "6/18/15 8:46 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private reserveSpace(size long) : void extracted from public addBlockMeta(block BlockMeta) : Optional<BlockMeta> in class tachyon.worker.block.meta.StorageDir",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "Replacements need to be refined"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private reclaimSpace(size long) : void extracted from public removeTempBlockMeta(tempBlockMeta TempBlockMeta) : boolean in class tachyon.worker.block.meta.StorageDir",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "+size has been added, which completely changes the logic"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private reclaimSpace(size long) : void extracted from public removeBlockMeta(block BlockMeta) : boolean in class tachyon.worker.block.meta.StorageDir",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "contain one nonMappeLeave, which cannot be justified"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private reserveSpace(size long) : void extracted from public addTempBlockMeta(tempBlockMeta TempBlockMeta) : boolean in class tachyon.worker.block.meta.StorageDir",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "Same extracted method, but for this refactoring, we have one nonMappedLeave."
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public resizeTempBlockMeta(tempBlockMeta TempBlockMeta, newSize long) : void extracted from private requestSpaceNoLock(userId long, blockId long, moreBytes long) : boolean in class tachyon.worker.block.TieredBlockStore & moved to class tachyon.worker.block.meta.StorageDir",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable blockSize : long to size : long in method private reserveSpace(size long) : void from class tachyon.worker.block.meta.StorageDir",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1120077,
  "repository" : "https://github.com/apache/camel.git",
  "sha1" : "5e08a9e8e93a2f117b5fbec9c6d54500d8e99a4d",
  "url" : "https://github.com/apache/camel/commit/5e08a9e8e93a2f117b5fbec9c6d54500d8e99a4d",
  "author" : "Willem Jiang",
  "time" : "6/19/15 12:15 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public copyAttachments(that Message) : void extracted from public copyFrom(that Message) : void in class org.apache.camel.impl.MessageSupport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 7895
}, {
  "id" : 1120106,
  "repository" : "https://github.com/spring-projects/spring-framework.git",
  "sha1" : "ece12f9d370108549fffac105e4bcb7faeaaf124",
  "url" : "https://github.com/spring-projects/spring-framework/commit/ece12f9d370108549fffac105e4bcb7faeaaf124",
  "author" : "Sam Brannen",
  "time" : "6/19/15 10:27 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private assertMissingTextAttribute(attributes Map<String,Object>) : void extracted from public synthesizeAnnotationFromMapWithMissingAttributeValue() : void in class org.springframework.core.annotation.AnnotationUtilsTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "expected text message is different"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private assertMissingTextAttribute(attributes Map<String,Object>) : void extracted from public synthesizeAnnotationFromMapWithNullAttributeValue() : void in class org.springframework.core.annotation.AnnotationUtilsTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "expected text message is different"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private validateAttributes(attributes Map<String,Object>, annotationType Class<? extends Annotation>) : void renamed to private enrichAndValidateAttributes(attributes Map<String,Object>, annotationType Class<? extends Annotation>) : Map<String,Object> in class org.springframework.core.annotation.MapAnnotationAttributeExtractor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable map : Map<String,Object> to attributes : Map<String,Object> in method private assertMissingTextAttribute(attributes Map<String,Object>) : void from class org.springframework.core.annotation.AnnotationUtilsTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable transactionManagerName : String in method package retrieveConfigurationAttributes(testContext TestContext) : TransactionConfigurationAttributes from class org.springframework.test.context.transaction.TransactionalTestExecutionListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable defaultRollback : boolean in method package retrieveConfigurationAttributes(testContext TestContext) : TransactionConfigurationAttributes from class org.springframework.test.context.transaction.TransactionalTestExecutionListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to Map<String,Object> in method private enrichAndValidateAttributes(attributes Map<String,Object>, annotationType Class<? extends Annotation>) : Map<String,Object> from class org.springframework.core.annotation.MapAnnotationAttributeExtractor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type DEFAULT_DEFAULT_ROLLBACK : Boolean to defaultTransactionConfiguration : TransactionConfiguration in class org.springframework.test.context.transaction.TransactionalTestExecutionListener",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public synthesizeAnnotationFromMapWithMissingAttributeValue() : void renamed to public synthesizeAnnotationFromMapWithEmptyAttributesWithDefaultsWithoutAttributeAliases() : void in class org.springframework.core.annotation.AnnotationUtilsTests",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public synthesizeAnnotationFromMapWithNullAttributeValue() : void renamed to public synthesizeAnnotationFromMapWithMinimalAttributesWithAttributeAliases() : void in class org.springframework.core.annotation.AnnotationUtilsTests",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @Component(\"meta1\") in class org.springframework.core.annotation.AnnotationUtilsTests.Meta1",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @Component(\"meta2\") in class org.springframework.core.annotation.AnnotationUtilsTests.Meta2",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @Component(value = \"meta1\") in class org.springframework.core.annotation.AnnotationUtilsTests.Meta1",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @Component(value = \"meta2\") in class org.springframework.core.annotation.AnnotationUtilsTests.Meta2",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 5439
}, {
  "id" : 1120125,
  "repository" : "https://github.com/eucalyptus/eucalyptus.git",
  "sha1" : "5a38d0bca0e48853c3f7c00a0f098bada64797df",
  "url" : "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
  "author" : "Evan Thomas",
  "time" : "6/17/15 2:26 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue.AbsoluteMetricLoadCacheKey moved to com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue.AbsoluteMetricLoadCacheKey",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue.AbsoluteMetricCacheKey moved to com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue.AbsoluteMetricCacheKey",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue.AbsoluteMetricCache moved to com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue.AbsoluteMetricCache",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.eucalyptus.cluster.callback.CloudWatchHelper moved to com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Package",
    "description" : "Move Package com.eucalyptus.cloudwatch.domain.absolute to com.eucalyptus.cluster.callback.cloudwatch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.eucalyptus.cloudwatch.domain.absolute.AbsoluteMetricHelper moved to com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricHelper",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.eucalyptus.cloudwatch.domain.absolute.AbsoluteMetricHistory moved to com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricHistory",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.eucalyptus.cloudwatch.domain.metricdata.MetricEntity.Units moved to com.eucalyptus.cloudwatch.common.internal.metricdata.Units",
    "comment" : "<p>Laleh: the enum Units is defined in class <span class='pl-smi'>com.eucalyptus.cloudwatch.domain.metricdata</span>.MetricEntity.java is moved as a stand-alone enum to the new file <span class='blob-code-inner'><span class='pl-smi'>com.eucalyptus.cloudwatch.common.internal.metricdata.Units.java.</span></span></p><p><span class='blob-code-inner'><span class='pl-smi'>We can consider it as CTP because if the enum was an inner class then it would be a 'move class' refactoring.<br /></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'>What do you think?</span></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private addToPutMetricDataList(putMetricDataList List<PutMetricDataType>, cloudWatchSupplier Supplier<InstanceUsageEvent>) : void renamed to private addToQueueItems(queueItems List<AbsoluteMetricQueueItem>, cloudWatchSupplier Supplier<InstanceUsageEvent>) : void in class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private adjustAbsoluteInstanceCPUStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, absoluteMetricName String, relativeMetricName String, instanceId String) : boolean from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to private adjustAbsoluteInstanceCPUStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, absoluteMetricName String, relativeMetricName String, instanceId String) : boolean from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : "It is an extract class since RefDiff cannot detect these refactorings consider as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private adjustAbsoluteInstanceStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, absoluteMetricName String, relativeMetricName String, instanceId String) : boolean from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to private adjustAbsoluteInstanceStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, absoluteMetricName String, relativeMetricName String, instanceId String) : boolean from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : "It is an extract class since RefDiff cannot detect these refactorings consider as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private adjustAbsoluteVolumeQueueLengthStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, volumeId String) : boolean from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to private adjustAbsoluteVolumeQueueLengthStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, volumeId String) : boolean from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : "It is an extract class since RefDiff cannot detect these refactorings consider as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private adjustAbsoluteVolumeStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, absoluteMetricName String, relativeMetricName String, volumeId String) : boolean from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to private adjustAbsoluteVolumeStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, absoluteMetricName String, relativeMetricName String, volumeId String) : boolean from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : "class AbsoluteMetricQueue is added in the refactored version, it is more like an extract class refactoring since other  methods from class MetricDataQueue are also moved to class AbsoluteMetricQueue",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private convertVolumeTotalReadWriteTimeToVolumeIdleTime(datum MetricDatum) : void from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to private convertVolumeTotalReadWriteTimeToVolumeIdleTime(datum MetricDatum) : void from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : "It is an extract class since RefDiff cannot detect these refactorings consider as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createVolumeThroughputMetric(accountId String, nameSpace String, metricType MetricType, datum MetricDatum) : MetricQueueItem from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to private createVolumeThroughputMetric(accountId String, nameSpace String, datum MetricDatum) : AbsoluteMetricQueueItem from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : "class AbsoluteMetricQueue is added in the refactored version, it is more like an extract class refactoring since other  methods from class MetricDataQueue are also moved to class AbsoluteMetricQueue",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected dealWithAbsoluteMetrics(dataBatch List<MetricQueueItem>) : List<MetricQueueItem> from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to protected dealWithAbsoluteMetrics(dataBatch List<AbsoluteMetricQueueItem>) : List<AbsoluteMetricQueueItem> from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : "It is an extract class since RefDiff cannot detect these refactorings consider as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addQueueItems(queueItems List<AbsoluteMetricQueueItem>) : void extracted from private processCloudWatchStats(msg DescribeSensorsResponse) : void in class com.eucalyptus.cluster.callback.DescribeSensorCallback & moved to class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private EBS_ABSOLUTE_METRICS : Map<String,String> from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to private EBS_ABSOLUTE_METRICS : Map<String,String> from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : "It is an extract class since RefDiff cannot detect these refactorings consider as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private EC2_ABSOLUTE_METRICS : Map<String,String> from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to private EC2_ABSOLUTE_METRICS : Map<String,String> from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : "It is an extract class since RefDiff cannot detect these refactorings consider as TP",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter putMetricDataList : List<PutMetricDataType> to queueItems : List<AbsoluteMetricQueueItem> in method private addToQueueItems(queueItems List<AbsoluteMetricQueueItem>, cloudWatchSupplier Supplier<InstanceUsageEvent>) : void from class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable putMetricData : PutMetricDataType to newQueueItem : AbsoluteMetricQueueItem in method private addToQueueItems(queueItems List<AbsoluteMetricQueueItem>, cloudWatchSupplier Supplier<InstanceUsageEvent>) : void from class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable putMetricDataList : List<PutMetricDataType> to queueItems : List<AbsoluteMetricQueueItem> in method private processCloudWatchStats(msg DescribeSensorsResponse) : void from class com.eucalyptus.cluster.callback.DescribeSensorCallback",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable putMetricDataType : PutMetricDataType to queueItem : AbsoluteMetricQueueItem in method private withMetric(namespace String, name String, dimensionName String, dimensionValue String) : Predicate in class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable putMetricDataList : ArrayList<PutMetricDataType> to absoluteMetricQueueItems : ArrayList<AbsoluteMetricQueueItem> in method public collectMetricData(msg DescribeSensorsResponse) : List<AbsoluteMetricQueueItem> from class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable metricDatums : ArrayList<MetricDatum> to queueItems : List<AbsoluteMetricQueueItem> in method private buildInstanceStatusPut(instanceId String) : List<AbsoluteMetricQueueItem> from class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable putMetricData : PutMetricDataType to queueItem : AbsoluteMetricQueueItem in method private buildInstanceStatusPut(instanceId String) : List<AbsoluteMetricQueueItem> from class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type putMetricDataList : List<PutMetricDataType> to queueItems : List<AbsoluteMetricQueueItem> in method private addToQueueItems(queueItems List<AbsoluteMetricQueueItem>, cloudWatchSupplier Supplier<InstanceUsageEvent>) : void from class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type putMetricDataList : List<PutMetricDataType> to queueItems : List<AbsoluteMetricQueueItem> in method private processCloudWatchStats(msg DescribeSensorsResponse) : void from class com.eucalyptus.cluster.callback.DescribeSensorCallback",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type putMetricDataList : ArrayList<PutMetricDataType> to absoluteMetricQueueItems : ArrayList<AbsoluteMetricQueueItem> in method public collectMetricData(msg DescribeSensorsResponse) : List<AbsoluteMetricQueueItem> from class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type metricDatums : ArrayList<MetricDatum> to queueItems : List<AbsoluteMetricQueueItem> in method private buildInstanceStatusPut(instanceId String) : List<AbsoluteMetricQueueItem> from class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type putMetricData : PutMetricDataType to queueItem : AbsoluteMetricQueueItem in method private buildInstanceStatusPut(instanceId String) : List<AbsoluteMetricQueueItem> from class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type putMetricData : PutMetricDataType to newQueueItem : AbsoluteMetricQueueItem in method private addToQueueItems(queueItems List<AbsoluteMetricQueueItem>, cloudWatchSupplier Supplier<InstanceUsageEvent>) : void from class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<PutMetricDataType> to List<AbsoluteMetricQueueItem> in method public collectMetricData(msg DescribeSensorsResponse) : List<AbsoluteMetricQueueItem> from class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type PutMetricDataType to List<AbsoluteMetricQueueItem> in method private buildInstanceStatusPut(instanceId String) : List<AbsoluteMetricQueueItem> from class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Predicate<PutMetricDataType> to Predicate<AbsoluteMetricQueueItem> in method private withMetric(namespace String, name String, dimensionName String, dimensionValue String) : Predicate<AbsoluteMetricQueueItem> from class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<MetricQueueItem> to List<AbsoluteMetricQueueItem> in method protected dealWithAbsoluteMetrics(dataBatch List<AbsoluteMetricQueueItem>) : List<AbsoluteMetricQueueItem> from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type MetricQueueItem to AbsoluteMetricQueueItem in method private createVolumeThroughputMetric(accountId String, nameSpace String, datum MetricDatum) : AbsoluteMetricQueueItem from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type dataBatch : List<MetricQueueItem> to dataBatch : List<AbsoluteMetricQueueItem> in method protected dealWithAbsoluteMetrics(dataBatch List<AbsoluteMetricQueueItem>) : List<AbsoluteMetricQueueItem> from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter metricType : MetricType in method private createVolumeThroughputMetric(accountId String, nameSpace String, metricType MetricType, datum MetricDatum) : MetricQueueItem from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class com.eucalyptus.cluster.callback.DescribeSensorCallback.GetTimestamp",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type dataToInsert : List<MetricQueueItem> to dataToInsert : List<AbsoluteMetricQueueItem> in method protected dealWithAbsoluteMetrics(dataBatch List<AbsoluteMetricQueueItem>) : List<AbsoluteMetricQueueItem> from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type vtpQueueItem : MetricQueueItem to vtpQueueItem : AbsoluteMetricQueueItem in method private createVolumeThroughputMetric(accountId String, nameSpace String, datum MetricDatum) : AbsoluteMetricQueueItem from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type item : MetricQueueItem to item : AbsoluteMetricQueueItem in method protected dealWithAbsoluteMetrics(dataBatch List<AbsoluteMetricQueueItem>) : List<AbsoluteMetricQueueItem> from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2499
}, {
  "id" : 1120191,
  "repository" : "https://github.com/eclipse/jetty.project.git",
  "sha1" : "13b63c194b010201c439932ece2f1bc628ebf287",
  "url" : "https://github.com/eclipse/jetty.project/commit/13b63c194b010201c439932ece2f1bc628ebf287",
  "author" : "Greg Wilkins",
  "time" : "6/19/15 2:27 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private __propertyPattern : Pattern from class org.eclipse.jetty.xml.XmlConfiguration to class org.eclipse.jetty.start.Props",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Replace Variable With Attribute",
    "description" : "Replace Variable With Attribute pat : Pattern to __propertyPattern : Pattern in method public expand(str String, seenStack Stack<String>) : String from class org.eclipse.jetty.start.Props",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1402
}, {
  "id" : 1120196,
  "repository" : "https://github.com/wordpress-mobile/WordPress-Android.git",
  "sha1" : "4bfe164cc8b4556b98df18098b162e0a84038b32",
  "url" : "https://github.com/wordpress-mobile/WordPress-Android/commit/4bfe164cc8b4556b98df18098b162e0a84038b32",
  "author" : "Danilo Ercoli",
  "time" : "6/19/15 12:15 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private trackLastVisibleTab(position int) : void extracted from protected onResume() : void in class org.wordpress.android.ui.main.WPMainActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1371
}, {
  "id" : 1120213,
  "repository" : "https://github.com/infinispan/infinispan.git",
  "sha1" : "03573a655bcbb77f7a76d8e22d851cc22796b4f8",
  "url" : "https://github.com/infinispan/infinispan/commit/03573a655bcbb77f7a76d8e22d851cc22796b4f8",
  "author" : "William Burns",
  "time" : "6/19/15 11:03 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method protected shouldInvoke(event Event<K,V>) : boolean extracted from protected shouldInvoke(event CacheEntryEvent<K,V>, isLocalNodePrimaryOwner boolean) : CacheEntryEvent<K,V> in class org.infinispan.notifications.cachelistener.CacheNotifierImpl.BaseCacheEntryListenerInvocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "eventImpl.isPre() in the parent commit vs event.isPre() in the child commit"
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable isPre : boolean in method protected shouldInvoke(event CacheEntryEvent<K,V>, isLocalNodePrimaryOwner boolean) : CacheEntryEvent<K,V> from class org.infinispan.notifications.cachelistener.CacheNotifierImpl.BaseCacheEntryListenerInvocation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4972
}, {
  "id" : 1120314,
  "repository" : "https://github.com/rstudio/rstudio.git",
  "sha1" : "4983f83d1bedb7b737fc56d409c1c06b04e34e4e",
  "url" : "https://github.com/rstudio/rstudio/commit/4983f83d1bedb7b737fc56d409c1c06b04e34e4e",
  "author" : "Kevin Ushey",
  "time" : "6/19/15 2:47 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private setValue(value boolean, force boolean) : void extracted from public setValue(value boolean) : void in class org.rstudio.core.client.widget.ThemedCheckBox",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "condition has been changed, although according to the current invocation, the output would be the same"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private verticalSpacer(sizeInPixels int) : FlowPanel extracted from public ChunkOptionsPopupPanel() in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : "There are two calls to verticalSpacer(sizeInPixels int) in the refactored version, the true Extract Method is for the second call",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "panel can have different heights, so it's impure."
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable labelPanel : HorizontalPanel to nameAndOutputGrid : Grid in method public ChunkOptionsPopupPanel() from class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable spacer : FlowPanel to panel : FlowPanel in method private verticalSpacer(sizeInPixels int) : FlowPanel from class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type labelPanel : HorizontalPanel to nameAndOutputGrid : Grid in method public ChunkOptionsPopupPanel() from class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type outputComboBox_ : SelectWidget to outputComboBox_ : ListBox in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1522
}, {
  "id" : 1120321,
  "repository" : "https://github.com/VoltDB/voltdb.git",
  "sha1" : "a896b8bf8f7067e41291eb7771deed76b3621fa0",
  "url" : "https://github.com/VoltDB/voltdb/commit/a896b8bf8f7067e41291eb7771deed76b3621fa0",
  "author" : "Anish Khanzode",
  "time" : "6/19/15 4:07 PM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute public m_framework : Framework from class org.voltdb.importer.ImportProcessor.BundleWrapper to private m_framework : Framework from class org.voltdb.importer.ImportProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable o : Object in method public addProcessorConfig(properties Properties) : void from class org.voltdb.importer.ImportProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter framework : Framework in method public BundleWrapper(bundle Bundle, framework Framework, handler ImportHandlerProxy, properties Properties) from class org.voltdb.importer.ImportProcessor.BundleWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type BundleException in method public ImportProcessor() from class org.voltdb.importer.ImportProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private m_framework : Framework from class org.voltdb.importer.ImportProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier synchronized in method public readyForData(catContext CatalogContext, messenger HostMessenger) : void from class org.voltdb.importer.ImportProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier synchronized in method public shutdown() : void from class org.voltdb.importer.ImportProcessor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Reorder Parameter",
    "description" : "Reorder Parameter [bundle : Bundle, framework : Framework, handler : ImportHandlerProxy, properties : Properties] to [handler : ImportHandlerProxy, properties : Properties, bundle : Bundle] in method public BundleWrapper(handler ImportHandlerProxy, properties Properties, bundle Bundle) from class org.voltdb.importer.ImportProcessor.BundleWrapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
},
{
  "id" : 1123684,
  "repository" : "https://github.com/phishman3579/java-algorithms-implementation.git",
  "sha1" : "ab98bcacf6e5bf1c3a06f6bcca68f178f880ffc9",
  "url" : "https://github.com/phishman3579/java-algorithms-implementation/commit/ab98bcacf6e5bf1c3a06f6bcca68f178f880ffc9",
  "author" : "Justin Wetherell",
  "time" : "6/24/15 5:48 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int extracted from public main(args String[]) : void in class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private runTests(testable Testable, tests int, unsorteds Integer[][], sorteds Integer[][], strings String[]) : boolean extracted from private runTests() : boolean in class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaRedBlackTreeString : java.util.TreeSet<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaRedBlackTreeString : java.util.TreeSet<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaLinkedQueue : java.util.Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaLinkedQueue : java.util.Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaLinkedList : java.util.List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaLinkedList : java.util.List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaMaxArrayHeap : java.util.PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaMaxArrayHeap : java.util.PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaMinArrayHeap : java.util.PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaMinArrayHeap : java.util.PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaStack : java.util.Stack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaStack : java.util.Stack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaArrayList : java.util.List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaArrayList : java.util.List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaArrayQueue : java.util.Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaArrayQueue : java.util.Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaRedBlackTreeInteger : java.util.TreeSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaRedBlackTreeInteger : java.util.TreeSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaSkipListMap : ConcurrentSkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaSkipListMap : ConcurrentSkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaTreeMap : java.util.Map<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaTreeMap : java.util.Map<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaHashMap : java.util.Map<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaHashMap : java.util.Map<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private cHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package cHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHashMapChaining",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private aHeapMin : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package aHeapMin : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMinHeapArray",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private redBlackTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package redBlackTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRedBlackTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private avlTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package avlTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testAVLTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private linkedQueue : Queue.LinkedQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package linkedQueue : Queue.LinkedQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedQueue",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private bTree : BTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package bTree : BTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private arrayQueue : Queue.ArrayQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package arrayQueue : Queue.ArrayQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayQueue",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private arrayList : List.ArrayList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package arrayList : List.ArrayList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayList",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private tHeapMax : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package tHeapMax : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMaxHeapTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private radixTrie : RadixTrie<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package radixTrie : RadixTrie<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRadixTrie",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private skipList : SkipList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package skipList : SkipList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipList",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private hamt : HashArrayMappedTrie<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package hamt : HashArrayMappedTrie<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHAMT",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private treeMap : TreeMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package treeMap : TreeMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreeMap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private trie : Trie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package trie : Trie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrie",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaSkipList : NavigableSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaSkipList : NavigableSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipList",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private splayTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package splayTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSplayTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private linkedStack : Stack.LinkedStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package linkedStack : Stack.LinkedStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedStack",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private pHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package pHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHashMapProbing",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private arrayStack : Stack.ArrayStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package arrayStack : Stack.ArrayStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayStack",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private trieMap : TrieMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package trieMap : TrieMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrieMap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private bst : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package bst : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBST",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private aHeapMax : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package aHeapMax : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMaxHeapArray",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private linkedList : List.LinkedList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package linkedList : List.LinkedList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedList",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private tHeapMin : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package tHeapMin : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMinHeapTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private patriciaTrie : PatriciaTrie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package patriciaTrie : PatriciaTrie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testPatriciaTrie",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private skipListMap : SkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package skipListMap : SkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipListMap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private treap : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package treap : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Integer to item : T in method private testJavaCollection(collection Collection<T>, type Class<T>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean in class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : "<p>Variable item already exists in the original code<br />Integer value = unsorted[i];<br />T item = Utils.parseT(value, type);<br />===================&gt;<br />T item = unsorted[i];</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute mergeInPlaceResults : double[] to mergeResults : double[] in class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'>mergeInPlaceResultsand mergeNotInPlaceResults attributes are merged into attribute mergeResults<br />https://github.com/phishman3579/java-algorithms-implementation/commit/ab98bcacf6e5bf1c3a06f6bcca68f178f880ffc9#diff-19f604c062f25432275863f522a438e2R338<br /></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable aShell : long to aInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable aQuick : long to aInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bQuick : long to bInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bMerge : long to bInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable aHeap : long to aInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bShell : long to bInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable aMerge : long to aInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable aRadix : long to aInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable aCounting : long to aInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bRadix : long to bInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bCounting : long to bInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bHeap : long to bInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaRedBlackStringTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
    "comment" : "<p>looks tp</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaMinHeap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaArrayList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaRedBlackIntegerTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaSkipListMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaArrayQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaLinkedList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaMaxHeap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaLinkedQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaHashMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testAVLTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testAVLTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testBTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testBST() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBST",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testHAMT() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHAMT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaStack() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaTreeMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testArrayList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testLinkedList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testPatriciaTrie() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testPatriciaTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testArrayQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testLinkedQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testRadixTrie() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRadixTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testRedBlackTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRedBlackTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaSkipList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testSkipList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testSplayTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSplayTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testArrayStack() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testLinkedStack() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testTreap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testTreeMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testTrie() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testTrieMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrieMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testSkipListMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method private testJavaCollection(collection Collection<T>, type Class<T>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method private handleError(input String, obj Object) : void from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter _unsorted : Integer[] in method private testJavaCollection(collection Collection<T>, type Class<T>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter _sorted : Integer[] in method private testJavaCollection(collection Collection<T>, type Class<T>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method private testJavaCollection(collection Collection<T>, type Class<T>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter valueType : Class<V> in method private testJavaMap(map Map<K,V>, keyType Class<K>, valueType Class<V>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter _unsorted : Integer[] in method private testJavaMap(map Map<K,V>, keyType Class<K>, valueType Class<V>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter _sorted : Integer[] in method private testJavaMap(map Map<K,V>, keyType Class<K>, valueType Class<V>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method private testJavaMap(map Map<K,V>, keyType Class<K>, valueType Class<V>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testAVLTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testAVLTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testAVLTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBST",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBST",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBST",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHAMT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHAMT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHAMT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testPatriciaTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testPatriciaTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testPatriciaTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRadixTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRadixTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRadixTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRedBlackTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRedBlackTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRedBlackTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSplayTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSplayTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSplayTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrieMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrieMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrieMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testAVLTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBST",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHAMT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testPatriciaTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRadixTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRedBlackTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSplayTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrieMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package avlTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testAVLTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package bTree : BTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package bst : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBST",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package aHeapMin : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMinHeapArray",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package tHeapMin : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMinHeapTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package aHeapMax : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMaxHeapArray",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package tHeapMax : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMaxHeapTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package pHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHashMapProbing",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package cHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHashMapChaining",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package hamt : HashArrayMappedTrie<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHAMT",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaHashMap : Map<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaMinArrayHeap : PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaMaxArrayHeap : PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaArrayList : List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaLinkedList : List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaArrayQueue : Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaLinkedQueue : Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaRedBlackTreeInteger : TreeSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaRedBlackTreeString : TreeSet<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaStack : Stack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaTreeMap : Map<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package arrayList : List.ArrayList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package linkedList : List.LinkedList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package patriciaTrie : PatriciaTrie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testPatriciaTrie",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package arrayQueue : Queue.ArrayQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayQueue",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package linkedQueue : Queue.LinkedQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedQueue",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package radixTrie : RadixTrie<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRadixTrie",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package redBlackTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRedBlackTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaSkipList : NavigableSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package skipList : SkipList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package splayTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSplayTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package arrayStack : Stack.ArrayStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayStack",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package linkedStack : Stack.LinkedStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedStack",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package treap : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package treeMap : TreeMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreeMap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package trie : Trie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrie",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package trieMap : TrieMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrieMap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaSkipListMap : ConcurrentSkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package skipListMap : SkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipListMap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Parameterize Attribute",
    "description" : "Parameterize Attribute string : String to input : String in method private handleError(input String, obj Object) : void from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testAVLTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testBTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testBST() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testHAMT() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaHashMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaMinHeap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaMaxHeap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaArrayList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaLinkedList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaArrayQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaLinkedQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaRedBlackIntegerTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaRedBlackStringTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaStack() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaTreeMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testArrayList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testLinkedList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testPatriciaTrie() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testArrayQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testLinkedQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testRadixTrie() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testRedBlackTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaSkipList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testSkipList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testSplayTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testArrayStack() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testLinkedStack() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testTreap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testTreeMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testTrie() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testTrieMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaSkipListMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testSkipListMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private insertionResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private bubbleResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private shellResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private quickResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private heapResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private countingResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private radixResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private americanFlagResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bBubble : long to bInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable aBubble : long to aInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Replace Attribute With Variable",
    "description" : "Replace Attribute With Variable sorted : Integer[] to kSorted : K[] in method private testJavaMap(map Map<K,V>, keyType Class<K>, valueType Class<V>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private avlTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private avlTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private bTree : BTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private bTree : BTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private bst : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private bst : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private aHeapMin : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private aHeapMin : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private tHeapMin : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private tHeapMin : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private aHeapMax : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private aHeapMax : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private tHeapMax : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private tHeapMax : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private pHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private pHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private cHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private cHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private hamt : HashArrayMappedTrie<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private hamt : HashArrayMappedTrie<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaHashMap : Map<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaHashMap : Map<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaMinArrayHeap : PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaMinArrayHeap : PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaMaxArrayHeap : PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaMaxArrayHeap : PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaArrayList : List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaArrayList : List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaLinkedList : List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaLinkedList : List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaArrayQueue : Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaArrayQueue : Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaLinkedQueue : Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaLinkedQueue : Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaRedBlackTreeInteger : TreeSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaRedBlackTreeInteger : TreeSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaRedBlackTreeString : TreeSet<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaRedBlackTreeString : TreeSet<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaStack : Stack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaStack : Stack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaTreeMap : Map<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaTreeMap : Map<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private arrayList : List.ArrayList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private arrayList : List.ArrayList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private linkedList : List.LinkedList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private linkedList : List.LinkedList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private patriciaTrie : PatriciaTrie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private patriciaTrie : PatriciaTrie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private arrayQueue : Queue.ArrayQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private arrayQueue : Queue.ArrayQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private linkedQueue : Queue.LinkedQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private linkedQueue : Queue.LinkedQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private radixTrie : RadixTrie<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private radixTrie : RadixTrie<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private redBlackTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private redBlackTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaSkipList : NavigableSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaSkipList : NavigableSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private skipList : SkipList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private skipList : SkipList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private splayTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private splayTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private arrayStack : Stack.ArrayStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private arrayStack : Stack.ArrayStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private linkedStack : Stack.LinkedStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private linkedStack : Stack.LinkedStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private treap : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private treap : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private treeMap : TreeMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private treeMap : TreeMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private trie : Trie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private trie : Trie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private trieMap : TrieMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private trieMap : TrieMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaSkipListMap : ConcurrentSkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaSkipListMap : ConcurrentSkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private skipListMap : SkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private skipListMap : SkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 644
}]